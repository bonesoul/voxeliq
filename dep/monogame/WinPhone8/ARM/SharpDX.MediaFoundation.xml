<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpDX.MediaFoundation</name>
    </assembly>
    <members>
        <member name="T:SharpDX.MediaFoundation.AssemblyDoc">
            <summary>
            The <see cref="A:SharpDX.MediaFoundation"/> assembly provides managed MediaFoundation API.
            </summary>
            <msdn-id></msdn-id>
            <unmanaged>MediaFoundation</unmanaged>	
            <unmanaged-short>MediaFoundation</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.ByteStream">
            <summary>
            ByteStream class used 
            </summary>
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Represents a byte stream from some data source, which might be a local file, a network file, or some other source. The <strong><see cref="T:SharpDX.MediaFoundation.IByteStream"/></strong> interface supports the typical stream operations, such as reading, writing, and seeking. </p>	
            </summary>	
            <remarks>	
            <p> The following functions return <strong><see cref="T:SharpDX.MediaFoundation.IByteStream"/></strong> references for local files: </p><ul> <li> <strong>MFBeginCreateFile</strong> </li> <li> <strong>MFCreateFile</strong> </li> <li> <strong>MFCreateTempFile</strong> </li> </ul><p> A byte stream for a media souce can be opened with read access. A byte stream for an archive media sink should be opened with both read and write access. (Read access may be required, because the archive sink might need to read portions of the file as it writes.) </p><p>Some implementations of this interface also expose one or more of the following interfaces:</p><ul> <li> <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> </li> <li> <strong><see cref="T:SharpDX.MediaFoundation.ByteStreamBuffering"/></strong> </li> <li> <strong><see cref="T:SharpDX.MediaFoundation.ByteStreamCacheControl"/></strong> </li> <li> <strong>IMFGetService</strong> </li> <li> <strong><see cref="T:SharpDX.MediaFoundation.MediaEventGenerator"/></strong> </li> </ul><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- Failed to insert some or all of included XML --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream']/*"/>	
            <msdn-id>ms698720</msdn-id>	
            <unmanaged>IMFByteStream</unmanaged>	
            <unmanaged-short>IMFByteStream</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.IByteStream">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Represents a byte stream from some data source, which might be a local file, a network file, or some other source. The <strong><see cref="T:SharpDX.MediaFoundation.IByteStream"/></strong> interface supports the typical stream operations, such as reading, writing, and seeking. </p>	
            </summary>	
            <remarks>	
            <p> The following functions return <strong><see cref="T:SharpDX.MediaFoundation.IByteStream"/></strong> references for local files: </p><ul> <li> <strong>MFBeginCreateFile</strong> </li> <li> <strong>MFCreateFile</strong> </li> <li> <strong>MFCreateTempFile</strong> </li> </ul><p> A byte stream for a media souce can be opened with read access. A byte stream for an archive media sink should be opened with both read and write access. (Read access may be required, because the archive sink might need to read portions of the file as it writes.) </p><p>Some implementations of this interface also expose one or more of the following interfaces:</p><ul> <li> <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> </li> <li> <strong><see cref="T:SharpDX.MediaFoundation.ByteStreamBuffering"/></strong> </li> <li> <strong><see cref="T:SharpDX.MediaFoundation.ByteStreamCacheControl"/></strong> </li> <li> <strong>IMFGetService</strong> </li> <li> <strong><see cref="T:SharpDX.MediaFoundation.MediaEventGenerator"/></strong> </li> </ul><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream']/*"/>	
            <msdn-id>ms698720</msdn-id>	
            <unmanaged>IMFByteStream</unmanaged>	
            <unmanaged-short>IMFByteStream</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.IByteStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Reads data from the stream. </p>	
            </summary>	
            <param name="bRef"><dd> <p> Pointer to a buffer that receives the data. The caller must allocate the buffer. </p> </dd></param>	
            <param name="count"><dd> <p> Size of the buffer in bytes. </p> </dd></param>	
            <returns>The number of bytes that are copied into the buffer</returns>	
            <remarks>	
            <p> This method reads at most <em>cb</em> bytes from the current position in the stream and copies them into the buffer provided by the caller. The number of bytes that were read is returned in the <em>pcbRead</em> parameter. The method does not return an error code on reaching the end of the file, so the application should check the value in <em>pcbRead</em> after the method returns. </p><p> This method is synchronous. It blocks until the read operation completes. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms698913</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Read([Out, Buffer] unsigned char* pb,[In] unsigned int cb,[Out] unsigned int* pcbRead)</unmanaged>	
            <unmanaged-short>IMFByteStream::Read</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.IByteStream.BeginRead(System.Byte[],System.Int32,System.Int32,SharpDX.MediaFoundation.AsyncCallback,System.Object)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Begins an asynchronous read operation from the stream. </p>	
            </summary>	
            <param name="bRef"><dd> <p> Pointer to a buffer that receives the data. The caller must allocate the buffer. </p> </dd></param>	
            <param name="cb"><dd> <p> Size of the buffer in bytes. </p> </dd></param>	
            <param name="callbackRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncCallback"/></strong> interface of a callback object. The caller must implement this interface. </p> </dd></param>	
            <param name="unkStateRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of a state object, defined by the caller. This parameter can be <strong><c>null</c></strong>. You can use this object to hold state information. The object is returned to the caller when the callback is invoked. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> When all of the data has been read into the buffer, the callback object's <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method is called. At that point, the application should call <strong><see cref="M:SharpDX.MediaFoundation.IByteStream.EndRead(SharpDX.MediaFoundation.AsyncResult)"/></strong> to complete the asynchronous request. </p><p> Do not read from, write to, free, or reallocate the buffer while an asynchronous read is pending. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms704810</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::BeginRead([Out, Buffer] unsigned char* pb,[In] unsigned int cb,[In] IMFAsyncCallback* pCallback,[In] IUnknown* punkState)</unmanaged>	
            <unmanaged-short>IMFByteStream::BeginRead</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.IByteStream.EndRead(SharpDX.MediaFoundation.AsyncResult)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Completes an asynchronous read operation. </p>	
            </summary>	
            <param name="resultRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface. Pass in the same reference that your callback object received in the <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method. </p> </dd></param>	
            <returns>The number of bytes that were read</returns>	
            <remarks>	
            <p> Call this method after the <strong><see cref="M:SharpDX.MediaFoundation.IByteStream.BeginRead(System.Byte[],System.Int32,System.Int32,SharpDX.MediaFoundation.AsyncCallback,System.Object)"/></strong> method completes asynchronously. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms704042</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::EndRead([In] IMFAsyncResult* pResult,[Out] unsigned int* pcbRead)</unmanaged>	
            <unmanaged-short>IMFByteStream::EndRead</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.IByteStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Writes data to the stream.</p>	
            </summary>	
            <param name="bRef"><dd> <p> Pointer to a buffer that contains the data to write. </p> </dd></param>	
            <param name="cb"><dd> <p> Size of the buffer in bytes. </p> </dd></param>	
            <param name="cbWrittenRef"><dd> <p> Receives the number of bytes that are written. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> This method writes the contents of the <em>pb</em> buffer to the stream, starting at the current stream position. The number of bytes that were written is returned in the <em>pcbWritten</em> parameter. </p><p> This method is synchronous. It blocks until the write operation completes. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms703843</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Write([In, Buffer] const unsigned char* pb,[In] unsigned int cb,[Out] unsigned int* pcbWritten)</unmanaged>	
            <unmanaged-short>IMFByteStream::Write</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.IByteStream.BeginWrite(System.Byte[],System.Int32,System.Int32,SharpDX.MediaFoundation.AsyncCallback,System.Object)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Begins an asynchronous write operation to the stream. </p>	
            </summary>	
            <param name="bRef"><dd> <p> Pointer to a buffer containing the data to write. </p> </dd></param>	
            <param name="cb"><dd> <p> Size of the buffer in bytes. </p> </dd></param>	
            <param name="callbackRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncCallback"/></strong> interface of a callback object. The caller must implement this interface. </p> </dd></param>	
            <param name="unkStateRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of a state object, defined by the caller. This parameter can be <strong><c>null</c></strong>. You can use this object to hold state information. The object is returned to the caller when the callback is invoked. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> When all of the data has been written to the stream, the callback object's <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method is called. At that point, the application should call <strong><see cref="M:SharpDX.MediaFoundation.IByteStream.EndWrite(SharpDX.MediaFoundation.AsyncResult)"/></strong> to complete the asynchronous request. </p><p> Do not reallocate, free, or write to the buffer while an asynchronous write is still pending. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms694005</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::BeginWrite([In, Buffer] const unsigned char* pb,[In] unsigned int cb,[In] IMFAsyncCallback* pCallback,[In] IUnknown* punkState)</unmanaged>	
            <unmanaged-short>IMFByteStream::BeginWrite</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.IByteStream.EndWrite(SharpDX.MediaFoundation.AsyncResult)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Completes an asynchronous write operation.</p>	
            </summary>	
            <param name="resultRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface. Pass in the same reference that your callback object received in the <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method.</p> </dd></param>	
            <returns>The number of bytes that were written</returns>	
            <remarks>	
            <p> Call this method when the <strong><see cref="M:SharpDX.MediaFoundation.IByteStream.BeginWrite(System.Byte[],System.Int32,System.Int32,SharpDX.MediaFoundation.AsyncCallback,System.Object)"/></strong> method completes asynchronously. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms703863</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::EndWrite([In] IMFAsyncResult* pResult,[Out] unsigned int* pcbWritten)</unmanaged>	
            <unmanaged-short>IMFByteStream::EndWrite</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.IByteStream.Seek(SharpDX.MediaFoundation.ByteStreamSeekOrigin,System.Int64,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Moves the current position in the stream by a specified offset.</p>	
            </summary>	
            <param name="seekOrigin"><dd> <p> Specifies the origin of the seek as a member of the <strong><see cref="!:SharpDX.MediaFoundation.BytestreamSeekOrigin"/></strong> enumeration. The offset is calculated relative to this position. </p> </dd></param>	
            <param name="llSeekOffset"><dd> <p> Specifies the new position, as a byte offset from the seek origin. </p> </dd></param>	
            <param name="dwSeekFlags"><dd> <p> Specifies zero or more flags. The following flags are defined. </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>MFBYTESTREAM_SEEK_FLAG_CANCEL_PENDING_IO</strong></dt> </dl> </td><td> <p> All pending I/O requests are canceled after the seek request completes successfully. </p> </td></tr> </table> <p>?</p> </dd></param>	
            <returns>The new position after the seek</returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms697053</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Seek([In] MFBYTESTREAM_SEEK_ORIGIN SeekOrigin,[In] longlong llSeekOffset,[In] unsigned int dwSeekFlags,[Out] unsigned longlong* pqwCurrentPosition)</unmanaged>	
            <unmanaged-short>IMFByteStream::Seek</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.IByteStream.Flush">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Clears any internal buffers used by the stream. If you are writing to the stream, the buffered data is written to the underlying file or device. </p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> If the byte stream is read-only, this method has no effect.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms694833</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Flush()</unmanaged>	
            <unmanaged-short>IMFByteStream::Flush</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.IByteStream.Close">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Closes the stream and releases any resources associated with the stream, such as sockets or file handles. This method also cancels any pending asynchronous I/O requests. </p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms703909</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Close()</unmanaged>	
            <unmanaged-short>IMFByteStream::Close</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.IByteStream.Capabilities">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Retrieves the characteristics of the byte stream. </p>	
            </summary>	
            <returns>The capabilities of the stream.</returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms698962</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::GetCapabilities([Out] unsigned int* pdwCapabilities)</unmanaged>	
            <unmanaged-short>IMFByteStream::GetCapabilities</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.IByteStream.Length">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Retrieves the length of the stream. </p>	
            </summary>	
            <returns>The length of the stream, in bytes. If the length is unknown, this value is -1.</returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms698941</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::GetLength([Out] unsigned longlong* pqwLength)</unmanaged>	
            <unmanaged-short>IMFByteStream::GetLength</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.IByteStream.CurrentPosition">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Retrieves the current read or write position in the stream. </p>	
            </summary>	
            <returns>The current position, in bytes.</returns>	
            <remarks>	
            <p> The methods that update the current position are <strong>Read</strong>, <strong>BeginRead</strong>, <strong>Write</strong>, <strong>BeginWrite</strong>, <strong>SetCurrentPosition</strong>, and <strong>Seek</strong>. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms704059</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::GetCurrentPosition([Out] unsigned longlong* pqwPosition)</unmanaged>	
            <unmanaged-short>IMFByteStream::GetCurrentPosition</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.IByteStream.IsEndOfStream">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Queries whether the current position has reached the end of the stream.</p>	
            </summary>	
            <returns>true if the end of the stream has been reached</returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms697369</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::IsEndOfStream([Out] BOOL* pfEndOfStream)</unmanaged>	
            <unmanaged-short>IMFByteStream::IsEndOfStream</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.#ctor(Windows.Storage.Streams.IRandomAccessStream)">
            <summary>
            Instantiates a new instance <see cref="T:SharpDX.MediaFoundation.ByteStream"/> from a <see cref="T:System.IO.Stream"/>.
            </summary>
            <msdn-id>hh162754</msdn-id>	
            <unmanaged>HRESULT MFCreateMFByteStreamOnStreamEx([In] IUnknown* punkStream,[Out] IMFByteStream** ppByteStream)</unmanaged>	
            <unmanaged-short>MFCreateMFByteStreamOnStreamEx</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Reads data from the stream. </p>	
            </summary>	
            <param name="bRef"><dd> <p> Pointer to a buffer that receives the data. The caller must allocate the buffer. </p> </dd></param>
            <param name="offset">Offset into the buffer.</param>
            <param name="count"><dd> <p> Size of the buffer in bytes. </p> </dd></param>	
            <returns>The number of bytes that are copied into the buffer</returns>	
            <remarks>	
            <p> This method reads at most <em>cb</em> bytes from the current position in the stream and copies them into the buffer provided by the caller. The number of bytes that were read is returned in the <em>pcbRead</em> parameter. The method does not return an error code on reaching the end of the file, so the application should check the value in <em>pcbRead</em> after the method returns. </p><p> This method is synchronous. It blocks until the read operation completes. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms698913</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Read([Out, Buffer] unsigned char* pb,[In] unsigned int cb,[Out] unsigned int* pcbRead)</unmanaged>	
            <unmanaged-short>IMFByteStream::Read</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.BeginRead(System.Byte[],System.Int32,System.Int32,SharpDX.MediaFoundation.AsyncCallback,System.Object)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Begins an asynchronous read operation from the stream. </p>	
            </summary>	
            <param name="bRef"><dd> <p> Pointer to a buffer that receives the data. The caller must allocate the buffer. </p> </dd></param>	
            <param name="cb"><dd> <p> Size of the buffer in bytes. </p> </dd></param>	
            <param name="callbackRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncCallback"/></strong> interface of a callback object. The caller must implement this interface. </p> </dd></param>	
            <param name="context"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of a state object, defined by the caller. This parameter can be <strong><c>null</c></strong>. You can use this object to hold state information. The object is returned to the caller when the callback is invoked. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> When all of the data has been read into the buffer, the callback object's <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method is called. At that point, the application should call <strong><see cref="M:SharpDX.MediaFoundation.IByteStream.EndRead(SharpDX.MediaFoundation.AsyncResult)"/></strong> to complete the asynchronous request. </p><p> Do not read from, write to, free, or reallocate the buffer while an asynchronous read is pending. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms704810</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::BeginRead([Out, Buffer] unsigned char* pb,[In] unsigned int cb,[In] IMFAsyncCallback* pCallback,[In] IUnknown* punkState)</unmanaged>	
            <unmanaged-short>IMFByteStream::BeginRead</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.EndRead(SharpDX.MediaFoundation.AsyncResult)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Completes an asynchronous read operation. </p>	
            </summary>	
            <param name="resultRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface. Pass in the same reference that your callback object received in the <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method. </p> </dd></param>	
            <returns>The number of bytes that were read</returns>	
            <remarks>	
            <p> Call this method after the <strong><see cref="M:SharpDX.MediaFoundation.IByteStream.BeginRead(System.Byte[],System.Int32,System.Int32,SharpDX.MediaFoundation.AsyncCallback,System.Object)"/></strong> method completes asynchronously. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms704042</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::EndRead([In] IMFAsyncResult* pResult,[Out] unsigned int* pcbRead)</unmanaged>	
            <unmanaged-short>IMFByteStream::EndRead</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Writes data to the stream.</p>	
            </summary>	
            <param name="bRef"><dd> <p> Pointer to a buffer that contains the data to write. </p> </dd></param>	
            <param name="cb"><dd> <p> Size of the buffer in bytes. </p> </dd></param>	
            <returns>The number of bytes that are written.</returns>	
            <remarks>	
            <p> This method writes the contents of the <em>pb</em> buffer to the stream, starting at the current stream position. The number of bytes that were written is returned in the <em>pcbWritten</em> parameter. </p><p> This method is synchronous. It blocks until the write operation completes. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms703843</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Write([In, Buffer] const unsigned char* pb,[In] unsigned int cb,[Out] unsigned int* pcbWritten)</unmanaged>	
            <unmanaged-short>IMFByteStream::Write</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.BeginWrite(System.Byte[],System.Int32,System.Int32,SharpDX.MediaFoundation.AsyncCallback,System.Object)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Begins an asynchronous write operation to the stream. </p>	
            </summary>	
            <param name="bRef"><dd> <p> Pointer to a buffer containing the data to write. </p> </dd></param>	
            <param name="cb"><dd> <p> Size of the buffer in bytes. </p> </dd></param>	
            <param name="callbackRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncCallback"/></strong> interface of a callback object. The caller must implement this interface. </p> </dd></param>	
            <param name="context"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of a state object, defined by the caller. This parameter can be <strong><c>null</c></strong>. You can use this object to hold state information. The object is returned to the caller when the callback is invoked. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> When all of the data has been written to the stream, the callback object's <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method is called. At that point, the application should call <strong><see cref="M:SharpDX.MediaFoundation.IByteStream.EndWrite(SharpDX.MediaFoundation.AsyncResult)"/></strong> to complete the asynchronous request. </p><p> Do not reallocate, free, or write to the buffer while an asynchronous write is still pending. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms694005</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::BeginWrite([In, Buffer] const unsigned char* pb,[In] unsigned int cb,[In] IMFAsyncCallback* pCallback,[In] IUnknown* punkState)</unmanaged>	
            <unmanaged-short>IMFByteStream::BeginWrite</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.EndWrite(SharpDX.MediaFoundation.AsyncResult)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Completes an asynchronous write operation.</p>	
            </summary>	
            <param name="resultRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface. Pass in the same reference that your callback object received in the <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method.</p> </dd></param>	
            <returns>The number of bytes that were written</returns>	
            <remarks>	
            <p> Call this method when the <strong><see cref="M:SharpDX.MediaFoundation.IByteStream.BeginWrite(System.Byte[],System.Int32,System.Int32,SharpDX.MediaFoundation.AsyncCallback,System.Object)"/></strong> method completes asynchronously. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms703863</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::EndWrite([In] IMFAsyncResult* pResult,[Out] unsigned int* pcbWritten)</unmanaged>	
            <unmanaged-short>IMFByteStream::EndWrite</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.Seek(SharpDX.MediaFoundation.ByteStreamSeekOrigin,System.Int64,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Moves the current position in the stream by a specified offset.</p>	
            </summary>	
            <param name="seekOrigin"><dd> <p> Specifies the origin of the seek as a member of the <strong><see cref="!:SharpDX.MediaFoundation.BytestreamSeekOrigin"/></strong> enumeration. The offset is calculated relative to this position. </p> </dd></param>	
            <param name="llSeekOffset"><dd> <p> Specifies the new position, as a byte offset from the seek origin. </p> </dd></param>	
            <param name="dwSeekFlags"><dd> <p> Specifies zero or more flags. The following flags are defined. </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>MFBYTESTREAM_SEEK_FLAG_CANCEL_PENDING_IO</strong></dt> </dl> </td><td> <p> All pending I/O requests are canceled after the seek request completes successfully. </p> </td></tr> </table> <p>?</p> </dd></param>	
            <returns>The new position after the seek</returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms697053</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Seek([In] MFBYTESTREAM_SEEK_ORIGIN SeekOrigin,[In] longlong llSeekOffset,[In] unsigned int dwSeekFlags,[Out] unsigned longlong* pqwCurrentPosition)</unmanaged>	
            <unmanaged-short>IMFByteStream::Seek</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.Flush">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Clears any internal buffers used by the stream. If you are writing to the stream, the buffered data is written to the underlying file or device. </p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> If the byte stream is read-only, this method has no effect.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms694833</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Flush()</unmanaged>	
            <unmanaged-short>IMFByteStream::Flush</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.Close">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Closes the stream and releases any resources associated with the stream, such as sockets or file handles. This method also cancels any pending asynchronous I/O requests. </p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms703909</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Close()</unmanaged>	
            <unmanaged-short>IMFByteStream::Close</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.ByteStream"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.ByteStream">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.ByteStream"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.GetCapabilities_(System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Retrieves the characteristics of the byte stream. </p>	
            </summary>	
            <param name="dwCapabilitiesRef"><dd> <p>Receives a bitwise <strong>OR</strong> of zero or more flags. The following flags are defined.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>MFBYTESTREAM_IS_READABLE</strong></dt> <dt>0x00000001</dt> </dl> </td><td> <p> The byte stream can be read. </p> </td></tr> <tr><td><dl> <dt><strong>MFBYTESTREAM_IS_WRITABLE</strong></dt> <dt>0x00000002</dt> </dl> </td><td> <p> The byte stream can be written to. </p> </td></tr> <tr><td><dl> <dt><strong>MFBYTESTREAM_IS_SEEKABLE</strong></dt> <dt>0x00000004</dt> </dl> </td><td> <p> The byte stream can be seeked. </p> </td></tr> <tr><td><dl> <dt><strong>MFBYTESTREAM_IS_REMOTE</strong></dt> <dt>0x00000008</dt> </dl> </td><td> <p> The byte stream is from a remote source, such as a network. </p> </td></tr> <tr><td><dl> <dt><strong>MFBYTESTREAM_IS_DIRECTORY</strong></dt> <dt>0x00000080</dt> </dl> </td><td> <p> The byte stream represents a file directory. </p> </td></tr> <tr><td><dl> <dt><strong>MFBYTESTREAM_HAS_SLOW_SEEK</strong></dt> <dt>0x00000100</dt> </dl> </td><td> <p> Seeking within this stream might be slow. For example, the byte stream might download from a network.</p> </td></tr> <tr><td><dl> <dt><strong>MFBYTESTREAM_IS_PARTIALLY_DOWNLOADED</strong></dt> <dt>0x00000200</dt> </dl> </td><td> <p>The byte stream is currently downloading data to a local cache. Read operations on the byte stream might take longer until the data is completely downloaded.</p> <p>This flag is cleared after all of the data has been downloaded.</p> <p>If the <strong>MFBYTESTREAM_HAS_SLOW_SEEK</strong> flag is also set, it means the byte stream must download the entire file sequentially. Otherwise, the byte stream can respond to seek requests by restarting the download from a new point in the stream.</p> </td></tr> <tr><td><dl> <dt><strong>MFBYTESTREAM_SHARE_WRITE</strong></dt> <dt>0x00000400</dt> </dl> </td><td> <p>Another thread or process can open this byte stream for writing. If this flag is present, the length of thebyte stream could change while it is being read. </p> <p>This flag can affect the behavior of byte-stream handlers. For more information, see MF_BYTESTREAMHANDLER_ACCEPTS_SHARE_WRITE.</p> <p><strong>Note</strong>??Requires Windows?7 or later.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::GetCapabilities']/*"/>	
            <msdn-id>ms698962</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::GetCapabilities([Out] unsigned int* pdwCapabilities)</unmanaged>	
            <unmanaged-short>IMFByteStream::GetCapabilities</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.GetLength_(System.Int64@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Retrieves the length of the stream. </p>	
            </summary>	
            <param name="qwLengthRef"><dd> <p> Receives the length of the stream, in bytes. If the length is unknown, this value is -1. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::GetLength']/*"/>	
            <msdn-id>ms698941</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::GetLength([Out] unsigned longlong* pqwLength)</unmanaged>	
            <unmanaged-short>IMFByteStream::GetLength</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.SetLength_(System.Int64)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Sets the length of the stream.</p>	
            </summary>	
            <param name="qwLength"><dd> <p> Length of the stream in bytes. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::SetLength']/*"/>	
            <msdn-id>ms697225</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::SetLength([In] unsigned longlong qwLength)</unmanaged>	
            <unmanaged-short>IMFByteStream::SetLength</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.GetCurrentPosition_(System.Int64@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Retrieves the current read or write position in the stream. </p>	
            </summary>	
            <param name="qwPositionRef"><dd> <p> Receives the current position, in bytes. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> The methods that update the current position are <strong>Read</strong>, <strong>BeginRead</strong>, <strong>Write</strong>, <strong>BeginWrite</strong>, <strong>SetCurrentPosition</strong>, and <strong>Seek</strong>. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::GetCurrentPosition']/*"/>	
            <msdn-id>ms704059</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::GetCurrentPosition([Out] unsigned longlong* pqwPosition)</unmanaged>	
            <unmanaged-short>IMFByteStream::GetCurrentPosition</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.SetCurrentPosition_(System.Int64)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Sets the current read or write position.</p>	
            </summary>	
            <param name="qwPosition"><dd> <p>New position in the stream, as a byte offset from the start of the stream.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_INVALIDARG</strong></dt> </dl> </td><td> <p> Invalid argument. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> If the new position is larger than the length of the stream, the method returns E_INVALIDARG. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::SetCurrentPosition']/*"/>	
            <msdn-id>ms695238</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::SetCurrentPosition([In] unsigned longlong qwPosition)</unmanaged>	
            <unmanaged-short>IMFByteStream::SetCurrentPosition</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.IsEndOfStream_(SharpDX.Bool@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Queries whether the current position has reached the end of the stream.</p>	
            </summary>	
            <param name="fEndOfStreamRef"><dd> <p> Receives the value <strong>TRUE</strong> if the end of the stream has been reached, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::IsEndOfStream']/*"/>	
            <msdn-id>ms697369</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::IsEndOfStream([Out] BOOL* pfEndOfStream)</unmanaged>	
            <unmanaged-short>IMFByteStream::IsEndOfStream</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.Read_(System.IntPtr,System.Int32,System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Reads data from the stream. </p>	
            </summary>	
            <param name="bRef"><dd> <p> Pointer to a buffer that receives the data. The caller must allocate the buffer. </p> </dd></param>	
            <param name="cb"><dd> <p> Size of the buffer in bytes. </p> </dd></param>	
            <param name="cbReadRef"><dd> <p> Receives the number of bytes that are copied into the buffer. This parameter cannot be <strong><c>null</c></strong>. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> This method reads at most <em>cb</em> bytes from the current position in the stream and copies them into the buffer provided by the caller. The number of bytes that were read is returned in the <em>pcbRead</em> parameter. The method does not return an error code on reaching the end of the file, so the application should check the value in <em>pcbRead</em> after the method returns. </p><p> This method is synchronous. It blocks until the read operation completes. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::Read']/*"/>	
            <msdn-id>ms698913</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Read([In] void* pb,[In] unsigned int cb,[Out] unsigned int* pcbRead)</unmanaged>	
            <unmanaged-short>IMFByteStream::Read</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.BeginRead_(System.IntPtr,System.Int32,SharpDX.MediaFoundation.AsyncCallback,System.IntPtr)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Begins an asynchronous read operation from the stream. </p>	
            </summary>	
            <param name="bRef"><dd> <p> Pointer to a buffer that receives the data. The caller must allocate the buffer. </p> </dd></param>	
            <param name="cb"><dd> <p> Size of the buffer in bytes. </p> </dd></param>	
            <param name="callbackRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncCallback"/></strong> interface of a callback object. The caller must implement this interface. </p> </dd></param>	
            <param name="unkStateRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of a state object, defined by the caller. This parameter can be <strong><c>null</c></strong>. You can use this object to hold state information. The object is returned to the caller when the callback is invoked. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> When all of the data has been read into the buffer, the callback object's <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method is called. At that point, the application should call <strong><see cref="M:SharpDX.MediaFoundation.IByteStream.EndRead(SharpDX.MediaFoundation.AsyncResult)"/></strong> to complete the asynchronous request. </p><p> Do not read from, write to, free, or reallocate the buffer while an asynchronous read is pending. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::BeginRead']/*"/>	
            <msdn-id>ms704810</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::BeginRead([In] void* pb,[In] unsigned int cb,[In] IMFAsyncCallback* pCallback,[In] void* punkState)</unmanaged>	
            <unmanaged-short>IMFByteStream::BeginRead</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.EndRead_(SharpDX.MediaFoundation.AsyncResult,System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Completes an asynchronous read operation. </p>	
            </summary>	
            <param name="resultRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface. Pass in the same reference that your callback object received in the <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method. </p> </dd></param>	
            <param name="cbReadRef"><dd> <p> Receives the number of bytes that were read. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> Call this method after the <strong><see cref="M:SharpDX.MediaFoundation.IByteStream.BeginRead(System.Byte[],System.Int32,System.Int32,SharpDX.MediaFoundation.AsyncCallback,System.Object)"/></strong> method completes asynchronously. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::EndRead']/*"/>	
            <msdn-id>ms704042</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::EndRead([In] IMFAsyncResult* pResult,[Out] unsigned int* pcbRead)</unmanaged>	
            <unmanaged-short>IMFByteStream::EndRead</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.Write_(System.IntPtr,System.Int32,System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Writes data to the stream.</p>	
            </summary>	
            <param name="bRef"><dd> <p> Pointer to a buffer that contains the data to write. </p> </dd></param>	
            <param name="cb"><dd> <p> Size of the buffer in bytes. </p> </dd></param>	
            <param name="cbWrittenRef"><dd> <p> Receives the number of bytes that are written. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> This method writes the contents of the <em>pb</em> buffer to the stream, starting at the current stream position. The number of bytes that were written is returned in the <em>pcbWritten</em> parameter. </p><p> This method is synchronous. It blocks until the write operation completes. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::Write']/*"/>	
            <msdn-id>ms703843</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Write([In] const void* pb,[In] unsigned int cb,[Out] unsigned int* pcbWritten)</unmanaged>	
            <unmanaged-short>IMFByteStream::Write</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.BeginWrite_(System.IntPtr,System.Int32,SharpDX.MediaFoundation.AsyncCallback,System.IntPtr)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Begins an asynchronous write operation to the stream. </p>	
            </summary>	
            <param name="bRef"><dd> <p> Pointer to a buffer containing the data to write. </p> </dd></param>	
            <param name="cb"><dd> <p> Size of the buffer in bytes. </p> </dd></param>	
            <param name="callbackRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncCallback"/></strong> interface of a callback object. The caller must implement this interface. </p> </dd></param>	
            <param name="unkStateRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of a state object, defined by the caller. This parameter can be <strong><c>null</c></strong>. You can use this object to hold state information. The object is returned to the caller when the callback is invoked. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> When all of the data has been written to the stream, the callback object's <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method is called. At that point, the application should call <strong><see cref="M:SharpDX.MediaFoundation.IByteStream.EndWrite(SharpDX.MediaFoundation.AsyncResult)"/></strong> to complete the asynchronous request. </p><p> Do not reallocate, free, or write to the buffer while an asynchronous write is still pending. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::BeginWrite']/*"/>	
            <msdn-id>ms694005</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::BeginWrite([In] const void* pb,[In] unsigned int cb,[In] IMFAsyncCallback* pCallback,[In] void* punkState)</unmanaged>	
            <unmanaged-short>IMFByteStream::BeginWrite</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.EndWrite_(SharpDX.MediaFoundation.AsyncResult,System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Completes an asynchronous write operation.</p>	
            </summary>	
            <param name="resultRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface. Pass in the same reference that your callback object received in the <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method.</p> </dd></param>	
            <param name="cbWrittenRef"><dd> <p> Receives the number of bytes that were written. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> Call this method when the <strong><see cref="M:SharpDX.MediaFoundation.IByteStream.BeginWrite(System.Byte[],System.Int32,System.Int32,SharpDX.MediaFoundation.AsyncCallback,System.Object)"/></strong> method completes asynchronously. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::EndWrite']/*"/>	
            <msdn-id>ms703863</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::EndWrite([In] IMFAsyncResult* pResult,[Out] unsigned int* pcbWritten)</unmanaged>	
            <unmanaged-short>IMFByteStream::EndWrite</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.Seek_(SharpDX.MediaFoundation.ByteStreamSeekOrigin,System.Int64,System.Int32,System.Int64@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Moves the current position in the stream by a specified offset.</p>	
            </summary>	
            <param name="seekOrigin"><dd> <p> Specifies the origin of the seek as a member of the <strong><see cref="T:SharpDX.MediaFoundation.ByteStreamSeekOrigin"/></strong> enumeration. The offset is calculated relative to this position. </p> </dd></param>	
            <param name="llSeekOffset"><dd> <p> Specifies the new position, as a byte offset from the seek origin. </p> </dd></param>	
            <param name="dwSeekFlags"><dd> <p> Specifies zero or more flags. The following flags are defined. </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>MFBYTESTREAM_SEEK_FLAG_CANCEL_PENDING_IO</strong></dt> </dl> </td><td> <p> All pending I/O requests are canceled after the seek request completes successfully. </p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="qwCurrentPositionRef"><dd> <p> Receives the new position after the seek. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::Seek']/*"/>	
            <msdn-id>ms697053</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Seek([In] MFBYTESTREAM_SEEK_ORIGIN SeekOrigin,[In] longlong llSeekOffset,[In] unsigned int dwSeekFlags,[Out] unsigned longlong* pqwCurrentPosition)</unmanaged>	
            <unmanaged-short>IMFByteStream::Seek</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.Flush_">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Clears any internal buffers used by the stream. If you are writing to the stream, the buffered data is written to the underlying file or device. </p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> If the byte stream is read-only, this method has no effect.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::Flush']/*"/>	
            <msdn-id>ms694833</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Flush()</unmanaged>	
            <unmanaged-short>IMFByteStream::Flush</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStream.Close_">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Closes the stream and releases any resources associated with the stream, such as sockets or file handles. This method also cancels any pending asynchronous I/O requests. </p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStream::Close']/*"/>	
            <msdn-id>ms703909</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::Close()</unmanaged>	
            <unmanaged-short>IMFByteStream::Close</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.ByteStream.Capabilities">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Retrieves the characteristics of the byte stream. </p>	
            </summary>	
            <returns>The capabilities of the stream.</returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms698962</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::GetCapabilities([Out] unsigned int* pdwCapabilities)</unmanaged>	
            <unmanaged-short>IMFByteStream::GetCapabilities</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.ByteStream.Length">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Retrieves the length of the stream. </p>	
            </summary>	
            <returns>The length of the stream, in bytes. If the length is unknown, this value is -1.</returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms698941</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::GetLength([Out] unsigned longlong* pqwLength)</unmanaged>	
            <unmanaged-short>IMFByteStream::GetLength</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.ByteStream.CurrentPosition">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Retrieves the current read or write position in the stream. </p>	
            </summary>	
            <returns>The current position, in bytes.</returns>	
            <remarks>	
            <p> The methods that update the current position are <strong>Read</strong>, <strong>BeginRead</strong>, <strong>Write</strong>, <strong>BeginWrite</strong>, <strong>SetCurrentPosition</strong>, and <strong>Seek</strong>. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms704059</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::GetCurrentPosition([Out] unsigned longlong* pqwPosition)</unmanaged>	
            <unmanaged-short>IMFByteStream::GetCurrentPosition</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.ByteStream.IsEndOfStream">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Queries whether the current position has reached the end of the stream.</p>	
            </summary>	
            <returns>true if the end of the stream has been reached</returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms697369</msdn-id>	
            <unmanaged>HRESULT IMFByteStream::IsEndOfStream([Out] BOOL* pfEndOfStream)</unmanaged>	
            <unmanaged-short>IMFByteStream::IsEndOfStream</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.DirectX.NamespaceDoc">
            <summary>
            The <see cref="N:SharpDX.MediaFoundation.DirectX"/> namespace provides a managed MediaFoundation for DirectX integration API.
            </summary>
            <msdn-id></msdn-id>
            <unmanaged>MediaFoundation</unmanaged>	
            <unmanaged-short>MediaFoundation</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.DXGIDeviceManager">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gives the caller exclusive access to the Microsoft Direct3D device.</p>	
            </summary>	
            <remarks>	
            <p>When you are done using the Direct3D device, call <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.UnlockDevice(System.IntPtr)"/></strong> to unlock the device.</p><p>If the method returns <strong>MF_E_DXGI_NEW_VIDEO_DEVICE</strong>, call <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.CloseDeviceHandle(System.IntPtr)"/></strong> to close the handle and then call <strong>OpenDeviceHandle</strong> again to get a new handle. The  <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.ResetDevice(SharpDX.ComObject)"/></strong> method invalidates all open device handles.</p><p>If <em>fBlock</em> is <strong>TRUE</strong>, this method can potentially deadlock. For example, it will deadlock if a thread calls <strong>LockDevice</strong> and then waits on another thread that calls <strong>LockDevice</strong>. It will also deadlock if a thread calls <strong>LockDevice</strong> twice without calling <strong>UnlockDevice</strong> in between.  </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIDeviceManager']/*"/>	
            <msdn-id>hh447909</msdn-id>	
            <unmanaged>IMFDXGIDeviceManager</unmanaged>	
            <unmanaged-short>IMFDXGIDeviceManager</unmanaged-short>	
        </member>
        <!-- Badly formed XML comment ignored for member "F:SharpDX.MediaFoundation.DXGIDeviceManager.ResetToken" -->
        <member name="M:SharpDX.MediaFoundation.DXGIDeviceManager.#ctor">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates an instance of the Microsoft DirectX Graphics Infrastructure (DXGI) Device Manager.</p>	
            </summary>	
            <msdn-id>hh162750</msdn-id>	
            <unmanaged>HRESULT MFCreateDXGIDeviceManager([Out] unsigned int* resetToken,[Out] IMFDXGIDeviceManager** ppDeviceManager)</unmanaged>	
            <unmanaged-short>MFCreateDXGIDeviceManager</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIDeviceManager.ResetDevice(SharpDX.ComObject)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the Microsoft Direct3D device or notifies the device manager that the Direct3D device was reset.</p>	
            </summary>	
            <param name="direct3D11Device"><dd> <p>A reference to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of the DXGI device.</p> </dd></param>	
            <remarks>	
            <p>When you first create the DXGI Device Manager, call this method with a reference to the Direct3D device. (The device manager does not create the device; the caller must provide the device reference initially.) Also call this method if the Direct3D device becomes lost and you need to reset the device or create a new device. </p><p>The <em>resetToken</em> parameter ensures that only the component that originally created the device manager can invalidate the current device.</p><p>If this method succeeds, all open device handles become invalid.</p>	
            </remarks>	
            <msdn-id>hh447911</msdn-id>	
            <unmanaged>HRESULT IMFDXGIDeviceManager::ResetDevice([In] IUnknown* pUnkDevice,[In] unsigned int resetToken)</unmanaged>	
            <unmanaged-short>IMFDXGIDeviceManager::ResetDevice</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIDeviceManager.UnlockDevice(System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Unlocks the Microsoft Direct3D device.</p>	
            </summary>	
            <param name="hDevice"><dd> <p>A handle to the Direct3D device. To get the device handle, call <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.OpenDeviceHandle"/></strong>.</p> </dd></param>	
            <remarks>	
            <p> Call this method to release the device after calling <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.LockDevice(System.IntPtr,System.Guid,SharpDX.Bool)"/></strong>.</p>	
            </remarks>	
            <msdn-id>hh447913</msdn-id>	
            <unmanaged>HRESULT IMFDXGIDeviceManager::UnlockDevice([In] void* hDevice,[In] BOOL fSaveState)</unmanaged>	
            <unmanaged-short>IMFDXGIDeviceManager::UnlockDevice</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIDeviceManager.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.DXGIDeviceManager"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIDeviceManager.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.DXGIDeviceManager">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.DXGIDeviceManager"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIDeviceManager.CloseDeviceHandle(System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Closes a Microsoft Direct3D device handle.</p>	
            </summary>	
            <param name="hDevice"><dd> <p>A handle to the Direct3D device. </p> </dd></param>	
            <returns><p>This method can return one of these values.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>Success.</p> </td></tr> <tr><td> <dl> <dt><strong>E_HANDLE</strong></dt> </dl> </td><td> <p>The specified handle is not a Direct3D device handle.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> Call this method to release a device handle that was retrieved by the <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.OpenDeviceHandle"/></strong> method.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIDeviceManager::CloseDeviceHandle']/*"/>	
            <msdn-id>hh447907</msdn-id>	
            <unmanaged>HRESULT IMFDXGIDeviceManager::CloseDeviceHandle([In] void* hDevice)</unmanaged>	
            <unmanaged-short>IMFDXGIDeviceManager::CloseDeviceHandle</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIDeviceManager.GetVideoService(System.IntPtr,System.Guid)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries the Microsoft Direct3D device for an interface.</p>	
            </summary>	
            <param name="hDevice"><dd> <p>A handle to the Direct3D device. To get the device handle, call <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.OpenDeviceHandle"/></strong>.</p> </dd></param>	
            <param name="riid"><dd> <p>The interface identifier (IID) of the requested interface. The Direct3D device supports the following interfaces:</p> <ul> <li> <strong><see cref="!:SharpDX.Direct3D11.VideoContext"/></strong> </li> <li> <strong><see cref="!:SharpDX.Direct3D11.VideoDevice"/></strong> </li> </ul> </dd></param>	
            <returns><dd> <p>Receives a reference to the requested interface. The caller must release the interface.</p> </dd></returns>	
            <remarks>	
            <p>If the method returns <strong>MF_E_DXGI_NEW_VIDEO_DEVICE</strong>, call <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.CloseDeviceHandle(System.IntPtr)"/></strong> to close the handle and then call <strong>OpenDeviceHandle</strong> again to get a new handle. The  <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.ResetDevice(SharpDX.ComObject)"/></strong> method invalidates all open device handles.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIDeviceManager::GetVideoService']/*"/>	
            <msdn-id>hh447908</msdn-id>	
            <unmanaged>HRESULT IMFDXGIDeviceManager::GetVideoService([In] void* hDevice,[In] const GUID&amp; riid,[Out] void** ppService)</unmanaged>	
            <unmanaged-short>IMFDXGIDeviceManager::GetVideoService</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIDeviceManager.LockDevice(System.IntPtr,System.Guid,SharpDX.Bool)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gives the caller exclusive access to the Microsoft Direct3D device.</p>	
            </summary>	
            <param name="hDevice"><dd> <p>A handle to the Direct3D device. To get the device handle, call <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.OpenDeviceHandle"/></strong>.</p> </dd></param>	
            <param name="riid"><dd> <p>The interface identifier (IID) of the requested interface. The Direct3D device will support the following interfaces:</p> <ul> <li> <strong><see cref="!:SharpDX.Direct3D11.Device"/></strong> </li> <li> <strong><see cref="!:SharpDX.Direct3D11.VideoContext"/></strong> </li> <li> <strong><see cref="!:SharpDX.Direct3D11.VideoDevice"/></strong> </li> </ul> </dd></param>	
            <param name="fBlock"><dd> <p>Specifies whether to wait for the device lock. If the device is already locked and this parameter is <strong>TRUE</strong>, the method blocks until the device is unlocked. Otherwise, if the device is locked and this parameter is <strong><see cref="F:SharpDX.Result.False"/></strong>, the method returns immediately with the error code <strong>DXVA2_E_VIDEO_DEVICE_LOCKED</strong>.</p> </dd></param>	
            <returns><dd> <p>Receives a reference to the requested interface. The caller must release the interface.</p> </dd></returns>	
            <remarks>	
            <p>When you are done using the Direct3D device, call <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.UnlockDevice(System.IntPtr)"/></strong> to unlock the device.</p><p>If the method returns <strong>MF_E_DXGI_NEW_VIDEO_DEVICE</strong>, call <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.CloseDeviceHandle(System.IntPtr)"/></strong> to close the handle and then call <strong>OpenDeviceHandle</strong> again to get a new handle. The  <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.ResetDevice(SharpDX.ComObject)"/></strong> method invalidates all open device handles.</p><p>If <em>fBlock</em> is <strong>TRUE</strong>, this method can potentially deadlock. For example, it will deadlock if a thread calls <strong>LockDevice</strong> and then waits on another thread that calls <strong>LockDevice</strong>. It will also deadlock if a thread calls <strong>LockDevice</strong> twice without calling <strong>UnlockDevice</strong> in between.  </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIDeviceManager::LockDevice']/*"/>	
            <msdn-id>hh447909</msdn-id>	
            <unmanaged>HRESULT IMFDXGIDeviceManager::LockDevice([In] void* hDevice,[In] const GUID&amp; riid,[Out] void** ppUnkDevice,[In] BOOL fBlock)</unmanaged>	
            <unmanaged-short>IMFDXGIDeviceManager::LockDevice</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIDeviceManager.OpenDeviceHandle">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a handle to the Microsoft Direct3D device. </p>	
            </summary>	
            <returns><dd> <p>Receives the device handle.</p> </dd></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIDeviceManager::OpenDeviceHandle']/*"/>	
            <msdn-id>hh447910</msdn-id>	
            <unmanaged>HRESULT IMFDXGIDeviceManager::OpenDeviceHandle([Out] void** phDevice)</unmanaged>	
            <unmanaged-short>IMFDXGIDeviceManager::OpenDeviceHandle</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIDeviceManager.ResetDevice(SharpDX.ComObject,System.Int32)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the Microsoft Direct3D device or notifies the device manager that the Direct3D device was reset.</p>	
            </summary>	
            <param name="unkDeviceRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of the DXGI device.</p> </dd></param>	
            <param name="resetToken"><dd> <p>The token that was received in the <em>pResetToken</em> parameter of the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateDXGIDeviceManager(System.Int32@,SharpDX.MediaFoundation.DXGIDeviceManager)"/></strong> function. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>When you first create the DXGI Device Manager, call this method with a reference to the Direct3D device. (The device manager does not create the device; the caller must provide the device reference initially.) Also call this method if the Direct3D device becomes lost and you need to reset the device or create a new device. </p><p>The <em>resetToken</em> parameter ensures that only the component that originally created the device manager can invalidate the current device.</p><p>If this method succeeds, all open device handles become invalid.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIDeviceManager::ResetDevice']/*"/>	
            <msdn-id>hh447911</msdn-id>	
            <unmanaged>HRESULT IMFDXGIDeviceManager::ResetDevice([In] IUnknown* pUnkDevice,[In] unsigned int resetToken)</unmanaged>	
            <unmanaged-short>IMFDXGIDeviceManager::ResetDevice</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIDeviceManager.TestDevice(System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Tests whether a Microsoft Direct3D device handle is valid.</p>	
            </summary>	
            <param name="hDevice"><dd> <p>A handle to the Direct3D device. To get the device handle, call <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.OpenDeviceHandle"/></strong>.</p> </dd></param>	
            <returns><p>This method can return one of these values.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>Success.</p> </td></tr> <tr><td> <dl> <dt><strong>E_HANDLE</strong></dt> </dl> </td><td> <p>The specified handle is not a Direct3D device handle.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_DXGI_NEW_VIDEO_DEVICE</strong></dt> </dl> </td><td> <p>The device handle is invalid. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>If the method returns <strong>MF_E_DXGI_NEW_VIDEO_DEVICE</strong>, call <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.CloseDeviceHandle(System.IntPtr)"/></strong> to close the handle and then call <strong>OpenDeviceHandle</strong> again to get a new handle. The  <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.ResetDevice(SharpDX.ComObject)"/></strong> method invalidates all open device handles.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIDeviceManager::TestDevice']/*"/>	
            <msdn-id>hh447912</msdn-id>	
            <unmanaged>HRESULT IMFDXGIDeviceManager::TestDevice([In] void* hDevice)</unmanaged>	
            <unmanaged-short>IMFDXGIDeviceManager::TestDevice</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIDeviceManager.UnlockDevice(System.IntPtr,SharpDX.Bool)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Unlocks the Microsoft Direct3D device.</p>	
            </summary>	
            <param name="hDevice"><dd> <p>A handle to the Direct3D device. To get the device handle, call <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.OpenDeviceHandle"/></strong>.</p> </dd></param>	
            <param name="fSaveState"><dd> <p>Reserved.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> Call this method to release the device after calling <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.LockDevice(System.IntPtr,System.Guid,SharpDX.Bool)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIDeviceManager::UnlockDevice']/*"/>	
            <msdn-id>hh447913</msdn-id>	
            <unmanaged>HRESULT IMFDXGIDeviceManager::UnlockDevice([In] void* hDevice,[In] BOOL fSaveState)</unmanaged>	
            <unmanaged-short>IMFDXGIDeviceManager::UnlockDevice</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineClassFactory">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates an instance of the Media Engine.</p>	
            </summary>	
            <remarks>	
            <p>Before using this interface, call <strong>CoInitializeEx</strong> and <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Startup(System.Int32,System.Int32)"/></strong>.</p><p>To get a reference to this interface, call <strong>CoCreateInstance</strong>. The class identifier is <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineClassFactory.ClsidMFMediaEngineClassFactory"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineClassFactory']/*"/>	
            <msdn-id>hh447919</msdn-id>	
            <unmanaged>IMFMediaEngineClassFactory</unmanaged>	
            <unmanaged-short>IMFMediaEngineClassFactory</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineClassFactory.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaEngineClassFactory"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineClassFactory.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.MediaEngineClassFactory">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.MediaEngineClassFactory"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineClassFactory.ClsidMFMediaEngineClassFactory">
            <summary>Constant ClsidMFMediaEngineClassFactory.</summary>
            <unmanaged>CLSID_MFMediaEngineClassFactory</unmanaged>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineClassFactory.CreateInstance(SharpDX.MediaFoundation.MediaEngineCreateFlags,SharpDX.MediaFoundation.MediaAttributes,SharpDX.MediaFoundation.MediaEngine)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a new instance of the Media Engine.</p>	
            </summary>	
            <param name="flags"><dd> <p>A bitwise <strong>OR</strong> of zero or more flags from the <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineCreateFlags"/></strong> enumeration.</p> </dd></param>	
            <param name="attrRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface of an attribute store. </p> <p>This parameter  specifies configuration attributes for the Media Engine. Call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateAttributes(SharpDX.MediaFoundation.MediaAttributes,System.Int32)"/></strong> to create the attribute store. Then, set one or more attributes from the list of Media Engine Attributes. For details, see Remarks.</p> </dd></param>	
            <param name="playerOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaEngine"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>This method can return one of these values.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>Success.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_ATTRIBUTENOTFOUND</strong></dt> </dl> </td><td> <p>A required attribute was missing from <em>pAttr</em>, or an invalid combination of attributes was used.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Before calling this method, call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Startup(System.Int32,System.Int32)"/></strong>.</p><p>The Media Engine supports three distinct modes:</p><table> <tr><th>Mode</th><th>Description</th></tr> <tr><td>Frame-server mode</td><td> <p>In this mode, the Media Engine delivers uncompressed video frames to the application. The application is responsible for displaying each frame, using Microsoft Direct3D or any other rendering technique. </p> <p>The Media Engine renders the audio; the application is not responsible for audio rendering.</p> <p>Frame-server mode is the default mode. </p> </td></tr> <tr><td>Rendering mode</td><td> <p>In this mode, the Media Engine renders both audio and video. The video is rendered to a window or Microsoft DirectComposition visual provided by the application.</p> <p>To enable rendering mode, set either the MF_MEDIA_ENGINE_PLAYBACK_HWND attribute or the  MF_MEDIA_ENGINE_PLAYBACK_VISUAL attribute.</p> </td></tr> <tr><td>Audio  mode</td><td> <p>In this mode, the Media Engine renders audio only, with no video.</p> <p>To enable audio mode, set the <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineCreateFlags.AudioOnly"/></strong> flag in the <em>dwFlags</em> parameter.</p> </td></tr> </table><p>?</p>Intialization Attributes<p>The following attributes are defined for the <em>pAttr</em> parameter. Some are required, and some are optional, depending on the  mode you want. </p><table> <tr><th>Feature</th><th>Attributes</th><th>Frame Server Mode</th><th>Rendering Mode</th><th>Audio Mode</th></tr> <tr><td>Event callback</td><td> <see cref="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.Callback"/> </td><td>Required.</td><td>Required.</td><td>Required.</td></tr> <tr><td>Render target</td><td> <p>One of the following:</p> <dl> <dd> MF_MEDIA_ENGINE_PLAYBACK_HWND </dd> <dd> MF_MEDIA_ENGINE_PLAYBACK_VISUAL </dd> </dl> <p>These attributes are mutually exclusive. Setting either of these attributes puts the Media Engine into rendering mode.</p> </td><td>Do not set.</td><td>Required. </td><td>Do not set.</td></tr> <tr><td>Direct3D format</td><td> <see cref="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.VideoOutputFormat"/> </td><td>Required.</td><td>Optional.</td><td>Do not set.</td></tr> <tr><td>Microsoft DirectX Graphics Infrastructure (DXGI) device  manager</td><td> <see cref="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.DxgiManager"/> </td><td>Optional.</td><td>Optional.</td><td>Do not set.</td></tr> <tr><td>Media Engine extensions</td><td> <see cref="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.Extension"/> </td><td>Optional.</td><td>Optional.</td><td>Optional.</td></tr> <tr><td>Content protection</td><td> <p>Any of the following:</p> <dl> <dd> MF_MEDIA_ENGINE_OPM_HWND </dd> <dd> <see cref="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.ContentProtectionFlags"/> </dd> <dd> <see cref="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.ContentProtectionManager"/> </dd> </dl> </td><td>Optional.</td><td>Optional.</td><td>Optional.</td></tr> <tr><td>Audio playback</td><td> <p>Any of the following:</p> <dl> <dd> <see cref="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.AudioCategory"/> </dd> <dd> <see cref="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.AudioEndpointRole"/> </dd> </dl> </td><td>Optional.</td><td>Optional.</td><td>Optional.</td></tr> </table><p>?</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineClassFactory::CreateInstance']/*"/>	
            <msdn-id>hh447921</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineClassFactory::CreateInstance([In] MF_MEDIA_ENGINE_CREATEFLAGS dwFlags,[In] IMFAttributes* pAttr,[Out, Fast] IMFMediaEngine** ppPlayer)</unmanaged>	
            <unmanaged-short>IMFMediaEngineClassFactory::CreateInstance</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineClassFactory.CreateTimeRange(SharpDX.MediaFoundation.MediaTimeRange)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a time range object.</p>	
            </summary>	
            <param name="timeRangeOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaTimeRange"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineClassFactory::CreateTimeRange']/*"/>	
            <msdn-id>hh447922</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineClassFactory::CreateTimeRange([Out, Fast] IMFMediaTimeRange** ppTimeRange)</unmanaged>	
            <unmanaged-short>IMFMediaEngineClassFactory::CreateTimeRange</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineClassFactory.CreateError(SharpDX.MediaFoundation.MediaError)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a media error object.</p>	
            </summary>	
            <param name="errorOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaError"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineClassFactory::CreateError']/*"/>	
            <msdn-id>hh447920</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineClassFactory::CreateError([Out, Fast] IMFMediaError** ppError)</unmanaged>	
            <unmanaged-short>IMFMediaEngineClassFactory::CreateError</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineEx">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Extends the <strong><see cref="T:SharpDX.MediaFoundation.MediaEngine"/></strong> interface.</p>	
            </summary>	
            <remarks>	
            <p>The <strong><see cref="T:SharpDX.MediaFoundation.MediaEngine"/></strong> interface contains methods that map to the HTML5 media elements. The <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineEx"/></strong> provides additional functionality that does not correspond directly to HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx']/*"/>	
            <msdn-id>hh447923</msdn-id>	
            <unmanaged>IMFMediaEngineEx</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngine">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Copies the current video frame to a DXGI surface or WIC bitmap.</p>	
            </summary>	
            <remarks>	
            <p>In frame-server mode, call this method to blit the video frame to a DXGI or WIC surface. The application can call this method at any time after the Media Engine loads a video resource. Typically, however, the application calls <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.OnVideoStreamTick_(System.Int64@)"/></strong> first, to determine whether a new frame is available. If <strong>OnVideoStreamTick</strong> returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>, the application then calls <strong>TransferVideoFrame</strong>.</p><p>The Media Engine scales and letterboxes the video to fit the destination rectangle. It fills the letterbox area with the border color.</p><p>For protected content, call the <strong>IMFMediaEngineProtectedContent::TransferVideoFrame</strong> method instead of this method.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine']/*"/>	
            <msdn-id>hh448021</msdn-id>	
            <unmanaged>IMFMediaEngine</unmanaged>	
            <unmanaged-short>IMFMediaEngine</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaEngine"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.MediaEngine">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.MediaEngine"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetError(SharpDX.MediaFoundation.MediaError@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the most recent error status.</p>	
            </summary>	
            <param name="errorOut"><dd> <p>Receives either a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaError"/></strong> interface, or the value <strong><c>null</c></strong>. If the value is <strong>non-<c>null</c></strong>, the caller must release the interface.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method returns the last error status, if any, that resulted from loading the media source. If there has not been an error, <em>ppError</em> receives the value <strong><c>null</c></strong>.</p><p>This method corresponds to the <strong>error</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetError']/*"/>	
            <msdn-id>hh447985</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::GetError([Out] IMFMediaError** ppError)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetError</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.SetErrorCode(SharpDX.MediaFoundation.MediaEngineErr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the current error code.</p>	
            </summary>	
            <param name="error"><dd> <p>The error code, as an <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineErr"/></strong> value.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetErrorCode']/*"/>	
            <msdn-id>hh448012</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::SetErrorCode([In] MF_MEDIA_ENGINE_ERR error)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::SetErrorCode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.SetSourceElements(SharpDX.MediaFoundation.MediaEngineSrcElements)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets a list of media sources.</p>	
            </summary>	
            <param name="srcElementsRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineSrcElements"/></strong> interface. The caller must implement this interface. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to adding a list of <strong>source</strong> elements to a media element in HTML5. </p><p>The Media Engine tries to load each item in the <em>pSrcElements</em> list, until it finds one that loads successfully. After this method is called, the application can use the <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineSrcElements"/></strong> interface to update the list at any time. To reload the list, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Load"/></strong>.</p><p>This method completes asynchronously. When the operation starts, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadStart"/></strong> event. If no errors occur during the <strong>Load</strong> operation, several other events are generated, including the following.</p><ul> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadedMetadata"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadedData"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.CanPlay"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.CanPlayThrough"/></strong></li> </ul><p>If the Media Engine is unable to load a URL, it sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.Error"/></strong> event. </p><p>For more information about event handling in the Media Engine, see <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineNotify"/></strong>.</p><p>If the application also calls <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetSource(System.String)"/></strong>, the URL passed to <strong>SetSource</strong> takes precedence over the list given to <strong>SetSourceElements</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetSourceElements']/*"/>	
            <msdn-id>hh448018</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::SetSourceElements([In] IMFMediaEngineSrcElements* pSrcElements)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::SetSourceElements</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.SetSource(System.String)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the URL of a media resource.</p>	
            </summary>	
            <param name="urlRef"><dd> <p>The URL of the media resource.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to setting the <strong>src</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>The URL specified by this method takes precedence over media resources specified in the <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetSourceElements(SharpDX.MediaFoundation.MediaEngineSrcElements)"/></strong> method. To load the URL, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Load"/></strong>.</p><p>This method asynchronously loads the URL. When the operation starts, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadStart"/></strong> event. If no errors occur during the <strong>Load</strong> operation, several other events are generated, including the following.</p><ul> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadedMetadata"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadedData"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.CanPlay"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.CanPlayThrough"/></strong></li> </ul><p>If the Media Engine is unable to load the URL, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.Error"/></strong> event. </p><p>For more information about event handling in the Media Engine, see <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineNotify"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetSource']/*"/>	
            <msdn-id>hh448017</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::SetSource([In] wchar_t* pUrl)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::SetSource</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetCurrentSource(System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the URL of the current media resource, or an empty string if no media resource is present.</p>	
            </summary>	
            <param name="urlOut"><dd> <p>Receives a <strong>BSTR</strong> that contains the URL of the current media resource. If there is no media resource, <em>ppUrl</em> receives an empty string. The caller must free the  <strong>BSTR</strong> by calling <strong>SysFreeString</strong>.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>currentSrc</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>Initially, the current media resource is empty. It is updated when the Media Engine performs the resource selection algorithm.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetCurrentSource']/*"/>	
            <msdn-id>hh447981</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::GetCurrentSource([Out] wchar_t** ppUrl)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetCurrentSource</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetNetworkState">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the current network state of the media engine.</p>	
            </summary>	
            <returns><p>Returns an <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineNetwork"/></strong> enumeration value.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>networkState</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetNetworkState']/*"/>	
            <msdn-id>hh447989</msdn-id>	
            <unmanaged>unsigned short IMFMediaEngine::GetNetworkState()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetNetworkState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetPreload">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the preload flag.</p>	
            </summary>	
            <returns><p>Returns an <strong><see cref="T:SharpDX.MediaFoundation.MediaEnginePreload"/></strong> enumeration value.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>preload</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5. The value is a hint to the user-agent whether to preload the media resource.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetPreload']/*"/>	
            <msdn-id>hh447992</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_PRELOAD IMFMediaEngine::GetPreload()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetPreload</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.SetPreload(SharpDX.MediaFoundation.MediaEnginePreload)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the preload flag.</p>	
            </summary>	
            <param name="preload"><dd> <p>An <strong><see cref="T:SharpDX.MediaFoundation.MediaEnginePreload"/></strong> value equal to  the preload flag.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to setting the <strong>preload</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5. The value is a hint to the user-agent whether to preload the media resource.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetPreload']/*"/>	
            <msdn-id>hh448016</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::SetPreload([In] MF_MEDIA_ENGINE_PRELOAD Preload)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::SetPreload</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetBuffered(SharpDX.MediaFoundation.MediaTimeRange@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries how much resource data the media engine has buffered.</p>	
            </summary>	
            <param name="bufferedOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaTimeRange"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>buffered</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>The returned  <strong><see cref="T:SharpDX.MediaFoundation.MediaTimeRange"/></strong> interface represents a list of time ranges. The time ranges indicate which portions of the media resource have been downloaded. The time range list can be empty.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetBuffered']/*"/>	
            <msdn-id>hh447980</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::GetBuffered([Out] IMFMediaTimeRange** ppBuffered)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetBuffered</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.Load">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Loads the current media source.</p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The main purpose of this method is to reload a list of source elements after updating the list. For more information, see <strong>SetSourceElements</strong>. Otherwise, calling this method is generally not required. To load a new media source, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetSource(System.String)"/></strong> or <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetSourceElements(SharpDX.MediaFoundation.MediaEngineSrcElements)"/></strong>.</p><p>The <strong>Load</strong> method explictly invokes the Media Engine's media resource loading algorithm. Before calling this method, you must set the media resource by calling <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetSource(System.String)"/></strong> or <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetSourceElements(SharpDX.MediaFoundation.MediaEngineSrcElements)"/></strong>. </p><p>This method completes asynchronously. When the <strong>Load</strong> operation starts, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadStart"/></strong> event. If no errors occur during the <strong>Load</strong> operation, several other events are generated, including the following.</p><ul> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadedMetadata"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadedData"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.CanPlay"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.CanPlayThrough"/></strong></li> </ul><p>If the Media Engine is unable to load the file, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.Error"/></strong> event. </p><p>For more information about event handling in the Media Engine, see <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineNotify"/></strong>.</p><p>This method corresponds to the <strong>load</strong> method of the <strong>HTMLMediaElement</strong> interface in HTML5. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::Load']/*"/>	
            <msdn-id>hh448005</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::Load()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::Load</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.CanPlayType(System.String,SharpDX.MediaFoundation.MediaEngineCanPlay@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries how likely it is that the Media Engine can play a specified type of media resource.</p>	
            </summary>	
            <param name="type"><dd> <p>A string that contains a MIME type with an optional codecs parameter, as defined in RFC 4281.</p> </dd></param>	
            <param name="answerRef"><dd> <p>Receives an <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineCanPlay"/></strong> enumeration value.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>canPlayType</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>The <strong>canPlayType</strong> attribute defines the following values.</p><table> <tr><th>Value</th><th>Description</th></tr> <tr><td>"" (empty string)</td><td>The user-agent cannot play the resource, or the resource type is "application/octet-stream".</td></tr> <tr><td>"probably"</td><td>The user-agent probably can play the resource.</td></tr> <tr><td>"maybe"</td><td>Neither of the previous values applies.</td></tr> </table><p>?</p><p>The value "probably" is used because a MIME type for a media resource is generally not a complete description of the resource. For example, "video/mp4" specifies an MP4 file with video, but does not describe the codec. Even with the optional codecs parameter, the MIME type omits some information, such as the actual coded bit rate. Therefore, it is usually impossible to be certain that playback is possible until the actual media resource is opened.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::CanPlayType']/*"/>	
            <msdn-id>hh447978</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::CanPlayType([In] wchar_t* type,[Out] MF_MEDIA_ENGINE_CANPLAY* pAnswer)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::CanPlayType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetReadyState">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the ready state, which indicates whether the current media resource can be rendered.</p>	
            </summary>	
            <returns><p>Returns an <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineReady"/></strong> enumeration value.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>readyState</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetReadyState']/*"/>	
            <msdn-id>hh447993</msdn-id>	
            <unmanaged>unsigned short IMFMediaEngine::GetReadyState()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetReadyState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.IsSeeking_">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the Media Engine is currently seeking to a new playback position.</p>	
            </summary>	
            <returns><p>Returns <strong>TRUE</strong> if the Media Engine is seeking, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>seeking</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::IsSeeking']/*"/>	
            <msdn-id>hh448004</msdn-id>	
            <unmanaged>BOOL IMFMediaEngine::IsSeeking()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::IsSeeking</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetCurrentTime">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the current playback position.</p>	
            </summary>	
            <returns><p>Returns the playback position, in seconds.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>currentTime</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetCurrentTime']/*"/>	
            <msdn-id>hh447982</msdn-id>	
            <unmanaged>double IMFMediaEngine::GetCurrentTime()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetCurrentTime</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.SetCurrentTime(System.Double)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Seeks to a new playback position.</p>	
            </summary>	
            <param name="seekTime"><dd> <p>The new playback position, in seconds.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to setting the <strong>currentTime</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>The method completes asynchronously. When the seek operation starts, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.Seeking"/></strong> event. When the seek operation completes, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.Seeked"/></strong> event. See <strong>IMFMediaEventNotify::EventNotify</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetCurrentTime']/*"/>	
            <msdn-id>hh448010</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::SetCurrentTime([In] double seekTime)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::SetCurrentTime</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetStartTime">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the initial playback position.</p>	
            </summary>	
            <returns><p>Returns the initial playback position, in seconds.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>initialTime</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetStartTime']/*"/>	
            <msdn-id>hh447995</msdn-id>	
            <unmanaged>double IMFMediaEngine::GetStartTime()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetStartTime</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetDuration">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the duration of the media resource.</p>	
            </summary>	
            <returns><p>Returns the duration, in seconds. If no media data is available, the method returns not-a-number (NaN). If the duration is unbounded, the method returns an infinite value.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>duration</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>If the duration changes, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.DurationChange"/></strong> event. See <strong><see cref="!:SharpDX.MediaFoundation.MediaEngineNotify.EventNotify"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetDuration']/*"/>	
            <msdn-id>hh447984</msdn-id>	
            <unmanaged>double IMFMediaEngine::GetDuration()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetDuration</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.IsPaused_">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether playback is currently paused.</p>	
            </summary>	
            <returns><p>Returns <strong>TRUE</strong> if playback is paused, or  <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>paused</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::IsPaused']/*"/>	
            <msdn-id>hh448003</msdn-id>	
            <unmanaged>BOOL IMFMediaEngine::IsPaused()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::IsPaused</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetDefaultPlaybackRate">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the default playback rate.</p>	
            </summary>	
            <returns><p>Returns the default playback rate, as a multiple of normal (1?) playback. A negative value indicates reverse playback.</p></returns>	
            <remarks>	
            <p>This method corresponds to getting the <strong>defaultPlaybackRate</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5. </p><p>The default playback rate is used for the next call to the <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Play"/></strong> method. To change the current playback rate, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetPlaybackRate(System.Double)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetDefaultPlaybackRate']/*"/>	
            <msdn-id>hh447983</msdn-id>	
            <unmanaged>double IMFMediaEngine::GetDefaultPlaybackRate()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetDefaultPlaybackRate</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.SetDefaultPlaybackRate(System.Double)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the default playback rate.</p>	
            </summary>	
            <param name="rate"><dd> <p>The default playback rate, as a multiple of normal (1?) playback. A negative value indicates reverse playback.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to setting the <strong>defaultPlaybackRate</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetDefaultPlaybackRate']/*"/>	
            <msdn-id>hh448011</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::SetDefaultPlaybackRate([In] double Rate)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::SetDefaultPlaybackRate</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetPlaybackRate">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the current playback rate.</p>	
            </summary>	
            <returns><p>Returns the playback rate, as a multiple of normal (1?) playback. A negative value indicates reverse playback.</p></returns>	
            <remarks>	
            <p>This method corresponds to getting the <strong>playbackRate</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetPlaybackRate']/*"/>	
            <msdn-id>hh447990</msdn-id>	
            <unmanaged>double IMFMediaEngine::GetPlaybackRate()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetPlaybackRate</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.SetPlaybackRate(System.Double)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the current playback rate.</p>	
            </summary>	
            <param name="rate"><dd> <p>The playback rate, as a multiple of normal (1?) playback. A negative value indicates reverse playback.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to setting the <strong>playbackRate</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetPlaybackRate']/*"/>	
            <msdn-id>hh448015</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::SetPlaybackRate([In] double Rate)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::SetPlaybackRate</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetPlayed(SharpDX.MediaFoundation.MediaTimeRange@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the time ranges that have been rendered.</p>	
            </summary>	
            <param name="playedOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaTimeRange"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>played</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetPlayed']/*"/>	
            <msdn-id>hh447991</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::GetPlayed([Out] IMFMediaTimeRange** ppPlayed)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetPlayed</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetSeekable(SharpDX.MediaFoundation.MediaTimeRange@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the time ranges to which the Media Engine can currently seek.</p>	
            </summary>	
            <param name="seekableOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaTimeRange"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>seekable</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>To find out whether the media source supports seeking, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineEx.GetResourceCharacteristics(SharpDX.MediaFoundation.ResourceCharacteristics@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetSeekable']/*"/>	
            <msdn-id>hh447994</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::GetSeekable([Out] IMFMediaTimeRange** ppSeekable)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetSeekable</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.IsEnded_">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether playback has ended.</p>	
            </summary>	
            <returns><p>Returns <strong>TRUE</strong> if the direction of playback is forward and playback has reached the end of the media resource. Returns <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>ended</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::IsEnded']/*"/>	
            <msdn-id>hh448002</msdn-id>	
            <unmanaged>BOOL IMFMediaEngine::IsEnded()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::IsEnded</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetAutoPlay">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the Media Engine automatically begins playback.</p>	
            </summary>	
            <returns><p>Returns <strong>TRUE</strong> if the Media Engine automatically begins playback, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>autoplay</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>If this method returns <strong>TRUE</strong>, playback begins automatically after the <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Load"/></strong> method completes. Otherwise, playback begins when the application calls <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Play"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetAutoPlay']/*"/>	
            <msdn-id>hh447979</msdn-id>	
            <unmanaged>BOOL IMFMediaEngine::GetAutoPlay()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetAutoPlay</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.SetAutoPlay(SharpDX.Bool)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies whether the Media Engine automatically begins playback.</p>	
            </summary>	
            <param name="autoPlay"><dd> <p>If <strong>TRUE</strong>, the Media Engine automatically begins playback after it loads a media source. Otherwise, playback does not begin until the application calls <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Play"/></strong>.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to setting the <strong>autoplay</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetAutoPlay']/*"/>	
            <msdn-id>hh448009</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::SetAutoPlay([In] BOOL AutoPlay)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::SetAutoPlay</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetLoop">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the Media Engine will loop playback.</p>	
            </summary>	
            <returns><p>Returns <strong>TRUE</strong> if looping is enabled, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p></returns>	
            <remarks>	
            <p>This method corresponds to getting the <strong>loop</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>If looping is enabled, the Media Engine seeks to the start of the content when playback reaches the end.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetLoop']/*"/>	
            <msdn-id>hh447986</msdn-id>	
            <unmanaged>BOOL IMFMediaEngine::GetLoop()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetLoop</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.SetLoop(SharpDX.Bool)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies whether the Media Engine loops playback.</p>	
            </summary>	
            <param name="loop"><dd> <p>Specify <strong>TRUE</strong> to enable looping, or <strong><see cref="F:SharpDX.Result.False"/></strong> to disable looping.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>If <em>Loop</em> is <strong>TRUE</strong>, playback loops back to the beginning when it reaches the end of the source.</p><p>This method corresponds to setting the <strong>loop</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetLoop']/*"/>	
            <msdn-id>hh448013</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::SetLoop([In] BOOL Loop)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::SetLoop</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.Play">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Starts playback.</p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>play</strong> method of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>The method completes asynchronously. When the operation starts, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.Play"/></strong> event. When playback is under way, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.Playing"/></strong> event. See <strong>IMFMediaEventNotify::EventNotify</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::Play']/*"/>	
            <msdn-id>hh448008</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::Play()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::Play</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.Pause">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Pauses playback.</p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>pause</strong> method of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>The method completes asynchronously. When the transition to paused is complete, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.Pause"/>                </strong> event. See <strong>IMFMediaEventNotify::EventNotify</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::Pause']/*"/>	
            <msdn-id>hh448007</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::Pause()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::Pause</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetMuted">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the audio is muted. </p>	
            </summary>	
            <returns><p>Returns <strong>TRUE</strong> if the audio is muted, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetMuted']/*"/>	
            <msdn-id>hh447987</msdn-id>	
            <unmanaged>BOOL IMFMediaEngine::GetMuted()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetMuted</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.SetMuted(SharpDX.Bool)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Mutes or unmutes the audio. </p>	
            </summary>	
            <param name="muted"><dd> <p>Specify <strong>TRUE</strong> to mute the audio, or <strong><see cref="F:SharpDX.Result.False"/></strong> to unmute the audio. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetMuted']/*"/>	
            <msdn-id>hh448014</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::SetMuted([In] BOOL Muted)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::SetMuted</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetVolume">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the audio volume level.</p>	
            </summary>	
            <returns><p>Returns the volume level. Volume is expressed as an attenuation level, where 0.0 indicates silence and 1.0 indicates full volume (no attenuation).</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetVolume']/*"/>	
            <msdn-id>hh447997</msdn-id>	
            <unmanaged>double IMFMediaEngine::GetVolume()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetVolume</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.SetVolume(System.Double)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the audio volume level.</p>	
            </summary>	
            <param name="volume"><dd> <p>The volume level. Volume is expressed as an attenuation level, where 0.0 indicates silence and 1.0 indicates full volume (no attenuation). </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>When the audio balance changes, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.VolumeChange"/></strong> event. See <strong>IMFMediaEventNotify::EventNotify</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetVolume']/*"/>	
            <msdn-id>hh448019</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::SetVolume([In] double Volume)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::SetVolume</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.HasVideo">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the current media resource contains a video stream.</p>	
            </summary>	
            <returns><p>Returns <strong>TRUE</strong> if the current media resource contains a video stream. Returns <strong><see cref="F:SharpDX.Result.False"/></strong> if there is no media resource or the media resource does not contain a video stream.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::HasVideo']/*"/>	
            <msdn-id>hh448001</msdn-id>	
            <unmanaged>BOOL IMFMediaEngine::HasVideo()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::HasVideo</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.HasAudio">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the current media resource contains an audio stream.</p>	
            </summary>	
            <returns><p>Returns <strong>TRUE</strong> if the current media resource contains an audio stream. Returns <strong><see cref="F:SharpDX.Result.False"/></strong> if there is no media resource or the media resource does not contain an audio stream.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::HasAudio']/*"/>	
            <msdn-id>hh447998</msdn-id>	
            <unmanaged>BOOL IMFMediaEngine::HasAudio()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::HasAudio</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetNativeVideoSize(System.Int32@,System.Int32@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the size of the video frame, adjusted for aspect ratio.</p>	
            </summary>	
            <param name="cx"><dd> <p>Receives the width in pixels.</p> </dd></param>	
            <param name="cy"><dd> <p>Receives the height in pixels.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method adjusts for the correct picture aspect ratio.	
            For example, if the encoded frame is 720 ? 420 and the picture aspect ratio is 4:3, the method will return a size equal to 640 ? 480 pixels.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetNativeVideoSize']/*"/>	
            <msdn-id>hh447988</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::GetNativeVideoSize([Out, Optional] unsigned int* cx,[Out, Optional] unsigned int* cy)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetNativeVideoSize</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.GetVideoAspectRatio(System.Int32@,System.Int32@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the picture aspect ratio of the video stream.</p>	
            </summary>	
            <param name="cx"><dd> <p>Receives the x component of the aspect ratio.</p> </dd></param>	
            <param name="cy"><dd> <p>Receives the y component of the aspect ratio.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The Media Engine automatically converts the pixel aspect ratio to 1:1 (square pixels).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetVideoAspectRatio']/*"/>	
            <msdn-id>hh447996</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::GetVideoAspectRatio([Out, Optional] unsigned int* cx,[Out, Optional] unsigned int* cy)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::GetVideoAspectRatio</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.Shutdown">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Shuts down the Media Engine and releases the resources it is using. </p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::Shutdown']/*"/>	
            <msdn-id>hh448020</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::Shutdown()</unmanaged>	
            <unmanaged-short>IMFMediaEngine::Shutdown</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.TransferVideoFrame(SharpDX.ComObject,System.Nullable{SharpDX.MediaFoundation.VideoNormalizedRect},SharpDX.Rectangle,System.Nullable{SharpDX.ColorBGRA})">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Copies the current video frame to a DXGI surface or WIC bitmap.</p>	
            </summary>	
            <param name="dstSurfRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of the destination surface. </p> </dd></param>	
            <param name="srcRef"><dd> <p>A reference to an <strong><see cref="T:SharpDX.MediaFoundation.VideoNormalizedRect"/></strong> structure that specifies the source rectangle.</p> </dd></param>	
            <param name="dstRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Rectangle"/></strong> structure that specifies the destination rectangle.</p> </dd></param>	
            <param name="borderClrRef"><dd> <p>A reference to an <strong><see cref="T:SharpDX.ColorBGRA"/></strong> structure that specifies the border color. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>In frame-server mode, call this method to blit the video frame to a DXGI or WIC surface. The application can call this method at any time after the Media Engine loads a video resource. Typically, however, the application calls <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.OnVideoStreamTick_(System.Int64@)"/></strong> first, to determine whether a new frame is available. If <strong>OnVideoStreamTick</strong> returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>, the application then calls <strong>TransferVideoFrame</strong>.</p><p>The Media Engine scales and letterboxes the video to fit the destination rectangle. It fills the letterbox area with the border color.</p><p>For protected content, call the <strong>IMFMediaEngineProtectedContent::TransferVideoFrame</strong> method instead of this method.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::TransferVideoFrame']/*"/>	
            <msdn-id>hh448021</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::TransferVideoFrame([In] IUnknown* pDstSurf,[In, Optional] const MFVideoNormalizedRect* pSrc,[In] const RECT* pDst,[In, Optional] const MFARGB* pBorderClr)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::TransferVideoFrame</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.OnVideoStreamTick_(System.Int64@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries the Media Engine to find out whether a new video frame is ready.</p>	
            </summary>	
            <param name="ptsRef"><dd> <p>If a new frame is ready, receives the presentation time of the frame.</p> </dd></param>	
            <returns><p>This method can return one of these values.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong>S_FALSE</strong></dt> </dl> </td><td> <p>The method succeeded, but the Media Engine does not have a new frame.</p> </td></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>A new video frame is ready for display.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>In frame-server mode, the application should call this method whenever a vertical blank occurs in the display device. If the method returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.TransferVideoFrame(SharpDX.ComObject,System.Nullable{SharpDX.MediaFoundation.VideoNormalizedRect},SharpDX.Rectangle,System.Nullable{SharpDX.ColorBGRA})"/></strong> to blit the frame to the render target. If the method returns <strong>S_FALSE</strong>, wait for the next vertical blank and call the method again.</p><p>Do not call this method in rendering mode or audio-only mode. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::OnVideoStreamTick']/*"/>	
            <msdn-id>hh448006</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::OnVideoStreamTick([Out] longlong* pPts)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::OnVideoStreamTick</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.#ctor(SharpDX.MediaFoundation.MediaEngineClassFactory,SharpDX.MediaFoundation.MediaEngineAttributes,SharpDX.MediaFoundation.MediaEngineCreateFlags,SharpDX.MediaFoundation.MediaEngine.MediaEngineNotifyDelegate)">
            <summary>
            Initializes an instance of the <see cref="T:SharpDX.MediaFoundation.MediaEngine"/> class.
            </summary>
            <param name="factory"></param>
            <param name="attributes"></param>
            <param name="createFlags"> </param>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngine.OnVideoStreamTick(System.Int64@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries the Media Engine to find out whether a new video frame is ready.</p>	
            </summary>	
            <param name="ptsRef"><dd> <p>If a new frame is ready, receives the presentation time of the frame.</p> </dd></param>	
            <returns>true if new video frame is ready for display.</returns>	
            <remarks>	
            <p>In frame-server mode, the application should call this method whenever a vertical blank occurs in the display device. If the method returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.TransferVideoFrame(SharpDX.ComObject,System.Nullable{SharpDX.MediaFoundation.VideoNormalizedRect},SharpDX.Rectangle,System.Nullable{SharpDX.ColorBGRA})"/></strong> to blit the frame to the render target. If the method returns <strong>S_FALSE</strong>, wait for the next vertical blank and call the method again.</p><p>Do not call this method in rendering mode or audio-only mode. </p>	
            </remarks>	
            <msdn-id>hh448006</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngine::OnVideoStreamTick([Out] longlong* pPts)</unmanaged>	
            <unmanaged-short>IMFMediaEngine::OnVideoStreamTick</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.Error">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the most recent error status.</p>	
            </summary>	
            <remarks>	
            <p>This method returns the last error status, if any, that resulted from loading the media source. If there has not been an error, <em>ppError</em> receives the value <strong><c>null</c></strong>.</p><p>This method corresponds to the <strong>error</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetError']/*"/>	
            <msdn-id>hh447985</msdn-id>	
            <unmanaged>GetError</unmanaged>	
            <unmanaged-short>GetError</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngine::GetError([Out] IMFMediaError** ppError)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.ErrorCode">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the current error code.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetErrorCode']/*"/>	
            <msdn-id>hh448012</msdn-id>	
            <unmanaged>SetErrorCode</unmanaged>	
            <unmanaged-short>SetErrorCode</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngine::SetErrorCode([In] MF_MEDIA_ENGINE_ERR error)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.SourceElements">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets a list of media sources.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to adding a list of <strong>source</strong> elements to a media element in HTML5. </p><p>The Media Engine tries to load each item in the <em>pSrcElements</em> list, until it finds one that loads successfully. After this method is called, the application can use the <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineSrcElements"/></strong> interface to update the list at any time. To reload the list, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Load"/></strong>.</p><p>This method completes asynchronously. When the operation starts, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadStart"/></strong> event. If no errors occur during the <strong>Load</strong> operation, several other events are generated, including the following.</p><ul> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadedMetadata"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadedData"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.CanPlay"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.CanPlayThrough"/></strong></li> </ul><p>If the Media Engine is unable to load a URL, it sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.Error"/></strong> event. </p><p>For more information about event handling in the Media Engine, see <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineNotify"/></strong>.</p><p>If the application also calls <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetSource(System.String)"/></strong>, the URL passed to <strong>SetSource</strong> takes precedence over the list given to <strong>SetSourceElements</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetSourceElements']/*"/>	
            <msdn-id>hh448018</msdn-id>	
            <unmanaged>SetSourceElements</unmanaged>	
            <unmanaged-short>SetSourceElements</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngine::SetSourceElements([In] IMFMediaEngineSrcElements* pSrcElements)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.Source">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the URL of a media resource.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to setting the <strong>src</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>The URL specified by this method takes precedence over media resources specified in the <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetSourceElements(SharpDX.MediaFoundation.MediaEngineSrcElements)"/></strong> method. To load the URL, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Load"/></strong>.</p><p>This method asynchronously loads the URL. When the operation starts, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadStart"/></strong> event. If no errors occur during the <strong>Load</strong> operation, several other events are generated, including the following.</p><ul> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadedMetadata"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadedData"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.CanPlay"/></strong></li> <li><strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.CanPlayThrough"/></strong></li> </ul><p>If the Media Engine is unable to load the URL, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.Error"/></strong> event. </p><p>For more information about event handling in the Media Engine, see <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineNotify"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::SetSource']/*"/>	
            <msdn-id>hh448017</msdn-id>	
            <unmanaged>SetSource</unmanaged>	
            <unmanaged-short>SetSource</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngine::SetSource([In] wchar_t* pUrl)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.NetworkState">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the current network state of the media engine.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>networkState</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetNetworkState']/*"/>	
            <msdn-id>hh447989</msdn-id>	
            <unmanaged>GetNetworkState</unmanaged>	
            <unmanaged-short>GetNetworkState</unmanaged-short>	
            <unmanaged>unsigned short IMFMediaEngine::GetNetworkState()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.Preload">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the preload flag.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>preload</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5. The value is a hint to the user-agent whether to preload the media resource.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetPreload']/*"/>	
            <msdn-id>hh447992</msdn-id>	
            <unmanaged>GetPreload / SetPreload</unmanaged>	
            <unmanaged-short>GetPreload</unmanaged-short>	
            <unmanaged>MF_MEDIA_ENGINE_PRELOAD IMFMediaEngine::GetPreload()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.Buffered">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries how much resource data the media engine has buffered.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>buffered</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>The returned  <strong><see cref="T:SharpDX.MediaFoundation.MediaTimeRange"/></strong> interface represents a list of time ranges. The time ranges indicate which portions of the media resource have been downloaded. The time range list can be empty.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetBuffered']/*"/>	
            <msdn-id>hh447980</msdn-id>	
            <unmanaged>GetBuffered</unmanaged>	
            <unmanaged-short>GetBuffered</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngine::GetBuffered([Out] IMFMediaTimeRange** ppBuffered)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.ReadyState">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the ready state, which indicates whether the current media resource can be rendered.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>readyState</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetReadyState']/*"/>	
            <msdn-id>hh447993</msdn-id>	
            <unmanaged>GetReadyState</unmanaged>	
            <unmanaged-short>GetReadyState</unmanaged-short>	
            <unmanaged>unsigned short IMFMediaEngine::GetReadyState()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.IsSeeking">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the Media Engine is currently seeking to a new playback position.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>seeking</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::IsSeeking']/*"/>	
            <msdn-id>hh448004</msdn-id>	
            <unmanaged>IsSeeking</unmanaged>	
            <unmanaged-short>IsSeeking</unmanaged-short>	
            <unmanaged>BOOL IMFMediaEngine::IsSeeking()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.CurrentTime">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the current playback position.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>currentTime</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetCurrentTime']/*"/>	
            <msdn-id>hh447982</msdn-id>	
            <unmanaged>GetCurrentTime / SetCurrentTime</unmanaged>	
            <unmanaged-short>GetCurrentTime</unmanaged-short>	
            <unmanaged>double IMFMediaEngine::GetCurrentTime()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.StartTime">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the initial playback position.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>initialTime</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetStartTime']/*"/>	
            <msdn-id>hh447995</msdn-id>	
            <unmanaged>GetStartTime</unmanaged>	
            <unmanaged-short>GetStartTime</unmanaged-short>	
            <unmanaged>double IMFMediaEngine::GetStartTime()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.Duration">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the duration of the media resource.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>duration</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>If the duration changes, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.DurationChange"/></strong> event. See <strong><see cref="!:SharpDX.MediaFoundation.MediaEngineNotify.EventNotify"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetDuration']/*"/>	
            <msdn-id>hh447984</msdn-id>	
            <unmanaged>GetDuration</unmanaged>	
            <unmanaged-short>GetDuration</unmanaged-short>	
            <unmanaged>double IMFMediaEngine::GetDuration()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.IsPaused">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether playback is currently paused.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>paused</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::IsPaused']/*"/>	
            <msdn-id>hh448003</msdn-id>	
            <unmanaged>IsPaused</unmanaged>	
            <unmanaged-short>IsPaused</unmanaged-short>	
            <unmanaged>BOOL IMFMediaEngine::IsPaused()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.DefaultPlaybackRate">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the default playback rate.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to getting the <strong>defaultPlaybackRate</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5. </p><p>The default playback rate is used for the next call to the <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Play"/></strong> method. To change the current playback rate, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetPlaybackRate(System.Double)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetDefaultPlaybackRate']/*"/>	
            <msdn-id>hh447983</msdn-id>	
            <unmanaged>GetDefaultPlaybackRate / SetDefaultPlaybackRate</unmanaged>	
            <unmanaged-short>GetDefaultPlaybackRate</unmanaged-short>	
            <unmanaged>double IMFMediaEngine::GetDefaultPlaybackRate()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.PlaybackRate">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the current playback rate.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to getting the <strong>playbackRate</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetPlaybackRate']/*"/>	
            <msdn-id>hh447990</msdn-id>	
            <unmanaged>GetPlaybackRate / SetPlaybackRate</unmanaged>	
            <unmanaged-short>GetPlaybackRate</unmanaged-short>	
            <unmanaged>double IMFMediaEngine::GetPlaybackRate()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.Played">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the time ranges that have been rendered.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>played</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetPlayed']/*"/>	
            <msdn-id>hh447991</msdn-id>	
            <unmanaged>GetPlayed</unmanaged>	
            <unmanaged-short>GetPlayed</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngine::GetPlayed([Out] IMFMediaTimeRange** ppPlayed)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.Seekable">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the time ranges to which the Media Engine can currently seek.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>seekable</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>To find out whether the media source supports seeking, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineEx.GetResourceCharacteristics(SharpDX.MediaFoundation.ResourceCharacteristics@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetSeekable']/*"/>	
            <msdn-id>hh447994</msdn-id>	
            <unmanaged>GetSeekable</unmanaged>	
            <unmanaged-short>GetSeekable</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngine::GetSeekable([Out] IMFMediaTimeRange** ppSeekable)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.IsEnded">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether playback has ended.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>ended</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::IsEnded']/*"/>	
            <msdn-id>hh448002</msdn-id>	
            <unmanaged>IsEnded</unmanaged>	
            <unmanaged-short>IsEnded</unmanaged-short>	
            <unmanaged>BOOL IMFMediaEngine::IsEnded()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.AutoPlay">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the Media Engine automatically begins playback.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>autoplay</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>If this method returns <strong>TRUE</strong>, playback begins automatically after the <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Load"/></strong> method completes. Otherwise, playback begins when the application calls <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Play"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetAutoPlay']/*"/>	
            <msdn-id>hh447979</msdn-id>	
            <unmanaged>GetAutoPlay / SetAutoPlay</unmanaged>	
            <unmanaged-short>GetAutoPlay</unmanaged-short>	
            <unmanaged>BOOL IMFMediaEngine::GetAutoPlay()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.Loop">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the Media Engine will loop playback.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to getting the <strong>loop</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>If looping is enabled, the Media Engine seeks to the start of the content when playback reaches the end.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetLoop']/*"/>	
            <msdn-id>hh447986</msdn-id>	
            <unmanaged>GetLoop / SetLoop</unmanaged>	
            <unmanaged-short>GetLoop</unmanaged-short>	
            <unmanaged>BOOL IMFMediaEngine::GetLoop()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.Muted">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the audio is muted. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetMuted']/*"/>	
            <msdn-id>hh447987</msdn-id>	
            <unmanaged>GetMuted / SetMuted</unmanaged>	
            <unmanaged-short>GetMuted</unmanaged-short>	
            <unmanaged>BOOL IMFMediaEngine::GetMuted()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngine.Volume">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the audio volume level.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngine::GetVolume']/*"/>	
            <msdn-id>hh447997</msdn-id>	
            <unmanaged>GetVolume / SetVolume</unmanaged>	
            <unmanaged-short>GetVolume</unmanaged-short>	
            <unmanaged>double IMFMediaEngine::GetVolume()</unmanaged>
        </member>
        <member name="E:SharpDX.MediaFoundation.MediaEngine.PlaybackEvent">
            <summary>
            Media engine playback event.
            </summary>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineNotify">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Notifies the application when a playback event occurs.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineNotify']/*"/>	
            <msdn-id>hh447963</msdn-id>	
            <unmanaged>IMFMediaEngineNotify</unmanaged>	
            <unmanaged-short>IMFMediaEngineNotify</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineNotify.OnPlaybackEvent(SharpDX.MediaFoundation.MediaEngineEvent,System.Int64,System.Int32)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Notifies the application when a playback event occurs.</p>	
            </summary>	
            <param name="mediaEngineEvent"><dd> <p>A member of the <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineEvent"/></strong> enumeration that specifies the event.</p> </dd></param>	
            <param name="param1"><dd> <p>The first event parameter. The meaning of this parameter depends on the event code.</p> </dd></param>	
            <param name="param2"><dd> <p>The second event parameter. The meaning of this parameter depends on the event code.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <msdn-id>hh447963</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineNotify::EventNotify([In] unsigned int event,[In] ULONG_PTR param1,[In] unsigned int param2)</unmanaged>	
            <unmanaged-short>IMFMediaEngineNotify::EventNotify</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.SetSourceFromByteStream(SharpDX.MediaFoundation.ByteStream,System.String)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Opens a media resource from a byte stream.</p>	
            </summary>	
            <param name="byteStreamRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.MediaFoundation.IByteStream"/></strong> interface of the byte stream.</p> </dd></param>	
            <param name="uRLRef"><dd> <p>The URL of the byte stream.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <msdn-id>hh447956</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::SetSourceFromByteStream([In] IMFByteStream* pByteStream,[In] wchar_t* pURL)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::SetSourceFromByteStream</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaEngineEx"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.MediaEngineEx">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.MediaEngineEx"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.SetSourceFromByteStream_(System.IntPtr,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Opens a media resource from a byte stream.</p>	
            </summary>	
            <param name="byteStreamRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.MediaFoundation.IByteStream"/></strong> interface of the byte stream.</p> </dd></param>	
            <param name="uRLRef"><dd> <p>The URL of the byte stream.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::SetSourceFromByteStream']/*"/>	
            <msdn-id>hh447956</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::SetSourceFromByteStream([In] IMFByteStream* pByteStream,[In] void* pURL)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::SetSourceFromByteStream</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetStatistics(SharpDX.MediaFoundation.MediaEngineStatistic,SharpDX.Win32.Variant@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a playback statistic from the Media Engine.</p>	
            </summary>	
            <param name="statisticID"><dd> <p>A member of the <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineStatistic"/></strong> enumeration that identifies the statistic to get.</p> </dd></param>	
            <param name="statisticRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Win32.Variant"/></strong> that receives the statistic. The data type and meaning of this value depends on the value of <em>StatisticID</em>. The caller must free the <strong><see cref="T:SharpDX.Win32.Variant"/></strong> by calling <strong>PropVariantClear</strong>.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetStatistics']/*"/>	
            <msdn-id>hh447940</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetStatistics([In] MF_MEDIA_ENGINE_STATISTIC StatisticID,[Out] PROPVARIANT* pStatistic)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetStatistics</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.UpdateVideoStream(System.Nullable{SharpDX.MediaFoundation.VideoNormalizedRect},System.Nullable{SharpDX.Rectangle},System.Nullable{SharpDX.ColorBGRA})">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Updates the source rectangle, destination rectangle, and border color for the video.</p>	
            </summary>	
            <param name="srcRef"><dd> <p>A reference to an <strong><see cref="T:SharpDX.MediaFoundation.VideoNormalizedRect"/></strong> structure that specifies the source rectangle. The source rectangle defines the area of the video frame that is displayed. If this parameter is <strong><c>null</c></strong>, the entire video frame is displayed.</p> </dd></param>	
            <param name="dstRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Rectangle"/></strong> structure that specifies the destination rectangle. The destination rectangle defines the area of the window or DirectComposition visual where the video is drawn.</p> </dd></param>	
            <param name="borderClrRef"><dd> <p>A reference to an <strong><see cref="T:SharpDX.ColorBGRA"/></strong> structure that specifies the border color. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>In rendering mode, call this method to reposition the video, update the border color, or repaint the video frame. If all of the parameters are <strong><c>null</c></strong>, the method repaints the most recent video frame.</p><p>In frame-server mode, this method has no effect.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::UpdateVideoStream']/*"/>	
            <msdn-id>hh447961</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::UpdateVideoStream([In, Optional] const MFVideoNormalizedRect* pSrc,[In, Optional] const RECT* pDst,[In, Optional] const MFARGB* pBorderClr)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::UpdateVideoStream</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetBalance">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the audio balance. </p>	
            </summary>	
            <returns><p>Returns the balance. The value can be any number in the following range (inclusive). </p><table> <tr><th>Return value</th><th>Description</th></tr> <tr><td> <dl> <dt>-1</dt> </dl> </td><td> <p>The left channel is at full volume; the right channel is silent.</p> </td></tr> <tr><td> <dl> <dt>1</dt> </dl> </td><td> <p>The right channel is at full volume; the left channel is silent.</p> </td></tr> </table><p>?</p><p>If the value is zero, the left and right channels are at equal volumes. The default value is zero. </p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetBalance']/*"/>	
            <msdn-id>hh447934</msdn-id>	
            <unmanaged>double IMFMediaEngineEx::GetBalance()</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetBalance</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.SetBalance(System.Double)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the audio balance.</p>	
            </summary>	
            <param name="balance"><dd> <p>The audio balance. The value can be any number in the following range (inclusive). </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td> <dl> <dt>-1</dt> </dl> </td><td> <p>The left channel is at full volume; the right channel is silent.</p> </td></tr> <tr><td> <dl> <dt>1</dt> </dl> </td><td> <p>The right channel is at full volume; the left channel is silent.</p> </td></tr> </table> <p>?</p> <p>If the value is zero, the left and right channels are at equal volumes. The default value is zero. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>When the audio balance changes, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.BalanceChange"/></strong> event. See <strong>IMFMediaEventNotify::EventNotify</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::SetBalance']/*"/>	
            <msdn-id>hh447954</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::SetBalance([In] double balance)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::SetBalance</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.IsPlaybackRateSupported(System.Double)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the Media Engine can play at a specified playback rate.</p>	
            </summary>	
            <param name="rate"><dd> <p>The requested playback rate.</p> </dd></param>	
            <returns><p>Returns <strong>TRUE</strong> if the playback rate is supported, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p></returns>	
            <remarks>	
            <p>Playback rates are expressed as a ratio of the current rate to the normal rate. For example, 1.0 is normal playback speed, 0.5 is half speed, and 2.0 is 2? speed. Positive values mean forward playback, and negative values mean reverse playback.</p><p>The results of this method can vary depending on the media resource that is currently loaded. Some media formats might support faster playback rates than others. Also, some formats might not support reverse play.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::IsPlaybackRateSupported']/*"/>	
            <msdn-id>hh447949</msdn-id>	
            <unmanaged>BOOL IMFMediaEngineEx::IsPlaybackRateSupported([In] double rate)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::IsPlaybackRateSupported</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.FrameStep(SharpDX.Bool)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Steps forward or backward one frame.</p>	
            </summary>	
            <param name="forward"><dd> <p>Specify <strong>TRUE</strong> to step forward or <strong><see cref="F:SharpDX.Result.False"/></strong> to step backward.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The frame-step direction is independent of the current playback direction.</p><p>This method completes asynchronously. When the operation completes, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.FrameStepCompleted"/></strong> event and enters the paused state.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::FrameStep']/*"/>	
            <msdn-id>hh447933</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::FrameStep([In] BOOL Forward)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::FrameStep</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetResourceCharacteristics(SharpDX.MediaFoundation.ResourceCharacteristics@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets various flags that describe the media resource.</p>	
            </summary>	
            <param name="characteristicsRef"><dd> <p>Receives a bitwise <strong>OR</strong> of zero or more flags. The following flags are defined.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td> <dl> <dt>0x00000001</dt> </dl> </td><td> <p>The media resource represents a live data source, such as a video camera. If playback is stopped and then restarted, there will be a gap in the content. </p> </td></tr> <tr><td> <dl> <dt>0x00000002</dt> </dl> </td><td> <p>The media resource supports seeking. To get the seekable range, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.GetSeekable(SharpDX.MediaFoundation.MediaTimeRange@)"/></strong>.</p> </td></tr> <tr><td> <dl> <dt>0x00000003</dt> </dl> </td><td> <p>The media resource can be paused.</p> </td></tr> <tr><td> <dl> <dt>0x00000004</dt> </dl> </td><td> <p>Seeking this resource can take a long time. For example, it might download through HTTP.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetResourceCharacteristics']/*"/>	
            <msdn-id>hh447939</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetResourceCharacteristics([Out] RESOURCE_CHARACTERISTICS* pCharacteristics)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetResourceCharacteristics</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetPresentationAttribute(System.Guid,SharpDX.Win32.Variant@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a presentation attribute from the media resource.</p>	
            </summary>	
            <param name="guidMFAttribute"><dd> <p>The attribute to query. For a list of presentation attributes, see Presentation Descriptor Attributes.</p> </dd></param>	
            <param name="vValueRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Win32.Variant"/></strong> that receives the value. The method fills the <strong><see cref="T:SharpDX.Win32.Variant"/></strong> with a copy of the stored value. The caller must free the <strong><see cref="T:SharpDX.Win32.Variant"/></strong> by calling <strong>PropVariantClear</strong>. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetPresentationAttribute']/*"/>	
            <msdn-id>hh447938</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetPresentationAttribute([In] const GUID&amp; guidMFAttribute,[Out] PROPVARIANT* pvValue)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetPresentationAttribute</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetNumberOfStreams(System.Int32@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the number of streams in the media resource.</p>	
            </summary>	
            <param name="dwStreamCountRef"><dd> <p>Receives the number of streams.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetNumberOfStreams']/*"/>	
            <msdn-id>hh447937</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetNumberOfStreams([Out] unsigned int* pdwStreamCount)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetNumberOfStreams</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetStreamAttribute(System.Int32,System.Guid,SharpDX.Win32.Variant@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a stream-level attribute from the media resource.</p>	
            </summary>	
            <param name="dwStreamIndex"><dd> <p>The zero-based index of the stream. To get the number of streams, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineEx.GetNumberOfStreams(System.Int32@)"/></strong>.</p> </dd></param>	
            <param name="guidMFAttribute"><dd> <p>The attribute to query. Possible values are listed in the following topics:</p> <ul> <li> Stream Descriptor Attributes </li> <li> Media Type Attributes </li> </ul> </dd></param>	
            <param name="vValueRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Win32.Variant"/></strong> that receives the value. The method fills the <strong><see cref="T:SharpDX.Win32.Variant"/></strong> with a copy of the stored value. Call <strong>PropVariantClear</strong> to free the memory allocated by the method. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetStreamAttribute']/*"/>	
            <msdn-id>hh447943</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetStreamAttribute([In] unsigned int dwStreamIndex,[In] const GUID&amp; guidMFAttribute,[Out] PROPVARIANT* pvValue)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetStreamAttribute</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetStreamSelection(System.Int32,SharpDX.Bool@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether a stream is selected to play.</p>	
            </summary>	
            <param name="dwStreamIndex"><dd> <p>The zero-based index of the stream. To get the number of streams, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineEx.GetNumberOfStreams(System.Int32@)"/></strong>.</p> </dd></param>	
            <param name="enabledRef"><dd> <p>Receives a Boolean value.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong><strong>TRUE</strong></strong></dt> </dl> </td><td> <p>The stream is selected. During playback, this stream will play.</p> </td></tr> <tr><td><dl> <dt><strong><strong><see cref="F:SharpDX.Result.False"/></strong></strong></dt> </dl> </td><td> <p>The stream is not selected. During playback, this stream will not play.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetStreamSelection']/*"/>	
            <msdn-id>hh447944</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetStreamSelection([In] unsigned int dwStreamIndex,[Out] BOOL* pEnabled)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetStreamSelection</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.SetStreamSelection(System.Int32,SharpDX.Bool)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Selects or deselects a stream for playback. </p>	
            </summary>	
            <param name="dwStreamIndex"><dd> <p>The zero-based index of the stream. To get the number of streams, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineEx.GetNumberOfStreams(System.Int32@)"/></strong>.</p> </dd></param>	
            <param name="enabled"><dd> <p>Specifies whether to select or deselect the stream.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong><strong>TRUE</strong></strong></dt> </dl> </td><td> <p>The stream is selected. During playback, this stream will play.</p> </td></tr> <tr><td><dl> <dt><strong><strong><see cref="F:SharpDX.Result.False"/></strong></strong></dt> </dl> </td><td> <p>The stream is not selected. During playback, this stream will not play.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::SetStreamSelection']/*"/>	
            <msdn-id>hh447959</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::SetStreamSelection([In] unsigned int dwStreamIndex,[In] BOOL Enabled)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::SetStreamSelection</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.ApplyStreamSelections">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::ApplyStreamSelections']/*"/>	
            <unmanaged>HRESULT IMFMediaEngineEx::ApplyStreamSelections()</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::ApplyStreamSelections</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.IsProtected_(SharpDX.Bool@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the media resource contains protected content. </p>	
            </summary>	
            <param name="protectedRef"><dd> <p>Receives the value <strong>TRUE</strong> if the media resource contains protected content, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::IsProtected']/*"/>	
            <msdn-id>hh447950</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::IsProtected([Out] BOOL* pProtected)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::IsProtected</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.InsertVideoEffect(SharpDX.ComObject,SharpDX.Bool)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Inserts a video effect.</p>	
            </summary>	
            <param name="effectRef"><dd> <p>One of the following: </p> <ul> <li>A reference to the <strong><see cref="T:SharpDX.MediaFoundation.Transform"/></strong> interface of a Media Foundation transform (MFT) that implements the video effect.</li> <li>A reference to the <strong><see cref="T:SharpDX.MediaFoundation.Activate"/></strong> interface of an activation object. The activation object must create an MFT for the video effect.</li> </ul> </dd></param>	
            <param name="fOptional"><dd> <p>Specifies whether the effect is optional.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong><strong>TRUE</strong></strong></dt> </dl> </td><td> <p>The effect is optional. If the Media Engine cannot add the effect, it ignores the effect and  continues playback.</p> </td></tr> <tr><td><dl> <dt><strong><strong><see cref="F:SharpDX.Result.False"/></strong></strong></dt> </dl> </td><td> <p>The effect is required. If the Media Engine object cannot add the effect, a playback error occurs.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <returns><p>This method can return one of these values.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>Success.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDREQUEST</strong></dt> </dl> </td><td> <p>The maximum number of video effects was reached.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>The effect is applied when the next media resource is loaded.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::InsertVideoEffect']/*"/>	
            <msdn-id>hh447948</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::InsertVideoEffect([In] IUnknown* pEffect,[In] BOOL fOptional)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::InsertVideoEffect</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.InsertAudioEffect(SharpDX.ComObject,SharpDX.Bool)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Inserts an audio effect.</p>	
            </summary>	
            <param name="effectRef"><dd> <p>One of the following: </p> <ul> <li>A reference to the <strong><see cref="T:SharpDX.MediaFoundation.Transform"/></strong> interface of a Media Foundation transform (MFT) that implements the audio effect.</li> <li>A reference to the <strong><see cref="T:SharpDX.MediaFoundation.Activate"/></strong> interface of an activation object. The activation object must create an MFT for the audio effect.</li> </ul> </dd></param>	
            <param name="fOptional"><dd> <p>Specifies whether the effect is optional.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong><strong>TRUE</strong></strong></dt> </dl> </td><td> <p>The effect is optional. If the Media Engine cannot add the effect, it ignores the effect and  continues playback.</p> </td></tr> <tr><td><dl> <dt><strong><strong><see cref="F:SharpDX.Result.False"/></strong></strong></dt> </dl> </td><td> <p>The effect is required. If the Media Engine object cannot add the effect, a playback error occurs.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <returns><p>This method can return one of these values.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>Success.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDREQUEST</strong></dt> </dl> </td><td> <p>The maximum number of audio effects was reached.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>The effect is applied when the next media resource is loaded.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::InsertAudioEffect']/*"/>	
            <msdn-id>hh447947</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::InsertAudioEffect([In] IUnknown* pEffect,[In] BOOL fOptional)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::InsertAudioEffect</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.RemoveAllEffects">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Removes all audio and effects.</p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> Call this method to remove all of the effects that were added with the <strong>IMFMediaEngineEx::InsertEffect</strong> method. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::RemoveAllEffects']/*"/>	
            <msdn-id>hh447952</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::RemoveAllEffects()</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::RemoveAllEffects</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.SetTimelineMarkerTimer(System.Double)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies a presentation time when the Media Engine will send a marker event.</p>	
            </summary>	
            <param name="timeToFire"><dd> <p>The presentation time for the marker event, in seconds.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>When playback reaches the time specified by <em>timeToFire</em>, the Media Engine sends an <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.TimelineMarker"/></strong> event through the <strong><see cref="!:SharpDX.MediaFoundation.MediaEngineNotify.EventNotify"/></strong> method. Calling this method cancels any previous marker that is still pending. </p><p>If the application seeks past the marker point, the Media Engine cancels the marker and does not send the event.</p><p>During  forward playback, set <em>timeToFire</em> to a value greater than the current playback position. During reverse playback, set <em>timeToFire</em> to a value less than the playback position.</p><p>To cancel a marker, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineEx.CancelTimelineMarkerTimer"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::SetTimelineMarkerTimer']/*"/>	
            <msdn-id>hh447960</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::SetTimelineMarkerTimer([In] double timeToFire)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::SetTimelineMarkerTimer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetTimelineMarkerTimer(System.Double@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the time of the next timeline marker, if any.</p>	
            </summary>	
            <param name="timeToFireRef"><dd> <p>Receives the marker time, in seconds. If no marker is set, this parameter receives the value <strong>NaN</strong>.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetTimelineMarkerTimer']/*"/>	
            <msdn-id>hh447945</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetTimelineMarkerTimer([Out] double* pTimeToFire)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetTimelineMarkerTimer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.CancelTimelineMarkerTimer">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Cancels the next pending timeline marker.</p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>Call this method to cancel the <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineEx.SetTimelineMarkerTimer(System.Double)"/></strong> method.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::CancelTimelineMarkerTimer']/*"/>	
            <msdn-id>hh447929</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::CancelTimelineMarkerTimer()</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::CancelTimelineMarkerTimer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.IsStereo3D_">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the media resource contains stereoscopic 3D video.</p>	
            </summary>	
            <returns><p>Returns <strong>TRUE</strong> if the media resource contains 3D video, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::IsStereo3D']/*"/>	
            <msdn-id>hh447951</msdn-id>	
            <unmanaged>BOOL IMFMediaEngineEx::IsStereo3D()</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::IsStereo3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetStereo3DFramePackingMode(SharpDX.MediaFoundation.MediaEngineS3DPackingMode@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>For stereoscopic 3D video, gets the layout of the two views within a video frame.</p>	
            </summary>	
            <param name="ackModeRef"><dd> <p>Receives a member of the <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineS3DPackingMode"/></strong> enumeration.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetStereo3DFramePackingMode']/*"/>	
            <msdn-id>hh447941</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetStereo3DFramePackingMode([Out] MF_MEDIA_ENGINE_S3D_PACKING_MODE* packMode)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetStereo3DFramePackingMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.SetStereo3DFramePackingMode(SharpDX.MediaFoundation.MediaEngineS3DPackingMode)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>For stereoscopic 3D video, sets the layout of the two views within a video frame.</p>	
            </summary>	
            <param name="packMode"><dd> <p>A member of the <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineS3DPackingMode"/></strong> enumeration that specifies the layout. The two views can be arranged side-by-side, or top-to-bottom.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::SetStereo3DFramePackingMode']/*"/>	
            <msdn-id>hh447957</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::SetStereo3DFramePackingMode([In] MF_MEDIA_ENGINE_S3D_PACKING_MODE packMode)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::SetStereo3DFramePackingMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetStereo3DRenderMode(SharpDX.MediaFoundation.Video3DOutputType@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>For stereoscopic 3D video, queries how the Media Engine renders the 3D video content.</p>	
            </summary>	
            <param name="outputType"><dd> <p>Receives a member of the <strong><see cref="T:SharpDX.MediaFoundation.Video3DOutputType"/></strong> enumeration.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetStereo3DRenderMode']/*"/>	
            <msdn-id>hh447942</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetStereo3DRenderMode([Out] MF3DVideoOutputType* outputType)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetStereo3DRenderMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.SetStereo3DRenderMode(SharpDX.MediaFoundation.Video3DOutputType)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>For stereoscopic 3D video, specifies how the Media Engine renders the 3D video content.</p>	
            </summary>	
            <param name="outputType"><dd> <p>A member of the <strong><see cref="T:SharpDX.MediaFoundation.Video3DOutputType"/></strong> enumeration that specifies the 3D video rendering mode.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::SetStereo3DRenderMode']/*"/>	
            <msdn-id>hh447958</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::SetStereo3DRenderMode([In] MF3DVideoOutputType outputType)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::SetStereo3DRenderMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.EnableWindowlessSwapchainMode(SharpDX.Bool)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Enables or disables windowless swap-chain mode.</p>	
            </summary>	
            <param name="fEnable"><dd> <p>If <strong>TRUE</strong>, windowless swap-chain mode is enabled. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>In windowless swap-chain mode, the Media Engine creates a windowless swap chain and presents video frames to the swap chain. To render the video, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineEx.GetVideoSwapchainHandle(System.IntPtr@)"/></strong> to get a handle to the swap chain, and then associate the handle with a Microsoft DirectComposition visual.  </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::EnableWindowlessSwapchainMode']/*"/>	
            <msdn-id>hh447932</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::EnableWindowlessSwapchainMode([In] BOOL fEnable)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::EnableWindowlessSwapchainMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetVideoSwapchainHandle(System.IntPtr@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets a handle to the windowless swap chain.</p>	
            </summary>	
            <param name="hSwapchainRef"><dd> <p>Receives a handle to the swap chain.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>To enable windowless swap-chain mode, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineEx.EnableWindowlessSwapchainMode(SharpDX.Bool)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetVideoSwapchainHandle']/*"/>	
            <msdn-id>hh447946</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetVideoSwapchainHandle([Out] void** phSwapchain)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetVideoSwapchainHandle</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.EnableHorizontalMirrorMode(SharpDX.Bool)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Enables or disables mirroring of the video.</p>	
            </summary>	
            <param name="fEnable"><dd> <p>If <strong>TRUE</strong>, the video is mirrored horizontally. Otherwise, the video is displayed normally.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::EnableHorizontalMirrorMode']/*"/>	
            <msdn-id>hh447931</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::EnableHorizontalMirrorMode([In] BOOL fEnable)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::EnableHorizontalMirrorMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetAudioStreamCategory(System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="categoryRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetAudioStreamCategory']/*"/>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetAudioStreamCategory([Out] unsigned int* pCategory)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetAudioStreamCategory</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.SetAudioStreamCategory(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="category">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::SetAudioStreamCategory']/*"/>	
            <unmanaged>HRESULT IMFMediaEngineEx::SetAudioStreamCategory([In] unsigned int category)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::SetAudioStreamCategory</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetAudioEndpointRole(System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="roleRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetAudioEndpointRole']/*"/>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetAudioEndpointRole([Out] unsigned int* pRole)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetAudioEndpointRole</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.SetAudioEndpointRole(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="role">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::SetAudioEndpointRole']/*"/>	
            <unmanaged>HRESULT IMFMediaEngineEx::SetAudioEndpointRole([In] unsigned int role)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::SetAudioEndpointRole</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.GetRealTimeMode(SharpDX.Bool@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="fEnabledRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetRealTimeMode']/*"/>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetRealTimeMode([Out] BOOL* pfEnabled)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetRealTimeMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.SetRealTimeMode(SharpDX.Bool)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="fEnable">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::SetRealTimeMode']/*"/>	
            <unmanaged>HRESULT IMFMediaEngineEx::SetRealTimeMode([In] BOOL fEnable)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::SetRealTimeMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.SetCurrentTimeEx(System.Double,SharpDX.MediaFoundation.MediaEngineSeekMode)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="seekTime">No documentation.</param>	
            <param name="seekMode">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::SetCurrentTimeEx']/*"/>	
            <unmanaged>HRESULT IMFMediaEngineEx::SetCurrentTimeEx([In] double seekTime,[In] MF_MEDIA_ENGINE_SEEK_MODE seekMode)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::SetCurrentTimeEx</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineEx.EnableTimeUpdateTimer(SharpDX.Bool)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="fEnableTimer">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::EnableTimeUpdateTimer']/*"/>	
            <unmanaged>HRESULT IMFMediaEngineEx::EnableTimeUpdateTimer([In] BOOL fEnableTimer)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::EnableTimeUpdateTimer</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngineEx.Balance">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the audio balance. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetBalance']/*"/>	
            <msdn-id>hh447934</msdn-id>	
            <unmanaged>GetBalance / SetBalance</unmanaged>	
            <unmanaged-short>GetBalance</unmanaged-short>	
            <unmanaged>double IMFMediaEngineEx::GetBalance()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngineEx.ResourceCharacteristics">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets various flags that describe the media resource.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetResourceCharacteristics']/*"/>	
            <msdn-id>hh447939</msdn-id>	
            <unmanaged>GetResourceCharacteristics</unmanaged>	
            <unmanaged-short>GetResourceCharacteristics</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetResourceCharacteristics([Out] RESOURCE_CHARACTERISTICS* pCharacteristics)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngineEx.NumberOfStreams">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the number of streams in the media resource.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetNumberOfStreams']/*"/>	
            <msdn-id>hh447937</msdn-id>	
            <unmanaged>GetNumberOfStreams</unmanaged>	
            <unmanaged-short>GetNumberOfStreams</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetNumberOfStreams([Out] unsigned int* pdwStreamCount)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngineEx.IsProtected">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the media resource contains protected content. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::IsProtected']/*"/>	
            <msdn-id>hh447950</msdn-id>	
            <unmanaged>IsProtected</unmanaged>	
            <unmanaged-short>IsProtected</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngineEx::IsProtected([Out] BOOL* pProtected)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngineEx.TimelineMarkerTimer">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the time of the next timeline marker, if any.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetTimelineMarkerTimer']/*"/>	
            <msdn-id>hh447945</msdn-id>	
            <unmanaged>GetTimelineMarkerTimer / SetTimelineMarkerTimer</unmanaged>	
            <unmanaged-short>GetTimelineMarkerTimer</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetTimelineMarkerTimer([Out] double* pTimeToFire)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngineEx.IsStereo3D">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the media resource contains stereoscopic 3D video.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::IsStereo3D']/*"/>	
            <msdn-id>hh447951</msdn-id>	
            <unmanaged>IsStereo3D</unmanaged>	
            <unmanaged-short>IsStereo3D</unmanaged-short>	
            <unmanaged>BOOL IMFMediaEngineEx::IsStereo3D()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngineEx.Stereo3DFramePackingMode">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>For stereoscopic 3D video, gets the layout of the two views within a video frame.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetStereo3DFramePackingMode']/*"/>	
            <msdn-id>hh447941</msdn-id>	
            <unmanaged>GetStereo3DFramePackingMode / SetStereo3DFramePackingMode</unmanaged>	
            <unmanaged-short>GetStereo3DFramePackingMode</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetStereo3DFramePackingMode([Out] MF_MEDIA_ENGINE_S3D_PACKING_MODE* packMode)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngineEx.Stereo3DRenderMode">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>For stereoscopic 3D video, queries how the Media Engine renders the 3D video content.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetStereo3DRenderMode']/*"/>	
            <msdn-id>hh447942</msdn-id>	
            <unmanaged>GetStereo3DRenderMode / SetStereo3DRenderMode</unmanaged>	
            <unmanaged-short>GetStereo3DRenderMode</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetStereo3DRenderMode([Out] MF3DVideoOutputType* outputType)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngineEx.VideoSwapchainHandle">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets a handle to the windowless swap chain.</p>	
            </summary>	
            <remarks>	
            <p>To enable windowless swap-chain mode, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineEx.EnableWindowlessSwapchainMode(SharpDX.Bool)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetVideoSwapchainHandle']/*"/>	
            <msdn-id>hh447946</msdn-id>	
            <unmanaged>GetVideoSwapchainHandle</unmanaged>	
            <unmanaged-short>GetVideoSwapchainHandle</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetVideoSwapchainHandle([Out] void** phSwapchain)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngineEx.AudioStreamCategory">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetAudioStreamCategory']/*"/>	
            <unmanaged>GetAudioStreamCategory / SetAudioStreamCategory</unmanaged>	
            <unmanaged-short>GetAudioStreamCategory</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetAudioStreamCategory([Out] unsigned int* pCategory)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngineEx.AudioEndpointRole">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetAudioEndpointRole']/*"/>	
            <unmanaged>GetAudioEndpointRole / SetAudioEndpointRole</unmanaged>	
            <unmanaged-short>GetAudioEndpointRole</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetAudioEndpointRole([Out] unsigned int* pRole)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngineEx.RealTimeMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineEx::GetRealTimeMode']/*"/>	
            <unmanaged>GetRealTimeMode / SetRealTimeMode</unmanaged>	
            <unmanaged-short>GetRealTimeMode</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetRealTimeMode([Out] BOOL* pfEnabled)</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineNotifyShadow">
            <summary>
            Internal MediaEngineNotify Callback
            </summary>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineNotifyShadow.ToIntPtr(SharpDX.MediaFoundation.MediaEngineNotify)">
            <summary>
            Return a pointer to the unamanged version of this callback.
            </summary>
            <param name="callback">The callback.</param>
            <returns>A pointer to a shadow c++ callback</returns>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineNotifyShadow.MediaEngineNotifyVtbl.EventNotifyDelegate">
            <unmanaged>HRESULT IMFMediaEngineNotify::EventNotify([In] unsigned int event,[In] ULONG_PTR param1,[In] unsigned int param2)</unmanaged>	
        </member>
        <member name="T:SharpDX.MediaFoundation.AttributeSerializeOptions">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> </p><p>Defines flags for serializing and deserializing attribute stores.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTE_SERIALIZE_OPTIONS']/*"/>	
            <msdn-id>ms704675</msdn-id>	
            <unmanaged>MF_ATTRIBUTE_SERIALIZE_OPTIONS</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTE_SERIALIZE_OPTIONS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AttributeSerializeOptions.UnknownByref">
            <summary>	
            <dd> <p>If this flag is set, <strong><see cref="T:SharpDX.ComObject"/></strong> references in the attribute store are marshaled to and from the stream. If this flag is absent, <strong><see cref="T:SharpDX.ComObject"/></strong> references in the attribute store are not marshaled or serialized.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTE_SERIALIZE_UNKNOWN_BYREF']/*"/>	
            <msdn-id>ms704675</msdn-id>	
            <unmanaged>MF_ATTRIBUTE_SERIALIZE_UNKNOWN_BYREF</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTE_SERIALIZE_UNKNOWN_BYREF</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.AttributesMatchType">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Specifies how to compare the attributes on two objects.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTES_MATCH_TYPE']/*"/>	
            <msdn-id>ms703793</msdn-id>	
            <unmanaged>MF_ATTRIBUTES_MATCH_TYPE</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTES_MATCH_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AttributesMatchType.OurItems">
            <summary>	
            <dd> <p>Check whether all the attributes in <em>pThis</em> exist in <em>pTheirs</em> and have the same data, where <em>pThis</em> is the object whose <strong>Compare</strong> method is being called and <em>pTheirs</em> is the object given in the <em>pTheirs</em> parameter.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTES_MATCH_OUR_ITEMS']/*"/>	
            <msdn-id>ms703793</msdn-id>	
            <unmanaged>MF_ATTRIBUTES_MATCH_OUR_ITEMS</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTES_MATCH_OUR_ITEMS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AttributesMatchType.TheirItems">
            <summary>	
            <dd> <p>Check whether all the attributes in <em>pTheirs</em> exist in <em>pThis</em> and have the same data, where <em>pThis</em> is the object whose <strong>Compare</strong> method is being called and <em>pTheirs</em> is the object given in the <em>pTheirs</em> parameter.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTES_MATCH_THEIR_ITEMS']/*"/>	
            <msdn-id>ms703793</msdn-id>	
            <unmanaged>MF_ATTRIBUTES_MATCH_THEIR_ITEMS</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTES_MATCH_THEIR_ITEMS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AttributesMatchType.AllItems">
            <summary>	
            <dd> <p>Check whether both objects have identical attributes with the same data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTES_MATCH_ALL_ITEMS']/*"/>	
            <msdn-id>ms703793</msdn-id>	
            <unmanaged>MF_ATTRIBUTES_MATCH_ALL_ITEMS</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTES_MATCH_ALL_ITEMS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AttributesMatchType.Intersection">
            <summary>	
            <dd> <p>Check whether the attributes that exist in both objects have the same data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTES_MATCH_INTERSECTION']/*"/>	
            <msdn-id>ms703793</msdn-id>	
            <unmanaged>MF_ATTRIBUTES_MATCH_INTERSECTION</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTES_MATCH_INTERSECTION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AttributesMatchType.Smaller">
            <summary>	
            <dd> <p>Find the object with the fewest number of attributes, and check if those attributes exist in the other object and have the same data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTES_MATCH_SMALLER']/*"/>	
            <msdn-id>ms703793</msdn-id>	
            <unmanaged>MF_ATTRIBUTES_MATCH_SMALLER</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTES_MATCH_SMALLER</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.AttributeType">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Defines the data type for a key/value pair.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTE_TYPE']/*"/>	
            <msdn-id>ms694854</msdn-id>	
            <unmanaged>MF_ATTRIBUTE_TYPE</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTE_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AttributeType.UInt32">
            <summary>	
            <dd> <p>Unsigned 32-bit integer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTE_UINT32']/*"/>	
            <msdn-id>ms694854</msdn-id>	
            <unmanaged>MF_ATTRIBUTE_UINT32</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTE_UINT32</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AttributeType.UInt64">
            <summary>	
            <dd> <p>Unsigned 64-bit integer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTE_UINT64']/*"/>	
            <msdn-id>ms694854</msdn-id>	
            <unmanaged>MF_ATTRIBUTE_UINT64</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTE_UINT64</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AttributeType.Double">
            <summary>	
            <dd> <p>Floating-point number.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTE_DOUBLE']/*"/>	
            <msdn-id>ms694854</msdn-id>	
            <unmanaged>MF_ATTRIBUTE_DOUBLE</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTE_DOUBLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AttributeType.Guid">
            <summary>	
            <dd> <p><strong><see cref="T:System.Guid"/></strong> value.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTE_GUID']/*"/>	
            <msdn-id>ms694854</msdn-id>	
            <unmanaged>MF_ATTRIBUTE_GUID</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTE_GUID</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AttributeType.String">
            <summary>	
            <dd> <p><c>null</c>-terminated wide-character string.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTE_STRING']/*"/>	
            <msdn-id>ms694854</msdn-id>	
            <unmanaged>MF_ATTRIBUTE_STRING</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTE_STRING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AttributeType.Blob">
            <summary>	
            <dd> <p>Byte array.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTE_BLOB']/*"/>	
            <msdn-id>ms694854</msdn-id>	
            <unmanaged>MF_ATTRIBUTE_BLOB</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTE_BLOB</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AttributeType.IUnknown">
            <summary>	
            <dd> <p><strong><see cref="T:SharpDX.ComObject"/></strong> reference.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_ATTRIBUTE_IUNKNOWN']/*"/>	
            <msdn-id>ms694854</msdn-id>	
            <unmanaged>MF_ATTRIBUTE_IUNKNOWN</unmanaged>	
            <unmanaged-short>MF_ATTRIBUTE_IUNKNOWN</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.Buffer2DLockFlags">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies how the credential manager should obtain user credentials. </p>	
            </summary>	
            <remarks>	
            <p>The application implements the credential manager, which must expose the <strong>IMFNetCredentialManager</strong> interface. If the <strong>REQUIRE_PROMPT</strong> flag is set, the credential manager should prompt the user for his or her name and password.</p><p>The credential cache object sets the <strong>REQUIRE_PROMPT</strong> flag if the cache does not yet contain valid credentials. It also sets this flag if the credentials will be sent as plain text, unless the credential manager previously set the <strong>MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT</strong> option. (See <strong>IMFNetCredentialCache::SetUserOptions</strong>.)</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF2DBuffer_LockFlags']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MF2DBuffer_LockFlags</unmanaged>	
            <unmanaged-short>MF2DBuffer_LockFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Buffer2DLockFlags.LockTypeMask">
            <summary>	
            <dd> <p> The credential manager should prompt the user to provide the credentials. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF2DBuffer_LockFlags_LockTypeMask']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MF2DBuffer_LockFlags_LockTypeMask</unmanaged>	
            <unmanaged-short>MF2DBuffer_LockFlags_LockTypeMask</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Buffer2DLockFlags.Read">
            <summary>	
            <dd> <p> </p><p><strong>Note</strong>??Requires Windows?7 or later.</p> <p>The credentials are saved to persistent storage. This flag acts as a hint for the application's UI. If the application prompts the user for credentials, the UI can indicate that the credentials have already been saved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF2DBuffer_LockFlags_Read']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MF2DBuffer_LockFlags_Read</unmanaged>	
            <unmanaged-short>MF2DBuffer_LockFlags_Read</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Buffer2DLockFlags.Write">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF2DBuffer_LockFlags_Write']/*"/>	
            <unmanaged>MF2DBuffer_LockFlags_Write</unmanaged>	
            <unmanaged-short>MF2DBuffer_LockFlags_Write</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Buffer2DLockFlags.ReadWrite">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF2DBuffer_LockFlags_ReadWrite']/*"/>	
            <unmanaged>MF2DBuffer_LockFlags_ReadWrite</unmanaged>	
            <unmanaged-short>MF2DBuffer_LockFlags_ReadWrite</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.ByteStreamSeekOrigin">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Specifies the origin for a seek request.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFBYTESTREAM_SEEK_ORIGIN']/*"/>	
            <msdn-id>ms702091</msdn-id>	
            <unmanaged>MFBYTESTREAM_SEEK_ORIGIN</unmanaged>	
            <unmanaged-short>MFBYTESTREAM_SEEK_ORIGIN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamSeekOrigin.MsoBegin">
            <summary>	
            <dd> <p>The seek position is specified relative to the start of the stream.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='msoBegin']/*"/>	
            <msdn-id>ms702091</msdn-id>	
            <unmanaged>msoBegin</unmanaged>	
            <unmanaged-short>msoBegin</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamSeekOrigin.MsoCurrent">
            <summary>	
            <dd> <p>The seek position is specified relative to the current read/write position in the stream.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='msoCurrent']/*"/>	
            <msdn-id>ms702091</msdn-id>	
            <unmanaged>msoCurrent</unmanaged>	
            <unmanaged-short>msoCurrent</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.DmoInputDataBufferFlags">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_DMO_INPUT_DATA_BUFFER_FLAGS']/*"/>	
            <unmanaged>_DMO_INPUT_DATA_BUFFER_FLAGS</unmanaged>	
            <unmanaged-short>_DMO_INPUT_DATA_BUFFER_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoInputDataBufferFlags.DmoInputDataBufferFSyncpoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_INPUT_DATA_BUFFERF_SYNCPOINT']/*"/>	
            <unmanaged>DMO_INPUT_DATA_BUFFERF_SYNCPOINT</unmanaged>	
            <unmanaged-short>DMO_INPUT_DATA_BUFFERF_SYNCPOINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoInputDataBufferFlags.DmoInputDataBufferFTime">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_INPUT_DATA_BUFFERF_TIME']/*"/>	
            <unmanaged>DMO_INPUT_DATA_BUFFERF_TIME</unmanaged>	
            <unmanaged-short>DMO_INPUT_DATA_BUFFERF_TIME</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoInputDataBufferFlags.DmoInputDataBufferFTimelength">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_INPUT_DATA_BUFFERF_TIMELENGTH']/*"/>	
            <unmanaged>DMO_INPUT_DATA_BUFFERF_TIMELENGTH</unmanaged>	
            <unmanaged-short>DMO_INPUT_DATA_BUFFERF_TIMELENGTH</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoInputDataBufferFlags.DmoInputDataBufferFDiscontinuity">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_INPUT_DATA_BUFFERF_DISCONTINUITY']/*"/>	
            <unmanaged>DMO_INPUT_DATA_BUFFERF_DISCONTINUITY</unmanaged>	
            <unmanaged-short>DMO_INPUT_DATA_BUFFERF_DISCONTINUITY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoInputDataBufferFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.DmoInputStatusFlags">
            <summary>	
            <p>Media Foundation transforms (MFTs) are an evolution of the transform model first introduced with DirectX Media Objects (DMOs). This topic summarizes the main ways in which MFTs differ from DMOs. Read this topic if you are already familiar with the DMO interfaces, or if you want to convert an existing DMO into an MFT.</p><p>This topic contains the following sections:</p><p> </p><ul> <li>Number</li> <li>Format</li> <li>Streaming<ul> <li>Allocating Resources</li> <li>Processing Data</li> <li>Flushing</li> <li>Stream Discontinuities</li> </ul> </li> <li>Miscellaneous</li> <li>Flags<ul> <li>ProcessInput Flags</li> <li>ProcessOutput Flags</li> <li>GetInputStatus Flags</li> <li>GetOutputStatus Flags</li> <li>GetInputStreamInfo Flags</li> <li>GetOutputStreamInfo Flags</li> <li>SetInputType/SetOutputType Flags</li> </ul> </li> <li>Error</li> <li>Creating</li> <li>Related</li> </ul>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_DMO_INPUT_STATUS_FLAGS']/*"/>	
            <msdn-id>bb250374</msdn-id>	
            <unmanaged>_DMO_INPUT_STATUS_FLAGS</unmanaged>	
            <unmanaged-short>_DMO_INPUT_STATUS_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoInputStatusFlags.DmoInputStatusfAcceptData">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_INPUT_STATUSF_ACCEPT_DATA']/*"/>	
            <unmanaged>DMO_INPUT_STATUSF_ACCEPT_DATA</unmanaged>	
            <unmanaged-short>DMO_INPUT_STATUSF_ACCEPT_DATA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoInputStatusFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.DmoInputStreamInformationFlags">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_DMO_INPUT_STREAM_INFO_FLAGS']/*"/>	
            <unmanaged>_DMO_INPUT_STREAM_INFO_FLAGS</unmanaged>	
            <unmanaged-short>_DMO_INPUT_STREAM_INFO_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoInputStreamInformationFlags.DmoInputStreamFWholeSamples">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_INPUT_STREAMF_WHOLE_SAMPLES']/*"/>	
            <unmanaged>DMO_INPUT_STREAMF_WHOLE_SAMPLES</unmanaged>	
            <unmanaged-short>DMO_INPUT_STREAMF_WHOLE_SAMPLES</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoInputStreamInformationFlags.DmoInputStreamFSingleSamplePerBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_INPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER']/*"/>	
            <unmanaged>DMO_INPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER</unmanaged>	
            <unmanaged-short>DMO_INPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoInputStreamInformationFlags.DmoInputStreamFFixedSampleSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_INPUT_STREAMF_FIXED_SAMPLE_SIZE']/*"/>	
            <unmanaged>DMO_INPUT_STREAMF_FIXED_SAMPLE_SIZE</unmanaged>	
            <unmanaged-short>DMO_INPUT_STREAMF_FIXED_SAMPLE_SIZE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoInputStreamInformationFlags.DmoInputStreamFHoldsBuffers">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_INPUT_STREAMF_HOLDS_BUFFERS']/*"/>	
            <unmanaged>DMO_INPUT_STREAMF_HOLDS_BUFFERS</unmanaged>	
            <unmanaged-short>DMO_INPUT_STREAMF_HOLDS_BUFFERS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoInputStreamInformationFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.DmoOutputDataBufferFlags">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_DMO_OUTPUT_DATA_BUFFER_FLAGS']/*"/>	
            <unmanaged>_DMO_OUTPUT_DATA_BUFFER_FLAGS</unmanaged>	
            <unmanaged-short>_DMO_OUTPUT_DATA_BUFFER_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoOutputDataBufferFlags.DmoOutputDataBufferFSyncpoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_OUTPUT_DATA_BUFFERF_SYNCPOINT']/*"/>	
            <unmanaged>DMO_OUTPUT_DATA_BUFFERF_SYNCPOINT</unmanaged>	
            <unmanaged-short>DMO_OUTPUT_DATA_BUFFERF_SYNCPOINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoOutputDataBufferFlags.DmoOutputDataBufferFTime">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_OUTPUT_DATA_BUFFERF_TIME']/*"/>	
            <unmanaged>DMO_OUTPUT_DATA_BUFFERF_TIME</unmanaged>	
            <unmanaged-short>DMO_OUTPUT_DATA_BUFFERF_TIME</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoOutputDataBufferFlags.DmoOutputDataBufferFTimelength">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_OUTPUT_DATA_BUFFERF_TIMELENGTH']/*"/>	
            <unmanaged>DMO_OUTPUT_DATA_BUFFERF_TIMELENGTH</unmanaged>	
            <unmanaged-short>DMO_OUTPUT_DATA_BUFFERF_TIMELENGTH</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoOutputDataBufferFlags.DmoOutputDataBufferFDiscontinuity">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_OUTPUT_DATA_BUFFERF_DISCONTINUITY']/*"/>	
            <unmanaged>DMO_OUTPUT_DATA_BUFFERF_DISCONTINUITY</unmanaged>	
            <unmanaged-short>DMO_OUTPUT_DATA_BUFFERF_DISCONTINUITY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoOutputDataBufferFlags.DmoOutputDataBufferFIncomplete">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_OUTPUT_DATA_BUFFERF_INCOMPLETE']/*"/>	
            <unmanaged>DMO_OUTPUT_DATA_BUFFERF_INCOMPLETE</unmanaged>	
            <unmanaged-short>DMO_OUTPUT_DATA_BUFFERF_INCOMPLETE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoOutputDataBufferFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.DmoOutputStreamInformationFlags">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_DMO_OUTPUT_STREAM_INFO_FLAGS']/*"/>	
            <unmanaged>_DMO_OUTPUT_STREAM_INFO_FLAGS</unmanaged>	
            <unmanaged-short>_DMO_OUTPUT_STREAM_INFO_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoOutputStreamInformationFlags.DmoOutputStreamFWholeSamples">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_OUTPUT_STREAMF_WHOLE_SAMPLES']/*"/>	
            <unmanaged>DMO_OUTPUT_STREAMF_WHOLE_SAMPLES</unmanaged>	
            <unmanaged-short>DMO_OUTPUT_STREAMF_WHOLE_SAMPLES</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoOutputStreamInformationFlags.DmoOutputStreamFSingleSamplePerBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_OUTPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER']/*"/>	
            <unmanaged>DMO_OUTPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER</unmanaged>	
            <unmanaged-short>DMO_OUTPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoOutputStreamInformationFlags.DmoOutputStreamFFixedSampleSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_OUTPUT_STREAMF_FIXED_SAMPLE_SIZE']/*"/>	
            <unmanaged>DMO_OUTPUT_STREAMF_FIXED_SAMPLE_SIZE</unmanaged>	
            <unmanaged-short>DMO_OUTPUT_STREAMF_FIXED_SAMPLE_SIZE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoOutputStreamInformationFlags.DmoOutputStreamFDiscardable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_OUTPUT_STREAMF_DISCARDABLE']/*"/>	
            <unmanaged>DMO_OUTPUT_STREAMF_DISCARDABLE</unmanaged>	
            <unmanaged-short>DMO_OUTPUT_STREAMF_DISCARDABLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoOutputStreamInformationFlags.DmoOutputStreamFOptional">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_OUTPUT_STREAMF_OPTIONAL']/*"/>	
            <unmanaged>DMO_OUTPUT_STREAMF_OPTIONAL</unmanaged>	
            <unmanaged-short>DMO_OUTPUT_STREAMF_OPTIONAL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoOutputStreamInformationFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.DmoProcessOutputFlags">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_DMO_PROCESS_OUTPUT_FLAGS']/*"/>	
            <unmanaged>_DMO_PROCESS_OUTPUT_FLAGS</unmanaged>	
            <unmanaged-short>_DMO_PROCESS_OUTPUT_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoProcessOutputFlags.DmoProcessOutputDiscardWhenNoBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER']/*"/>	
            <unmanaged>DMO_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER</unmanaged>	
            <unmanaged-short>DMO_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoProcessOutputFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.DmoSetTypeFlags">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_DMO_SET_TYPE_FLAGS']/*"/>	
            <unmanaged>_DMO_SET_TYPE_FLAGS</unmanaged>	
            <unmanaged-short>_DMO_SET_TYPE_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoSetTypeFlags.DmoSetTypefTestOnly">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_SET_TYPEF_TEST_ONLY']/*"/>	
            <unmanaged>DMO_SET_TYPEF_TEST_ONLY</unmanaged>	
            <unmanaged-short>DMO_SET_TYPEF_TEST_ONLY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoSetTypeFlags.DmoSetTypefClear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_SET_TYPEF_CLEAR']/*"/>	
            <unmanaged>DMO_SET_TYPEF_CLEAR</unmanaged>	
            <unmanaged-short>DMO_SET_TYPEF_CLEAR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoSetTypeFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineCanPlay">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries how likely it is that the Media Engine can play a specified type of media resource.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>canPlayType</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p><p>The <strong>canPlayType</strong> attribute defines the following values.</p><table> <tr><th>Value</th><th>Description</th></tr> <tr><td>"" (empty string)</td><td>The user-agent cannot play the resource, or the resource type is "application/octet-stream".</td></tr> <tr><td>"probably"</td><td>The user-agent probably can play the resource.</td></tr> <tr><td>"maybe"</td><td>Neither of the previous values applies.</td></tr> </table><p>?</p><p>The value "probably" is used because a MIME type for a media resource is generally not a complete description of the resource. For example, "video/mp4" specifies an MP4 file with video, but does not describe the codec. Even with the optional codecs parameter, the MIME type omits some information, such as the actual coded bit rate. Therefore, it is usually impossible to be certain that playback is possible until the actual media resource is opened.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_CANPLAY']/*"/>	
            <msdn-id>hh447978</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_CANPLAY</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_CANPLAY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineCanPlay.NotSupported">
            <summary>	
            <dd> <p>A string that contains a MIME type with an optional codecs parameter, as defined in RFC 4281.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_CANPLAY_NOT_SUPPORTED']/*"/>	
            <msdn-id>hh447978</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_CANPLAY_NOT_SUPPORTED</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_CANPLAY_NOT_SUPPORTED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineCanPlay.Maybe">
            <summary>	
            <dd> <p>Receives an <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineCanPlay"/></strong> enumeration value.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_CANPLAY_MAYBE']/*"/>	
            <msdn-id>hh447978</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_CANPLAY_MAYBE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_CANPLAY_MAYBE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineCanPlay.Probably">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_CANPLAY_PROBABLY']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_CANPLAY_PROBABLY</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_CANPLAY_PROBABLY</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineCreateFlags">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains flags for the <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineClassFactory.CreateInstance(SharpDX.MediaFoundation.MediaEngineCreateFlags,SharpDX.MediaFoundation.MediaAttributes,SharpDX.MediaFoundation.MediaEngine)"/></strong> method.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_CREATEFLAGS']/*"/>	
            <msdn-id>hh162839</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_CREATEFLAGS</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_CREATEFLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineCreateFlags.AudioOnly">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_AUDIOONLY']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_AUDIOONLY</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_AUDIOONLY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineCreateFlags.WaitForStableState">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_WAITFORSTABLE_STATE']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_WAITFORSTABLE_STATE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_WAITFORSTABLE_STATE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineCreateFlags.ForceMute">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_FORCEMUTE']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_FORCEMUTE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_FORCEMUTE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineCreateFlags.RealTimeMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_REAL_TIME_MODE']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_REAL_TIME_MODE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_REAL_TIME_MODE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineCreateFlags.DisableLocalPlugins">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_DISABLE_LOCAL_PLUGINS']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_DISABLE_LOCAL_PLUGINS</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_DISABLE_LOCAL_PLUGINS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineCreateFlags.CreateFlagsMask">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_CREATEFLAGS_MASK']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_CREATEFLAGS_MASK</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_CREATEFLAGS_MASK</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineCreateFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineErr">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Defines error status codes for the Media Engine.</p>	
            </summary>	
            <remarks>	
            <p>The values greater than zero correspond to error codes defined for the <strong>MediaError</strong> object  in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_ERR']/*"/>	
            <msdn-id>hh162841</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_ERR</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_ERR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineErr.Noerror">
            <summary>	
            <dd> <p>No error.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_ERR_NOERROR']/*"/>	
            <msdn-id>hh162841</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_ERR_NOERROR</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_ERR_NOERROR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineErr.Aborted">
            <summary>	
            <dd> <p>The process of fetching the media resource was stopped at the user's request. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_ERR_ABORTED']/*"/>	
            <msdn-id>hh162841</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_ERR_ABORTED</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_ERR_ABORTED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineErr.Network">
            <summary>	
            <dd> <p>A network error occurred while fetching the media resource. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_ERR_NETWORK']/*"/>	
            <msdn-id>hh162841</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_ERR_NETWORK</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_ERR_NETWORK</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineErr.Decode">
            <summary>	
            <dd> <p>An error occurred while decoding the media resource. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_ERR_DECODE']/*"/>	
            <msdn-id>hh162841</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_ERR_DECODE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_ERR_DECODE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineErr.SourceNotSupported">
            <summary>	
            <dd> <p>The media resource is not supported. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_ERR_SRC_NOT_SUPPORTED']/*"/>	
            <msdn-id>hh162841</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_ERR_SRC_NOT_SUPPORTED</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_ERR_SRC_NOT_SUPPORTED</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineEvent">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Defines event codes for the Media Engine. </p>	
            </summary>	
            <remarks>	
            <p>The application receives Media Engine events through the <strong><see cref="!:SharpDX.MediaFoundation.MediaEngineNotify.EventNotify"/></strong> method. The <strong>EventNotify</strong> method includes two event parameters, <em>param1</em> and <em>param2</em>. The meaning of the parameters depends on the event code. If the event description does not list any parameters, ignore the values of <em>param1</em> and <em>param2</em>.</p><p>Values below 1000 correspond to events defined in HTML 5 for media elements.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadStart">
            <summary>	
            <dd> <p>The Media Engine has started to load the source. See <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Load"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_LOADSTART']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_LOADSTART</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_LOADSTART</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.Progress">
            <summary>	
            <dd> <p>The Media Engine is loading the source.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_PROGRESS']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_PROGRESS</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_PROGRESS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.Suspend">
            <summary>	
            <dd> <p>The Media Engine has suspended a load operation.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_SUSPEND']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_SUSPEND</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_SUSPEND</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.Abort">
            <summary>	
            <dd> <p>The Media Engine cancelled a load operation that was in progress. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_ABORT']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_ABORT</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_ABORT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.Error">
            <summary>	
            <dd> <p>An error occurred.</p> <table> <tr><th>Event Parameter</th><th>Description</th></tr> <tr><td><em>param1</em></td><td>A member of the <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineErr"/></strong> enumeration.</td></tr> <tr><td><em>param2</em></td><td>An <strong><see cref="T:SharpDX.Result"/></strong> error code, or zero.</td></tr> </table> <p>?</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_ERROR']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_ERROR</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_ERROR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.Emptied">
            <summary>	
            <dd> <p>The Media Engine has switched to the <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineNetwork.Empty"/></strong> state. This can occur when the <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Load"/></strong> method is called, or if an error occurs during the <strong>Load</strong> method. See <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.GetNetworkState"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_EMPTIED']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_EMPTIED</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_EMPTIED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.Stalled">
            <summary>	
            <dd> <p>The <strong>Load</strong> algorithm is stalled, waiting for data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_STALLED']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_STALLED</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_STALLED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.Play">
            <summary>	
            <dd> <p>The Media Engine is switching to the playing state. See <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Play"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_PLAY']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_PLAY</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_PLAY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.Pause">
            <summary>	
            <dd> <p>The media engine has paused. See <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Pause"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_PAUSE']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_PAUSE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_PAUSE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadedMetadata">
            <summary>	
            <dd> <p>The Media Engine has loaded enough source data to determine the duration and dimensions  of the source.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_LOADEDMETADATA']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_LOADEDMETADATA</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_LOADEDMETADATA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.LoadedData">
            <summary>	
            <dd> <p>The Media Engine has loaded enough data to render some content (for example, a video frame).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_LOADEDDATA']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_LOADEDDATA</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_LOADEDDATA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.Waiting">
            <summary>	
            <dd> <p>Playback has stopped because the next frame is not available.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_WAITING']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_WAITING</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_WAITING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.Playing">
            <summary>	
            <dd> <p>Playback has started. See <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.Play"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_PLAYING']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_PLAYING</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_PLAYING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.CanPlay">
            <summary>	
            <dd> <p>Playback can start, but the Media Engine might need to stop to buffer more data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_CANPLAY']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_CANPLAY</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_CANPLAY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.CanPlayThrough">
            <summary>	
            <dd> <p>The Media Engine can probably play through to the end of the resource, without stopping to buffer data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_CANPLAYTHROUGH']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_CANPLAYTHROUGH</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_CANPLAYTHROUGH</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.Seeking">
            <summary>	
            <dd> <p>The Media Engine has started seeking to a new playback position. See <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetCurrentTime(System.Double)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_SEEKING']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_SEEKING</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_SEEKING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.Seeked">
            <summary>	
            <dd> <p>The Media Engine has seeked to a new playback position. See <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetCurrentTime(System.Double)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_SEEKED']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_SEEKED</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_SEEKED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.TimeUpdate">
            <summary>	
            <dd> <p>The playback position has changed. See <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.GetCurrentTime"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_TIMEUPDATE']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_TIMEUPDATE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_TIMEUPDATE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.Ended">
            <summary>	
            <dd> <p>Playback has reached the end of the source. This event is not sent if the <strong>GetLoop</strong>is <strong>TRUE</strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_ENDED']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_ENDED</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_ENDED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.RateChange">
            <summary>	
            <dd> <p>The playback rate has changed. See <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetPlaybackRate(System.Double)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_RATECHANGE']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_RATECHANGE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_RATECHANGE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.DurationChange">
            <summary>	
            <dd> <p>The duration of the media source has changed. See <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.GetDuration"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_DURATIONCHANGE']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_DURATIONCHANGE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_DURATIONCHANGE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.VolumeChange">
            <summary>	
            <dd> <p>The audio volume changed. See <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetVolume(System.Double)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_VOLUMECHANGE']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_VOLUMECHANGE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_VOLUMECHANGE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.FormatChange">
            <summary>	
            <dd> <p>The output format of the media source has changed.</p> <table> <tr><th>Event Parameter</th><th>Description</th></tr> <tr><td><em>param1</em></td><td>Zero if the video format changed, 1 if the audio format changed.</td></tr> <tr><td><em>param2</em></td><td>Zero.</td></tr> </table> <p>?</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_FORMATCHANGE']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_FORMATCHANGE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_FORMATCHANGE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.PurgeQueuedEvents">
            <summary>	
            <dd> <p>The Media Engine flushed any pending events from its 	queue.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_PURGEQUEUEDEVENTS']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_PURGEQUEUEDEVENTS</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_PURGEQUEUEDEVENTS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.TimelineMarker">
            <summary>	
            <dd> <p>The playback position reached a timeline marker. See <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineEx.SetTimelineMarkerTimer(System.Double)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_TIMELINE_MARKER']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_TIMELINE_MARKER</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_TIMELINE_MARKER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.BalanceChange">
            <summary>	
            <dd> <p>The audio balance changed. See <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineEx.SetBalance(System.Double)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_BALANCECHANGE']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_BALANCECHANGE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_BALANCECHANGE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.DownloadComplete">
            <summary>	
            <dd> <p>The Media Engine has finished downloading the source data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_DOWNLOADCOMPLETE']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_DOWNLOADCOMPLETE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_DOWNLOADCOMPLETE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.BufferingStarted">
            <summary>	
            <dd> <p>The media source has started to buffer data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_BUFFERINGSTARTED']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_BUFFERINGSTARTED</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_BUFFERINGSTARTED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.BufferingEnded">
            <summary>	
            <dd> <p>The media source has stopped buffering data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_BUFFERINGENDED']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_BUFFERINGENDED</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_BUFFERINGENDED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.FrameStepCompleted">
            <summary>	
            <dd> <p>The <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineEx.FrameStep(SharpDX.Bool)"/></strong> method completed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_FRAMESTEPCOMPLETED']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_FRAMESTEPCOMPLETED</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_FRAMESTEPCOMPLETED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.NotifyStableState">
            <summary>	
            <dd> <p>The Media Engine's <strong>Load</strong> algorithm is waiting to start.</p> <table> <tr><th>Event Parameter</th><th>Description</th></tr> <tr><td><em>param1</em></td><td>A handle to a waitable event, of type <strong>HANDLE</strong>.</td></tr> <tr><td><em>param2</em></td><td>Zero.</td></tr> </table> <p>?</p> <p>If Media Engine is created with the <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineCreateFlags.WaitForStableState"/></strong> flag, the Media Engine sends the <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineEvent.NotifyStableState"/></strong> event at the start of the <strong>Load</strong> algorithm. The <em>param1</em> parameter is a handle to a waitable event. The <strong>Load</strong> thread waits for the application to signal the event by calling <strong>SetEvent</strong>.</p> <p>If the Media Engine is not created with the <strong><see cref="F:SharpDX.MediaFoundation.MediaEngineCreateFlags.WaitForStableState"/></strong>, it does not send this event, and the <strong>Load</strong> thread does not wait to be signalled.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_NOTIFYSTABLESTATE']/*"/>	
            <msdn-id>hh162842</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_NOTIFYSTABLESTATE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_NOTIFYSTABLESTATE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineEvent.FirstFrameReady">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_EVENT_FIRSTFRAMEREADY']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_EVENT_FIRSTFRAMEREADY</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_EVENT_FIRSTFRAMEREADY</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineNetwork">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the current network state of the media engine.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>networkState</strong> attribute of the <strong>HTMLMediaElement</strong> interface in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_NETWORK']/*"/>	
            <msdn-id>hh447989</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_NETWORK</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_NETWORK</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineNetwork.Empty">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_NETWORK_EMPTY']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_NETWORK_EMPTY</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_NETWORK_EMPTY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineNetwork.Idle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_NETWORK_IDLE']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_NETWORK_IDLE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_NETWORK_IDLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineNetwork.Loading">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_NETWORK_LOADING']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_NETWORK_LOADING</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_NETWORK_LOADING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineNetwork.NoSource">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_NETWORK_NO_SOURCE']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_NETWORK_NO_SOURCE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_NETWORK_NO_SOURCE</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEnginePreload">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p>Describes the conversion matrices between Y'PbPr (component video) and studio R'G'B'. These flags are used in the <strong>DXVA2_ExtendedFormat</strong> structure.</p>	
            </summary>	
            <remarks>	
            <p>The transfer matrices are defined as follows.</p><p>BT.709 transfer matrices:</p><code>Y'        0.212600    0.715200    0.072200       R' 	
            Pb   =   -0.114572   -0.385428    0.500000   x   G' 	
            Pr        0.500000   -0.454153   -0.045847       B'  R'        1.000000    0.000000    1.574800       Y' 	
            G'   =    1.000000   -0.187324   -0.468124   x   Pb 	
            B'        1.000000    1.855600    0.000000       Pr 	
            </code><p>BT.601 transfer matrices:</p><code>Y'        0.299000    0.587000    0.114000       R' 	
            Pb   =   -0.168736   -0.331264    0.500000   x   G' 	
            Pr        0.500000   -0.418688   -0.081312       B'  R'        1.000000    0.000000    1.402000       Y' 	
            G'   =    1.000000   -0.344136   -0.714136   x   Pb 	
            B'        1.000000    1.772000    0.000000       Pr 	
            </code><p>SMPTE 240M (SMPTE RP 145) transfer matrices:</p><code>Y'        0.212000    0.701000    0.087000       R' 	
            Pb   =   -0.116000   -0.384000    0.500000   x   G' 	
            Pr        0.500000   -0.445000   -0.055000       B'  R'        1.000000   -0.000000    1.576000       Y' 	
            G'   =    1.000000   -0.227000   -0.477000   x   Pb 	
            B'        1.000000    1.826000    0.000000       Pr 	
            </code><p>This enumeration is equivalent to the <strong>DXVA_VideoTransferMatrix</strong> enumeration used in DXVA 1.0.</p><p>If you are using the <strong><see cref="T:SharpDX.MediaFoundation.MediaType"/></strong> interface to describe the video format, the video transfer matrix is specified in the <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.YuvMatrix"/></strong> attribute.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_PRELOAD']/*"/>	
            <msdn-id>ms698715</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_PRELOAD</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_PRELOAD</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEnginePreload.Missing">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_PRELOAD_MISSING']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_PRELOAD_MISSING</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_PRELOAD_MISSING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEnginePreload.Empty">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_PRELOAD_EMPTY']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_PRELOAD_EMPTY</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_PRELOAD_EMPTY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEnginePreload.None">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_PRELOAD_NONE']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_PRELOAD_NONE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_PRELOAD_NONE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEnginePreload.Metadata">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_PRELOAD_METADATA']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_PRELOAD_METADATA</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_PRELOAD_METADATA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEnginePreload.Automatic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_PRELOAD_AUTOMATIC']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_PRELOAD_AUTOMATIC</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_PRELOAD_AUTOMATIC</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineProtectionFlags">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains flags that specify whether the Media Engine will play protected content, and whether the Media Engine will use the Protected Media Path (PMP).</p>	
            </summary>	
            <remarks>	
            <p>These flags are used with the <see cref="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.ContentProtectionFlags"/> attribute.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_PROTECTION_FLAGS']/*"/>	
            <msdn-id>hh162852</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_PROTECTION_FLAGS</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_PROTECTION_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineProtectionFlags.EnableProtectedContent">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_ENABLE_PROTECTED_CONTENT']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_ENABLE_PROTECTED_CONTENT</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_ENABLE_PROTECTED_CONTENT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineProtectionFlags.UsePmpForAllContent">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_USE_PMP_FOR_ALL_CONTENT']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_USE_PMP_FOR_ALL_CONTENT</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_USE_PMP_FOR_ALL_CONTENT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineProtectionFlags.UseUnprotectedPmp">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_USE_UNPROTECTED_PMP']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_USE_UNPROTECTED_PMP</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_USE_UNPROTECTED_PMP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineProtectionFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineReady">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Defines ready-state values for the Media Engine.</p>	
            </summary>	
            <remarks>	
            <p>These values correspond to constants defined for the  <strong>HTMLMediaElement.readyState</strong> attribute  in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_READY']/*"/>	
            <msdn-id>hh162853</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_READY</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_READY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineReady.HaveNothing">
            <summary>	
            <dd> <p>No data is available.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_READY_HAVE_NOTHING']/*"/>	
            <msdn-id>hh162853</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_READY_HAVE_NOTHING</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_READY_HAVE_NOTHING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineReady.HaveMetadata">
            <summary>	
            <dd> <p>Some metadata is available, including the duration and, for video files, the video dimensions. No media data is available.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_READY_HAVE_METADATA']/*"/>	
            <msdn-id>hh162853</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_READY_HAVE_METADATA</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_READY_HAVE_METADATA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineReady.HaveCurrentData">
            <summary>	
            <dd> <p>There is media data  for the current playback position, but not enough data for playback or seeking.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_READY_HAVE_CURRENT_DATA']/*"/>	
            <msdn-id>hh162853</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_READY_HAVE_CURRENT_DATA</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_READY_HAVE_CURRENT_DATA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineReady.HaveFutureData">
            <summary>	
            <dd> <p>There is enough media data to enable some playback or seeking. The amount of data might be a little as the next video frame.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_READY_HAVE_FUTURE_DATA']/*"/>	
            <msdn-id>hh162853</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_READY_HAVE_FUTURE_DATA</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_READY_HAVE_FUTURE_DATA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineReady.HaveEnoughData">
            <summary>	
            <dd> <p>There is enough data to play the resource, based on the current rate at which the resource is being fetched. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_READY_HAVE_ENOUGH_DATA']/*"/>	
            <msdn-id>hh162853</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_READY_HAVE_ENOUGH_DATA</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_READY_HAVE_ENOUGH_DATA</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineS3DPackingMode">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies the layout for a packed 3D video frame.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_S3D_PACKING_MODE']/*"/>	
            <msdn-id>hh162854</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_S3D_PACKING_MODE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_S3D_PACKING_MODE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineS3DPackingMode.None">
            <summary>	
            <dd> <p>None.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_S3D_PACKING_MODE_NONE']/*"/>	
            <msdn-id>hh162854</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_S3D_PACKING_MODE_NONE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_S3D_PACKING_MODE_NONE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineS3DPackingMode.SideBySide">
            <summary>	
            <dd> <p>The views are packed side-by-side in a single frame.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_S3D_PACKING_MODE_SIDE_BY_SIDE']/*"/>	
            <msdn-id>hh162854</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_S3D_PACKING_MODE_SIDE_BY_SIDE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_S3D_PACKING_MODE_SIDE_BY_SIDE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineS3DPackingMode.TopBottom">
            <summary>	
            <dd> <p>The views are packed top-to-bottom in a single frame.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_S3D_PACKING_MODE_TOP_BOTTOM']/*"/>	
            <msdn-id>hh162854</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_S3D_PACKING_MODE_TOP_BOTTOM</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_S3D_PACKING_MODE_TOP_BOTTOM</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineSeekMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_SEEK_MODE']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_SEEK_MODE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_SEEK_MODE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineSeekMode.Normal">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_SEEK_MODE_NORMAL']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_SEEK_MODE_NORMAL</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_SEEK_MODE_NORMAL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineSeekMode.Approximate">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_SEEK_MODE_APPROXIMATE']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_SEEK_MODE_APPROXIMATE</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_SEEK_MODE_APPROXIMATE</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineStatistic">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p>Describes the conversion matrices between Y'PbPr (component video) and studio R'G'B'. These flags are used in the <strong>DXVA2_ExtendedFormat</strong> structure.</p>	
            </summary>	
            <remarks>	
            <p>The transfer matrices are defined as follows.</p><p>BT.709 transfer matrices:</p><code>Y'        0.212600    0.715200    0.072200       R' 	
            Pb   =   -0.114572   -0.385428    0.500000   x   G' 	
            Pr        0.500000   -0.454153   -0.045847       B'  R'        1.000000    0.000000    1.574800       Y' 	
            G'   =    1.000000   -0.187324   -0.468124   x   Pb 	
            B'        1.000000    1.855600    0.000000       Pr 	
            </code><p>BT.601 transfer matrices:</p><code>Y'        0.299000    0.587000    0.114000       R' 	
            Pb   =   -0.168736   -0.331264    0.500000   x   G' 	
            Pr        0.500000   -0.418688   -0.081312       B'  R'        1.000000    0.000000    1.402000       Y' 	
            G'   =    1.000000   -0.344136   -0.714136   x   Pb 	
            B'        1.000000    1.772000    0.000000       Pr 	
            </code><p>SMPTE 240M (SMPTE RP 145) transfer matrices:</p><code>Y'        0.212000    0.701000    0.087000       R' 	
            Pb   =   -0.116000   -0.384000    0.500000   x   G' 	
            Pr        0.500000   -0.445000   -0.055000       B'  R'        1.000000   -0.000000    1.576000       Y' 	
            G'   =    1.000000   -0.227000   -0.477000   x   Pb 	
            B'        1.000000    1.826000    0.000000       Pr 	
            </code><p>This enumeration is equivalent to the <strong>DXVA_VideoTransferMatrix</strong> enumeration used in DXVA 1.0.</p><p>If you are using the <strong><see cref="T:SharpDX.MediaFoundation.MediaType"/></strong> interface to describe the video format, the video transfer matrix is specified in the <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.YuvMatrix"/></strong> attribute.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_STATISTIC']/*"/>	
            <msdn-id>ms698715</msdn-id>	
            <unmanaged>MF_MEDIA_ENGINE_STATISTIC</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_STATISTIC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineStatistic.FramesRendered">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_STATISTIC_FRAMES_RENDERED']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_STATISTIC_FRAMES_RENDERED</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_STATISTIC_FRAMES_RENDERED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineStatistic.FramesDropped">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_STATISTIC_FRAMES_DROPPED']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_STATISTIC_FRAMES_DROPPED</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_STATISTIC_FRAMES_DROPPED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineStatistic.BytesDownloaded">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_STATISTIC_BYTES_DOWNLOADED']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_STATISTIC_BYTES_DOWNLOADED</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_STATISTIC_BYTES_DOWNLOADED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineStatistic.BufferProgress">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_STATISTIC_BUFFER_PROGRESS']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_STATISTIC_BUFFER_PROGRESS</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_STATISTIC_BUFFER_PROGRESS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineStatistic.FramesPerSecond">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_MEDIA_ENGINE_STATISTIC_FRAMES_PER_SECOND']/*"/>	
            <unmanaged>MF_MEDIA_ENGINE_STATISTIC_FRAMES_PER_SECOND</unmanaged>	
            <unmanaged-short>MF_MEDIA_ENGINE_STATISTIC_FRAMES_PER_SECOND</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEventTypes">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='__MIDL___MIDL_itf_mfobjects_0000_0012_0001']/*"/>	
            <unmanaged>__MIDL___MIDL_itf_mfobjects_0000_0012_0001</unmanaged>	
            <unmanaged-short>__MIDL___MIDL_itf_mfobjects_0000_0012_0001</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.Unknown">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEUnknown']/*"/>	
            <unmanaged>MEUnknown</unmanaged>	
            <unmanaged-short>MEUnknown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.Error">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEError']/*"/>	
            <unmanaged>MEError</unmanaged>	
            <unmanaged-short>MEError</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.ExtendedType">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEExtendedType']/*"/>	
            <unmanaged>MEExtendedType</unmanaged>	
            <unmanaged-short>MEExtendedType</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.NonFatalError">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MENonFatalError']/*"/>	
            <unmanaged>MENonFatalError</unmanaged>	
            <unmanaged-short>MENonFatalError</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.GenericV1Anchor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEGenericV1Anchor']/*"/>	
            <unmanaged>MEGenericV1Anchor</unmanaged>	
            <unmanaged-short>MEGenericV1Anchor</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionUnknown">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionUnknown']/*"/>	
            <unmanaged>MESessionUnknown</unmanaged>	
            <unmanaged-short>MESessionUnknown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionTopologySet">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionTopologySet']/*"/>	
            <unmanaged>MESessionTopologySet</unmanaged>	
            <unmanaged-short>MESessionTopologySet</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionTopologiesCleared">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionTopologiesCleared']/*"/>	
            <unmanaged>MESessionTopologiesCleared</unmanaged>	
            <unmanaged-short>MESessionTopologiesCleared</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionStarted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionStarted']/*"/>	
            <unmanaged>MESessionStarted</unmanaged>	
            <unmanaged-short>MESessionStarted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionPaused">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionPaused']/*"/>	
            <unmanaged>MESessionPaused</unmanaged>	
            <unmanaged-short>MESessionPaused</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionStopped">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionStopped']/*"/>	
            <unmanaged>MESessionStopped</unmanaged>	
            <unmanaged-short>MESessionStopped</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionClosed">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionClosed']/*"/>	
            <unmanaged>MESessionClosed</unmanaged>	
            <unmanaged-short>MESessionClosed</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionEnded">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionEnded']/*"/>	
            <unmanaged>MESessionEnded</unmanaged>	
            <unmanaged-short>MESessionEnded</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionRateChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionRateChanged']/*"/>	
            <unmanaged>MESessionRateChanged</unmanaged>	
            <unmanaged-short>MESessionRateChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionScrubSampleComplete">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionScrubSampleComplete']/*"/>	
            <unmanaged>MESessionScrubSampleComplete</unmanaged>	
            <unmanaged-short>MESessionScrubSampleComplete</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionCapabilitiesChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionCapabilitiesChanged']/*"/>	
            <unmanaged>MESessionCapabilitiesChanged</unmanaged>	
            <unmanaged-short>MESessionCapabilitiesChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionTopologyStatus">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionTopologyStatus']/*"/>	
            <unmanaged>MESessionTopologyStatus</unmanaged>	
            <unmanaged-short>MESessionTopologyStatus</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionNotifyPresentationTime">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionNotifyPresentationTime']/*"/>	
            <unmanaged>MESessionNotifyPresentationTime</unmanaged>	
            <unmanaged-short>MESessionNotifyPresentationTime</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.NewPresentation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MENewPresentation']/*"/>	
            <unmanaged>MENewPresentation</unmanaged>	
            <unmanaged-short>MENewPresentation</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.LicenseAcquisitionStart">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MELicenseAcquisitionStart']/*"/>	
            <unmanaged>MELicenseAcquisitionStart</unmanaged>	
            <unmanaged-short>MELicenseAcquisitionStart</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.LicenseAcquisitionCompleted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MELicenseAcquisitionCompleted']/*"/>	
            <unmanaged>MELicenseAcquisitionCompleted</unmanaged>	
            <unmanaged-short>MELicenseAcquisitionCompleted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.IndividualizationStart">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEIndividualizationStart']/*"/>	
            <unmanaged>MEIndividualizationStart</unmanaged>	
            <unmanaged-short>MEIndividualizationStart</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.IndividualizationCompleted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEIndividualizationCompleted']/*"/>	
            <unmanaged>MEIndividualizationCompleted</unmanaged>	
            <unmanaged-short>MEIndividualizationCompleted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.EnablerProgress">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEEnablerProgress']/*"/>	
            <unmanaged>MEEnablerProgress</unmanaged>	
            <unmanaged-short>MEEnablerProgress</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.EnablerCompleted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEEnablerCompleted']/*"/>	
            <unmanaged>MEEnablerCompleted</unmanaged>	
            <unmanaged-short>MEEnablerCompleted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.PolicyError">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEPolicyError']/*"/>	
            <unmanaged>MEPolicyError</unmanaged>	
            <unmanaged-short>MEPolicyError</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.PolicyReport">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEPolicyReport']/*"/>	
            <unmanaged>MEPolicyReport</unmanaged>	
            <unmanaged-short>MEPolicyReport</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.BufferingStarted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEBufferingStarted']/*"/>	
            <unmanaged>MEBufferingStarted</unmanaged>	
            <unmanaged-short>MEBufferingStarted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.BufferingStopped">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEBufferingStopped']/*"/>	
            <unmanaged>MEBufferingStopped</unmanaged>	
            <unmanaged-short>MEBufferingStopped</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.ConnectStart">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEConnectStart']/*"/>	
            <unmanaged>MEConnectStart</unmanaged>	
            <unmanaged-short>MEConnectStart</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.ConnectEnd">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEConnectEnd']/*"/>	
            <unmanaged>MEConnectEnd</unmanaged>	
            <unmanaged-short>MEConnectEnd</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.ReconnectStart">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEReconnectStart']/*"/>	
            <unmanaged>MEReconnectStart</unmanaged>	
            <unmanaged-short>MEReconnectStart</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.ReconnectEnd">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEReconnectEnd']/*"/>	
            <unmanaged>MEReconnectEnd</unmanaged>	
            <unmanaged-short>MEReconnectEnd</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.RendererEvent">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MERendererEvent']/*"/>	
            <unmanaged>MERendererEvent</unmanaged>	
            <unmanaged-short>MERendererEvent</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionStreamSinkFormatChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionStreamSinkFormatChanged']/*"/>	
            <unmanaged>MESessionStreamSinkFormatChanged</unmanaged>	
            <unmanaged-short>MESessionStreamSinkFormatChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SessionV1Anchor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESessionV1Anchor']/*"/>	
            <unmanaged>MESessionV1Anchor</unmanaged>	
            <unmanaged-short>MESessionV1Anchor</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SourceUnknown">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESourceUnknown']/*"/>	
            <unmanaged>MESourceUnknown</unmanaged>	
            <unmanaged-short>MESourceUnknown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SourceStarted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESourceStarted']/*"/>	
            <unmanaged>MESourceStarted</unmanaged>	
            <unmanaged-short>MESourceStarted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamStarted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamStarted']/*"/>	
            <unmanaged>MEStreamStarted</unmanaged>	
            <unmanaged-short>MEStreamStarted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SourceSeeked">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESourceSeeked']/*"/>	
            <unmanaged>MESourceSeeked</unmanaged>	
            <unmanaged-short>MESourceSeeked</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamSeeked">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamSeeked']/*"/>	
            <unmanaged>MEStreamSeeked</unmanaged>	
            <unmanaged-short>MEStreamSeeked</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.NewStream">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MENewStream']/*"/>	
            <unmanaged>MENewStream</unmanaged>	
            <unmanaged-short>MENewStream</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.UpdatedStream">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEUpdatedStream']/*"/>	
            <unmanaged>MEUpdatedStream</unmanaged>	
            <unmanaged-short>MEUpdatedStream</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SourceStopped">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESourceStopped']/*"/>	
            <unmanaged>MESourceStopped</unmanaged>	
            <unmanaged-short>MESourceStopped</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamStopped">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamStopped']/*"/>	
            <unmanaged>MEStreamStopped</unmanaged>	
            <unmanaged-short>MEStreamStopped</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SourcePaused">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESourcePaused']/*"/>	
            <unmanaged>MESourcePaused</unmanaged>	
            <unmanaged-short>MESourcePaused</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamPaused">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamPaused']/*"/>	
            <unmanaged>MEStreamPaused</unmanaged>	
            <unmanaged-short>MEStreamPaused</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.EndOfPresentation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEEndOfPresentation']/*"/>	
            <unmanaged>MEEndOfPresentation</unmanaged>	
            <unmanaged-short>MEEndOfPresentation</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.EndOfStream">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEEndOfStream']/*"/>	
            <unmanaged>MEEndOfStream</unmanaged>	
            <unmanaged-short>MEEndOfStream</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.MediaSample">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEMediaSample']/*"/>	
            <unmanaged>MEMediaSample</unmanaged>	
            <unmanaged-short>MEMediaSample</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamTick">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamTick']/*"/>	
            <unmanaged>MEStreamTick</unmanaged>	
            <unmanaged-short>MEStreamTick</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamThinMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamThinMode']/*"/>	
            <unmanaged>MEStreamThinMode</unmanaged>	
            <unmanaged-short>MEStreamThinMode</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamFormatChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamFormatChanged']/*"/>	
            <unmanaged>MEStreamFormatChanged</unmanaged>	
            <unmanaged-short>MEStreamFormatChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SourceRateChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESourceRateChanged']/*"/>	
            <unmanaged>MESourceRateChanged</unmanaged>	
            <unmanaged-short>MESourceRateChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.EndOfPresentationSegment">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEEndOfPresentationSegment']/*"/>	
            <unmanaged>MEEndOfPresentationSegment</unmanaged>	
            <unmanaged-short>MEEndOfPresentationSegment</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SourceCharacteristicsChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESourceCharacteristicsChanged']/*"/>	
            <unmanaged>MESourceCharacteristicsChanged</unmanaged>	
            <unmanaged-short>MESourceCharacteristicsChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SourceRateChangeRequested">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESourceRateChangeRequested']/*"/>	
            <unmanaged>MESourceRateChangeRequested</unmanaged>	
            <unmanaged-short>MESourceRateChangeRequested</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SourceMetadataChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESourceMetadataChanged']/*"/>	
            <unmanaged>MESourceMetadataChanged</unmanaged>	
            <unmanaged-short>MESourceMetadataChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SequencerSourceTopologyUpdated">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESequencerSourceTopologyUpdated']/*"/>	
            <unmanaged>MESequencerSourceTopologyUpdated</unmanaged>	
            <unmanaged-short>MESequencerSourceTopologyUpdated</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SourceV1Anchor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESourceV1Anchor']/*"/>	
            <unmanaged>MESourceV1Anchor</unmanaged>	
            <unmanaged-short>MESourceV1Anchor</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SinkUnknown">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESinkUnknown']/*"/>	
            <unmanaged>MESinkUnknown</unmanaged>	
            <unmanaged-short>MESinkUnknown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamSinkStarted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamSinkStarted']/*"/>	
            <unmanaged>MEStreamSinkStarted</unmanaged>	
            <unmanaged-short>MEStreamSinkStarted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamSinkStopped">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamSinkStopped']/*"/>	
            <unmanaged>MEStreamSinkStopped</unmanaged>	
            <unmanaged-short>MEStreamSinkStopped</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamSinkPaused">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamSinkPaused']/*"/>	
            <unmanaged>MEStreamSinkPaused</unmanaged>	
            <unmanaged-short>MEStreamSinkPaused</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamSinkRateChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamSinkRateChanged']/*"/>	
            <unmanaged>MEStreamSinkRateChanged</unmanaged>	
            <unmanaged-short>MEStreamSinkRateChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamSinkRequestSample">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamSinkRequestSample']/*"/>	
            <unmanaged>MEStreamSinkRequestSample</unmanaged>	
            <unmanaged-short>MEStreamSinkRequestSample</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamSinkMarker">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamSinkMarker']/*"/>	
            <unmanaged>MEStreamSinkMarker</unmanaged>	
            <unmanaged-short>MEStreamSinkMarker</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamSinkPrerolled">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamSinkPrerolled']/*"/>	
            <unmanaged>MEStreamSinkPrerolled</unmanaged>	
            <unmanaged-short>MEStreamSinkPrerolled</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamSinkScrubSampleComplete">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamSinkScrubSampleComplete']/*"/>	
            <unmanaged>MEStreamSinkScrubSampleComplete</unmanaged>	
            <unmanaged-short>MEStreamSinkScrubSampleComplete</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamSinkFormatChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamSinkFormatChanged']/*"/>	
            <unmanaged>MEStreamSinkFormatChanged</unmanaged>	
            <unmanaged-short>MEStreamSinkFormatChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.StreamSinkDeviceChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEStreamSinkDeviceChanged']/*"/>	
            <unmanaged>MEStreamSinkDeviceChanged</unmanaged>	
            <unmanaged-short>MEStreamSinkDeviceChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.QualityNotify">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEQualityNotify']/*"/>	
            <unmanaged>MEQualityNotify</unmanaged>	
            <unmanaged-short>MEQualityNotify</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SinkInvalidated">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESinkInvalidated']/*"/>	
            <unmanaged>MESinkInvalidated</unmanaged>	
            <unmanaged-short>MESinkInvalidated</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.AudioSessionNameChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEAudioSessionNameChanged']/*"/>	
            <unmanaged>MEAudioSessionNameChanged</unmanaged>	
            <unmanaged-short>MEAudioSessionNameChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.AudioSessionVolumeChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEAudioSessionVolumeChanged']/*"/>	
            <unmanaged>MEAudioSessionVolumeChanged</unmanaged>	
            <unmanaged-short>MEAudioSessionVolumeChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.AudioSessionDeviceRemoved">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEAudioSessionDeviceRemoved']/*"/>	
            <unmanaged>MEAudioSessionDeviceRemoved</unmanaged>	
            <unmanaged-short>MEAudioSessionDeviceRemoved</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.AudioSessionServerShutdown">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEAudioSessionServerShutdown']/*"/>	
            <unmanaged>MEAudioSessionServerShutdown</unmanaged>	
            <unmanaged-short>MEAudioSessionServerShutdown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.AudioSessionGroupingParamChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEAudioSessionGroupingParamChanged']/*"/>	
            <unmanaged>MEAudioSessionGroupingParamChanged</unmanaged>	
            <unmanaged-short>MEAudioSessionGroupingParamChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.AudioSessionIconChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEAudioSessionIconChanged']/*"/>	
            <unmanaged>MEAudioSessionIconChanged</unmanaged>	
            <unmanaged-short>MEAudioSessionIconChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.AudioSessionFormatChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEAudioSessionFormatChanged']/*"/>	
            <unmanaged>MEAudioSessionFormatChanged</unmanaged>	
            <unmanaged-short>MEAudioSessionFormatChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.AudioSessionDisconnected">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEAudioSessionDisconnected']/*"/>	
            <unmanaged>MEAudioSessionDisconnected</unmanaged>	
            <unmanaged-short>MEAudioSessionDisconnected</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.AudioSessionExclusiveModeOverride">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEAudioSessionExclusiveModeOverride']/*"/>	
            <unmanaged>MEAudioSessionExclusiveModeOverride</unmanaged>	
            <unmanaged-short>MEAudioSessionExclusiveModeOverride</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SinkV1Anchor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESinkV1Anchor']/*"/>	
            <unmanaged>MESinkV1Anchor</unmanaged>	
            <unmanaged-short>MESinkV1Anchor</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.CaptureAudioSessionVolumeChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MECaptureAudioSessionVolumeChanged']/*"/>	
            <unmanaged>MECaptureAudioSessionVolumeChanged</unmanaged>	
            <unmanaged-short>MECaptureAudioSessionVolumeChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.CaptureAudioSessionDeviceRemoved">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MECaptureAudioSessionDeviceRemoved']/*"/>	
            <unmanaged>MECaptureAudioSessionDeviceRemoved</unmanaged>	
            <unmanaged-short>MECaptureAudioSessionDeviceRemoved</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.CaptureAudioSessionFormatChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MECaptureAudioSessionFormatChanged']/*"/>	
            <unmanaged>MECaptureAudioSessionFormatChanged</unmanaged>	
            <unmanaged-short>MECaptureAudioSessionFormatChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.CaptureAudioSessionDisconnected">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MECaptureAudioSessionDisconnected']/*"/>	
            <unmanaged>MECaptureAudioSessionDisconnected</unmanaged>	
            <unmanaged-short>MECaptureAudioSessionDisconnected</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.CaptureAudioSessionExclusiveModeOverride">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MECaptureAudioSessionExclusiveModeOverride']/*"/>	
            <unmanaged>MECaptureAudioSessionExclusiveModeOverride</unmanaged>	
            <unmanaged-short>MECaptureAudioSessionExclusiveModeOverride</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.CaptureAudioSessionServerShutdown">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MECaptureAudioSessionServerShutdown']/*"/>	
            <unmanaged>MECaptureAudioSessionServerShutdown</unmanaged>	
            <unmanaged-short>MECaptureAudioSessionServerShutdown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.SinkV2Anchor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MESinkV2Anchor']/*"/>	
            <unmanaged>MESinkV2Anchor</unmanaged>	
            <unmanaged-short>MESinkV2Anchor</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.TrustUnknown">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='METrustUnknown']/*"/>	
            <unmanaged>METrustUnknown</unmanaged>	
            <unmanaged-short>METrustUnknown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.PolicyChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEPolicyChanged']/*"/>	
            <unmanaged>MEPolicyChanged</unmanaged>	
            <unmanaged-short>MEPolicyChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.ContentProtectionMessage">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEContentProtectionMessage']/*"/>	
            <unmanaged>MEContentProtectionMessage</unmanaged>	
            <unmanaged-short>MEContentProtectionMessage</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.PolicySet">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEPolicySet']/*"/>	
            <unmanaged>MEPolicySet</unmanaged>	
            <unmanaged-short>MEPolicySet</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.TrustV1Anchor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='METrustV1Anchor']/*"/>	
            <unmanaged>METrustV1Anchor</unmanaged>	
            <unmanaged-short>METrustV1Anchor</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.WindowsMediaDRMLicenseBackupCompleted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEWMDRMLicenseBackupCompleted']/*"/>	
            <unmanaged>MEWMDRMLicenseBackupCompleted</unmanaged>	
            <unmanaged-short>MEWMDRMLicenseBackupCompleted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.WindowsMediaDRMLicenseBackupProgress">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEWMDRMLicenseBackupProgress']/*"/>	
            <unmanaged>MEWMDRMLicenseBackupProgress</unmanaged>	
            <unmanaged-short>MEWMDRMLicenseBackupProgress</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.WindowsMediaDRMLicenseRestoreCompleted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEWMDRMLicenseRestoreCompleted']/*"/>	
            <unmanaged>MEWMDRMLicenseRestoreCompleted</unmanaged>	
            <unmanaged-short>MEWMDRMLicenseRestoreCompleted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.WindowsMediaDRMLicenseRestoreProgress">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEWMDRMLicenseRestoreProgress']/*"/>	
            <unmanaged>MEWMDRMLicenseRestoreProgress</unmanaged>	
            <unmanaged-short>MEWMDRMLicenseRestoreProgress</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.WindowsMediaDRMLicenseAcquisitionCompleted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEWMDRMLicenseAcquisitionCompleted']/*"/>	
            <unmanaged>MEWMDRMLicenseAcquisitionCompleted</unmanaged>	
            <unmanaged-short>MEWMDRMLicenseAcquisitionCompleted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.WindowsMediaDRMIndividualizationCompleted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEWMDRMIndividualizationCompleted']/*"/>	
            <unmanaged>MEWMDRMIndividualizationCompleted</unmanaged>	
            <unmanaged-short>MEWMDRMIndividualizationCompleted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.WindowsMediaDRMIndividualizationProgress">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEWMDRMIndividualizationProgress']/*"/>	
            <unmanaged>MEWMDRMIndividualizationProgress</unmanaged>	
            <unmanaged-short>MEWMDRMIndividualizationProgress</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.WindowsMediaDRMProximityCompleted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEWMDRMProximityCompleted']/*"/>	
            <unmanaged>MEWMDRMProximityCompleted</unmanaged>	
            <unmanaged-short>MEWMDRMProximityCompleted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.WindowsMediaDRMLicenseStoreCleaned">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEWMDRMLicenseStoreCleaned']/*"/>	
            <unmanaged>MEWMDRMLicenseStoreCleaned</unmanaged>	
            <unmanaged-short>MEWMDRMLicenseStoreCleaned</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.WindowsMediaDRMRevocationDownloadCompleted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEWMDRMRevocationDownloadCompleted']/*"/>	
            <unmanaged>MEWMDRMRevocationDownloadCompleted</unmanaged>	
            <unmanaged-short>MEWMDRMRevocationDownloadCompleted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.WindowsMediaDRMV1Anchor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEWMDRMV1Anchor']/*"/>	
            <unmanaged>MEWMDRMV1Anchor</unmanaged>	
            <unmanaged-short>MEWMDRMV1Anchor</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.TransformUnknown">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='METransformUnknown']/*"/>	
            <unmanaged>METransformUnknown</unmanaged>	
            <unmanaged-short>METransformUnknown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.TransformNeedInput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='METransformNeedInput']/*"/>	
            <unmanaged>METransformNeedInput</unmanaged>	
            <unmanaged-short>METransformNeedInput</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.TransformHaveOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='METransformHaveOutput']/*"/>	
            <unmanaged>METransformHaveOutput</unmanaged>	
            <unmanaged-short>METransformHaveOutput</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.TransformDrainComplete">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='METransformDrainComplete']/*"/>	
            <unmanaged>METransformDrainComplete</unmanaged>	
            <unmanaged-short>METransformDrainComplete</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.TransformMarker">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='METransformMarker']/*"/>	
            <unmanaged>METransformMarker</unmanaged>	
            <unmanaged-short>METransformMarker</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.ByteStreamCharacteristicsChanged">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEByteStreamCharacteristicsChanged']/*"/>	
            <unmanaged>MEByteStreamCharacteristicsChanged</unmanaged>	
            <unmanaged-short>MEByteStreamCharacteristicsChanged</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.VideoCaptureDeviceRemoved">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEVideoCaptureDeviceRemoved']/*"/>	
            <unmanaged>MEVideoCaptureDeviceRemoved</unmanaged>	
            <unmanaged-short>MEVideoCaptureDeviceRemoved</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.VideoCaptureDevicePreempted">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEVideoCaptureDevicePreempted']/*"/>	
            <unmanaged>MEVideoCaptureDevicePreempted</unmanaged>	
            <unmanaged-short>MEVideoCaptureDevicePreempted</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEventTypes.ReservedMax">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MEReservedMax']/*"/>	
            <unmanaged>MEReservedMax</unmanaged>	
            <unmanaged-short>MEReservedMax</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MftDrainType">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p>Defines messages for an enhanced video renderer (EVR) presenter. This enumeration is used with the <strong>IMFVideoPresenter::ProcessMessage</strong> method.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_MFT_DRAIN_TYPE']/*"/>	
            <msdn-id>ms698964</msdn-id>	
            <unmanaged>_MFT_DRAIN_TYPE</unmanaged>	
            <unmanaged-short>_MFT_DRAIN_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftDrainType.MftDrainProduceTails">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_DRAIN_PRODUCE_TAILS']/*"/>	
            <unmanaged>MFT_DRAIN_PRODUCE_TAILS</unmanaged>	
            <unmanaged-short>MFT_DRAIN_PRODUCE_TAILS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftDrainType.MftDrainNoTails">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_DRAIN_NO_TAILS']/*"/>	
            <unmanaged>MFT_DRAIN_NO_TAILS</unmanaged>	
            <unmanaged-short>MFT_DRAIN_NO_TAILS</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MftInputDataBufferFlags">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Defines flags for the <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong> method. </p>	
            </summary>	
            <remarks>	
            <p>The values in this enumeration are not bit flags, so they should not be combined with a bitwise <strong>OR</strong>. Also, the caller should test for these flags with the equality operator, not a bitwise <strong>AND</strong>:</p><code>// Correct.	
            if (Buffer.dwStatus == <see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferStreamEnd"/>)	
            { ...	
            } // Incorrect.	
            if ((Buffer.dwStatus &amp; <see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferStreamEnd"/>) != 0)	
            { ...	
            }	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_MFT_INPUT_DATA_BUFFER_FLAGS']/*"/>	
            <msdn-id>ms702281</msdn-id>	
            <unmanaged>_MFT_INPUT_DATA_BUFFER_FLAGS</unmanaged>	
            <unmanaged-short>_MFT_INPUT_DATA_BUFFER_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftInputDataBufferFlags.MftInputDataBufferPlaceholder">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_DATA_BUFFER_PLACEHOLDER']/*"/>	
            <unmanaged>MFT_INPUT_DATA_BUFFER_PLACEHOLDER</unmanaged>	
            <unmanaged-short>MFT_INPUT_DATA_BUFFER_PLACEHOLDER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftInputDataBufferFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MftInputStatusFlags">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Describes the current status of a call to the <strong>IMFShutdown::Shutdown</strong> method.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_MFT_INPUT_STATUS_FLAGS']/*"/>	
            <msdn-id>ms701630</msdn-id>	
            <unmanaged>_MFT_INPUT_STATUS_FLAGS</unmanaged>	
            <unmanaged-short>_MFT_INPUT_STATUS_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftInputStatusFlags.MftInputStatusAcceptData">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STATUS_ACCEPT_DATA']/*"/>	
            <unmanaged>MFT_INPUT_STATUS_ACCEPT_DATA</unmanaged>	
            <unmanaged-short>MFT_INPUT_STATUS_ACCEPT_DATA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftInputStatusFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MftInputStreamInformationFlags">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Defines flags for the <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong> method. </p>	
            </summary>	
            <remarks>	
            <p>The values in this enumeration are not bit flags, so they should not be combined with a bitwise <strong>OR</strong>. Also, the caller should test for these flags with the equality operator, not a bitwise <strong>AND</strong>:</p><code>// Correct.	
            if (Buffer.dwStatus == <see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferStreamEnd"/>)	
            { ...	
            } // Incorrect.	
            if ((Buffer.dwStatus &amp; <see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferStreamEnd"/>) != 0)	
            { ...	
            }	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_MFT_INPUT_STREAM_INFO_FLAGS']/*"/>	
            <msdn-id>ms702281</msdn-id>	
            <unmanaged>_MFT_INPUT_STREAM_INFO_FLAGS</unmanaged>	
            <unmanaged-short>_MFT_INPUT_STREAM_INFO_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftInputStreamInformationFlags.MftInputStreamWholeSamples">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_WHOLE_SAMPLES']/*"/>	
            <unmanaged>MFT_INPUT_STREAM_WHOLE_SAMPLES</unmanaged>	
            <unmanaged-short>MFT_INPUT_STREAM_WHOLE_SAMPLES</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftInputStreamInformationFlags.MftInputStreamSingleSamplePerBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER']/*"/>	
            <unmanaged>MFT_INPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER</unmanaged>	
            <unmanaged-short>MFT_INPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftInputStreamInformationFlags.MftInputStreamFixedSampleSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_FIXED_SAMPLE_SIZE']/*"/>	
            <unmanaged>MFT_INPUT_STREAM_FIXED_SAMPLE_SIZE</unmanaged>	
            <unmanaged-short>MFT_INPUT_STREAM_FIXED_SAMPLE_SIZE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftInputStreamInformationFlags.MftInputStreamHoldsBuffers">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_HOLDS_BUFFERS']/*"/>	
            <unmanaged>MFT_INPUT_STREAM_HOLDS_BUFFERS</unmanaged>	
            <unmanaged-short>MFT_INPUT_STREAM_HOLDS_BUFFERS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftInputStreamInformationFlags.MftInputStreamDoesNotAddref">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_DOES_NOT_ADDREF']/*"/>	
            <unmanaged>MFT_INPUT_STREAM_DOES_NOT_ADDREF</unmanaged>	
            <unmanaged-short>MFT_INPUT_STREAM_DOES_NOT_ADDREF</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftInputStreamInformationFlags.MftInputStreamRemovable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_REMOVABLE']/*"/>	
            <unmanaged>MFT_INPUT_STREAM_REMOVABLE</unmanaged>	
            <unmanaged-short>MFT_INPUT_STREAM_REMOVABLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftInputStreamInformationFlags.MftInputStreamOptional">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_OPTIONAL']/*"/>	
            <unmanaged>MFT_INPUT_STREAM_OPTIONAL</unmanaged>	
            <unmanaged-short>MFT_INPUT_STREAM_OPTIONAL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftInputStreamInformationFlags.MftInputStreamProcessesInPlace">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_PROCESSES_IN_PLACE']/*"/>	
            <unmanaged>MFT_INPUT_STREAM_PROCESSES_IN_PLACE</unmanaged>	
            <unmanaged-short>MFT_INPUT_STREAM_PROCESSES_IN_PLACE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftInputStreamInformationFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MftOutputDataBufferFlags">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Defines flags for the <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong> method. </p>	
            </summary>	
            <remarks>	
            <p>The values in this enumeration are not bit flags, so they should not be combined with a bitwise <strong>OR</strong>. Also, the caller should test for these flags with the equality operator, not a bitwise <strong>AND</strong>:</p><code>// Correct.	
            if (Buffer.dwStatus == <see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferStreamEnd"/>)	
            { ...	
            } // Incorrect.	
            if ((Buffer.dwStatus &amp; <see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferStreamEnd"/>) != 0)	
            { ...	
            }	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_MFT_OUTPUT_DATA_BUFFER_FLAGS']/*"/>	
            <msdn-id>ms702281</msdn-id>	
            <unmanaged>_MFT_OUTPUT_DATA_BUFFER_FLAGS</unmanaged>	
            <unmanaged-short>_MFT_OUTPUT_DATA_BUFFER_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferIncomplete">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_DATA_BUFFER_INCOMPLETE']/*"/>	
            <unmanaged>MFT_OUTPUT_DATA_BUFFER_INCOMPLETE</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_DATA_BUFFER_INCOMPLETE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferFormatChange">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_DATA_BUFFER_FORMAT_CHANGE']/*"/>	
            <unmanaged>MFT_OUTPUT_DATA_BUFFER_FORMAT_CHANGE</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_DATA_BUFFER_FORMAT_CHANGE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferStreamEnd">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_DATA_BUFFER_STREAM_END']/*"/>	
            <unmanaged>MFT_OUTPUT_DATA_BUFFER_STREAM_END</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_DATA_BUFFER_STREAM_END</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferNoSample">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_DATA_BUFFER_NO_SAMPLE']/*"/>	
            <unmanaged>MFT_OUTPUT_DATA_BUFFER_NO_SAMPLE</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_DATA_BUFFER_NO_SAMPLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MftOutputStatusFlags">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> </p><p>Indicates whether a Media Foundation transform (MFT) can produce output data.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_MFT_OUTPUT_STATUS_FLAGS']/*"/>	
            <msdn-id>ms701553</msdn-id>	
            <unmanaged>_MFT_OUTPUT_STATUS_FLAGS</unmanaged>	
            <unmanaged-short>_MFT_OUTPUT_STATUS_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputStatusFlags.MftOutputStatusSampleReady">
            <summary>	
            <dd> <p>There is a sample available for at least one output stream. To retrieve the available output samples, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STATUS_SAMPLE_READY']/*"/>	
            <msdn-id>ms701553</msdn-id>	
            <unmanaged>MFT_OUTPUT_STATUS_SAMPLE_READY</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_STATUS_SAMPLE_READY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputStatusFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MftOutputStreamInformationFlags">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> </p><p>Describes an output stream on a Media Foundation transform (MFT).</p>	
            </summary>	
            <remarks>	
            <p>Before the client sets the media types on the MFT, the only flag guaranteed to be accurate is the <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamOptional"/> flag. For all other flags, the client should first set the media type on every non-optional stream.</p><p>The <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamDiscardable"/> and <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamLazyRead"/> flags define different behaviors for how the MFT can discard output data.</p><ul> <li> <p>MFT_OUTPUT_STREAM_DISCARDABLE: The MFT discards output data only if the client calls <strong>ProcessOutput</strong> with the <see cref="F:SharpDX.MediaFoundation.MftProcessOutputFlags.MftProcessOutputDiscardWhenNoBuffer"/> flag. The MFT never discards data when the client calls <strong>ProcessInput</strong>.</p> </li> <li> <p>MFT_OUTPUT_STREAM_LAZY_READ: If the client continues to call <strong>ProcessInput</strong> without collecting the output from this stream, the MFT eventually discards the output. If all output streams have the <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamLazyRead"/> flag, the MFT never refuses more input data.</p> </li> </ul><p>If neither of these flags is set, the MFT never discards output data.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_MFT_OUTPUT_STREAM_INFO_FLAGS']/*"/>	
            <msdn-id>ms705618</msdn-id>	
            <unmanaged>_MFT_OUTPUT_STREAM_INFO_FLAGS</unmanaged>	
            <unmanaged-short>_MFT_OUTPUT_STREAM_INFO_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamWholeSamples">
            <summary>	
            <dd> <p>Each media sample (<strong><see cref="T:SharpDX.MediaFoundation.Sample"/></strong> interface) of output data from the MFT contains complete, unbroken units of data. The definition of a <em>unit of data</em> depends on the media type: For uncompressed video, a video frame; for compressed data, a compressed packet; for uncompressed audio, a single audio frame.</p> <p>For uncompressed audio formats, this flag is always implied. (It is valid to set the flag, but not required.) An uncompressed audio frame should never span more than one media sample.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STREAM_WHOLE_SAMPLES']/*"/>	
            <msdn-id>ms705618</msdn-id>	
            <unmanaged>MFT_OUTPUT_STREAM_WHOLE_SAMPLES</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_STREAM_WHOLE_SAMPLES</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamSingleSamplePerBuffer">
            <summary>	
            <dd> <p>Each output sample contains exactly one unit of data, as defined for the <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamWholeSamples"/> flag.</p> <p>If this flag is present, the <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamWholeSamples"/> flag must also be present.</p> <p>An MFT that outputs uncompressed audio should not set this flag. For efficiency, it should output more than one audio frame at a time.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER']/*"/>	
            <msdn-id>ms705618</msdn-id>	
            <unmanaged>MFT_OUTPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamFixedSampleSize">
            <summary>	
            <dd> <p>All output samples are the same size.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STREAM_FIXED_SAMPLE_SIZE']/*"/>	
            <msdn-id>ms705618</msdn-id>	
            <unmanaged>MFT_OUTPUT_STREAM_FIXED_SAMPLE_SIZE</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_STREAM_FIXED_SAMPLE_SIZE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamDiscardable">
            <summary>	
            <dd> <p>The MFT can discard the output data from this output stream, if requested by the client. To discard the output, set the <see cref="F:SharpDX.MediaFoundation.MftProcessOutputFlags.MftProcessOutputDiscardWhenNoBuffer"/> flag in the <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong> method.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STREAM_DISCARDABLE']/*"/>	
            <msdn-id>ms705618</msdn-id>	
            <unmanaged>MFT_OUTPUT_STREAM_DISCARDABLE</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_STREAM_DISCARDABLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamOptional">
            <summary>	
            <dd> <p>This output stream is optional. The client can deselect the stream by not setting a media type or by setting a <strong><c>null</c></strong> media type. When an optional stream is deselected, it does not produce any output data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STREAM_OPTIONAL']/*"/>	
            <msdn-id>ms705618</msdn-id>	
            <unmanaged>MFT_OUTPUT_STREAM_OPTIONAL</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_STREAM_OPTIONAL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamProvidesSamples">
            <summary>	
            <dd> <p>The MFT provides the output samples for this stream, either by allocating them internally or by operating directly on the input samples. The MFT cannot use output samples provided by the client for this stream.</p> <p>If this flag is not set, the MFT must set <strong>cbSize</strong> to a nonzero value in the <strong><see cref="T:SharpDX.MediaFoundation.TOutputStreamInformation"/></strong> structure, so that the client can allocate the correct buffer size. For more information, see <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetOutputStreamInfo(System.Int32,SharpDX.MediaFoundation.TOutputStreamInformation@)"/></strong>. This flag cannot be combined with the <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamCanProvideSamples"/> flag.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STREAM_PROVIDES_SAMPLES']/*"/>	
            <msdn-id>ms705618</msdn-id>	
            <unmanaged>MFT_OUTPUT_STREAM_PROVIDES_SAMPLES</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_STREAM_PROVIDES_SAMPLES</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamCanProvideSamples">
            <summary>	
            <dd> <p>The MFT can either provide output samples for this stream or it can use samples that the client allocates. This flag cannot be combined with the <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamProvidesSamples"/> flag.</p> <p>If the MFT does not set this flag or the <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamProvidesSamples"/> flag, the client must allocate the samples for this output stream. The MFT will not provide its own samples.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STREAM_CAN_PROVIDE_SAMPLES']/*"/>	
            <msdn-id>ms705618</msdn-id>	
            <unmanaged>MFT_OUTPUT_STREAM_CAN_PROVIDE_SAMPLES</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_STREAM_CAN_PROVIDE_SAMPLES</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamLazyRead">
            <summary>	
            <dd> <p>The MFT does not require the client to process the output for this stream. If the client continues to send input data without getting the output from this stream, the MFT simply discards the previous input.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STREAM_LAZY_READ']/*"/>	
            <msdn-id>ms705618</msdn-id>	
            <unmanaged>MFT_OUTPUT_STREAM_LAZY_READ</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_STREAM_LAZY_READ</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamRemovable">
            <summary>	
            <dd> <p>The MFT might remove this output stream during streaming. This flag typically applies to demultiplexers, where the input data contains multiple streams that can start and stop during streaming. For more information, see <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STREAM_REMOVABLE']/*"/>	
            <msdn-id>ms705618</msdn-id>	
            <unmanaged>MFT_OUTPUT_STREAM_REMOVABLE</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_STREAM_REMOVABLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MftProcessOutputFlags">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Defines flags for the <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong> method. </p>	
            </summary>	
            <remarks>	
            <p>The values in this enumeration are not bit flags, so they should not be combined with a bitwise <strong>OR</strong>. Also, the caller should test for these flags with the equality operator, not a bitwise <strong>AND</strong>:</p><code>// Correct.	
            if (Buffer.dwStatus == <see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferStreamEnd"/>)	
            { ...	
            } // Incorrect.	
            if ((Buffer.dwStatus &amp; <see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferStreamEnd"/>) != 0)	
            { ...	
            }	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_MFT_PROCESS_OUTPUT_FLAGS']/*"/>	
            <msdn-id>ms702281</msdn-id>	
            <unmanaged>_MFT_PROCESS_OUTPUT_FLAGS</unmanaged>	
            <unmanaged-short>_MFT_PROCESS_OUTPUT_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftProcessOutputFlags.MftProcessOutputDiscardWhenNoBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER']/*"/>	
            <unmanaged>MFT_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER</unmanaged>	
            <unmanaged-short>MFT_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftProcessOutputFlags.MftProcessOutputRegenerateLastOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_PROCESS_OUTPUT_REGENERATE_LAST_OUTPUT']/*"/>	
            <unmanaged>MFT_PROCESS_OUTPUT_REGENERATE_LAST_OUTPUT</unmanaged>	
            <unmanaged-short>MFT_PROCESS_OUTPUT_REGENERATE_LAST_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftProcessOutputFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MftProcessOutputStatus">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> </p><p>Indicates the status of a call to <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong>.</p>	
            </summary>	
            <remarks>	
            <p>If the MFT sets this flag, the <strong>ProcessOutput</strong> method returns MF_E_TRANSFORM_STREAM_CHANGE and no output data is produced. The client should respond as follows:</p><ol> <li> <p>Call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamCount(System.Int32@,System.Int32@)"/></strong> to get the new number of streams.</p> </li> <li> <p>Call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong> to get the new stream identifiers.</p> </li> <li> <p>Call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetOutputAvailableType(System.Int32,System.Int32,SharpDX.MediaFoundation.MediaType@)"/></strong> and <strong><see cref="M:SharpDX.MediaFoundation.Transform.SetOutputType(System.Int32,SharpDX.MediaFoundation.MediaType,System.Int32)"/></strong> to set the media types on the new streams.</p> </li> </ol><p>Until these steps are completed, all further calls to <strong>ProcessOutput</strong> return MF_E_TRANSFORM_STREAM_CHANGE.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_MFT_PROCESS_OUTPUT_STATUS']/*"/>	
            <msdn-id>ms699875</msdn-id>	
            <unmanaged>_MFT_PROCESS_OUTPUT_STATUS</unmanaged>	
            <unmanaged-short>_MFT_PROCESS_OUTPUT_STATUS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftProcessOutputStatus.MftProcessOutputStatusNewStreams">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_PROCESS_OUTPUT_STATUS_NEW_STREAMS']/*"/>	
            <unmanaged>MFT_PROCESS_OUTPUT_STATUS_NEW_STREAMS</unmanaged>	
            <unmanaged-short>MFT_PROCESS_OUTPUT_STATUS_NEW_STREAMS</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MftSetTypeFlags">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> </p><p>Defines flags for the setting or testing the media type on a Media Foundation transform (MFT).</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='_MFT_SET_TYPE_FLAGS']/*"/>	
            <msdn-id>ms704051</msdn-id>	
            <unmanaged>_MFT_SET_TYPE_FLAGS</unmanaged>	
            <unmanaged-short>_MFT_SET_TYPE_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftSetTypeFlags.MftSetTypeTestOnly">
            <summary>	
            <dd> <p>Test the proposed media type, but do not set it.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_SET_TYPE_TEST_ONLY']/*"/>	
            <msdn-id>ms704051</msdn-id>	
            <unmanaged>MFT_SET_TYPE_TEST_ONLY</unmanaged>	
            <unmanaged-short>MFT_SET_TYPE_TEST_ONLY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MftSetTypeFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.NominalRange">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies how the credential manager should obtain user credentials. </p>	
            </summary>	
            <remarks>	
            <p>The application implements the credential manager, which must expose the <strong>IMFNetCredentialManager</strong> interface. If the <strong>REQUIRE_PROMPT</strong> flag is set, the credential manager should prompt the user for his or her name and password.</p><p>The credential cache object sets the <strong>REQUIRE_PROMPT</strong> flag if the cache does not yet contain valid credentials. It also sets this flag if the credentials will be sent as plain text, unless the credential manager previously set the <strong>MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT</strong> option. (See <strong>IMFNetCredentialCache::SetUserOptions</strong>.)</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFNominalRange']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFNominalRange</unmanaged>	
            <unmanaged-short>MFNominalRange</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.NominalRange.Unknown">
            <summary>	
            <dd> <p> The credential manager should prompt the user to provide the credentials. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFNominalRange_Unknown']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFNominalRange_Unknown</unmanaged>	
            <unmanaged-short>MFNominalRange_Unknown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.NominalRange.Normal">
            <summary>	
            <dd> <p> </p><p><strong>Note</strong>??Requires Windows?7 or later.</p> <p>The credentials are saved to persistent storage. This flag acts as a hint for the application's UI. If the application prompts the user for credentials, the UI can indicate that the credentials have already been saved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFNominalRange_Normal']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFNominalRange_Normal</unmanaged>	
            <unmanaged-short>MFNominalRange_Normal</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.NominalRange.Wide">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFNominalRange_Wide']/*"/>	
            <unmanaged>MFNominalRange_Wide</unmanaged>	
            <unmanaged-short>MFNominalRange_Wide</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.NominalRange.Range0_255">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFNominalRange_0_255']/*"/>	
            <unmanaged>MFNominalRange_0_255</unmanaged>	
            <unmanaged-short>MFNominalRange_0_255</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.NominalRange.Range16_235">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFNominalRange_16_235']/*"/>	
            <unmanaged>MFNominalRange_16_235</unmanaged>	
            <unmanaged-short>MFNominalRange_16_235</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.NominalRange.Range48_208">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFNominalRange_48_208']/*"/>	
            <unmanaged>MFNominalRange_48_208</unmanaged>	
            <unmanaged-short>MFNominalRange_48_208</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.NominalRange.Range64_127">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFNominalRange_64_127']/*"/>	
            <unmanaged>MFNominalRange_64_127</unmanaged>	
            <unmanaged-short>MFNominalRange_64_127</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.NominalRange.Last">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFNominalRange_Last']/*"/>	
            <unmanaged>MFNominalRange_Last</unmanaged>	
            <unmanaged-short>MFNominalRange_Last</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.NominalRange.ForceDWORD">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFNominalRange_ForceDWORD']/*"/>	
            <unmanaged>MFNominalRange_ForceDWORD</unmanaged>	
            <unmanaged-short>MFNominalRange_ForceDWORD</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.ObjectType">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Defines the object types that are created by the source resolver.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_OBJECT_TYPE']/*"/>	
            <msdn-id>ms704771</msdn-id>	
            <unmanaged>MF_OBJECT_TYPE</unmanaged>	
            <unmanaged-short>MF_OBJECT_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ObjectType.MediaSource">
            <summary>	
            <dd> <p>Media source. You can query the object for the <strong>IMFMediaSource</strong> interface.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_OBJECT_MEDIASOURCE']/*"/>	
            <msdn-id>ms704771</msdn-id>	
            <unmanaged>MF_OBJECT_MEDIASOURCE</unmanaged>	
            <unmanaged-short>MF_OBJECT_MEDIASOURCE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ObjectType.ByteStream">
            <summary>	
            <dd> <p>Byte stream. You can query the object for the <strong><see cref="T:SharpDX.MediaFoundation.IByteStream"/></strong> interface.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_OBJECT_BYTESTREAM']/*"/>	
            <msdn-id>ms704771</msdn-id>	
            <unmanaged>MF_OBJECT_BYTESTREAM</unmanaged>	
            <unmanaged-short>MF_OBJECT_BYTESTREAM</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ObjectType.Invalid">
            <summary>	
            <dd> <p>Invalid type.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_OBJECT_INVALID']/*"/>	
            <msdn-id>ms704771</msdn-id>	
            <unmanaged>MF_OBJECT_INVALID</unmanaged>	
            <unmanaged-short>MF_OBJECT_INVALID</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.SourceResolverFlags">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='__MIDL___MIDL_itf_mfidl_0000_0001_0001']/*"/>	
            <unmanaged>__MIDL___MIDL_itf_mfidl_0000_0001_0001</unmanaged>	
            <unmanaged-short>__MIDL___MIDL_itf_mfidl_0000_0001_0001</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.SourceResolverFlags.MediaSource">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_RESOLUTION_MEDIASOURCE']/*"/>	
            <unmanaged>MF_RESOLUTION_MEDIASOURCE</unmanaged>	
            <unmanaged-short>MF_RESOLUTION_MEDIASOURCE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.SourceResolverFlags.ByteStream">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_RESOLUTION_BYTESTREAM']/*"/>	
            <unmanaged>MF_RESOLUTION_BYTESTREAM</unmanaged>	
            <unmanaged-short>MF_RESOLUTION_BYTESTREAM</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.SourceResolverFlags.ContentDoesNotHaveToMatchExtensionOrMimeType">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_RESOLUTION_CONTENT_DOES_NOT_HAVE_TO_MATCH_EXTENSION_OR_MIME_TYPE']/*"/>	
            <unmanaged>MF_RESOLUTION_CONTENT_DOES_NOT_HAVE_TO_MATCH_EXTENSION_OR_MIME_TYPE</unmanaged>	
            <unmanaged-short>MF_RESOLUTION_CONTENT_DOES_NOT_HAVE_TO_MATCH_EXTENSION_OR_MIME_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.SourceResolverFlags.KeepByteStreamAliveOnFail">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_RESOLUTION_KEEP_BYTE_STREAM_ALIVE_ON_FAIL']/*"/>	
            <unmanaged>MF_RESOLUTION_KEEP_BYTE_STREAM_ALIVE_ON_FAIL</unmanaged>	
            <unmanaged-short>MF_RESOLUTION_KEEP_BYTE_STREAM_ALIVE_ON_FAIL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.SourceResolverFlags.DisableLocalPlugins">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_RESOLUTION_DISABLE_LOCAL_PLUGINS']/*"/>	
            <unmanaged>MF_RESOLUTION_DISABLE_LOCAL_PLUGINS</unmanaged>	
            <unmanaged-short>MF_RESOLUTION_DISABLE_LOCAL_PLUGINS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.SourceResolverFlags.PluginControlPolicyApprovedOnly">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_RESOLUTION_PLUGIN_CONTROL_POLICY_APPROVED_ONLY']/*"/>	
            <unmanaged>MF_RESOLUTION_PLUGIN_CONTROL_POLICY_APPROVED_ONLY</unmanaged>	
            <unmanaged-short>MF_RESOLUTION_PLUGIN_CONTROL_POLICY_APPROVED_ONLY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.SourceResolverFlags.PluginControlPolicyWebOnly">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_RESOLUTION_PLUGIN_CONTROL_POLICY_WEB_ONLY']/*"/>	
            <unmanaged>MF_RESOLUTION_PLUGIN_CONTROL_POLICY_WEB_ONLY</unmanaged>	
            <unmanaged-short>MF_RESOLUTION_PLUGIN_CONTROL_POLICY_WEB_ONLY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.SourceResolverFlags.Read">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_RESOLUTION_READ']/*"/>	
            <unmanaged>MF_RESOLUTION_READ</unmanaged>	
            <unmanaged-short>MF_RESOLUTION_READ</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.SourceResolverFlags.Write">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_RESOLUTION_WRITE']/*"/>	
            <unmanaged>MF_RESOLUTION_WRITE</unmanaged>	
            <unmanaged-short>MF_RESOLUTION_WRITE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.SourceResolverFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.TMessageType">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Sends a message to the Media Foundation transform (MFT). </p>	
            </summary>	
            <remarks>	
            <p> Before calling this method, set the media types on all input and output streams. </p><p> The MFT might ignore certain message types. If so, the method returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. An error code indicates that the transform handles this message type but was unable to process the message in this instance. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTProcessMessage</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_MESSAGE_TYPE']/*"/>	
            <msdn-id>ms701863</msdn-id>	
            <unmanaged>MFT_MESSAGE_TYPE</unmanaged>	
            <unmanaged-short>MFT_MESSAGE_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TMessageType.CommandFlush">
            <summary>	
            <dd> <p> The message to send, specified as a member of the <strong><see cref="T:SharpDX.MediaFoundation.TMessageType"/></strong> enumeration. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_MESSAGE_COMMAND_FLUSH']/*"/>	
            <msdn-id>ms701863</msdn-id>	
            <unmanaged>MFT_MESSAGE_COMMAND_FLUSH</unmanaged>	
            <unmanaged-short>MFT_MESSAGE_COMMAND_FLUSH</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TMessageType.CommandDrain">
            <summary>	
            <dd> <p> Message parameter. The meaning of this parameter depends on the message type. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_MESSAGE_COMMAND_DRAIN']/*"/>	
            <msdn-id>ms701863</msdn-id>	
            <unmanaged>MFT_MESSAGE_COMMAND_DRAIN</unmanaged>	
            <unmanaged-short>MFT_MESSAGE_COMMAND_DRAIN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TMessageType.SetD3DManager">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_MESSAGE_SET_D3D_MANAGER']/*"/>	
            <unmanaged>MFT_MESSAGE_SET_D3D_MANAGER</unmanaged>	
            <unmanaged-short>MFT_MESSAGE_SET_D3D_MANAGER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TMessageType.DropSamples">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_MESSAGE_DROP_SAMPLES']/*"/>	
            <unmanaged>MFT_MESSAGE_DROP_SAMPLES</unmanaged>	
            <unmanaged-short>MFT_MESSAGE_DROP_SAMPLES</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TMessageType.CommandTick">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_MESSAGE_COMMAND_TICK']/*"/>	
            <unmanaged>MFT_MESSAGE_COMMAND_TICK</unmanaged>	
            <unmanaged-short>MFT_MESSAGE_COMMAND_TICK</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TMessageType.NotifyBeginStreaming">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_MESSAGE_NOTIFY_BEGIN_STREAMING']/*"/>	
            <unmanaged>MFT_MESSAGE_NOTIFY_BEGIN_STREAMING</unmanaged>	
            <unmanaged-short>MFT_MESSAGE_NOTIFY_BEGIN_STREAMING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TMessageType.NotifyEndStreaming">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_MESSAGE_NOTIFY_END_STREAMING']/*"/>	
            <unmanaged>MFT_MESSAGE_NOTIFY_END_STREAMING</unmanaged>	
            <unmanaged-short>MFT_MESSAGE_NOTIFY_END_STREAMING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TMessageType.NotifyEndOfStream">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_MESSAGE_NOTIFY_END_OF_STREAM']/*"/>	
            <unmanaged>MFT_MESSAGE_NOTIFY_END_OF_STREAM</unmanaged>	
            <unmanaged-short>MFT_MESSAGE_NOTIFY_END_OF_STREAM</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TMessageType.NotifyStartOfStream">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_MESSAGE_NOTIFY_START_OF_STREAM']/*"/>	
            <unmanaged>MFT_MESSAGE_NOTIFY_START_OF_STREAM</unmanaged>	
            <unmanaged-short>MFT_MESSAGE_NOTIFY_START_OF_STREAM</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TMessageType.CommandMarker">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_MESSAGE_COMMAND_MARKER']/*"/>	
            <unmanaged>MFT_MESSAGE_COMMAND_MARKER</unmanaged>	
            <unmanaged-short>MFT_MESSAGE_COMMAND_MARKER</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.Video3DFormat">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies how the credential manager should obtain user credentials. </p>	
            </summary>	
            <remarks>	
            <p>The application implements the credential manager, which must expose the <strong>IMFNetCredentialManager</strong> interface. If the <strong>REQUIRE_PROMPT</strong> flag is set, the credential manager should prompt the user for his or her name and password.</p><p>The credential cache object sets the <strong>REQUIRE_PROMPT</strong> flag if the cache does not yet contain valid credentials. It also sets this flag if the credentials will be sent as plain text, unless the credential manager previously set the <strong>MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT</strong> option. (See <strong>IMFNetCredentialCache::SetUserOptions</strong>.)</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideo3DFormat']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideo3DFormat</unmanaged>	
            <unmanaged-short>MFVideo3DFormat</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Video3DFormat.SampleFormatBaseView">
            <summary>	
            <dd> <p> The credential manager should prompt the user to provide the credentials. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideo3DSampleFormat_BaseView']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideo3DSampleFormat_BaseView</unmanaged>	
            <unmanaged-short>MFVideo3DSampleFormat_BaseView</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Video3DFormat.SampleFormatMultiView">
            <summary>	
            <dd> <p> </p><p><strong>Note</strong>??Requires Windows?7 or later.</p> <p>The credentials are saved to persistent storage. This flag acts as a hint for the application's UI. If the application prompts the user for credentials, the UI can indicate that the credentials have already been saved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideo3DSampleFormat_MultiView']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideo3DSampleFormat_MultiView</unmanaged>	
            <unmanaged-short>MFVideo3DSampleFormat_MultiView</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Video3DFormat.SampleFormatPackedLeftRight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideo3DSampleFormat_Packed_LeftRight']/*"/>	
            <unmanaged>MFVideo3DSampleFormat_Packed_LeftRight</unmanaged>	
            <unmanaged-short>MFVideo3DSampleFormat_Packed_LeftRight</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Video3DFormat.SampleFormatPackedTopBottom">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideo3DSampleFormat_Packed_TopBottom']/*"/>	
            <unmanaged>MFVideo3DSampleFormat_Packed_TopBottom</unmanaged>	
            <unmanaged-short>MFVideo3DSampleFormat_Packed_TopBottom</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.Video3DOutputType">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>The video processor MFT is a Microsoft Media Foundation transform (MFT) that performs   colorspace conversion, video resizing, deinterlacing, frame rate conversion, rotation, cropping, spatial left and right view unpacking, and mirroring.</p>	
            </summary>	
            <remarks>	
            <p>An instance of the video processor can be created in one of the following ways: </p><ul> <li>By calling <strong>MFTEnumEx</strong>.  The video processor is registered under the <strong>MFT_CATEGORY_VIDEO_PROCESSOR</strong> category.</li> <li>By calling the COM function <strong>CoCreateInstance</strong> passing  it the CLSID <strong>CLSID_VideoProcessorMFT</strong>.</li> </ul><p>The video processor supports GPU-accelerated video processing, using Microsoft Direct3D?11. For more information, see <see cref="F:SharpDX.MediaFoundation.TransformAttributeKeys.D3D11Aware"/>.</p>Stereoscopic Video<p>The video processor supports the view unpacking operation on 3D video frames:</p><p>If the input frame contains two views packed in the same frame, the video processor can split the views into separate buffers, or extract the base view and discard the second view. To enable view unpacking, set the <see cref="F:SharpDX.MediaFoundation.TransformAttributeKeys.Enable3dvideoOutput"/> attribute to <strong><see cref="F:SharpDX.MediaFoundation.Video3DOutputType.Stereo"/></strong> or <strong><see cref="F:SharpDX.MediaFoundation.Video3DOutputType.BaseView"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF3DVideoOutputType']/*"/>	
            <msdn-id>hh162913</msdn-id>	
            <unmanaged>MF3DVideoOutputType</unmanaged>	
            <unmanaged-short>MF3DVideoOutputType</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Video3DOutputType.BaseView">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF3DVideoOutputType_BaseView']/*"/>	
            <unmanaged>MF3DVideoOutputType_BaseView</unmanaged>	
            <unmanaged-short>MF3DVideoOutputType_BaseView</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Video3DOutputType.Stereo">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF3DVideoOutputType_Stereo']/*"/>	
            <unmanaged>MF3DVideoOutputType_Stereo</unmanaged>	
            <unmanaged-short>MF3DVideoOutputType_Stereo</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.Video3DSampleFormat">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies how the credential manager should obtain user credentials. </p>	
            </summary>	
            <remarks>	
            <p>The application implements the credential manager, which must expose the <strong>IMFNetCredentialManager</strong> interface. If the <strong>REQUIRE_PROMPT</strong> flag is set, the credential manager should prompt the user for his or her name and password.</p><p>The credential cache object sets the <strong>REQUIRE_PROMPT</strong> flag if the cache does not yet contain valid credentials. It also sets this flag if the credentials will be sent as plain text, unless the credential manager previously set the <strong>MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT</strong> option. (See <strong>IMFNetCredentialCache::SetUserOptions</strong>.)</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideo3DSampleFormat']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideo3DSampleFormat</unmanaged>	
            <unmanaged-short>MFVideo3DSampleFormat</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Video3DSampleFormat.MFSampleExtension3DVideoMultiView">
            <summary>	
            <dd> <p> The credential manager should prompt the user to provide the credentials. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFSampleExtension_3DVideo_MultiView']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFSampleExtension_3DVideo_MultiView</unmanaged>	
            <unmanaged-short>MFSampleExtension_3DVideo_MultiView</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Video3DSampleFormat.MFSampleExtension3DVideoPacked">
            <summary>	
            <dd> <p> </p><p><strong>Note</strong>??Requires Windows?7 or later.</p> <p>The credentials are saved to persistent storage. This flag acts as a hint for the application's UI. If the application prompts the user for credentials, the UI can indicate that the credentials have already been saved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFSampleExtension_3DVideo_Packed']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFSampleExtension_3DVideo_Packed</unmanaged>	
            <unmanaged-short>MFSampleExtension_3DVideo_Packed</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.VideoChromaSubsampling">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> </p><p>Contains flags that define the chroma encoding scheme for Y'Cb'Cr' data.</p>	
            </summary>	
            <remarks>	
            <p>These flags are used with the <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.VideoChromaSiting"/></strong> attribute.</p><p>For more information about these values, see the remarks for the <strong>DXVA2_VideoChromaSubSampling</strong> enumeration, which is the DirectX Video Acceleration (DXVA) equivalent of this enumeration.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoChromaSubsampling']/*"/>	
            <msdn-id>ms698989</msdn-id>	
            <unmanaged>MFVideoChromaSubsampling</unmanaged>	
            <unmanaged-short>MFVideoChromaSubsampling</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoChromaSubsampling.Unknown">
            <summary>	
            <dd> <p>Unknown encoding scheme.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoChromaSubsampling_Unknown']/*"/>	
            <msdn-id>ms698989</msdn-id>	
            <unmanaged>MFVideoChromaSubsampling_Unknown</unmanaged>	
            <unmanaged-short>MFVideoChromaSubsampling_Unknown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoChromaSubsampling.ProgressiveChroma">
            <summary>	
            <dd> <p>Chroma should be reconstructed as if the underlying video was progressive content, rather than skipping fields or applying chroma filtering to minimize artifacts from reconstructing 4:2:0 interlaced chroma.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoChromaSubsampling_ProgressiveChroma']/*"/>	
            <msdn-id>ms698989</msdn-id>	
            <unmanaged>MFVideoChromaSubsampling_ProgressiveChroma</unmanaged>	
            <unmanaged-short>MFVideoChromaSubsampling_ProgressiveChroma</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoChromaSubsampling.HorizontallyCosited">
            <summary>	
            <dd> <p>Chroma samples are aligned horizontally with the luma samples, or with multiples of the luma samples. If this flag is not set, chroma samples are located 1/2 pixel to the right of the corresponding luma sample.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoChromaSubsampling_Horizontally_Cosited']/*"/>	
            <msdn-id>ms698989</msdn-id>	
            <unmanaged>MFVideoChromaSubsampling_Horizontally_Cosited</unmanaged>	
            <unmanaged-short>MFVideoChromaSubsampling_Horizontally_Cosited</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoChromaSubsampling.VerticallyCosited">
            <summary>	
            <dd> <p>Chroma samples are aligned vertically with the luma samples, or with multiples of the luma samples. If this flag is not set, chroma samples are located 1/2 pixel down from the corresponding luma sample.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoChromaSubsampling_Vertically_Cosited']/*"/>	
            <msdn-id>ms698989</msdn-id>	
            <unmanaged>MFVideoChromaSubsampling_Vertically_Cosited</unmanaged>	
            <unmanaged-short>MFVideoChromaSubsampling_Vertically_Cosited</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoChromaSubsampling.VerticallyAlignedChromaPlanes">
            <summary>	
            <dd> <p>The U and V planes are aligned vertically. If this flag is not set, the chroma planes are assumed to be out of phase by 1/2 chroma sample, alternating between a line of U followed by a line of V.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes']/*"/>	
            <msdn-id>ms698989</msdn-id>	
            <unmanaged>MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes</unmanaged>	
            <unmanaged-short>MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoChromaSubsampling.Mpeg2">
            <summary>	
            <dd> <p>Specifies the chroma encoding scheme for MPEG-2 video. Chroma samples are aligned horizontally with the luma samples, but are not aligned vertically. The U and V planes are aligned vertically.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoChromaSubsampling_MPEG2']/*"/>	
            <msdn-id>ms698989</msdn-id>	
            <unmanaged>MFVideoChromaSubsampling_MPEG2</unmanaged>	
            <unmanaged-short>MFVideoChromaSubsampling_MPEG2</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoChromaSubsampling.Mpeg1">
            <summary>	
            <dd> <p>Specifies the chroma encoding scheme for MPEG-1 video.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoChromaSubsampling_MPEG1']/*"/>	
            <msdn-id>ms698989</msdn-id>	
            <unmanaged>MFVideoChromaSubsampling_MPEG1</unmanaged>	
            <unmanaged-short>MFVideoChromaSubsampling_MPEG1</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoChromaSubsampling.DvPal">
            <summary>	
            <dd> <p>Specifies the chroma encoding scheme for PAL DV video.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoChromaSubsampling_DV_PAL']/*"/>	
            <msdn-id>ms698989</msdn-id>	
            <unmanaged>MFVideoChromaSubsampling_DV_PAL</unmanaged>	
            <unmanaged-short>MFVideoChromaSubsampling_DV_PAL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoChromaSubsampling.Cosited">
            <summary>	
            <dd> <p>Chroma samples are aligned vertically and horizontally with the luma samples. YUV formats such as 4:4:4, 4:2:2, and 4:1:1 are always cosited in both directions and should use this flag.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoChromaSubsampling_Cosited']/*"/>	
            <msdn-id>ms698989</msdn-id>	
            <unmanaged>MFVideoChromaSubsampling_Cosited</unmanaged>	
            <unmanaged-short>MFVideoChromaSubsampling_Cosited</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoChromaSubsampling.Last">
            <summary>	
            <dd> <p>Reserved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoChromaSubsampling_Last']/*"/>	
            <msdn-id>ms698989</msdn-id>	
            <unmanaged>MFVideoChromaSubsampling_Last</unmanaged>	
            <unmanaged-short>MFVideoChromaSubsampling_Last</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoChromaSubsampling.ForceDWORD">
            <summary>	
            <dd> <p>Reserved. This member forces the enumeration type to compile as a <strong>DWORD</strong> value.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoChromaSubsampling_ForceDWORD']/*"/>	
            <msdn-id>ms698989</msdn-id>	
            <unmanaged>MFVideoChromaSubsampling_ForceDWORD</unmanaged>	
            <unmanaged-short>MFVideoChromaSubsampling_ForceDWORD</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.VideoDRMFlags">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies how the credential manager should obtain user credentials. </p>	
            </summary>	
            <remarks>	
            <p>The application implements the credential manager, which must expose the <strong>IMFNetCredentialManager</strong> interface. If the <strong>REQUIRE_PROMPT</strong> flag is set, the credential manager should prompt the user for his or her name and password.</p><p>The credential cache object sets the <strong>REQUIRE_PROMPT</strong> flag if the cache does not yet contain valid credentials. It also sets this flag if the credentials will be sent as plain text, unless the credential manager previously set the <strong>MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT</strong> option. (See <strong>IMFNetCredentialCache::SetUserOptions</strong>.)</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoDRMFlags']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoDRMFlags</unmanaged>	
            <unmanaged-short>MFVideoDRMFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoDRMFlags.None">
            <summary>	
            <dd> <p> The credential manager should prompt the user to provide the credentials. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoDRMFlag_None']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoDRMFlag_None</unmanaged>	
            <unmanaged-short>MFVideoDRMFlag_None</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoDRMFlags.AnalogProtected">
            <summary>	
            <dd> <p> </p><p><strong>Note</strong>??Requires Windows?7 or later.</p> <p>The credentials are saved to persistent storage. This flag acts as a hint for the application's UI. If the application prompts the user for credentials, the UI can indicate that the credentials have already been saved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoDRMFlag_AnalogProtected']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoDRMFlag_AnalogProtected</unmanaged>	
            <unmanaged-short>MFVideoDRMFlag_AnalogProtected</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoDRMFlags.DigitallyProtected">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoDRMFlag_DigitallyProtected']/*"/>	
            <unmanaged>MFVideoDRMFlag_DigitallyProtected</unmanaged>	
            <unmanaged-short>MFVideoDRMFlag_DigitallyProtected</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.VideoInterlaceMode">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p>Specifies how a video stream is interlaced.</p><p>In the descriptions that follow, upper field refers to the field that contains the leading half scan line. Lower field refers to the field that contains the first full scan line.</p>	
            </summary>	
            <remarks>	
            <p>Scan lines in the lower field are 0.5 scan line lower than those in the upper field. In NTSC television, a frame consists of a lower field followed by an upper field. In PAL television, a frame consists of an upper field followed by a lower field.</p><p>The upper field is also called the even field, the top field, or field 2. The lower field is also called the odd field, the bottom field, or field 1.</p><p>If the interlace mode is <see cref="F:SharpDX.MediaFoundation.VideoInterlaceMode.FieldSingleUpper"/> or <see cref="F:SharpDX.MediaFoundation.VideoInterlaceMode.FieldSingleLower"/>, each sample contains a single field, so each buffer contains only half the number of field lines given in the media type.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoInterlaceMode']/*"/>	
            <msdn-id>ms694269</msdn-id>	
            <unmanaged>MFVideoInterlaceMode</unmanaged>	
            <unmanaged-short>MFVideoInterlaceMode</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoInterlaceMode.Unknown">
            <summary>	
            <dd> <p> The type of interlacing is not known. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoInterlace_Unknown']/*"/>	
            <msdn-id>ms694269</msdn-id>	
            <unmanaged>MFVideoInterlace_Unknown</unmanaged>	
            <unmanaged-short>MFVideoInterlace_Unknown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoInterlaceMode.Progressive">
            <summary>	
            <dd> <p> Progressive frames. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoInterlace_Progressive']/*"/>	
            <msdn-id>ms694269</msdn-id>	
            <unmanaged>MFVideoInterlace_Progressive</unmanaged>	
            <unmanaged-short>MFVideoInterlace_Progressive</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoInterlaceMode.FieldInterleavedUpperFirst">
            <summary>	
            <dd> <p> Interlaced frames. Each frame contains two fields. The field lines are interleaved, with the upper field appearing on the first line. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoInterlace_FieldInterleavedUpperFirst']/*"/>	
            <msdn-id>ms694269</msdn-id>	
            <unmanaged>MFVideoInterlace_FieldInterleavedUpperFirst</unmanaged>	
            <unmanaged-short>MFVideoInterlace_FieldInterleavedUpperFirst</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoInterlaceMode.FieldInterleavedLowerFirst">
            <summary>	
            <dd> <p> Interlaced frames. Each frame contains two fields. The field lines are interleaved, with the lower field appearing on the first line. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoInterlace_FieldInterleavedLowerFirst']/*"/>	
            <msdn-id>ms694269</msdn-id>	
            <unmanaged>MFVideoInterlace_FieldInterleavedLowerFirst</unmanaged>	
            <unmanaged-short>MFVideoInterlace_FieldInterleavedLowerFirst</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoInterlaceMode.FieldSingleUpper">
            <summary>	
            <dd> <p> Interlaced frames. Each frame contains one field, with the upper field appearing first. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoInterlace_FieldSingleUpper']/*"/>	
            <msdn-id>ms694269</msdn-id>	
            <unmanaged>MFVideoInterlace_FieldSingleUpper</unmanaged>	
            <unmanaged-short>MFVideoInterlace_FieldSingleUpper</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoInterlaceMode.FieldSingleLower">
            <summary>	
            <dd> <p> Interlaced frames. Each frame contains one field, with the lower field appearing first. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoInterlace_FieldSingleLower']/*"/>	
            <msdn-id>ms694269</msdn-id>	
            <unmanaged>MFVideoInterlace_FieldSingleLower</unmanaged>	
            <unmanaged-short>MFVideoInterlace_FieldSingleLower</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoInterlaceMode.MixedInterlaceOrProgressive">
            <summary>	
            <dd> <p> The stream contains a mix of interlaced and progressive modes. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoInterlace_MixedInterlaceOrProgressive']/*"/>	
            <msdn-id>ms694269</msdn-id>	
            <unmanaged>MFVideoInterlace_MixedInterlaceOrProgressive</unmanaged>	
            <unmanaged-short>MFVideoInterlace_MixedInterlaceOrProgressive</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoInterlaceMode.Last">
            <summary>	
            <dd> <p> Reserved. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoInterlace_Last']/*"/>	
            <msdn-id>ms694269</msdn-id>	
            <unmanaged>MFVideoInterlace_Last</unmanaged>	
            <unmanaged-short>MFVideoInterlace_Last</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoInterlaceMode.ForceDWORD">
            <summary>	
            <dd> <p> Reserved. This member forces the enumeration type to compile as a <strong>DWORD</strong> value. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoInterlace_ForceDWORD']/*"/>	
            <msdn-id>ms694269</msdn-id>	
            <unmanaged>MFVideoInterlace_ForceDWORD</unmanaged>	
            <unmanaged-short>MFVideoInterlace_ForceDWORD</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.VideoLighting">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies how the credential manager should obtain user credentials. </p>	
            </summary>	
            <remarks>	
            <p>The application implements the credential manager, which must expose the <strong>IMFNetCredentialManager</strong> interface. If the <strong>REQUIRE_PROMPT</strong> flag is set, the credential manager should prompt the user for his or her name and password.</p><p>The credential cache object sets the <strong>REQUIRE_PROMPT</strong> flag if the cache does not yet contain valid credentials. It also sets this flag if the credentials will be sent as plain text, unless the credential manager previously set the <strong>MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT</strong> option. (See <strong>IMFNetCredentialCache::SetUserOptions</strong>.)</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoLighting']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoLighting</unmanaged>	
            <unmanaged-short>MFVideoLighting</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoLighting.Unknown">
            <summary>	
            <dd> <p> The credential manager should prompt the user to provide the credentials. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoLighting_Unknown']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoLighting_Unknown</unmanaged>	
            <unmanaged-short>MFVideoLighting_Unknown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoLighting.Bright">
            <summary>	
            <dd> <p> </p><p><strong>Note</strong>??Requires Windows?7 or later.</p> <p>The credentials are saved to persistent storage. This flag acts as a hint for the application's UI. If the application prompts the user for credentials, the UI can indicate that the credentials have already been saved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoLighting_bright']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoLighting_bright</unmanaged>	
            <unmanaged-short>MFVideoLighting_bright</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoLighting.Office">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoLighting_office']/*"/>	
            <unmanaged>MFVideoLighting_office</unmanaged>	
            <unmanaged-short>MFVideoLighting_office</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoLighting.Dim">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoLighting_dim']/*"/>	
            <unmanaged>MFVideoLighting_dim</unmanaged>	
            <unmanaged-short>MFVideoLighting_dim</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoLighting.Dark">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoLighting_dark']/*"/>	
            <unmanaged>MFVideoLighting_dark</unmanaged>	
            <unmanaged-short>MFVideoLighting_dark</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoLighting.Last">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoLighting_Last']/*"/>	
            <unmanaged>MFVideoLighting_Last</unmanaged>	
            <unmanaged-short>MFVideoLighting_Last</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoLighting.ForceDWORD">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoLighting_ForceDWORD']/*"/>	
            <unmanaged>MFVideoLighting_ForceDWORD</unmanaged>	
            <unmanaged-short>MFVideoLighting_ForceDWORD</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.VideoPadFlags">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies how the credential manager should obtain user credentials. </p>	
            </summary>	
            <remarks>	
            <p>The application implements the credential manager, which must expose the <strong>IMFNetCredentialManager</strong> interface. If the <strong>REQUIRE_PROMPT</strong> flag is set, the credential manager should prompt the user for his or her name and password.</p><p>The credential cache object sets the <strong>REQUIRE_PROMPT</strong> flag if the cache does not yet contain valid credentials. It also sets this flag if the credentials will be sent as plain text, unless the credential manager previously set the <strong>MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT</strong> option. (See <strong>IMFNetCredentialCache::SetUserOptions</strong>.)</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPadFlags']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoPadFlags</unmanaged>	
            <unmanaged-short>MFVideoPadFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPadFlags.PadToNone">
            <summary>	
            <dd> <p> The credential manager should prompt the user to provide the credentials. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPadFlag_PAD_TO_None']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoPadFlag_PAD_TO_None</unmanaged>	
            <unmanaged-short>MFVideoPadFlag_PAD_TO_None</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPadFlags.PadTo4x3">
            <summary>	
            <dd> <p> </p><p><strong>Note</strong>??Requires Windows?7 or later.</p> <p>The credentials are saved to persistent storage. This flag acts as a hint for the application's UI. If the application prompts the user for credentials, the UI can indicate that the credentials have already been saved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPadFlag_PAD_TO_4x3']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoPadFlag_PAD_TO_4x3</unmanaged>	
            <unmanaged-short>MFVideoPadFlag_PAD_TO_4x3</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPadFlags.PadTo16x9">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPadFlag_PAD_TO_16x9']/*"/>	
            <unmanaged>MFVideoPadFlag_PAD_TO_16x9</unmanaged>	
            <unmanaged-short>MFVideoPadFlag_PAD_TO_16x9</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.VideoPrimaries">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies how the credential manager should obtain user credentials. </p>	
            </summary>	
            <remarks>	
            <p>The application implements the credential manager, which must expose the <strong>IMFNetCredentialManager</strong> interface. If the <strong>REQUIRE_PROMPT</strong> flag is set, the credential manager should prompt the user for his or her name and password.</p><p>The credential cache object sets the <strong>REQUIRE_PROMPT</strong> flag if the cache does not yet contain valid credentials. It also sets this flag if the credentials will be sent as plain text, unless the credential manager previously set the <strong>MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT</strong> option. (See <strong>IMFNetCredentialCache::SetUserOptions</strong>.)</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPrimaries']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoPrimaries</unmanaged>	
            <unmanaged-short>MFVideoPrimaries</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPrimaries.Unknown">
            <summary>	
            <dd> <p> The credential manager should prompt the user to provide the credentials. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPrimaries_Unknown']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoPrimaries_Unknown</unmanaged>	
            <unmanaged-short>MFVideoPrimaries_Unknown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPrimaries.Reserved">
            <summary>	
            <dd> <p> </p><p><strong>Note</strong>??Requires Windows?7 or later.</p> <p>The credentials are saved to persistent storage. This flag acts as a hint for the application's UI. If the application prompts the user for credentials, the UI can indicate that the credentials have already been saved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPrimaries_reserved']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoPrimaries_reserved</unmanaged>	
            <unmanaged-short>MFVideoPrimaries_reserved</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPrimaries.Bt709">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPrimaries_BT709']/*"/>	
            <unmanaged>MFVideoPrimaries_BT709</unmanaged>	
            <unmanaged-short>MFVideoPrimaries_BT709</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPrimaries.Bt4702SysM">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPrimaries_BT470_2_SysM']/*"/>	
            <unmanaged>MFVideoPrimaries_BT470_2_SysM</unmanaged>	
            <unmanaged-short>MFVideoPrimaries_BT470_2_SysM</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPrimaries.Bt4702SysBG">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPrimaries_BT470_2_SysBG']/*"/>	
            <unmanaged>MFVideoPrimaries_BT470_2_SysBG</unmanaged>	
            <unmanaged-short>MFVideoPrimaries_BT470_2_SysBG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPrimaries.Smpte170m">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPrimaries_SMPTE170M']/*"/>	
            <unmanaged>MFVideoPrimaries_SMPTE170M</unmanaged>	
            <unmanaged-short>MFVideoPrimaries_SMPTE170M</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPrimaries.Smpte240m">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPrimaries_SMPTE240M']/*"/>	
            <unmanaged>MFVideoPrimaries_SMPTE240M</unmanaged>	
            <unmanaged-short>MFVideoPrimaries_SMPTE240M</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPrimaries.Ebu3213">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPrimaries_EBU3213']/*"/>	
            <unmanaged>MFVideoPrimaries_EBU3213</unmanaged>	
            <unmanaged-short>MFVideoPrimaries_EBU3213</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPrimaries.SmpteC">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPrimaries_SMPTE_C']/*"/>	
            <unmanaged>MFVideoPrimaries_SMPTE_C</unmanaged>	
            <unmanaged-short>MFVideoPrimaries_SMPTE_C</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPrimaries.Last">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPrimaries_Last']/*"/>	
            <unmanaged>MFVideoPrimaries_Last</unmanaged>	
            <unmanaged-short>MFVideoPrimaries_Last</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoPrimaries.ForceDWORD">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoPrimaries_ForceDWORD']/*"/>	
            <unmanaged>MFVideoPrimaries_ForceDWORD</unmanaged>	
            <unmanaged-short>MFVideoPrimaries_ForceDWORD</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.VideoRotationFormat">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies how the credential manager should obtain user credentials. </p>	
            </summary>	
            <remarks>	
            <p>The application implements the credential manager, which must expose the <strong>IMFNetCredentialManager</strong> interface. If the <strong>REQUIRE_PROMPT</strong> flag is set, the credential manager should prompt the user for his or her name and password.</p><p>The credential cache object sets the <strong>REQUIRE_PROMPT</strong> flag if the cache does not yet contain valid credentials. It also sets this flag if the credentials will be sent as plain text, unless the credential manager previously set the <strong>MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT</strong> option. (See <strong>IMFNetCredentialCache::SetUserOptions</strong>.)</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoRotationFormat']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoRotationFormat</unmanaged>	
            <unmanaged-short>MFVideoRotationFormat</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoRotationFormat.Angle0">
            <summary>	
            <dd> <p> The credential manager should prompt the user to provide the credentials. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoRotationFormat_0']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoRotationFormat_0</unmanaged>	
            <unmanaged-short>MFVideoRotationFormat_0</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoRotationFormat.Angle90">
            <summary>	
            <dd> <p> </p><p><strong>Note</strong>??Requires Windows?7 or later.</p> <p>The credentials are saved to persistent storage. This flag acts as a hint for the application's UI. If the application prompts the user for credentials, the UI can indicate that the credentials have already been saved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoRotationFormat_90']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoRotationFormat_90</unmanaged>	
            <unmanaged-short>MFVideoRotationFormat_90</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoRotationFormat.Angle180">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoRotationFormat_180']/*"/>	
            <unmanaged>MFVideoRotationFormat_180</unmanaged>	
            <unmanaged-short>MFVideoRotationFormat_180</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoRotationFormat.Angle270">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoRotationFormat_270']/*"/>	
            <unmanaged>MFVideoRotationFormat_270</unmanaged>	
            <unmanaged-short>MFVideoRotationFormat_270</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.VideoSrcContentHintFlags">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies how the credential manager should obtain user credentials. </p>	
            </summary>	
            <remarks>	
            <p>The application implements the credential manager, which must expose the <strong>IMFNetCredentialManager</strong> interface. If the <strong>REQUIRE_PROMPT</strong> flag is set, the credential manager should prompt the user for his or her name and password.</p><p>The credential cache object sets the <strong>REQUIRE_PROMPT</strong> flag if the cache does not yet contain valid credentials. It also sets this flag if the credentials will be sent as plain text, unless the credential manager previously set the <strong>MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT</strong> option. (See <strong>IMFNetCredentialCache::SetUserOptions</strong>.)</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoSrcContentHintFlags']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoSrcContentHintFlags</unmanaged>	
            <unmanaged-short>MFVideoSrcContentHintFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoSrcContentHintFlags.None">
            <summary>	
            <dd> <p> The credential manager should prompt the user to provide the credentials. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoSrcContentHintFlag_None']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoSrcContentHintFlag_None</unmanaged>	
            <unmanaged-short>MFVideoSrcContentHintFlag_None</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoSrcContentHintFlags.Hint16x9">
            <summary>	
            <dd> <p> </p><p><strong>Note</strong>??Requires Windows?7 or later.</p> <p>The credentials are saved to persistent storage. This flag acts as a hint for the application's UI. If the application prompts the user for credentials, the UI can indicate that the credentials have already been saved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoSrcContentHintFlag_16x9']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoSrcContentHintFlag_16x9</unmanaged>	
            <unmanaged-short>MFVideoSrcContentHintFlag_16x9</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoSrcContentHintFlags.Hint235_1">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoSrcContentHintFlag_235_1']/*"/>	
            <unmanaged>MFVideoSrcContentHintFlag_235_1</unmanaged>	
            <unmanaged-short>MFVideoSrcContentHintFlag_235_1</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.VideoTransferFunction">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies how the credential manager should obtain user credentials. </p>	
            </summary>	
            <remarks>	
            <p>The application implements the credential manager, which must expose the <strong>IMFNetCredentialManager</strong> interface. If the <strong>REQUIRE_PROMPT</strong> flag is set, the credential manager should prompt the user for his or her name and password.</p><p>The credential cache object sets the <strong>REQUIRE_PROMPT</strong> flag if the cache does not yet contain valid credentials. It also sets this flag if the credentials will be sent as plain text, unless the credential manager previously set the <strong>MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT</strong> option. (See <strong>IMFNetCredentialCache::SetUserOptions</strong>.)</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransferFunction']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoTransferFunction</unmanaged>	
            <unmanaged-short>MFVideoTransferFunction</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.FuncUnknown">
            <summary>	
            <dd> <p> The credential manager should prompt the user to provide the credentials. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_Unknown']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoTransFunc_Unknown</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_Unknown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.Func10">
            <summary>	
            <dd> <p> </p><p><strong>Note</strong>??Requires Windows?7 or later.</p> <p>The credentials are saved to persistent storage. This flag acts as a hint for the application's UI. If the application prompts the user for credentials, the UI can indicate that the credentials have already been saved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_10']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoTransFunc_10</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_10</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.Func18">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_18']/*"/>	
            <unmanaged>MFVideoTransFunc_18</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_18</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.Func20">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_20']/*"/>	
            <unmanaged>MFVideoTransFunc_20</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_20</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.Func22">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_22']/*"/>	
            <unmanaged>MFVideoTransFunc_22</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_22</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.Func709">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_709']/*"/>	
            <unmanaged>MFVideoTransFunc_709</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_709</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.Func240m">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_240M']/*"/>	
            <unmanaged>MFVideoTransFunc_240M</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_240M</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.FuncSRGB">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_sRGB']/*"/>	
            <unmanaged>MFVideoTransFunc_sRGB</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_sRGB</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.Func28">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_28']/*"/>	
            <unmanaged>MFVideoTransFunc_28</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_28</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.FuncLog100">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_Log_100']/*"/>	
            <unmanaged>MFVideoTransFunc_Log_100</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_Log_100</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.FuncLog316">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_Log_316']/*"/>	
            <unmanaged>MFVideoTransFunc_Log_316</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_Log_316</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.Func709Sym">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_709_sym']/*"/>	
            <unmanaged>MFVideoTransFunc_709_sym</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_709_sym</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.FuncLast">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_Last']/*"/>	
            <unmanaged>MFVideoTransFunc_Last</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_Last</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferFunction.FuncForceDWORD">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransFunc_ForceDWORD']/*"/>	
            <unmanaged>MFVideoTransFunc_ForceDWORD</unmanaged>	
            <unmanaged-short>MFVideoTransFunc_ForceDWORD</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.VideoTransferMatrix">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies how the credential manager should obtain user credentials. </p>	
            </summary>	
            <remarks>	
            <p>The application implements the credential manager, which must expose the <strong>IMFNetCredentialManager</strong> interface. If the <strong>REQUIRE_PROMPT</strong> flag is set, the credential manager should prompt the user for his or her name and password.</p><p>The credential cache object sets the <strong>REQUIRE_PROMPT</strong> flag if the cache does not yet contain valid credentials. It also sets this flag if the credentials will be sent as plain text, unless the credential manager previously set the <strong>MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT</strong> option. (See <strong>IMFNetCredentialCache::SetUserOptions</strong>.)</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransferMatrix']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoTransferMatrix</unmanaged>	
            <unmanaged-short>MFVideoTransferMatrix</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferMatrix.Unknown">
            <summary>	
            <dd> <p> The credential manager should prompt the user to provide the credentials. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransferMatrix_Unknown']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoTransferMatrix_Unknown</unmanaged>	
            <unmanaged-short>MFVideoTransferMatrix_Unknown</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferMatrix.Bt709">
            <summary>	
            <dd> <p> </p><p><strong>Note</strong>??Requires Windows?7 or later.</p> <p>The credentials are saved to persistent storage. This flag acts as a hint for the application's UI. If the application prompts the user for credentials, the UI can indicate that the credentials have already been saved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransferMatrix_BT709']/*"/>	
            <msdn-id>ms700813</msdn-id>	
            <unmanaged>MFVideoTransferMatrix_BT709</unmanaged>	
            <unmanaged-short>MFVideoTransferMatrix_BT709</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferMatrix.Bt601">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransferMatrix_BT601']/*"/>	
            <unmanaged>MFVideoTransferMatrix_BT601</unmanaged>	
            <unmanaged-short>MFVideoTransferMatrix_BT601</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferMatrix.Smpte240m">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransferMatrix_SMPTE240M']/*"/>	
            <unmanaged>MFVideoTransferMatrix_SMPTE240M</unmanaged>	
            <unmanaged-short>MFVideoTransferMatrix_SMPTE240M</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferMatrix.Last">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransferMatrix_Last']/*"/>	
            <unmanaged>MFVideoTransferMatrix_Last</unmanaged>	
            <unmanaged-short>MFVideoTransferMatrix_Last</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoTransferMatrix.ForceDWORD">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoTransferMatrix_ForceDWORD']/*"/>	
            <unmanaged>MFVideoTransferMatrix_ForceDWORD</unmanaged>	
            <unmanaged-short>MFVideoTransferMatrix_ForceDWORD</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.AsfProfileAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.AsfProfileAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.AsfSplitterAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.AsfSplitterAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.AsfStreamConfigAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.AsfStreamConfigAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.AudioFormatGuids">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.AudioFormatGuids']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.MultisampledP1">
            <summary>Constant MultisampledP1.</summary>
            <unmanaged>MFAudioFormat_MSP1</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.Drm">
            <summary>Constant Drm.</summary>
            <unmanaged>MFAudioFormat_DRM</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.Dts">
            <summary>Constant Dts.</summary>
            <unmanaged>MFAudioFormat_DTS</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.Float">
            <summary>Constant Float.</summary>
            <unmanaged>MFAudioFormat_Float</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.WMAudioV9">
            <summary>Constant WMAudioV9.</summary>
            <unmanaged>MFAudioFormat_WMAudioV9</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.DolbyDDPlus">
            <summary>Constant DolbyDDPlus.</summary>
            <unmanaged>MFAudioFormat_Dolby_DDPlus</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.Pcm">
            <summary>Constant Pcm.</summary>
            <unmanaged>MFAudioFormat_PCM</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.Base">
            <summary>Constant Base.</summary>
            <unmanaged>MFAudioFormat_Base</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.Mp3">
            <summary>Constant Mp3.</summary>
            <unmanaged>MFAudioFormat_MP3</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.DolbyAc3">
            <summary>Constant DolbyAc3.</summary>
            <unmanaged>MFAudioFormat_Dolby_AC3</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.Wmaspdif">
            <summary>Constant Wmaspdif.</summary>
            <unmanaged>MFAudioFormat_WMASPDIF</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.WMAudioLossless">
            <summary>Constant WMAudioLossless.</summary>
            <unmanaged>MFAudioFormat_WMAudio_Lossless</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.Mpeg">
            <summary>Constant Mpeg.</summary>
            <unmanaged>MFAudioFormat_MPEG</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.DolbyAc3Spdif">
            <summary>Constant DolbyAc3Spdif.</summary>
            <unmanaged>MFAudioFormat_Dolby_AC3_SPDIF</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.Aac">
            <summary>Constant Aac.</summary>
            <unmanaged>MFAudioFormat_AAC</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.Adts">
            <summary>Constant Adts.</summary>
            <unmanaged>MFAudioFormat_ADTS</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.AudioFormatGuids.WMAudioV8">
            <summary>Constant WMAudioV8.</summary>
            <unmanaged>MFAudioFormat_WMAudioV8</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.AudioRendererAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.AudioRendererAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.ByteStreamAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.ByteStreamAttributeKeys']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamAttributeKeys.ContentType">
            <summary>Constant ContentType.</summary>
            <unmanaged>MF_BYTESTREAM_CONTENT_TYPE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamAttributeKeys.Duration">
            <summary>Constant Duration.</summary>
            <unmanaged>MF_BYTESTREAM_DURATION</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamAttributeKeys.EffectiveUrl">
            <summary>Constant EffectiveUrl.</summary>
            <unmanaged>MF_BYTESTREAM_EFFECTIVE_URL</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamAttributeKeys.IfoFileUri">
            <summary>Constant IfoFileUri.</summary>
            <unmanaged>MF_BYTESTREAM_IFO_FILE_URI</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamAttributeKeys.LastModifiedTime">
            <summary>Constant LastModifiedTime.</summary>
            <unmanaged>MF_BYTESTREAM_LAST_MODIFIED_TIME</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamAttributeKeys.OriginName">
            <summary>Constant OriginName.</summary>
            <unmanaged>MF_BYTESTREAM_ORIGIN_NAME</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.CaptureDeviceAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.CaptureDeviceAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.CaptureEngineAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.CaptureEngineAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.DeviceStreamAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.DeviceStreamAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.DLNAMediaSinkAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.DLNAMediaSinkAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.EventAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.EventAttributeKeys']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.EventAttributeKeys.TransformContext">
            <summary>Constant TransformContext.</summary>
            <unmanaged>MF_EVENT_MFT_CONTEXT</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.EventAttributeKeys.TransformInputStreamId">
            <summary>Constant TransformInputStreamId.</summary>
            <unmanaged>MF_EVENT_MFT_INPUT_STREAM_ID</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.EVRAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.EVRAttributeKeys']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.EVRAttributeKeys.SaRequiredSampleCount">
            <summary>Constant SaRequiredSampleCount.</summary>
            <unmanaged>MF_SA_REQUIRED_SAMPLE_COUNT</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.EVRConfigAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.EVRConfigAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.EVRCustomVideoAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.EVRCustomVideoAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.MediaAttributeKeys']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaAttributeKeys.LocalPluginControlPolicy">
            <summary>Constant LocalPluginControlPolicy.</summary>
            <unmanaged>MF_LOCAL_PLUGIN_CONTROL_POLICY</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.MediaEngineAttributeKeys']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.AudioCategory">
            <summary>Constant AudioCategory.</summary>
            <unmanaged>MF_MEDIA_ENGINE_AUDIO_CATEGORY</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.AudioEndpointRole">
            <summary>Constant AudioEndpointRole.</summary>
            <unmanaged>MF_MEDIA_ENGINE_AUDIO_ENDPOINT_ROLE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.Callback">
            <summary>Constant Callback.</summary>
            <unmanaged>MF_MEDIA_ENGINE_CALLBACK</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.ContentProtectionFlags">
            <summary>Constant ContentProtectionFlags.</summary>
            <unmanaged>MF_MEDIA_ENGINE_CONTENT_PROTECTION_FLAGS</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.ContentProtectionManager">
            <summary>Constant ContentProtectionManager.</summary>
            <unmanaged>MF_MEDIA_ENGINE_CONTENT_PROTECTION_MANAGER</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.DxgiManager">
            <summary>Constant DxgiManager.</summary>
            <unmanaged>MF_MEDIA_ENGINE_DXGI_MANAGER</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.Extension">
            <summary>Constant Extension.</summary>
            <unmanaged>MF_MEDIA_ENGINE_EXTENSION</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaEngineAttributeKeys.VideoOutputFormat">
            <summary>Constant VideoOutputFormat.</summary>
            <unmanaged>MF_MEDIA_ENGINE_VIDEO_OUTPUT_FORMAT</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaFactory">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.MediaFactory']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaFactory.Version">
            <summary>Constant Version.</summary>
            <unmanaged>MF_VERSION</unmanaged>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.Startup(System.Int32,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Initializes Microsoft Media Foundation.</p>	
            </summary>	
            <param name="version"><dd> <p>Version number. Use the value <strong><see cref="F:SharpDX.MediaFoundation.MediaFactory.Version"/></strong>, defined in mfapi.h.</p> </dd></param>	
            <param name="dwFlags"><dd> <p>This parameter is optional when using C++ but required in C. The value must be one of the following flags: </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td> <dl> <dt>MFSTARTUP_NOSOCKET</dt> </dl> </td><td> <p> Do not initialize the sockets library. </p> </td></tr> <tr><td> <dl> <dt>MFSTARTUP_LITE</dt> </dl> </td><td> <p> Equivalent to MFSTARTUP_NOSOCKET. </p> </td></tr> <tr><td> <dl> <dt>MFSTARTUP_FULL</dt> </dl> </td><td> <p> Initialize the entire Media Foundation platform. This is the default value when <em>dwFlags</em> is not specified. </p> </td></tr> </table> <p>?</p> </dd></param>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_BAD_STARTUP_VERSION</strong></dt> </dl> </td><td> <p> The <em>Version</em> parameter requires a newer version of Media Foundation than the version that is running.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_DISABLED_IN_SAFEMODE</strong></dt> </dl> </td><td> <p> The Media Foundation platform is disabled because the system was started in "Safe Mode" (fail-safe boot). </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> An application must call this function before using Media Foundation. Before your application quits, call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> once for every previous call to <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Startup(System.Int32,System.Int32)"/></strong>. </p><p> Do not call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Startup(System.Int32,System.Int32)"/></strong> or <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> from work queue threads. For more information about work queues, see Work Queues. </p><p>This function is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFStartup']/*"/>	
            <msdn-id>ms702238</msdn-id>	
            <unmanaged>HRESULT MFStartup([In] unsigned int Version,[In] unsigned int dwFlags)</unmanaged>	
            <unmanaged-short>MFStartup</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateMediaBufferWrapper(SharpDX.MediaFoundation.MediaBuffer,System.Int32,System.Int32,SharpDX.MediaFoundation.MediaBuffer@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a media buffer that wraps an existing media buffer. The new media buffer points to the same memory as the original media buffer, or to an offset from the start of the memory.</p>	
            </summary>	
            <param name="bufferRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaBuffer"/></strong> interface of the original media buffer. </p> </dd></param>	
            <param name="cbOffset"><dd> <p>The start of the new buffer, as an offset in bytes from the start of the original buffer. </p> </dd></param>	
            <param name="dwLength"><dd> <p>The size of the new buffer. The value of <em>cbOffset</em> + <em>dwLength</em> must be less than or equal to the size of valid data the original buffer. (The size of the valid data is returned by the <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.GetCurrentLength(System.Int32@)"/></strong> method.) </p> </dd></param>	
            <param name="bufferOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaBuffer"/></strong> interface. The caller must release the interface. </p> </dd></param>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The function succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_INVALIDARG</strong></dt> </dl> </td><td> <p> The requested offset or the requested length is not valid. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>The maximum size of the wrapper buffer is limited to the size of the valid data in the original buffer. This might be less than the allocated size of the original buffer. To set the size of the valid data, call <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.SetCurrentLength(System.Int32)"/></strong>.</p><p>This function is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateMediaBufferWrapper']/*"/>	
            <msdn-id>aa370450</msdn-id>	
            <unmanaged>HRESULT MFCreateMediaBufferWrapper([In] IMFMediaBuffer* pBuffer,[In] unsigned int cbOffset,[In] unsigned int dwLength,[Out] IMFMediaBuffer** ppBuffer)</unmanaged>	
            <unmanaged-short>MFCreateMediaBufferWrapper</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.GetAttributesAsBlobSize(SharpDX.MediaFoundation.MediaAttributes,System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the size of the buffer needed for the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.GetAttributesAsBlob(SharpDX.MediaFoundation.MediaAttributes,System.Byte[],System.Int32)"/></strong> function.</p>	
            </summary>	
            <param name="attributesRef">No documentation.</param>	
            <param name="cbBufSizeRef">No documentation.</param>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The function succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Use this function to find the size of the array that is needed for the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.GetAttributesAsBlob(SharpDX.MediaFoundation.MediaAttributes,System.Byte[],System.Int32)"/></strong> function.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFGetAttributesAsBlobSize']/*"/>	
            <msdn-id>ms697064</msdn-id>	
            <unmanaged>HRESULT MFGetAttributesAsBlobSize([In] IMFAttributes* pAttributes,[Out] unsigned int* pcbBufSize)</unmanaged>	
            <unmanaged-short>MFGetAttributesAsBlobSize</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.UnlockPlatform">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Unlocks the Media Foundation platform after it was locked by a call to the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.LockPlatform"/></strong> function.</p>	
            </summary>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The function succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>The application must call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.UnlockPlatform"/></strong> once for every call to <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.LockPlatform"/></strong>.</p><p>This function is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFUnlockPlatform']/*"/>	
            <msdn-id>ms703879</msdn-id>	
            <unmanaged>HRESULT MFUnlockPlatform()</unmanaged>	
            <unmanaged-short>MFUnlockPlatform</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateSample(SharpDX.MediaFoundation.Sample@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Creates an empty media sample.</p>	
            </summary>	
            <param name="iMFSampleOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.Sample"/></strong> interface of the media sample. The caller must release the interface.</p> </dd></param>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The function succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Initially the sample does not contain any media buffers.</p><p>This function is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateSample']/*"/>	
            <msdn-id>ms702276</msdn-id>	
            <unmanaged>HRESULT MFCreateSample([Out] IMFSample** ppIMFSample)</unmanaged>	
            <unmanaged-short>MFCreateSample</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateAttributes(SharpDX.MediaFoundation.MediaAttributes,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Creates an empty attribute store. </p>	
            </summary>	
            <param name="mFAttributesOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface. The caller must release the interface. </p> </dd></param>	
            <param name="cInitialSize"><dd> <p>The initial number of elements allocated for the attribute store. The attribute store grows as needed. </p> </dd></param>	
            <returns><p>If this function succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>Attributes are used throughout Microsoft Media Foundation to configure objects, describe media formats, query object properties, and other purposes. For more information, see Attributes in Media Foundation.</p><p>For a complete list of all the defined attribute GUIDs in Media Foundation, see Media Foundation Attributes.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateAttributes']/*"/>	
            <msdn-id>ms701878</msdn-id>	
            <unmanaged>HRESULT MFCreateAttributes([Out, Fast] IMFAttributes** ppMFAttributes,[In] unsigned int cInitialSize)</unmanaged>	
            <unmanaged-short>MFCreateAttributes</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateAsyncResult(SharpDX.ComObject,SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject,SharpDX.MediaFoundation.AsyncResult@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Creates an asynchronous result object. Use this function if you are implementing an asynchronous method.</p>	
            </summary>	
            <param name="unkObjectRef"><dd> <p>Pointer to the object stored in the asynchronous result. This reference is returned by the <strong><see cref="M:SharpDX.MediaFoundation.AsyncResult.GetObject(SharpDX.ComObject@)"/></strong> method. This parameter can be <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="callbackRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncCallback"/></strong> interface. This interface is implemented by the caller of the asynchronous method.</p> </dd></param>	
            <param name="unkStateRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of a state object. This value is provided by the caller of the asynchronous method. This parameter can be <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="asyncResultOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The function succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>To invoke the callback specified in <em>pCallback</em>, call the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.InvokeCallback(SharpDX.MediaFoundation.AsyncResult)"/></strong> function.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateAsyncResult']/*"/>	
            <msdn-id>ms698952</msdn-id>	
            <unmanaged>HRESULT MFCreateAsyncResult([In] IUnknown* punkObject,[In] IMFAsyncCallback* pCallback,[In] IUnknown* punkState,[Out] IMFAsyncResult** ppAsyncResult)</unmanaged>	
            <unmanaged-short>MFCreateAsyncResult</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateVideoSampleAllocatorEx(System.Guid,System.IntPtr@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates an object that allocates video samples that are compatible with Microsoft DirectX Graphics Infrastructure (DXGI).</p>	
            </summary>	
            <param name="riid"><dd> <p>The identifier of the interface to retrieve. Specify one of the following values.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong><strong>IID_IUnknown</strong></strong></dt> </dl> </td><td> <p>Retrieve an <strong><see cref="T:SharpDX.ComObject"/></strong> reference.</p> </td></tr> <tr><td><dl> <dt><strong><strong>IID_IMFVideoSampleAllocator</strong></strong></dt> </dl> </td><td> <p>Retrieve an <strong>IMFVideoSampleAllocator</strong> reference.</p> </td></tr> <tr><td><dl> <dt><strong><strong>IID_IMFVideoSampleAllocatorEx</strong></strong></dt> </dl> </td><td> <p>Retrieve an <strong>IMFVideoSampleAllocatorEx</strong> reference.</p> </td></tr> <tr><td><dl> <dt><strong><strong>IID_IMFVideoSampleAllocatorCallback</strong></strong></dt> </dl> </td><td> <p>Retrieve an <strong>IMFVideoSampleAllocatorCallback</strong> reference.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="sampleAllocatorOut"><dd> <p>Receives a reference to the requested interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>If this function succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This function creates an allocator for DXGI video surfaces. The buffers created by this allocator expose the <strong><see cref="T:SharpDX.MediaFoundation.DXGIBuffer"/></strong> interface. To create an allocator for Microsoft Direct3D?9 video surfaces, call <strong>MFCreateVideoSampleAllocator</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateVideoSampleAllocatorEx']/*"/>	
            <msdn-id>hh162763</msdn-id>	
            <unmanaged>HRESULT MFCreateVideoSampleAllocatorEx([In] const GUID&amp; riid,[Out] void** ppSampleAllocator)</unmanaged>	
            <unmanaged-short>MFCreateVideoSampleAllocatorEx</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.InvokeCallback(SharpDX.MediaFoundation.AsyncResult)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Invokes a callback method to complete an asynchronous operation. </p>	
            </summary>	
            <param name="asyncResultRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface. To create this object, call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateAsyncResult(SharpDX.ComObject,SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject,SharpDX.MediaFoundation.AsyncResult@)"/></strong>.</p> </dd></param>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><strong><see cref="F:SharpDX.Result.Ok"/></strong></strong></dt> </dl> </td><td> <p> The function succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong><strong>MF_E_INVALID_WORKQUEUE</strong></strong></dt> </dl> </td><td> <p>Invalid work queue. For more information, see <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.GetParameters(System.Int32@,System.Int32@)"/></strong>.</p> </td></tr> <tr><td> <dl> <dt><strong><strong>MF_E_SHUTDOWN</strong></strong></dt> </dl> </td><td> <p>The <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> function was called to shut down the Media Foundation platform.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> If you are implementing an asynchronous method, use this function to invoke the caller's <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method.</p><p>The callback is invoked from a Media Foundation work queue. For more information, see Writing an Asynchronous Method.</p><p>The <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> function shuts down the work queue threads, so the callback is not guaranteed to be invoked after <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> is called.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFInvokeCallback']/*"/>	
            <msdn-id>ms695400</msdn-id>	
            <unmanaged>HRESULT MFInvokeCallback([In] IMFAsyncResult* pAsyncResult)</unmanaged>	
            <unmanaged-short>MFInvokeCallback</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.Shutdown">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Shuts down the Microsoft Media Foundation platform. Call this function once for every call to <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Startup(System.Int32,System.Int32)"/></strong>. Do not call this function from work queue threads.</p>	
            </summary>	
            <returns><p>If this function succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This function is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFShutdown']/*"/>	
            <msdn-id>ms694273</msdn-id>	
            <unmanaged>HRESULT MFShutdown()</unmanaged>	
            <unmanaged-short>MFShutdown</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.GetAttributesAsBlob(SharpDX.MediaFoundation.MediaAttributes,System.Byte[],System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the size of the buffer needed for the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.GetAttributesAsBlob(SharpDX.MediaFoundation.MediaAttributes,System.Byte[],System.Int32)"/></strong> function.</p>	
            </summary>	
            <param name="attributesRef">No documentation.</param>	
            <param name="bufRef">No documentation.</param>	
            <param name="cbBufSize">No documentation.</param>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The function succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Use this function to find the size of the array that is needed for the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.GetAttributesAsBlob(SharpDX.MediaFoundation.MediaAttributes,System.Byte[],System.Int32)"/></strong> function.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFGetAttributesAsBlob']/*"/>	
            <msdn-id>ms697064</msdn-id>	
            <unmanaged>HRESULT MFGetAttributesAsBlob([In] IMFAttributes* pAttributes,[Out, Buffer] unsigned char* pBuf,[In] unsigned int cbBufSize)</unmanaged>	
            <unmanaged-short>MFGetAttributesAsBlob</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.LockDXGIDeviceManager(System.Int32@,SharpDX.MediaFoundation.DXGIDeviceManager@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Unlocks the shared Microsoft DirectX Graphics Infrastructure (DXGI) Device Manager.</p>	
            </summary>	
            <param name="resetTokenRef">No documentation.</param>	
            <param name="managerOut">No documentation.</param>	
            <returns><p>If this function succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>Call this function after a successful call to the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.LockDXGIDeviceManager(System.Int32@,SharpDX.MediaFoundation.DXGIDeviceManager@)"/></strong> function.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFLockDXGIDeviceManager']/*"/>	
            <msdn-id>hh162800</msdn-id>	
            <unmanaged>HRESULT MFLockDXGIDeviceManager([Out, Optional] unsigned int* pResetToken,[Out] IMFDXGIDeviceManager** ppManager)</unmanaged>	
            <unmanaged-short>MFLockDXGIDeviceManager</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateAlignedMemoryBuffer(System.Int32,System.Int32,SharpDX.MediaFoundation.MediaBuffer@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Allocates system memory with a specified byte alignment and creates a media buffer to manage the memory. </p>	
            </summary>	
            <param name="cbMaxLength"><dd> <p>Size of the buffer, in bytes.</p> </dd></param>	
            <param name="cbAligment"><dd> <p> Specifies the memory alignment for the buffer. Use one of the following constants. </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>MF_1_BYTE_ALIGNMENT</strong></dt> <dt>0x00000000</dt> </dl> </td><td> <p> Align to 1 bytes. </p> </td></tr> <tr><td><dl> <dt><strong>MF_2_BYTE_ALIGNMENT</strong></dt> <dt>0x00000001</dt> </dl> </td><td> <p> Align to 2 bytes. </p> </td></tr> <tr><td><dl> <dt><strong>MF_4_BYTE_ALIGNMENT</strong></dt> <dt>0x00000003</dt> </dl> </td><td> <p> Align to 4 bytes. </p> </td></tr> <tr><td><dl> <dt><strong>MF_8_BYTE_ALIGNMENT</strong></dt> <dt>0x00000007</dt> </dl> </td><td> <p> Align to 8 bytes. </p> </td></tr> <tr><td><dl> <dt><strong>MF_16_BYTE_ALIGNMENT</strong></dt> <dt>0x0000000F</dt> </dl> </td><td> <p> Align to 16 bytes. </p> </td></tr> <tr><td><dl> <dt><strong>MF_32_BYTE_ALIGNMENT</strong></dt> <dt>0x0000001F</dt> </dl> </td><td> <p> Align to 32 bytes. </p> </td></tr> <tr><td><dl> <dt><strong>MF_64_BYTE_ALIGNMENT</strong></dt> <dt>0x0000003F</dt> </dl> </td><td> <p> Align to 64 bytes. </p> </td></tr> <tr><td><dl> <dt><strong>MF_128_BYTE_ALIGNMENT</strong></dt> <dt>0x0000007F</dt> </dl> </td><td> <p> Align to 128 bytes. </p> </td></tr> <tr><td><dl> <dt><strong>MF_256_BYTE_ALIGNMENT</strong></dt> <dt>0x000000FF</dt> </dl> </td><td> <p> Align to 256 bytes. </p> </td></tr> <tr><td><dl> <dt><strong>MF_512_BYTE_ALIGNMENT</strong></dt> <dt>0x000001FF</dt> </dl> </td><td> <p> Align to 512 bytes. </p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="bufferOut"><dd> <p> Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaBuffer"/></strong> interface of the media buffer. The caller must release the interface. </p> </dd></param>	
            <returns><p> The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><strong><see cref="F:SharpDX.Result.Ok"/></strong></strong></dt> </dl> </td><td> <p> The function succeeded. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> When the media buffer object is destroyed, it releases the allocated memory. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateAlignedMemoryBuffer']/*"/>	
            <msdn-id>bb970523</msdn-id>	
            <unmanaged>HRESULT MFCreateAlignedMemoryBuffer([In] unsigned int cbMaxLength,[In] unsigned int cbAligment,[Out] IMFMediaBuffer** ppBuffer)</unmanaged>	
            <unmanaged-short>MFCreateAlignedMemoryBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateCollection(SharpDX.MediaFoundation.Collection@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> </p><p>Creates an empty collection object.</p>	
            </summary>	
            <param name="iMFCollectionOut"><dd> <p>Receives a reference to the collection object's <strong><see cref="T:SharpDX.MediaFoundation.Collection"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateCollection']/*"/>	
            <msdn-id>ms698852</msdn-id>	
            <unmanaged>HRESULT MFCreateCollection([Out] IMFCollection** ppIMFCollection)</unmanaged>	
            <unmanaged-short>MFCreateCollection</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateDXGIDeviceManager(System.Int32@,SharpDX.MediaFoundation.DXGIDeviceManager)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates an instance of the Microsoft DirectX Graphics Infrastructure (DXGI) Device Manager.</p>	
            </summary>	
            <param name="resetToken"><dd> <p> Receives a token that identifies this instance of the DXGI Device Manager. Use this token when calling <strong><see cref="M:SharpDX.MediaFoundation.DXGIDeviceManager.ResetDevice(SharpDX.ComObject)"/></strong>. </p> </dd></param>	
            <param name="deviceManagerOut"><dd> <p> Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.DXGIDeviceManager"/></strong> interface. The caller must release the interface. </p> </dd></param>	
            <returns><p>If this function succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateDXGIDeviceManager']/*"/>	
            <msdn-id>hh162750</msdn-id>	
            <unmanaged>HRESULT MFCreateDXGIDeviceManager([Out] unsigned int* resetToken,[Out, Fast] IMFDXGIDeviceManager** ppDeviceManager)</unmanaged>	
            <unmanaged-short>MFCreateDXGIDeviceManager</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.LockPlatform">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Blocks the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> function.</p>	
            </summary>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The function succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This function prevents work queue threads from being shut down when <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> is called. Use this function to ensure that asynchronous operations complete gracefully before the platform shuts down.</p><p>This function holds a lock on the Media Foundation platform. To unlock the platform, call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.UnlockPlatform"/></strong>. The application must call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.UnlockPlatform"/></strong> once for every call to <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.LockPlatform"/></strong>.</p><p>The <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> function blocks until the platform is unlocked, or until a fixed wait period has elapsed. (The wait period is a few seconds.) To avoid memory leaks, the application should unlock the platform before the wait period ends. For example, cancel any asynchronous operations that are waiting to complete and are holding a lock on the platform.</p><p>The default implementation of the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface automatically locks the Media Foundation platform when the result object is created. Releasing the interface unlocks the platform. Therefore, in most cases your application does not need to lock the platform directly. For more information, see Work Queues.</p><p>This function is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFLockPlatform']/*"/>	
            <msdn-id>ms693588</msdn-id>	
            <unmanaged>HRESULT MFLockPlatform()</unmanaged>	
            <unmanaged-short>MFLockPlatform</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateMemoryBuffer(System.Int32,SharpDX.MediaFoundation.MediaBuffer@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Allocates system memory and creates a media buffer to manage it.</p>	
            </summary>	
            <param name="cbMaxLength"><dd> <p>Size of the buffer, in bytes.</p> </dd></param>	
            <param name="bufferOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaBuffer"/></strong> interface of the media buffer. The caller must release the interface.</p> </dd></param>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The function succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_OUTOFMEMORY</strong></dt> </dl> </td><td> <p>Insufficient memory.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>The function allocates a buffer with a 1-byte memory alignment. To allocate a buffer that is aligned to a larger memory boundary, call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateAlignedMemoryBuffer(System.Int32,System.Int32,SharpDX.MediaFoundation.MediaBuffer@)"/></strong>.</p><p>When the media buffer object is destroyed, it releases the allocated memory.</p><p>This function is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateMemoryBuffer']/*"/>	
            <msdn-id>ms695212</msdn-id>	
            <unmanaged>HRESULT MFCreateMemoryBuffer([In] unsigned int cbMaxLength,[Out] IMFMediaBuffer** ppBuffer)</unmanaged>	
            <unmanaged-short>MFCreateMemoryBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateMediaBufferFromMediaType(SharpDX.MediaFoundation.MediaType,System.Int64,System.Int32,System.Int32,SharpDX.MediaFoundation.MediaBuffer@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Initializes Microsoft Media Foundation.</p>	
            </summary>	
            <param name="mediaTypeRef"><dd> <p>Version number. Use the value <strong><see cref="F:SharpDX.MediaFoundation.MediaFactory.Version"/></strong>, defined in mfapi.h.</p> </dd></param>	
            <param name="llDuration"><dd> <p>This parameter is optional when using C++ but required in C. The value must be one of the following flags: </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td> <dl> <dt>MFSTARTUP_NOSOCKET</dt> </dl> </td><td> <p> Do not initialize the sockets library. </p> </td></tr> <tr><td> <dl> <dt>MFSTARTUP_LITE</dt> </dl> </td><td> <p> Equivalent to MFSTARTUP_NOSOCKET. </p> </td></tr> <tr><td> <dl> <dt>MFSTARTUP_FULL</dt> </dl> </td><td> <p> Initialize the entire Media Foundation platform. This is the default value when <em>dwFlags</em> is not specified. </p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="dwMinLength">No documentation.</param>	
            <param name="dwMinAlignment">No documentation.</param>	
            <param name="bufferOut">No documentation.</param>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_BAD_STARTUP_VERSION</strong></dt> </dl> </td><td> <p> The <em>Version</em> parameter requires a newer version of Media Foundation than the version that is running.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_DISABLED_IN_SAFEMODE</strong></dt> </dl> </td><td> <p> The Media Foundation platform is disabled because the system was started in "Safe Mode" (fail-safe boot). </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> An application must call this function before using Media Foundation. Before your application quits, call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> once for every previous call to <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Startup(System.Int32,System.Int32)"/></strong>. </p><p> Do not call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Startup(System.Int32,System.Int32)"/></strong> or <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> from work queue threads. For more information about work queues, see Work Queues. </p><p>This function is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateMediaBufferFromMediaType']/*"/>	
            <msdn-id>ms702238</msdn-id>	
            <unmanaged>HRESULT MFCreateMediaBufferFromMediaType([In] IMFMediaType* pMediaType,[In] longlong llDuration,[In] unsigned int dwMinLength,[In] unsigned int dwMinAlignment,[Out] IMFMediaBuffer** ppBuffer)</unmanaged>	
            <unmanaged-short>MFCreateMediaBufferFromMediaType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.Create2DMediaBuffer(System.Int32,System.Int32,System.Int32,SharpDX.Bool,SharpDX.MediaFoundation.MediaBuffer@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a system-memory buffer object to hold 2D image data.</p>	
            </summary>	
            <param name="dwWidth"><dd> <p>Width of the image, in pixels. </p> </dd></param>	
            <param name="dwHeight"><dd> <p>Height of the image, in pixels.</p> </dd></param>	
            <param name="dwFourCC"><dd> <p>A <strong>FOURCC</strong> code or D3DFORMAT value that specifies the video format. If you have a video subtype <see cref="T:System.Guid"/>, you can use the first <strong>DWORD</strong> of the subtype. </p> </dd></param>	
            <param name="fBottomUp"><dd> <p>If <strong>TRUE,</strong> the buffer's <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.ContiguousCopyTo(System.Byte[],System.Int32)"/></strong> method copies the buffer into a bottom-up format. The bottom-up format is compatible with GDI for uncompressed RGB images. If this parameter is <strong><see cref="F:SharpDX.Result.False"/></strong>, the <strong>ContiguousCopyTo</strong> method copies the buffer into a top-down format, which is compatible with DirectX.  </p> <p>For more information about top-down versus bottom-up images, see Image Stride. </p> </dd></param>	
            <param name="bufferOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaBuffer"/></strong> interface.</p> </dd></param>	
            <returns><p>This function can return one of these values.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>Success.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDMEDIATYPE</strong></dt> </dl> </td><td> <p>Unrecognized video format.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>The returned buffer object also exposes the <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D2"/></strong> interface.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreate2DMediaBuffer']/*"/>	
            <msdn-id>hh162746</msdn-id>	
            <unmanaged>HRESULT MFCreate2DMediaBuffer([In] unsigned int dwWidth,[In] unsigned int dwHeight,[In] unsigned int dwFourCC,[In] BOOL fBottomUp,[Out] IMFMediaBuffer** ppBuffer)</unmanaged>	
            <unmanaged-short>MFCreate2DMediaBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.LlMulDiv(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Calculates ((a * b) + d) / c, where each term is a 64-bit signed value.</p>	
            </summary>	
            <param name="a"><dd> <p>A multiplier.</p> </dd></param>	
            <param name="b"><dd> <p>Another multiplier.</p> </dd></param>	
            <param name="c"><dd> <p>The divisor.</p> </dd></param>	
            <param name="d"><dd> <p>The rounding factor.</p> </dd></param>	
            <returns><p>Returns the result of the calculation. If numeric overflow occurs, the function returns _I64_MAX (positive overflow) or LLONG_MIN (negative overflow). If Mfplat.dll cannot be loaded, the function returns _I64_MAX.</p></returns>	
            <remarks>	
            <p><strong>Note</strong>??A previous version of this topic described the parameters incorrectly. The divisor is <em>c</em> and the rounding factor is <em>d</em>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFllMulDiv']/*"/>	
            <msdn-id>dd388510</msdn-id>	
            <unmanaged>longlong MFllMulDiv([In] longlong a,[In] longlong b,[In] longlong c,[In] longlong d)</unmanaged>	
            <unmanaged-short>MFllMulDiv</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateDXGISurfaceBuffer(System.Guid,SharpDX.ComObject,System.Int32,SharpDX.Bool,SharpDX.MediaFoundation.MediaBuffer@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a media buffer to manage a Microsoft DirectX Graphics Infrastructure (DXGI) surface.</p>	
            </summary>	
            <param name="riid"><dd> <p> Identifies the type of DXGI surface. This value must be <strong>IID_ID3D11Texture2D</strong>. </p> </dd></param>	
            <param name="unkSurfaceRef"><dd> <p> A reference to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of the DXGI surface. </p> </dd></param>	
            <param name="uSubresourceIndex"><dd> <p>The zero-based index of a subresource of the surface. The media buffer object is associated with this subresource.</p> </dd></param>	
            <param name="fBottomUpWhenLinear"><dd> <p> If <strong>TRUE</strong>, the buffer's <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.ContiguousCopyTo(System.Byte[],System.Int32)"/></strong> method copies the buffer into a bottom-up format. The bottom-up format is compatible with GDI for uncompressed RGB images. If this parameter is <strong><see cref="F:SharpDX.Result.False"/></strong>, the <strong>ContiguousCopyTo</strong> method copies the buffer into a top-down format, which is compatible with Direct3D. </p> <p>For more information about top-down versus bottom-up images, see Image Stride.</p> </dd></param>	
            <param name="bufferOut"><dd> <p> Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaBuffer"/></strong> interface. The caller must release the buffer. </p> </dd></param>	
            <returns><p>If this function succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The returned buffer object supports the following interfaces:</p><ul> <li> <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D"/></strong> </li> <li> <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D2"/></strong> </li> <li> <strong><see cref="T:SharpDX.MediaFoundation.DXGIBuffer"/></strong> </li> <li> <strong><see cref="T:SharpDX.MediaFoundation.MediaBuffer"/></strong> </li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateDXGISurfaceBuffer']/*"/>	
            <msdn-id>hh162751</msdn-id>	
            <unmanaged>HRESULT MFCreateDXGISurfaceBuffer([In] const GUID&amp; riid,[In] IUnknown* punkSurface,[In] unsigned int uSubresourceIndex,[In] BOOL fBottomUpWhenLinear,[Out] IMFMediaBuffer** ppBuffer)</unmanaged>	
            <unmanaged-short>MFCreateDXGISurfaceBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.UnlockDXGIDeviceManager">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Unlocks the shared Microsoft DirectX Graphics Infrastructure (DXGI) Device Manager.</p>	
            </summary>	
            <returns><p>If this function succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>Call this function after a successful call to the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.LockDXGIDeviceManager(System.Int32@,SharpDX.MediaFoundation.DXGIDeviceManager@)"/></strong> function.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFUnlockDXGIDeviceManager']/*"/>	
            <msdn-id>hh162800</msdn-id>	
            <unmanaged>HRESULT MFUnlockDXGIDeviceManager()</unmanaged>	
            <unmanaged-short>MFUnlockDXGIDeviceManager</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateMFByteStreamOnStreamEx(SharpDX.ComObject,SharpDX.MediaFoundation.IByteStream)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a Microsoft Media Foundation byte stream that wraps an <strong>IRandomAccessStream</strong> object.</p>	
            </summary>	
            <param name="unkStreamRef">No documentation.</param>	
            <param name="byteStreamOut">No documentation.</param>	
            <returns><p>If this function succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateMFByteStreamOnStreamEx']/*"/>	
            <msdn-id>hh162754</msdn-id>	
            <unmanaged>HRESULT MFCreateMFByteStreamOnStreamEx([In] IUnknown* punkStream,[Out, Fast] IMFByteStream** ppByteStream)</unmanaged>	
            <unmanaged-short>MFCreateMFByteStreamOnStreamEx</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateStreamOnMFByteStreamEx(System.IntPtr,System.Guid,System.IntPtr@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Initializes Microsoft Media Foundation.</p>	
            </summary>	
            <param name="byteStreamRef"><dd> <p>Version number. Use the value <strong><see cref="F:SharpDX.MediaFoundation.MediaFactory.Version"/></strong>, defined in mfapi.h.</p> </dd></param>	
            <param name="riid"><dd> <p>This parameter is optional when using C++ but required in C. The value must be one of the following flags: </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td> <dl> <dt>MFSTARTUP_NOSOCKET</dt> </dl> </td><td> <p> Do not initialize the sockets library. </p> </td></tr> <tr><td> <dl> <dt>MFSTARTUP_LITE</dt> </dl> </td><td> <p> Equivalent to MFSTARTUP_NOSOCKET. </p> </td></tr> <tr><td> <dl> <dt>MFSTARTUP_FULL</dt> </dl> </td><td> <p> Initialize the entire Media Foundation platform. This is the default value when <em>dwFlags</em> is not specified. </p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="vOut">No documentation.</param>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_BAD_STARTUP_VERSION</strong></dt> </dl> </td><td> <p> The <em>Version</em> parameter requires a newer version of Media Foundation than the version that is running.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_DISABLED_IN_SAFEMODE</strong></dt> </dl> </td><td> <p> The Media Foundation platform is disabled because the system was started in "Safe Mode" (fail-safe boot). </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> An application must call this function before using Media Foundation. Before your application quits, call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> once for every previous call to <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Startup(System.Int32,System.Int32)"/></strong>. </p><p> Do not call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Startup(System.Int32,System.Int32)"/></strong> or <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> from work queue threads. For more information about work queues, see Work Queues. </p><p>This function is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateStreamOnMFByteStreamEx']/*"/>	
            <msdn-id>ms702238</msdn-id>	
            <unmanaged>HRESULT MFCreateStreamOnMFByteStreamEx([In] IMFByteStream* pByteStream,[In] const GUID&amp; riid,[Out] void** ppv)</unmanaged>	
            <unmanaged-short>MFCreateStreamOnMFByteStreamEx</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreatePropertiesFromMediaType(SharpDX.MediaFoundation.MediaType,System.Guid,System.IntPtr@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="mediaTypeRef">No documentation.</param>	
            <param name="riid">No documentation.</param>	
            <param name="vOut">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreatePropertiesFromMediaType']/*"/>	
            <unmanaged>HRESULT MFCreatePropertiesFromMediaType([In] IMFMediaType* pMediaType,[In] const GUID&amp; riid,[Out] void** ppv)</unmanaged>	
            <unmanaged-short>MFCreatePropertiesFromMediaType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.CreateMediaTypeFromProperties(SharpDX.ComObject,SharpDX.MediaFoundation.MediaType@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="unkStreamRef">No documentation.</param>	
            <param name="mediaTypeOut">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFCreateMediaTypeFromProperties']/*"/>	
            <unmanaged>HRESULT MFCreateMediaTypeFromProperties([In] IUnknown* punkStream,[Out] IMFMediaType** ppMediaType)</unmanaged>	
            <unmanaged-short>MFCreateMediaTypeFromProperties</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.DeserializeAttributesFromStream(SharpDX.MediaFoundation.MediaAttributes,System.Int32,System.IntPtr)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Loads attributes from a stream into an attribute store.</p>	
            </summary>	
            <param name="attrRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface of the attribute store.</p> </dd></param>	
            <param name="dwOptions"><dd> <p>Bitwise <strong>OR</strong> of zero or more flags from the <strong><see cref="T:SharpDX.MediaFoundation.AttributeSerializeOptions"/></strong> enumeration.</p> </dd></param>	
            <param name="stmRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.Win32.IStream"/></strong> interface of the stream from which to read the attributes.</p> </dd></param>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Use this function to deserialize an attribute store that was serialized with the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.SerializeAttributesToStream(SharpDX.MediaFoundation.MediaAttributes,System.Int32,System.IntPtr)"/></strong> function.</p><p>If <em>dwOptions</em> contains the <see cref="F:SharpDX.MediaFoundation.AttributeSerializeOptions.UnknownByref"/> flag, the function deserializes <strong><see cref="T:SharpDX.ComObject"/></strong> references from the stream, as follows:</p><ul> <li> <p>If the <strong><see cref="T:SharpDX.Win32.IStream"/></strong> reference exposes the <strong>IMFObjectReferenceStream</strong> interface (through <strong>QueryInterface</strong>), the function calls <strong>IMFObjectReferenceStream::LoadReference</strong> to deserialize each reference.</p> </li> <li> <p>Otherwise, the function calls <strong>CoUnmarshalInterface</strong> to deserialize a proxy for the object.</p> </li> </ul><p>This function deletes any attributes that were previously stored in <em>pAttr</em>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFDeserializeAttributesFromStream']/*"/>	
            <msdn-id>ms703162</msdn-id>	
            <unmanaged>HRESULT MFDeserializeAttributesFromStream([In] IMFAttributes* pAttr,[In] unsigned int dwOptions,[In] IStream* pStm)</unmanaged>	
            <unmanaged-short>MFDeserializeAttributesFromStream</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaFactory.SerializeAttributesToStream(SharpDX.MediaFoundation.MediaAttributes,System.Int32,System.IntPtr)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Loads attributes from a stream into an attribute store.</p>	
            </summary>	
            <param name="attrRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface of the attribute store.</p> </dd></param>	
            <param name="dwOptions"><dd> <p>Bitwise <strong>OR</strong> of zero or more flags from the <strong><see cref="T:SharpDX.MediaFoundation.AttributeSerializeOptions"/></strong> enumeration.</p> </dd></param>	
            <param name="stmRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.Win32.IStream"/></strong> interface of the stream from which to read the attributes.</p> </dd></param>	
            <returns><p>The function returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Use this function to deserialize an attribute store that was serialized with the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.SerializeAttributesToStream(SharpDX.MediaFoundation.MediaAttributes,System.Int32,System.IntPtr)"/></strong> function.</p><p>If <em>dwOptions</em> contains the <see cref="F:SharpDX.MediaFoundation.AttributeSerializeOptions.UnknownByref"/> flag, the function deserializes <strong><see cref="T:SharpDX.ComObject"/></strong> references from the stream, as follows:</p><ul> <li> <p>If the <strong><see cref="T:SharpDX.Win32.IStream"/></strong> reference exposes the <strong>IMFObjectReferenceStream</strong> interface (through <strong>QueryInterface</strong>), the function calls <strong>IMFObjectReferenceStream::LoadReference</strong> to deserialize each reference.</p> </li> <li> <p>Otherwise, the function calls <strong>CoUnmarshalInterface</strong> to deserialize a proxy for the object.</p> </li> </ul><p>This function deletes any attributes that were previously stored in <em>pAttr</em>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFSerializeAttributesToStream']/*"/>	
            <msdn-id>ms703162</msdn-id>	
            <unmanaged>HRESULT MFSerializeAttributesToStream([In] IMFAttributes* pAttr,[In] unsigned int dwOptions,[In] IStream* pStm)</unmanaged>	
            <unmanaged-short>MFSerializeAttributesToStream</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaSessionAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.MediaSessionAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaTypeAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.MediaTypeAttributeKeys']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AacAudioProfileLevelIndication">
            <summary>Constant AacAudioProfileLevelIndication.</summary>
            <unmanaged>MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AacPayloadType">
            <summary>Constant AacPayloadType.</summary>
            <unmanaged>MF_MT_AAC_PAYLOAD_TYPE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AllSamplesIndependent">
            <summary>Constant AllSamplesIndependent.</summary>
            <unmanaged>MF_MT_ALL_SAMPLES_INDEPENDENT</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioAvgBytesPerSecond">
            <summary>Constant AudioAvgBytesPerSecond.</summary>
            <unmanaged>MF_MT_AUDIO_AVG_BYTES_PER_SECOND</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioBitsPerSample">
            <summary>Constant AudioBitsPerSample.</summary>
            <unmanaged>MF_MT_AUDIO_BITS_PER_SAMPLE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioBlockAlignment">
            <summary>Constant AudioBlockAlignment.</summary>
            <unmanaged>MF_MT_AUDIO_BLOCK_ALIGNMENT</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioChannelMask">
            <summary>Constant AudioChannelMask.</summary>
            <unmanaged>MF_MT_AUDIO_CHANNEL_MASK</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioFloatSamplesPerSecond">
            <summary>Constant AudioFloatSamplesPerSecond.</summary>
            <unmanaged>MF_MT_AUDIO_FLOAT_SAMPLES_PER_SECOND</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioFolddownMatrix">
            <summary>Constant AudioFolddownMatrix.</summary>
            <unmanaged>MF_MT_AUDIO_FOLDDOWN_MATRIX</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioNumChannels">
            <summary>Constant AudioNumChannels.</summary>
            <unmanaged>MF_MT_AUDIO_NUM_CHANNELS</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioPreferWaveformatex">
            <summary>Constant AudioPreferWaveformatex.</summary>
            <unmanaged>MF_MT_AUDIO_PREFER_WAVEFORMATEX</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioSamplesPerBlock">
            <summary>Constant AudioSamplesPerBlock.</summary>
            <unmanaged>MF_MT_AUDIO_SAMPLES_PER_BLOCK</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioSamplesPerSecond">
            <summary>Constant AudioSamplesPerSecond.</summary>
            <unmanaged>MF_MT_AUDIO_SAMPLES_PER_SECOND</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioValidBitsPerSample">
            <summary>Constant AudioValidBitsPerSample.</summary>
            <unmanaged>MF_MT_AUDIO_VALID_BITS_PER_SAMPLE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioWmadrcAvgref">
            <summary>Constant AudioWmadrcAvgref.</summary>
            <unmanaged>MF_MT_AUDIO_WMADRC_AVGREF</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioWmadrcAvgtarget">
            <summary>Constant AudioWmadrcAvgtarget.</summary>
            <unmanaged>MF_MT_AUDIO_WMADRC_AVGTARGET</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioWmadrcPeakref">
            <summary>Constant AudioWmadrcPeakref.</summary>
            <unmanaged>MF_MT_AUDIO_WMADRC_PEAKREF</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioWmadrcPeaktarget">
            <summary>Constant AudioWmadrcPeaktarget.</summary>
            <unmanaged>MF_MT_AUDIO_WMADRC_PEAKTARGET</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AvgBitErrorRate">
            <summary>Constant AvgBitErrorRate.</summary>
            <unmanaged>MF_MT_AVG_BIT_ERROR_RATE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AvgBitrate">
            <summary>Constant AvgBitrate.</summary>
            <unmanaged>MF_MT_AVG_BITRATE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Compressed">
            <summary>Constant Compressed.</summary>
            <unmanaged>MF_MT_COMPRESSED</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.DefaultStride">
            <summary>Constant DefaultStride.</summary>
            <unmanaged>MF_MT_DEFAULT_STRIDE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.DrmFlags">
            <summary>Constant DrmFlags.</summary>
            <unmanaged>MF_MT_DRM_FLAGS</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.DvAauxCtrlPack0">
            <summary>Constant DvAauxCtrlPack0.</summary>
            <unmanaged>MF_MT_DV_AAUX_CTRL_PACK_0</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.DvAauxCtrlPack1">
            <summary>Constant DvAauxCtrlPack1.</summary>
            <unmanaged>MF_MT_DV_AAUX_CTRL_PACK_1</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.DvAauxSrcPack0">
            <summary>Constant DvAauxSrcPack0.</summary>
            <unmanaged>MF_MT_DV_AAUX_SRC_PACK_0</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.DvAauxSrcPack1">
            <summary>Constant DvAauxSrcPack1.</summary>
            <unmanaged>MF_MT_DV_AAUX_SRC_PACK_1</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.DvVauxCtrlPack">
            <summary>Constant DvVauxCtrlPack.</summary>
            <unmanaged>MF_MT_DV_VAUX_CTRL_PACK</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.DvVauxSrcPack">
            <summary>Constant DvVauxSrcPack.</summary>
            <unmanaged>MF_MT_DV_VAUX_SRC_PACK</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.FixedSizeSamples">
            <summary>Constant FixedSizeSamples.</summary>
            <unmanaged>MF_MT_FIXED_SIZE_SAMPLES</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.FrameRate">
            <summary>Constant FrameRate.</summary>
            <unmanaged>MF_MT_FRAME_RATE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.FrameRateRangeMax">
            <summary>Constant FrameRateRangeMax.</summary>
            <unmanaged>MF_MT_FRAME_RATE_RANGE_MAX</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.FrameRateRangeMin">
            <summary>Constant FrameRateRangeMin.</summary>
            <unmanaged>MF_MT_FRAME_RATE_RANGE_MIN</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.FrameSize">
            <summary>Constant FrameSize.</summary>
            <unmanaged>MF_MT_FRAME_SIZE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.GeometricAperture">
            <summary>Constant GeometricAperture.</summary>
            <unmanaged>MF_MT_GEOMETRIC_APERTURE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.H264Capabilities">
            <summary>Constant H264Capabilities.</summary>
            <unmanaged>MF_MT_H264_CAPABILITIES</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.H264MaxCodecConfigDelay">
            <summary>Constant H264MaxCodecConfigDelay.</summary>
            <unmanaged>MF_MT_H264_MAX_CODEC_CONFIG_DELAY</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.H264MaxMbPerSec">
            <summary>Constant H264MaxMbPerSec.</summary>
            <unmanaged>MF_MT_H264_MAX_MB_PER_SEC</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.H264RateControlModes">
            <summary>Constant H264RateControlModes.</summary>
            <unmanaged>MF_MT_H264_RATE_CONTROL_MODES</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.H264SimulcastSupport">
            <summary>Constant H264SimulcastSupport.</summary>
            <unmanaged>MF_MT_H264_SIMULCAST_SUPPORT</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.H264SupportedRateControlModes">
            <summary>Constant H264SupportedRateControlModes.</summary>
            <unmanaged>MF_MT_H264_SUPPORTED_RATE_CONTROL_MODES</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.H264SupportedSliceModes">
            <summary>Constant H264SupportedSliceModes.</summary>
            <unmanaged>MF_MT_H264_SUPPORTED_SLICE_MODES</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.H264SupportedSyncFrameTypes">
            <summary>Constant H264SupportedSyncFrameTypes.</summary>
            <unmanaged>MF_MT_H264_SUPPORTED_SYNC_FRAME_TYPES</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.H264SupportedUsages">
            <summary>Constant H264SupportedUsages.</summary>
            <unmanaged>MF_MT_H264_SUPPORTED_USAGES</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.H264SvcCapabilities">
            <summary>Constant H264SvcCapabilities.</summary>
            <unmanaged>MF_MT_H264_SVC_CAPABILITIES</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.H264Usage">
            <summary>Constant H264Usage.</summary>
            <unmanaged>MF_MT_H264_USAGE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.ImageLossTolerant">
            <summary>Constant ImageLossTolerant.</summary>
            <unmanaged>MF_MT_IMAGE_LOSS_TOLERANT</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.InterlaceMode">
            <summary>Constant InterlaceMode.</summary>
            <unmanaged>MF_MT_INTERLACE_MODE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.MajorType">
            <summary>Constant MajorType.</summary>
            <unmanaged>MF_MT_MAJOR_TYPE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.MaxKeyframeSpacing">
            <summary>Constant MaxKeyframeSpacing.</summary>
            <unmanaged>MF_MT_MAX_KEYFRAME_SPACING</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.MinimumDisplayAperture">
            <summary>Constant MinimumDisplayAperture.</summary>
            <unmanaged>MF_MT_MINIMUM_DISPLAY_APERTURE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.MpegSequenceHeader">
            <summary>Constant MpegSequenceHeader.</summary>
            <unmanaged>MF_MT_MPEG_SEQUENCE_HEADER</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.MpegStartTimeCode">
            <summary>Constant MpegStartTimeCode.</summary>
            <unmanaged>MF_MT_MPEG_START_TIME_CODE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Mpeg2ContentPACKET">
            <summary>Constant Mpeg2ContentPACKET.</summary>
            <unmanaged>MF_MT_MPEG2_CONTENT_PACKET</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Mpeg2Flags">
            <summary>Constant Mpeg2Flags.</summary>
            <unmanaged>MF_MT_MPEG2_FLAGS</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Mpeg2Level">
            <summary>Constant Mpeg2Level.</summary>
            <unmanaged>MF_MT_MPEG2_LEVEL</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Mpeg2Profile">
            <summary>Constant Mpeg2Profile.</summary>
            <unmanaged>MF_MT_MPEG2_PROFILE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Mpeg2STANDARD">
            <summary>Constant Mpeg2STANDARD.</summary>
            <unmanaged>MF_MT_MPEG2_STANDARD</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Mpeg2TIMECODE">
            <summary>Constant Mpeg2TIMECODE.</summary>
            <unmanaged>MF_MT_MPEG2_TIMECODE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Mpeg4CurrentSampleEntry">
            <summary>Constant Mpeg4CurrentSampleEntry.</summary>
            <unmanaged>MF_MT_MPEG4_CURRENT_SAMPLE_ENTRY</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Mpeg4SampleDescription">
            <summary>Constant Mpeg4SampleDescription.</summary>
            <unmanaged>MF_MT_MPEG4_SAMPLE_DESCRIPTION</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.PadControlFlags">
            <summary>Constant PadControlFlags.</summary>
            <unmanaged>MF_MT_PAD_CONTROL_FLAGS</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Palette">
            <summary>Constant Palette.</summary>
            <unmanaged>MF_MT_PALETTE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.PanScanAperture">
            <summary>Constant PanScanAperture.</summary>
            <unmanaged>MF_MT_PAN_SCAN_APERTURE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.PanScanEnabled">
            <summary>Constant PanScanEnabled.</summary>
            <unmanaged>MF_MT_PAN_SCAN_ENABLED</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.PixelAspectRatio">
            <summary>Constant PixelAspectRatio.</summary>
            <unmanaged>MF_MT_PIXEL_ASPECT_RATIO</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.SampleSize">
            <summary>Constant SampleSize.</summary>
            <unmanaged>MF_MT_SAMPLE_SIZE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.SourceContentHint">
            <summary>Constant SourceContentHint.</summary>
            <unmanaged>MF_MT_SOURCE_CONTENT_HINT</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Subtype">
            <summary>Constant Subtype.</summary>
            <unmanaged>MF_MT_SUBTYPE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.TimestampCanBeDTS">
            <summary>Constant TimestampCanBeDTS.</summary>
            <unmanaged>MF_MT_TIMESTAMP_CAN_BE_DTS</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.TransferFunction">
            <summary>Constant TransferFunction.</summary>
            <unmanaged>MF_MT_TRANSFER_FUNCTION</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.UserData">
            <summary>Constant UserData.</summary>
            <unmanaged>MF_MT_USER_DATA</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Video3d">
            <summary>Constant Video3d.</summary>
            <unmanaged>MF_MT_VIDEO_3D</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Video3dFirstIsLeft">
            <summary>Constant Video3dFirstIsLeft.</summary>
            <unmanaged>MF_MT_VIDEO_3D_FIRST_IS_LEFT</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Video3dFormat">
            <summary>Constant Video3dFormat.</summary>
            <unmanaged>MF_MT_VIDEO_3D_FORMAT</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Video3dLeftIsBase">
            <summary>Constant Video3dLeftIsBase.</summary>
            <unmanaged>MF_MT_VIDEO_3D_LEFT_IS_BASE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Video3dNumViews">
            <summary>Constant Video3dNumViews.</summary>
            <unmanaged>MF_MT_VIDEO_3D_NUM_VIEWS</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.VideoChromaSiting">
            <summary>Constant VideoChromaSiting.</summary>
            <unmanaged>MF_MT_VIDEO_CHROMA_SITING</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.VideoLighting">
            <summary>Constant VideoLighting.</summary>
            <unmanaged>MF_MT_VIDEO_LIGHTING</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.VideoNominalRange">
            <summary>Constant VideoNominalRange.</summary>
            <unmanaged>MF_MT_VIDEO_NOMINAL_RANGE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.VideoPrimaries">
            <summary>Constant VideoPrimaries.</summary>
            <unmanaged>MF_MT_VIDEO_PRIMARIES</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.VideoRotation">
            <summary>Constant VideoRotation.</summary>
            <unmanaged>MF_MT_VIDEO_ROTATION</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.WrappedType">
            <summary>Constant WrappedType.</summary>
            <unmanaged>MF_MT_WRAPPED_TYPE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.YuvMatrix">
            <summary>Constant YuvMatrix.</summary>
            <unmanaged>MF_MT_YUV_MATRIX</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaTypeGuids">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.MediaTypeGuids']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeGuids.Protected">
            <summary>Constant Protected.</summary>
            <unmanaged>MFMediaType_Protected</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeGuids.Audio">
            <summary>Constant Audio.</summary>
            <unmanaged>MFMediaType_Audio</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeGuids.FileTransfer">
            <summary>Constant FileTransfer.</summary>
            <unmanaged>MFMediaType_FileTransfer</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeGuids.Image">
            <summary>Constant Image.</summary>
            <unmanaged>MFMediaType_Image</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeGuids.Html">
            <summary>Constant Html.</summary>
            <unmanaged>MFMediaType_HTML</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeGuids.Binary">
            <summary>Constant Binary.</summary>
            <unmanaged>MFMediaType_Binary</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeGuids.Video">
            <summary>Constant Video.</summary>
            <unmanaged>MFMediaType_Video</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeGuids.Sami">
            <summary>Constant Sami.</summary>
            <unmanaged>MFMediaType_SAMI</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeGuids.Default">
            <summary>Constant Default.</summary>
            <unmanaged>MFMediaType_Default</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeGuids.Script">
            <summary>Constant Script.</summary>
            <unmanaged>MFMediaType_Script</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.MediaTypeGuids.Stream">
            <summary>Constant Stream.</summary>
            <unmanaged>MFMediaType_Stream</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.Mpeg4MediaSinkAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.Mpeg4MediaSinkAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.NaluAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.NaluAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.PresentationDescriptionAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.PresentationDescriptionAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.ProtectionAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.ProtectionAttributeKeys']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ProtectionAttributeKeys.GraphicsTransferAesEncryption">
            <summary>Constant GraphicsTransferAesEncryption.</summary>
            <unmanaged>MFPROTECTION_GRAPHICS_TRANSFER_AES_ENCRYPTION</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.SampleAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.SampleAttributeKeys']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.Video3D">
            <summary>Constant Video3D.</summary>
            <unmanaged>MFSampleExtension_3DVideo</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.Video3DSampleFormat">
            <summary>Constant Video3DSampleFormat.</summary>
            <unmanaged>MFSampleExtension_3DVideo_SampleFormat</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.BottomFieldFirst">
            <summary>Constant BottomFieldFirst.</summary>
            <unmanaged>MFSampleExtension_BottomFieldFirst</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.CleanPoint">
            <summary>Constant CleanPoint.</summary>
            <unmanaged>MFSampleExtension_CleanPoint</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.DecodeTimestamp">
            <summary>Constant DecodeTimestamp.</summary>
            <unmanaged>MFSampleExtension_DecodeTimestamp</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.DerivedFromTopField">
            <summary>Constant DerivedFromTopField.</summary>
            <unmanaged>MFSampleExtension_DerivedFromTopField</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.Discontinuity">
            <summary>Constant Discontinuity.</summary>
            <unmanaged>MFSampleExtension_Discontinuity</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.FrameCorruption">
            <summary>Constant FrameCorruption.</summary>
            <unmanaged>MFSampleExtension_FrameCorruption</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.Interlaced">
            <summary>Constant Interlaced.</summary>
            <unmanaged>MFSampleExtension_Interlaced</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.PacketCrossOffsets">
            <summary>Constant PacketCrossOffsets.</summary>
            <unmanaged>MFSampleExtension_PacketCrossOffsets</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.RepeatFirstField">
            <summary>Constant RepeatFirstField.</summary>
            <unmanaged>MFSampleExtension_RepeatFirstField</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.SingleField">
            <summary>Constant SingleField.</summary>
            <unmanaged>MFSampleExtension_SingleField</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.Token">
            <summary>Constant Token.</summary>
            <unmanaged>MFSampleExtension_Token</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.VideoEncodePictureType">
            <summary>Constant VideoEncodePictureType.</summary>
            <unmanaged>MFSampleExtension_VideoEncodePictureType</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.SampleAttributeKeys.VideoEncodeQP">
            <summary>Constant VideoEncodeQP.</summary>
            <unmanaged>MFSampleExtension_VideoEncodeQP</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.SampleGrabberSinkAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.SampleGrabberSinkAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.SinkWriterAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.SinkWriterAttributeKeys']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.SinkWriterAttributeKeys.LowLatency">
            <summary>Constant LowLatency.</summary>
            <unmanaged>MF_LOW_LATENCY</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.SourceReaderAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.SourceReaderAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.StreamDescriptorAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.StreamDescriptorAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.TopologyAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.TopologyAttributeKeys']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TopologyAttributeKeys.DXVAMode">
            <summary>Constant DXVAMode.</summary>
            <unmanaged>MF_TOPOLOGY_DXVA_MODE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TopologyAttributeKeys.NoMarkinMarkout">
            <summary>Constant NoMarkinMarkout.</summary>
            <unmanaged>MF_TOPOLOGY_NO_MARKIN_MARKOUT</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TopologyAttributeKeys.PlaybackMaxDimensions">
            <summary>Constant PlaybackMaxDimensions.</summary>
            <unmanaged>MF_TOPOLOGY_PLAYBACK_MAX_DIMS</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TopologyAttributeKeys.ProjectStart">
            <summary>Constant ProjectStart.</summary>
            <unmanaged>MF_TOPOLOGY_PROJECTSTART</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TopologyAttributeKeys.ProjectStop">
            <summary>Constant ProjectStop.</summary>
            <unmanaged>MF_TOPOLOGY_PROJECTSTOP</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TopologyAttributeKeys.StaticPlaybackOptimizations">
            <summary>Constant StaticPlaybackOptimizations.</summary>
            <unmanaged>MF_TOPOLOGY_STATIC_PLAYBACK_OPTIMIZATIONS</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.TopologyNodeAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.TopologyNodeAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.TranscodeAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.TranscodeAttributeKeys']/*"/>	
        </member>
        <member name="T:SharpDX.MediaFoundation.TransformAttributeKeys">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.MediaFoundation.TransformAttributeKeys']/*"/>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.DisableLocallyRegisteredPlugins">
            <summary>Constant DisableLocallyRegisteredPlugins.</summary>
            <unmanaged>MF_DISABLE_LOCALLY_REGISTERED_PLUGINS</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.Enable3dvideoOutput">
            <summary>Constant Enable3dvideoOutput.</summary>
            <unmanaged>MF_ENABLE_3DVIDEO_OUTPUT</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.BuffersPerSample">
            <summary>Constant BuffersPerSample.</summary>
            <unmanaged>MF_SA_BUFFERS_PER_SAMPLE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.D3DAware">
            <summary>Constant D3DAware.</summary>
            <unmanaged>MF_SA_D3D_AWARE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.D3D11Aware">
            <summary>Constant D3D11Aware.</summary>
            <unmanaged>MF_SA_D3D11_AWARE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.D3D11Bindflags">
            <summary>Constant D3D11Bindflags.</summary>
            <unmanaged>MF_SA_D3D11_BINDFLAGS</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.D3D11Usage">
            <summary>Constant D3D11Usage.</summary>
            <unmanaged>MF_SA_D3D11_USAGE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.TransformAsync">
            <summary>Constant TransformAsync.</summary>
            <unmanaged>MF_TRANSFORM_ASYNC</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.TransformAsyncUnlock">
            <summary>Constant TransformAsyncUnlock.</summary>
            <unmanaged>MF_TRANSFORM_ASYNC_UNLOCK</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.TransformCategoryAttribute">
            <summary>Constant TransformCategoryAttribute.</summary>
            <unmanaged>MF_TRANSFORM_CATEGORY_Attribute</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.TransformFlagsAttribute">
            <summary>Constant TransformFlagsAttribute.</summary>
            <unmanaged>MF_TRANSFORM_FLAGS_Attribute</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftCodecMeritAttribute">
            <summary>Constant MftCodecMeritAttribute.</summary>
            <unmanaged>MFT_CODEC_MERIT_Attribute</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftConnectedStreamAttribute">
            <summary>Constant MftConnectedStreamAttribute.</summary>
            <unmanaged>MFT_CONNECTED_STREAM_ATTRIBUTE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftConnectedToHwStream">
            <summary>Constant MftConnectedToHwStream.</summary>
            <unmanaged>MFT_CONNECTED_TO_HW_STREAM</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftDecoderExposeOutputTypesInNativeOrder">
            <summary>Constant MftDecoderExposeOutputTypesInNativeOrder.</summary>
            <unmanaged>MFT_DECODER_EXPOSE_OUTPUT_TYPES_IN_NATIVE_ORDER</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftDecoderFinalVideoResolutionHint">
            <summary>Constant MftDecoderFinalVideoResolutionHint.</summary>
            <unmanaged>MFT_DECODER_FINAL_VIDEO_RESOLUTION_HINT</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftEnumHardwareUrlAttribute">
            <summary>Constant MftEnumHardwareUrlAttribute.</summary>
            <unmanaged>MFT_ENUM_HARDWARE_URL_Attribute</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftEnumHardwareVendorIdAttribute">
            <summary>Constant MftEnumHardwareVendorIdAttribute.</summary>
            <unmanaged>MFT_ENUM_HARDWARE_VENDOR_ID_Attribute</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftEnumTranscodeOnlyAttribute">
            <summary>Constant MftEnumTranscodeOnlyAttribute.</summary>
            <unmanaged>MFT_ENUM_TRANSCODE_ONLY_ATTRIBUTE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftFieldofuseUnlockAttribute">
            <summary>Constant MftFieldofuseUnlockAttribute.</summary>
            <unmanaged>MFT_FIELDOFUSE_UNLOCK_Attribute</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftFriendlyNameAttribute">
            <summary>Constant MftFriendlyNameAttribute.</summary>
            <unmanaged>MFT_FRIENDLY_NAME_Attribute</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftHwTimestampWithQpcAttribute">
            <summary>Constant MftHwTimestampWithQpcAttribute.</summary>
            <unmanaged>MFT_HW_TIMESTAMP_WITH_QPC_Attribute</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftInputTypesAttributes">
            <summary>Constant MftInputTypesAttributes.</summary>
            <unmanaged>MFT_INPUT_TYPES_Attributes</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftOutputTypesAttributes">
            <summary>Constant MftOutputTypesAttributes.</summary>
            <unmanaged>MFT_OUTPUT_TYPES_Attributes</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftPreferredEncoderProfile">
            <summary>Constant MftPreferredEncoderProfile.</summary>
            <unmanaged>MFT_PREFERRED_ENCODER_PROFILE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftPreferredOutputtypeAttribute">
            <summary>Constant MftPreferredOutputtypeAttribute.</summary>
            <unmanaged>MFT_PREFERRED_OUTPUTTYPE_Attribute</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftProcessLocalAttribute">
            <summary>Constant MftProcessLocalAttribute.</summary>
            <unmanaged>MFT_PROCESS_LOCAL_Attribute</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftSupport3dvideo">
            <summary>Constant MftSupport3dvideo.</summary>
            <unmanaged>MFT_SUPPORT_3DVIDEO</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftSupportDynamicFormatChange">
            <summary>Constant MftSupportDynamicFormatChange.</summary>
            <unmanaged>MFT_SUPPORT_DYNAMIC_FORMAT_CHANGE</unmanaged>
        </member>
        <member name="F:SharpDX.MediaFoundation.TransformAttributeKeys.MftTransformClsidAttribute">
            <summary>Constant MftTransformClsidAttribute.</summary>
            <unmanaged>MFT_TRANSFORM_CLSID_Attribute</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.Activate">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Creates the object associated with this activation object. </p>	
            </summary>	
            <remarks>	
            <p>Some Microsoft Media Foundation objects must be shut down before being released. If so, the caller is responsible for shutting down the object that is returned in <em>ppv</em>. To shut down the object, do one of the following:</p><ul> <li>Call <strong><see cref="M:SharpDX.MediaFoundation.Activate.ShutdownObject"/></strong> on the activation object, or</li> <li>Call the object-specific shutdown method. This method will depend on the type of object. Possibilities include:<ul> <li>Media sources: Call <strong>IMFMediaSource::Shutdown</strong>.</li> <li>Media sinks: Call <strong>IMFMediaSink::Shutdown</strong>.</li> <li>Any object that supports the <strong>IMFShutdown</strong> interface: Call <strong>IMFShutdown::Shutdown</strong>.</li> </ul> </li> </ul><p>The <strong><see cref="M:SharpDX.MediaFoundation.Activate.ShutdownObject"/></strong> method is generic to all object types. If the object does not require a shutdown method, <strong>ShutdownObject</strong> succeeds and has no effect. If you do not know the specific shutdown method for the object (or do not know the object type), call <strong><see cref="M:SharpDX.MediaFoundation.Activate.ShutdownObject"/></strong>.</p><p> After the first call to <strong>ActivateObject</strong>, subsequent calls return a reference to the same instance, until the client calls either <strong>ShutdownObject</strong> or <strong><see cref="M:SharpDX.MediaFoundation.Activate.DetachObject"/></strong>. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFActivate']/*"/>	
            <msdn-id>ms694292</msdn-id>	
            <unmanaged>IMFActivate</unmanaged>	
            <unmanaged-short>IMFActivate</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaAttributes">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Provides a generic way to store key/value pairs on an object. The keys are <strong><see cref="T:System.Guid"/></strong>s, and the values can be any of the following data types: <strong>UINT32</strong>, <strong>UINT64</strong>, <strong>double</strong>, <strong><see cref="T:System.Guid"/></strong>, wide-character string, byte array, or <strong><see cref="T:SharpDX.ComObject"/></strong> reference. The standard implementation of this interface holds a thread lock while values are added, deleted, or retrieved.</p><p>For a list of predefined attribute <strong><see cref="T:System.Guid"/></strong>s, see Media Foundation Attributes. Each attribute <strong><see cref="T:System.Guid"/></strong> has an expected data type. The various "set" methods in <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> do not validate the type against the attribute <strong><see cref="T:System.Guid"/></strong>. It is the application's responsibility to set the correct type for the attribute.</p><p>To create an empty attribute store, call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateAttributes(SharpDX.MediaFoundation.MediaAttributes,System.Int32)"/></strong>.</p>	
            </summary>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes']/*"/>	
            <msdn-id>ms704598</msdn-id>	
            <unmanaged>IMFAttributes</unmanaged>	
            <unmanaged-short>IMFAttributes</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaAttributes"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.MediaAttributes">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.MediaAttributes"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetItem(System.Guid,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="guidKey">No documentation.</param>	
            <param name="valueRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetItem']/*"/>	
            <unmanaged>HRESULT IMFAttributes::GetItem([In] const GUID&amp; guidKey,[In] void* pValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetItem</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetItemType(System.Guid)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="guidKey">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetItemType']/*"/>	
            <unmanaged>HRESULT IMFAttributes::GetItemType([In] const GUID&amp; guidKey,[Out] MF_ATTRIBUTE_TYPE* pType)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetItemType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.CompareItem(System.Guid,SharpDX.Win32.Variant)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="guidKey">No documentation.</param>	
            <param name="value">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::CompareItem']/*"/>	
            <unmanaged>HRESULT IMFAttributes::CompareItem([In] const GUID&amp; guidKey,[In] const PROPVARIANT&amp; Value,[Out] BOOL* pbResult)</unmanaged>	
            <unmanaged-short>IMFAttributes::CompareItem</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.Compare(SharpDX.MediaFoundation.MediaAttributes,SharpDX.MediaFoundation.AttributesMatchType)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Compares the attributes on this object with the attributes on another object.</p>	
            </summary>	
            <param name="theirsRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface of the object to compare with this object.</p> </dd></param>	
            <param name="matchType"><dd> <p>Member of the <strong><see cref="T:SharpDX.MediaFoundation.AttributesMatchType"/></strong> enumeration, specifying the type of comparison to make.</p> </dd></param>	
            <returns><dd> <p>Receives a Boolean value. The value is <strong>TRUE</strong> if the two sets of attributes match in the way specified by the <em>MatchType</em> parameter. Otherwise, the value is <strong><see cref="F:SharpDX.Result.False"/></strong>.</p> </dd></returns>	
            <remarks>	
            <p>If <em>pThis</em> is the object whose <strong>Compare</strong> method is called, and <em>pTheirs</em> is the object passed in as the <em>pTheirs</em> parameter, the following comparisons are defined by <em>MatchType</em>.</p><table> <tr><th>Match type</th><th>Returns <strong>TRUE</strong> if and only if</th></tr> <tr><td><strong><see cref="F:SharpDX.MediaFoundation.AttributesMatchType.OurItems"/></strong></td><td>For every attribute in <em>pThis</em>, an attribute with the same key and value exists in <em>pTheirs</em>.</td></tr> <tr><td><strong><see cref="F:SharpDX.MediaFoundation.AttributesMatchType.TheirItems"/></strong></td><td>For every attribute in <em>pTheirs</em>, an attribute with the same key and value exists in <em>pThis</em>.</td></tr> <tr><td><strong><see cref="F:SharpDX.MediaFoundation.AttributesMatchType.AllItems"/></strong></td><td>The key/value pairs are identical in both objects.</td></tr> <tr><td><strong><see cref="F:SharpDX.MediaFoundation.AttributesMatchType.Intersection"/></strong></td><td>Take the intersection of the keys in <em>pThis</em> and the keys in <em>pTheirs</em>. The values associated with those keys are identical in both <em>pThis</em> and <em>pTheirs</em>.</td></tr> <tr><td><strong><see cref="F:SharpDX.MediaFoundation.AttributesMatchType.Smaller"/></strong></td><td>Take the object with the smallest number of attributes. For every attribute in that object, an attribute with the same key and value exists in the other object.</td></tr> </table><p>?</p><p>The <em>pTheirs</em> and <em>pbResult</em> parameters must not be <strong><c>null</c></strong>. If either parameter is <strong><c>null</c></strong>, an access violation occurs.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::Compare']/*"/>	
            <msdn-id>bb970349</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::Compare([In, Optional] IMFAttributes* pTheirs,[In] MF_ATTRIBUTES_MATCH_TYPE MatchType,[Out] BOOL* pbResult)</unmanaged>	
            <unmanaged-short>IMFAttributes::Compare</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetInt(System.Guid)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves a <strong>UINT32</strong> value associated with a key.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies which value to retrieve. The attribute type must be <strong><see cref="F:SharpDX.MediaFoundation.AttributeType.UInt32"/></strong>.</p> </dd></param>	
            <returns><dd> <p>Receives a <strong>UINT32</strong> value. If the key is found and the data type is <strong>UINT32</strong>, the method copies the value into this parameter. Otherwise, the original value of this parameter is not changed.</p> </dd></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetUINT32']/*"/>	
            <msdn-id>bb970551</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetUINT32([In] const GUID&amp; guidKey,[Out] unsigned int* punValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetUINT32</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetLong(System.Guid)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves a <strong>UINT64</strong> value associated with a key.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies which value to retrieve. The attribute type must be <strong><see cref="F:SharpDX.MediaFoundation.AttributeType.UInt64"/></strong>.</p> </dd></param>	
            <returns><dd> <p>Receives a <strong>UINT64</strong> value. If the key is found and the data type is <strong>UINT64</strong>, the method copies the value into this parameter. Otherwise, the original value of this parameter is not changed.</p> </dd></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetUINT64']/*"/>	
            <msdn-id>bb970569</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetUINT64([In] const GUID&amp; guidKey,[Out] unsigned longlong* punValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetUINT64</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetDouble(System.Guid)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves a <strong>double</strong> value associated with a key.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies which value to retrieve. The attribute type must be <strong><see cref="F:SharpDX.MediaFoundation.AttributeType.Double"/></strong>.</p> </dd></param>	
            <returns><dd> <p>Receives a <strong>double</strong> value. If the key is found and the data type is <strong>double</strong>, the method copies the value into this parameter. Otherwise, the original value of this parameter is not changed.</p> </dd></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetDouble']/*"/>	
            <msdn-id>bb970418</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetDouble([In] const GUID&amp; guidKey,[Out] double* pfValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetDouble</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetGUID(System.Guid)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves a <see cref="T:System.Guid"/> value associated with a key.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies which value to retrieve. The attribute type must be <strong><see cref="F:SharpDX.MediaFoundation.AttributeType.Guid"/></strong>.</p> </dd></param>	
            <returns><dd> <p>Receives a <see cref="T:System.Guid"/> value. If the key is found and the data type is <see cref="T:System.Guid"/>, the method copies the value into this parameter. Otherwise, the original value of this parameter is not changed.</p> </dd></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetGUID']/*"/>	
            <msdn-id>bb970426</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetGUID([In] const GUID&amp; guidKey,[Out] GUID* pguidValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetGUID</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetStringLength(System.Guid)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the length of a string value associated with a key.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies which value to retrieve. The attribute type must be <strong><see cref="F:SharpDX.MediaFoundation.AttributeType.String"/></strong>.</p> </dd></param>	
            <returns><dd> <p>If the key is found and the value is a string type, this parameter receives the number of characters in the string, not including the terminating <strong><c>null</c></strong> character. To get the string value, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetString(System.Guid,System.IntPtr,System.Int32,System.IntPtr)"/></strong>.</p> </dd></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetStringLength']/*"/>	
            <msdn-id>bb970425</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetStringLength([In] const GUID&amp; guidKey,[Out] unsigned int* pcchLength)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetStringLength</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetString(System.Guid,System.IntPtr,System.Int32,System.IntPtr)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves a wide-character string associated with a key.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies which value to retrieve. The attribute type must be <strong><see cref="F:SharpDX.MediaFoundation.AttributeType.String"/></strong>.</p> </dd></param>	
            <param name="wszValueRef"><dd> <p>Pointer to a wide-character array allocated by the caller. The array must be large enough to hold the string, including the terminating <strong><c>null</c></strong> character. If the key is found and the value is a string type, the method copies the string into this buffer. To find the length of the string, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetStringLength(System.Guid)"/></strong>.</p> </dd></param>	
            <param name="cchBufSize"><dd> <p>The size of the <em>pwszValue</em> array, in characters. This value includes the terminating <c>null</c> character.</p> </dd></param>	
            <param name="cchLengthRef"><dd> <p>Receives the number of characters in the string, excluding the terminating <strong><c>null</c></strong> character. This parameter can be <strong><c>null</c></strong>.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_OUTOFMEMORY</strong></dt> </dl> </td><td> <p>The length of the string is too large to fit in a <strong>UINT32</strong> value.</p> </td></tr> <tr><td> <dl> <dt><strong>E_NOT_SUFFICIENT_BUFFER</strong></dt> </dl> </td><td> <p>The buffer is not large enough to hold the string.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_ATTRIBUTENOTFOUND</strong></dt> </dl> </td><td> <p>The specified key was not found.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDTYPE</strong></dt> </dl> </td><td> <p>The attribute value is not a string.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>You can also use the <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetAllocatedString(System.Guid,System.IntPtr,System.Int32@)"/></strong> method, which allocates the buffer to hold the string.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetString']/*"/>	
            <msdn-id>bb970430</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetString([In] const GUID&amp; guidKey,[Out, Buffer] wchar_t* pwszValue,[In] unsigned int cchBufSize,[InOut, Optional] unsigned int* pcchLength)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetString</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetAllocatedString(System.Guid,System.IntPtr,System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets a wide-character string associated with a key. This method allocates the memory for the string. </p>	
            </summary>	
            <param name="guidKey"><dd> <p>A <see cref="T:System.Guid"/> that identifies which value to retrieve. The attribute type must be <strong><see cref="F:SharpDX.MediaFoundation.AttributeType.String"/></strong>. </p> </dd></param>	
            <param name="wszValueOut"><dd> <p>If the key is found and the value is a string type, this parameter receives a copy of the string. The caller must free the memory for the string by calling <strong>CoTaskMemFree</strong>. </p> </dd></param>	
            <param name="cchLengthRef"><dd> <p> Receives the number of characters in the string, excluding the terminating <strong><c>null</c></strong> character. This parameter must not be <strong><c>null</c></strong>. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_ATTRIBUTENOTFOUND</strong></dt> </dl> </td><td> <p> The specified key was not found. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDTYPE</strong></dt> </dl> </td><td> <p> The attribute value is not a string. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>To copy a string value into a caller-allocated buffer, use the <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetString(System.Guid,System.IntPtr,System.Int32,System.IntPtr)"/></strong> method.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul><p><strong>Note</strong>??An earlier version of the documentation incorrectly stated that the <em>pcchLength</em> parameter can be <strong><c>null</c></strong>. Setting this parameter to <strong><c>null</c></strong> might succeed in some cases, but is not guaranteed. The caller must pass a non-<strong><c>null</c></strong> reference for this parameter.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetAllocatedString']/*"/>	
            <msdn-id>bb970406</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetAllocatedString([In] const GUID&amp; guidKey,[Out, Buffer, Optional] wchar_t** ppwszValue,[Out] unsigned int* pcchLength)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetAllocatedString</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetBlobSize(System.Guid)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the length of a byte array associated with a key.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies which value to retrieve. The attribute type must be <strong><see cref="F:SharpDX.MediaFoundation.AttributeType.Blob"/></strong>.</p> </dd></param>	
            <returns><dd> <p>If the key is found and the value is a byte array, this parameter receives the size of the array, in bytes.</p> </dd></returns>	
            <remarks>	
            <p>To get the byte array, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetBlob(System.Guid,System.IntPtr,System.Int32,System.IntPtr)"/></strong>.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetBlobSize']/*"/>	
            <msdn-id>bb970459</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetBlobSize([In] const GUID&amp; guidKey,[Out] unsigned int* pcbBlobSize)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetBlobSize</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetBlob(System.Guid,System.IntPtr,System.Int32,System.IntPtr)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves a byte array associated with a key. This method copies the array into a caller-allocated buffer.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies which value to retrieve. The attribute type must be <strong><see cref="F:SharpDX.MediaFoundation.AttributeType.Blob"/></strong>.</p> </dd></param>	
            <param name="bufRef"><dd> <p>Pointer to a buffer allocated by the caller. If the key is found and the value is a byte array, the method copies the array into this buffer. To find the required size of the buffer, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetBlobSize(System.Guid)"/></strong>.</p> </dd></param>	
            <param name="cbBufSize"><dd> <p>The size of the <em>pBuf</em> buffer, in bytes.</p> </dd></param>	
            <param name="cbBlobSizeRef"><dd> <p>Receives the size of the byte array. This parameter can be <strong><c>null</c></strong>.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><strong><see cref="F:SharpDX.Result.Ok"/></strong></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong><strong>E_NOT_SUFFICIENT_BUFFER</strong></strong></dt> </dl> </td><td> <p>The buffer is not large enough to the array.</p> </td></tr> <tr><td> <dl> <dt><strong><strong>MF_E_ATTRIBUTENOTFOUND</strong></strong></dt> </dl> </td><td> <p>The specified key was not found.</p> </td></tr> <tr><td> <dl> <dt><strong><strong>MF_E_INVALIDTYPE</strong></strong></dt> </dl> </td><td> <p>The attribute value is not a byte array.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>You can also use the <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetAllocatedBlob(System.Guid,System.Byte[],System.Int32@)"/></strong> method, which allocates the buffer to hold the byte array.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetBlob']/*"/>	
            <msdn-id>bb970421</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetBlob([In] const GUID&amp; guidKey,[In] void* pBuf,[In] unsigned int cbBufSize,[InOut, Optional] unsigned int* pcbBlobSize)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetBlob</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetAllocatedBlob(System.Guid,System.Byte[],System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves a byte array associated with a key. This method allocates the memory for the array.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies which value to retrieve. The attribute type must be <strong><see cref="F:SharpDX.MediaFoundation.AttributeType.Blob"/></strong>.</p> </dd></param>	
            <param name="bufOut"><dd> <p>If the key is found and the value is a byte array, this parameter receives a copy of the array. The caller must free the memory for the array by calling <strong>CoTaskMemFree</strong>.</p> </dd></param>	
            <param name="cbSizeRef"><dd> <p>Receives the size of the array, in bytes.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_ATTRIBUTENOTFOUND</strong></dt> </dl> </td><td> <p>The specified key was not found.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDTYPE</strong></dt> </dl> </td><td> <p>The attribute value is not a byte array.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>To copy a byte array value into a caller-allocated buffer, use the <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetBlob(System.Guid,System.IntPtr,System.Int32,System.IntPtr)"/></strong> method.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetAllocatedBlob']/*"/>	
            <msdn-id>bb970382</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetAllocatedBlob([In] const GUID&amp; guidKey,[Out, Buffer, Optional] unsigned char** ppBuf,[Out] unsigned int* pcbSize)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetAllocatedBlob</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetUnknown(System.Guid,System.Guid,System.IntPtr@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves an interface reference associated with a key.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies which value to retrieve. The attribute type must be <strong><see cref="F:SharpDX.MediaFoundation.AttributeType.IUnknown"/></strong>.</p> </dd></param>	
            <param name="riid"><dd> <p>Interface identifier (IID) of the interface to retrieve.</p> </dd></param>	
            <param name="vOut"><dd> <p>Receives a reference to the requested interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_NOINTERFACE</strong></dt> </dl> </td><td> <p>The attribute value is an <strong><see cref="T:SharpDX.ComObject"/></strong> reference but does not support requested interface.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_ATTRIBUTENOTFOUND</strong></dt> </dl> </td><td> <p>The specified key was not found.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDTYPE</strong></dt> </dl> </td><td> <p>The attribute value is not an <strong><see cref="T:SharpDX.ComObject"/></strong> reference.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetUnknown']/*"/>	
            <msdn-id>bb970481</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetUnknown([In] const GUID&amp; guidKey,[In] const GUID&amp; riid,[Out] void** ppv)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetUnknown</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.Set(System.Guid,SharpDX.Win32.Variant)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Adds an attribute value with a specified key. </p>	
            </summary>	
            <param name="guidKey"><dd> <p> A <see cref="T:System.Guid"/> that identifies the value to set. If this key already exists, the method overwrites the old value. </p> </dd></param>	
            <param name="value"><dd> <p> A <strong><see cref="T:SharpDX.Win32.Variant"/></strong> that contains the attribute value. The method copies the value. The <strong><see cref="T:SharpDX.Win32.Variant"/></strong> type must be one of the types listed in the <strong><see cref="T:SharpDX.MediaFoundation.AttributeType"/></strong> enumeration. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_OUTOFMEMORY</strong></dt> </dl> </td><td> <p> Insufficient memory. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDTYPE</strong></dt> </dl> </td><td> <p> Invalid attribute type. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> This method checks whether the <strong><see cref="T:SharpDX.Win32.Variant"/></strong> type is one of the attribute types defined in <strong><see cref="T:SharpDX.MediaFoundation.AttributeType"/></strong>, and fails if an unsupported type is used. However, this method does not check whether the <strong><see cref="T:SharpDX.Win32.Variant"/></strong> is the correct type for the specified attribute <see cref="T:System.Guid"/>. (There is no programmatic way to associate attribute GUIDs with property types.) For a list of Media Foundation attributes and their data types, see Media Foundation Attributes. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::SetItem']/*"/>	
            <msdn-id>bb970346</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::SetItem([In] const GUID&amp; guidKey,[In] const PROPVARIANT&amp; Value)</unmanaged>	
            <unmanaged-short>IMFAttributes::SetItem</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.DeleteItem(System.Guid)">
            <summary>	
            <p>Removes a key/value pair from the object's attribute list. </p>  <see cref="T:SharpDX.Result"/> DeleteItem( REFGUID  guidKey	
            );	
            <p></p>Parameters <p> guidKey </p> <p>[in] <see cref="T:System.Guid"/> that identifies the value to delete.</p>  <p>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.</p> <table><tr> <th> Return code  </th> <th> Description  </th> </tr><tr> <td> <p><see cref="F:SharpDX.Result.Ok"/></p> </td> <td> <p>The method succeeded.</p> </td> </tr></table>  <p>If the specified key does not exist, the method returns <see cref="F:SharpDX.Result.Ok"/>.</p>  <p> Client: Requires Windows Vista.</p> <p> Header: Defined in mfobjects.h; include mfidl.h.</p> <p> Library: Use mfuuid.lib.</p> ReferenceIMFAttributes Interface	
            </summary>	
            <param name="guidKey">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::DeleteItem']/*"/>	
            <msdn-id>ms701993</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::DeleteItem([In] const GUID&amp; guidKey)</unmanaged>	
            <unmanaged-short>IMFAttributes::DeleteItem</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.DeleteAllItems">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Removes all key/value pairs from the object's attribute list.</p>	
            </summary>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::DeleteAllItems']/*"/>	
            <msdn-id>ms700200</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::DeleteAllItems()</unmanaged>	
            <unmanaged-short>IMFAttributes::DeleteAllItems</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.Set(System.Guid,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Associates a <strong>UINT32</strong> value with a key.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies the value to set. If this key already exists, the method overwrites the old value.</p> </dd></param>	
            <param name="unValue"><dd> <p>New value for this key.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>To retrieve the <strong>UINT32</strong> value, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetInt(System.Guid)"/></strong>.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::SetUINT32']/*"/>	
            <msdn-id>bb970467</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::SetUINT32([In] const GUID&amp; guidKey,[In] unsigned int unValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::SetUINT32</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.Set(System.Guid,System.Int64)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Associates a <strong>UINT64</strong> value with a key.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies the value to set. If this key already exists, the method overwrites the old value.</p> </dd></param>	
            <param name="unValue"><dd> <p>New value for this key.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>To retrieve the <strong>UINT64</strong> value, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetLong(System.Guid)"/></strong>.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::SetUINT64']/*"/>	
            <msdn-id>bb970439</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::SetUINT64([In] const GUID&amp; guidKey,[In] unsigned longlong unValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::SetUINT64</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.Set(System.Guid,System.Double)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Associates a <strong>double</strong> value with a key.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies the value to set. If this key already exists, the method overwrites the old value.</p> </dd></param>	
            <param name="fValue"><dd> <p>New value for this key.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>To retrieve the double value, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetDouble(System.Guid)"/></strong>.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::SetDouble']/*"/>	
            <msdn-id>bb970505</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::SetDouble([In] const GUID&amp; guidKey,[In] double fValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::SetDouble</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.Set(System.Guid,System.Guid)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Associates a <see cref="T:System.Guid"/> value with a key.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies the value to set. If this key already exists, the method overwrites the old value.</p> </dd></param>	
            <param name="guidValue"><dd> <p>New value for this key.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_OUTOFMEMORY</strong></dt> </dl> </td><td> <p>Insufficient memory.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>To retrieve the <see cref="T:System.Guid"/> value, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetGUID(System.Guid)"/></strong>.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::SetGUID']/*"/>	
            <msdn-id>bb970530</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::SetGUID([In] const GUID&amp; guidKey,[In] const GUID&amp; guidValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::SetGUID</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.Set(System.Guid,System.String)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Associates a wide-character string with a key.</p>	
            </summary>	
            <param name="guidKey"><dd> <p><see cref="T:System.Guid"/> that identifies the value to set. If this key already exists, the method overwrites the old value.</p> </dd></param>	
            <param name="wszValue"><dd> <p>Null-terminated wide-character string to associate with this key. The method stores a copy of the string.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>To retrieve the string, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetString(System.Guid,System.IntPtr,System.Int32,System.IntPtr)"/></strong> or <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetAllocatedString(System.Guid,System.IntPtr,System.Int32@)"/></strong>.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::SetString']/*"/>	
            <msdn-id>bb970404</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::SetString([In] const GUID&amp; guidKey,[In] const wchar_t* wszValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::SetString</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.SetBlob(System.Guid,System.IntPtr,System.Int32)">
            <summary>	
            <p>Associates a byte array with a key. </p>  <see cref="T:SharpDX.Result"/> SetString( REFGUID  guidKey, const UINT8*  pBuf, UINT32  cbBufSize	
            );<p></p>Parameters <p> guidKey </p> <p>[in]  <see cref="T:System.Guid"/> that identifies the value to set. If this key already exists, the method overwrites the old value.</p> <p> pBuf </p> <p>[in] Pointer to a byte array to associate with this key. The method stores a copy of the array.</p> <p> cbBufSize </p> <p>[in] Size of the array, in bytes.</p>  <p>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.</p> <table><tr> <th> Return code              </th> <th> Description              </th> </tr><tr> <td> <p>E_OUTOFMEMORY</p> </td> <td> <p>Insufficient memory.</p> </td> </tr><tr> <td> <p><see cref="F:SharpDX.Result.Ok"/></p> </td> <td> <p>The method succeeded.</p> </td> </tr></table>  <p> Client: Requires Windows Vista.</p> <p> Header: Defined in mfobjects.h; include mfidl.h.</p> <p> Library: Use mfuuid.lib.</p> ReferenceIMFAttributes Interface	
            </summary>	
            <param name="guidKey">No documentation.</param>	
            <param name="bufRef">No documentation.</param>	
            <param name="cbBufSize">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::SetBlob']/*"/>	
            <msdn-id>ms694230</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::SetBlob([In] const GUID&amp; guidKey,[In] const void* pBuf,[In] unsigned int cbBufSize)</unmanaged>	
            <unmanaged-short>IMFAttributes::SetBlob</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.Set(System.Guid,SharpDX.ComObject)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="guidKey">No documentation.</param>	
            <param name="unknownRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::SetUnknown']/*"/>	
            <unmanaged>HRESULT IMFAttributes::SetUnknown([In] const GUID&amp; guidKey,[In, Optional] IUnknown* pUnknown)</unmanaged>	
            <unmanaged-short>IMFAttributes::SetUnknown</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.LockStore">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Locks the attribute store so that no other thread can access it. If the attribute store is already locked by another thread, this method blocks until the other thread unlocks the object. After calling this method, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.UnlockStore"/></strong> to unlock the object.</p>	
            </summary>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This method can cause a deadlock if a thread that calls <strong>LockStore</strong> waits on a thread that calls any other <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> methods on the same object.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::LockStore']/*"/>	
            <msdn-id>ms698926</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::LockStore()</unmanaged>	
            <unmanaged-short>IMFAttributes::LockStore</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.UnlockStore">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Unlocks the attribute store after a call to the <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.LockStore"/></strong> method. While the object is unlocked, multiple threads can access the object's attributes.</p>	
            </summary>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::UnlockStore']/*"/>	
            <msdn-id>ms697545</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::UnlockStore()</unmanaged>	
            <unmanaged-short>IMFAttributes::UnlockStore</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetCount(System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the number of attributes that are set on this object.</p>	
            </summary>	
            <param name="cItemsRef"><dd> <p>Receives the number of attributes. This parameter must not be <strong><c>null</c></strong>. If this parameter is <strong><c>null</c></strong>, an access violation occurs.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>To enumerate all of the attributes, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetItemByIndex(System.Int32,System.Guid@,System.IntPtr)"/></strong> for each index value.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetCount']/*"/>	
            <msdn-id>bb970413</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetCount([Out] unsigned int* pcItems)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetCount</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetItemByIndex(System.Int32,System.Guid@,System.IntPtr)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves an attribute at the specified index.</p>	
            </summary>	
            <param name="unIndex"><dd> <p>Index of the attribute to retrieve. To get the number of attributes, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetCount(System.Int32@)"/></strong>.</p> </dd></param>	
            <param name="guidKeyRef"><dd> <p>Receives the <see cref="T:System.Guid"/> that identifies this attribute.</p> </dd></param>	
            <param name="valueRef"><dd> <p>Pointer to a <strong><see cref="T:SharpDX.Win32.Variant"/></strong> that receives the value. This parameter can be <strong><c>null</c></strong>. If it is not <strong><c>null</c></strong>, the method fills the <strong><see cref="T:SharpDX.Win32.Variant"/></strong> with a copy of the attribute value. Call <strong>PropVariantClear</strong> to free the memory allocated by this method.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_INVALIDARG</strong></dt> </dl> </td><td> <p>Invalid index.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>To enumerate all of an object's attributes in a thread-safe way, do the following:</p><ol> <li> <p>Call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.LockStore"/></strong> to prevent another thread from adding or deleting attributes.</p> </li> <li> <p>Call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetCount(System.Int32@)"/></strong> to find the number of attributes.</p> </li> <li> <p>Call <strong>GetItemByIndex</strong> to get each attribute by index.</p> </li> <li> <p>Call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.UnlockStore"/></strong> to unlock the attribute store.</p> </li> </ol><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetItemByIndex']/*"/>	
            <msdn-id>bb970331</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetItemByIndex([In] unsigned int unIndex,[Out] GUID* pguidKey,[InOut, Optional] PROPVARIANT* pValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetItemByIndex</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.CopyAllItems(SharpDX.MediaFoundation.MediaAttributes)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Copies all of the attributes from this object into another attribute store. </p>	
            </summary>	
            <param name="destRef"><dd> <p> A reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface of the attribute store that receives the copy. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> This method deletes all of the attributes originally stored in <em>pDest</em>. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::CopyAllItems']/*"/>	
            <msdn-id>bb970330</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::CopyAllItems([In, Optional] IMFAttributes* pDest)</unmanaged>	
            <unmanaged-short>IMFAttributes::CopyAllItems</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaAttributes"/> class.
            </summary>
            <param name="initialSizeInBytes">The initial number of elements allocated for the attribute store. The attribute store grows as needed. Default is 0</param>
            <remarks>	
            <p>Attributes are used throughout Microsoft Media Foundation to configure objects, describe media formats, query object properties, and other purposes. For more information, see Attributes in Media Foundation.</p><p>For a complete list of all the defined attribute GUIDs in Media Foundation, see Media Foundation Attributes.</p>	
            </remarks>	
            <msdn-id>ms701878</msdn-id>
            <unmanaged>HRESULT MFCreateAttributes([Out] IMFAttributes** ppMFAttributes,[In] unsigned int cInitialSize)</unmanaged>
            <unmanaged-short>MFCreateAttributes</unmanaged-short>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.Get(System.Guid)">
            <summary>	
            Gets an item value
            </summary>	
            <param name="guidKey">GUID of the key.</param>	
            <returns>The value associated to this key.</returns>	
            <msdn-id>ms704598</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetItem([In] const GUID&amp; guidKey,[In] void* pValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetItem</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.GetByIndex(System.Int32,System.Guid@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves an attribute at the specified index.</p>	
            </summary>	
            <param name="index"><dd> <p>Index of the attribute to retrieve. To get the number of attributes, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetCount(System.Int32@)"/></strong>.</p> </dd></param>	
            <param name="guidKey"><dd> <p>Receives the <see cref="T:System.Guid"/> that identifies this attribute.</p> </dd></param>	
            <returns>The value associated to this index</returns>	
            <remarks>	
            <p>To enumerate all of an object's attributes in a thread-safe way, do the following:</p><ol> <li> <p>Call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.LockStore"/></strong> to prevent another thread from adding or deleting attributes.</p> </li> <li> <p>Call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetCount(System.Int32@)"/></strong> to find the number of attributes.</p> </li> <li> <p>Call <strong>GetItemByIndex</strong> to get each attribute by index.</p> </li> <li> <p>Call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.UnlockStore"/></strong> to unlock the attribute store.</p> </li> </ol><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>bb970331</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetItemByIndex([In] unsigned int unIndex,[Out] GUID* pguidKey,[InOut, Optional] PROPVARIANT* pValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetItemByIndex</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.Get``1(System.Guid)">
            <summary>	
            Gets an item value
            </summary>	
            <param name="guidKey">GUID of the key.</param>	
            <returns>The value associated to this key.</returns>	
            <msdn-id>ms704598</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetItem([In] const GUID&amp; guidKey,[In] void* pValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetItem</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.Get``1(SharpDX.MediaFoundation.MediaAttributeKey{``0})">
            <summary>	
            Gets an item value
            </summary>	
            <param name="guidKey">GUID of the key.</param>	
            <returns>The value associated to this key.</returns>	
            <msdn-id>ms704598</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::GetItem([In] const GUID&amp; guidKey,[In] void* pValue)</unmanaged>	
            <unmanaged-short>IMFAttributes::GetItem</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.Set``1(System.Guid,``0)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Adds an attribute value with a specified key. </p>	
            </summary>	
            <param name="guidKey"><dd> <p> A <see cref="T:System.Guid"/> that identifies the value to set. If this key already exists, the method overwrites the old value. </p> </dd></param>	
            <param name="value"><dd> <p> A <strong><see cref="T:SharpDX.Win32.Variant"/></strong> that contains the attribute value. The method copies the value. The <strong><see cref="T:SharpDX.Win32.Variant"/></strong> type must be one of the types listed in the <strong><see cref="T:SharpDX.MediaFoundation.AttributeType"/></strong> enumeration. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_OUTOFMEMORY</strong></dt> </dl> </td><td> <p> Insufficient memory. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDTYPE</strong></dt> </dl> </td><td> <p> Invalid attribute type. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> This method checks whether the <strong><see cref="T:SharpDX.Win32.Variant"/></strong> type is one of the attribute types defined in <strong><see cref="T:SharpDX.MediaFoundation.AttributeType"/></strong>, and fails if an unsupported type is used. However, this method does not check whether the <strong><see cref="T:SharpDX.Win32.Variant"/></strong> is the correct type for the specified attribute <see cref="T:System.Guid"/>. (There is no programmatic way to associate attribute GUIDs with property types.) For a list of Media Foundation attributes and their data types, see Media Foundation Attributes. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>bb970346</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::SetItem([In] const GUID&amp; guidKey,[In] const PROPVARIANT&amp; Value)</unmanaged>	
            <unmanaged-short>IMFAttributes::SetItem</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributes.Set``1(SharpDX.MediaFoundation.MediaAttributeKey{``0},``0)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Adds an attribute value with a specified key. </p>	
            </summary>	
            <param name="guidKey"><dd> <p> A <see cref="T:System.Guid"/> that identifies the value to set. If this key already exists, the method overwrites the old value. </p> </dd></param>	
            <param name="value"><dd> <p> A <strong><see cref="T:SharpDX.Win32.Variant"/></strong> that contains the attribute value. The method copies the value. The <strong><see cref="T:SharpDX.Win32.Variant"/></strong> type must be one of the types listed in the <strong><see cref="T:SharpDX.MediaFoundation.AttributeType"/></strong> enumeration. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_OUTOFMEMORY</strong></dt> </dl> </td><td> <p> Insufficient memory. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDTYPE</strong></dt> </dl> </td><td> <p> Invalid attribute type. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> This method checks whether the <strong><see cref="T:SharpDX.Win32.Variant"/></strong> type is one of the attribute types defined in <strong><see cref="T:SharpDX.MediaFoundation.AttributeType"/></strong>, and fails if an unsupported type is used. However, this method does not check whether the <strong><see cref="T:SharpDX.Win32.Variant"/></strong> is the correct type for the specified attribute <see cref="T:System.Guid"/>. (There is no programmatic way to associate attribute GUIDs with property types.) For a list of Media Foundation attributes and their data types, see Media Foundation Attributes. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>bb970346</msdn-id>	
            <unmanaged>HRESULT IMFAttributes::SetItem([In] const GUID&amp; guidKey,[In] const PROPVARIANT&amp; Value)</unmanaged>	
            <unmanaged-short>IMFAttributes::SetItem</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaAttributes.Count">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the number of attributes that are set on this object.</p>	
            </summary>	
            <remarks>	
            <p>To enumerate all of the attributes, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.GetItemByIndex(System.Int32,System.Guid@,System.IntPtr)"/></strong> for each index value.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAttributes::GetCount']/*"/>	
            <msdn-id>bb970413</msdn-id>	
            <unmanaged>GetCount</unmanaged>	
            <unmanaged-short>GetCount</unmanaged-short>	
            <unmanaged>HRESULT IMFAttributes::GetCount([Out] unsigned int* pcItems)</unmanaged>
        </member>
        <member name="M:SharpDX.MediaFoundation.Activate.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.Activate"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Activate.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.Activate">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.Activate"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.Activate.ActivateObject(System.Guid,System.IntPtr@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Creates the object associated with this activation object. </p>	
            </summary>	
            <param name="riid"><dd> <p> Interface identifier (IID) of the requested interface. </p> </dd></param>	
            <param name="vOut"><dd> <p> Receives a reference to the requested interface. The caller must release the interface. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>Some Microsoft Media Foundation objects must be shut down before being released. If so, the caller is responsible for shutting down the object that is returned in <em>ppv</em>. To shut down the object, do one of the following:</p><ul> <li>Call <strong><see cref="M:SharpDX.MediaFoundation.Activate.ShutdownObject"/></strong> on the activation object, or</li> <li>Call the object-specific shutdown method. This method will depend on the type of object. Possibilities include:<ul> <li>Media sources: Call <strong>IMFMediaSource::Shutdown</strong>.</li> <li>Media sinks: Call <strong>IMFMediaSink::Shutdown</strong>.</li> <li>Any object that supports the <strong>IMFShutdown</strong> interface: Call <strong>IMFShutdown::Shutdown</strong>.</li> </ul> </li> </ul><p>The <strong><see cref="M:SharpDX.MediaFoundation.Activate.ShutdownObject"/></strong> method is generic to all object types. If the object does not require a shutdown method, <strong>ShutdownObject</strong> succeeds and has no effect. If you do not know the specific shutdown method for the object (or do not know the object type), call <strong><see cref="M:SharpDX.MediaFoundation.Activate.ShutdownObject"/></strong>.</p><p> After the first call to <strong>ActivateObject</strong>, subsequent calls return a reference to the same instance, until the client calls either <strong>ShutdownObject</strong> or <strong><see cref="M:SharpDX.MediaFoundation.Activate.DetachObject"/></strong>. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFActivate::ActivateObject']/*"/>	
            <msdn-id>ms694292</msdn-id>	
            <unmanaged>HRESULT IMFActivate::ActivateObject([In] const GUID&amp; riid,[Out] void** ppv)</unmanaged>	
            <unmanaged-short>IMFActivate::ActivateObject</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Activate.ShutdownObject">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Shuts down the created object.</p>	
            </summary>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>If you create an object by calling <strong><see cref="M:SharpDX.MediaFoundation.Activate.ActivateObject(System.Guid,System.IntPtr@)"/></strong>, call <strong>ShutdownObject</strong> when you are done using the object.</p><p>The component that calls <strong>ActivateObject</strong>?not the component that creates the activation object?is responsible for calling <strong>ShutdownObject</strong>. For example, in a typical playback application, the application creates activation objects for the media sinks, but the Media Session calls <strong>ActivateObject</strong>. Therefore the Media Session, not the application, calls <strong>ShutdownObject</strong>.</p><p>After <strong>ShutdownObject</strong> is called, the activation object releases all of its internal references to the created object. If you call <strong>ActivateObject</strong> again, the activation object will create a new instance of the other object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFActivate::ShutdownObject']/*"/>	
            <msdn-id>ms695228</msdn-id>	
            <unmanaged>HRESULT IMFActivate::ShutdownObject()</unmanaged>	
            <unmanaged-short>IMFActivate::ShutdownObject</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Activate.DetachObject">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Detaches the created object from the activation object.</p>	
            </summary>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_NOTIMPL</strong></dt> </dl> </td><td> <p>Not implemented.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>The activation object releases all of its internal references to the created object. If you call <strong>ActivateObject</strong> again, the activation object will create a new instance of the other object.</p><p>The <strong>DetachObject</strong> method does not shut down the created object. If the <strong>DetachObject</strong> method succeeds, the client must shut down the created object. This rule applies only to objects that have a shutdown method or that support the <strong>IMFShutdown</strong> interface. See the remarks for <strong><see cref="M:SharpDX.MediaFoundation.Activate.ActivateObject(System.Guid,System.IntPtr@)"/></strong>.</p><p>Implementation of this method is optional. If the activation object does not support this method, the method returns E_NOTIMPL.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFActivate::DetachObject']/*"/>	
            <msdn-id>aa367342</msdn-id>	
            <unmanaged>HRESULT IMFActivate::DetachObject()</unmanaged>	
            <unmanaged-short>IMFActivate::DetachObject</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.AsyncCallback">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Callback interface to notify the application when an asynchronous method completes. </p>	
            </summary>	
            <remarks>	
            <p> For more information about asynchronous methods in Microsoft Media Foundation, see Asynchronous Callback Methods. </p><p>This interface is also used to perform  a work item in a Media Foundation work-queue. For more information, see Work Queues. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAsyncCallback']/*"/>	
            <msdn-id>ms699856</msdn-id>	
            <unmanaged>IMFAsyncCallback</unmanaged>	
            <unmanaged-short>IMFAsyncCallback</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.AsyncCallback.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.AsyncCallback"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.AsyncCallback.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.AsyncCallback">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.AsyncCallback"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.AsyncCallback.GetParameters(System.Int32@,System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Provides configuration information to the dispatching thread for a callback.</p>	
            </summary>	
            <param name="dwFlagsRef"><dd> <p>Receives a flag indicating the behavior of the callback object's <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method. The following values are defined. The default value is zero.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>Zero</strong></dt> </dl> </td><td> <p>The callback does not take a long time to complete, but has no specific restrictions on what system calls it makes. The callback generally takes less than 30 milliseconds to complete.</p> </td></tr> <tr><td><dl> <dt><strong><strong>MFASYNC_FAST_IO_PROCESSING_CALLBACK</strong></strong></dt> </dl> </td><td> <p>The callback does very minimal processing. It takes less than 1 millisecond to complete.</p> <p>The callback must be invoked from one of the following work queues:</p> <ul> <li><strong>MFASYNC_CALLBACK_QUEUE_IO</strong></li> <li><strong>MFASYNC_CALLBACK_QUEUE_TIMER</strong></li> </ul> </td></tr> <tr><td><dl> <dt><strong><strong>MFASYNC_SIGNAL_CALLBACK</strong></strong></dt> </dl> </td><td> <p>Implies <strong>MFASYNC_FAST_IO_PROCESSING_CALLBACK</strong>, with the additional restriction that the callback does no processing (less than 50 microseconds), and the only system call it makes is <strong>SetEvent</strong>.</p> <p>The callback must be invoked from one of the following work queues:</p> <ul> <li><strong>MFASYNC_CALLBACK_QUEUE_IO</strong></li> <li><strong>MFASYNC_CALLBACK_QUEUE_TIMER</strong></li> </ul> </td></tr> <tr><td><dl> <dt><strong><strong>MFASYNC_BLOCKING_CALLBACK</strong></strong></dt> </dl> </td><td> <p>Blocking callback.</p> </td></tr> <tr><td><dl> <dt><strong><strong>MFASYNC_REPLY_CALLBACK</strong></strong></dt> </dl> </td><td> <p>Reply callback.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="dwQueueRef"><dd> <p> Receives the identifier of the work queue on which the callback is dispatched.  </p> <p>This value can specify one of the standard Media Foundation work queues, or a work queue created by the application. For list of standard Media Foundation work queues, see <strong>Work Queue Identifiers</strong>. To create a new work queue, call <strong>MFAllocateWorkQueue</strong>. The default value is <strong>MFASYNC_CALLBACK_QUEUE_STANDARD</strong>.</p> <p>If the work queue is not compatible with the value returned in <em>pdwFlags</em>, the Media Foundation platform returns <strong>MF_E_INVALID_WORKQUEUE</strong> when it tries to dispatch the callback. (See <strong>MFPutWorkItem</strong>.)</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><strong><see cref="F:SharpDX.Result.Ok"/></strong></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong><strong>E_NOTIMPL</strong></strong></dt> </dl> </td><td> <p> Not implemented. Assume the default behavior. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> The <strong>GetParameters</strong> method returns information about the callback so that the dispatching thread can optimize the process that it uses to invoke the callback. </p><p> If the method returns a value other than zero in the <em>pdwFlags</em> parameter, your <strong>Invoke</strong> method must meet the requirements described here. Otherwise, the callback might delay the pipeline.</p><p> If you want default values for both parameters, return <strong>E_NOTIMPL</strong>. The default values are given in the parameter descriptions on this page.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAsyncCallback::GetParameters']/*"/>	
            <msdn-id>bb970381</msdn-id>	
            <unmanaged>HRESULT IMFAsyncCallback::GetParameters([Out] unsigned int* pdwFlags,[Out] unsigned int* pdwQueue)</unmanaged>	
            <unmanaged-short>IMFAsyncCallback::GetParameters</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Called when an asynchronous operation is completed.</p>	
            </summary>	
            <param name="asyncResultRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface. Pass this reference to the asynchronous <strong>End...</strong> method to complete the asynchronous call.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Within your implementation of <strong>Invoke</strong>, call the corresponding <strong>End...</strong> method.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAsyncCallback::Invoke']/*"/>	
            <msdn-id>bb970360</msdn-id>	
            <unmanaged>HRESULT IMFAsyncCallback::Invoke([In, Optional] IMFAsyncResult* pAsyncResult)</unmanaged>	
            <unmanaged-short>IMFAsyncCallback::Invoke</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.AsyncResult">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Provides information about the result of an asynchronous operation. </p>	
            </summary>	
            <remarks>	
            <p>Use this interface to complete an asynchronous operation. You get a reference to this interface when your callback object's <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method is called. To complete the operation, pass the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> reference to the <strong>End...</strong> method that corresponds to the <strong>Begin...</strong> method that starts the operation. For example, if the asynchronous method is named <strong>BeginRead</strong>, call the <strong>EndRead</strong> method. For more information, see Calling Asynchronous Methods.</p><p>If you are implementing an asynchronous method, call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateAsyncResult(SharpDX.ComObject,SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject,SharpDX.MediaFoundation.AsyncResult@)"/></strong> to create an instance of this object. For more information, see Writing an Asynchronous Method.</p><p>Any custom implementation of this interface must inherit the <strong><see cref="T:SharpDX.MediaFoundation.Mfasyncresult"/></strong> structure.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAsyncResult']/*"/>	
            <msdn-id>ms700196</msdn-id>	
            <unmanaged>IMFAsyncResult</unmanaged>	
            <unmanaged-short>IMFAsyncResult</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.AsyncResult.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.AsyncResult"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.AsyncResult.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.AsyncResult">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.AsyncResult"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.AsyncResult.GetState(SharpDX.ComObject@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Returns the state object specified by the caller in the asynchronous <strong>Begin</strong> method.</p>	
            </summary>	
            <param name="unkStateOut"><dd> <p>Receives a reference to the state object's <strong><see cref="T:SharpDX.ComObject"/></strong> interface. If the value is not <strong><c>null</c></strong>, the caller must release the interface.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_POINTER</strong></dt> </dl> </td><td> <p>There is no state object associated with this asynchronous result.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>The caller of the asynchronous method specifies the state object, and can use it for any caller-defined purpose. The state object can be <strong><c>null</c></strong>. If the state object is <strong><c>null</c></strong>, <strong>GetState</strong> returns <strong>E_POINTER</strong>.</p><p>If you are implementing an asynchronous method, set the state object on the through the <em>punkState</em> parameter of the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateAsyncResult(SharpDX.ComObject,SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject,SharpDX.MediaFoundation.AsyncResult@)"/></strong> function.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAsyncResult::GetState']/*"/>	
            <msdn-id>bb970576</msdn-id>	
            <unmanaged>HRESULT IMFAsyncResult::GetState([Out] IUnknown** ppunkState)</unmanaged>	
            <unmanaged-short>IMFAsyncResult::GetState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.AsyncResult.GetStatus">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Returns the status of the asynchronous operation.</p>	
            </summary>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The operation completed successfully.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAsyncResult::GetStatus']/*"/>	
            <msdn-id>ms702095</msdn-id>	
            <unmanaged>HRESULT IMFAsyncResult::GetStatus()</unmanaged>	
            <unmanaged-short>IMFAsyncResult::GetStatus</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.AsyncResult.SetStatus(SharpDX.Result)">
            <summary>	
            <p>Sets the status of the asynchronous operation.</p>  <see cref="T:SharpDX.Result"/> SetStatus( <see cref="T:SharpDX.Result"/> hrStatus	
            );<p></p>Parameters <p> hrStatus </p> <p>The status of the asynchronous operation.</p>  <p>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.</p> <table><tr> <th> Return code              </th> <th> Description              </th> </tr><tr> <td> <p><see cref="F:SharpDX.Result.Ok"/></p> </td> <td> <p>The method succeeded.</p> </td> </tr></table>  <p>If you implement an asynchronous method, call SetStatus to set the status code for the operation. </p>  <p> Client: Requires Windows Vista.</p> <p> Header: Defined in mfobjects.h; include mfidl.h.</p> <p> Library: Use mfuuid.lib.</p> ReferenceIMFAsyncResult InterfaceConceptsAsynchronous Callback Methods	
            </summary>	
            <param name="hrStatus">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAsyncResult::SetStatus']/*"/>	
            <msdn-id>ms697440</msdn-id>	
            <unmanaged>HRESULT IMFAsyncResult::SetStatus([In] HRESULT hrStatus)</unmanaged>	
            <unmanaged-short>IMFAsyncResult::SetStatus</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.AsyncResult.GetObject(SharpDX.ComObject@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Returns an object associated with the asynchronous operation. The type of object, if any, depends on the asynchronous method that was called.</p>	
            </summary>	
            <param name="objectOut"><dd> <p>Receives a reference to the object's <strong><see cref="T:SharpDX.ComObject"/></strong> interface. If no object is associated with the operation, this parameter receives the value <strong><c>null</c></strong>. If the value is not <strong><c>null</c></strong>, the caller must release the interface.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_POINTER</strong></dt> </dl> </td><td> <p>There is no object associated with this asynchronous result.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Typically, this object is used by the component that implements the asynchronous method. It provides a way for the function that invokes the callback to pass information to the asynchronous <strong>End...</strong> method that completes the operation.</p><p>If you are implementing an asynchronous method, you can set the object through the <em>punkObject</em> parameter of the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateAsyncResult(SharpDX.ComObject,SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject,SharpDX.MediaFoundation.AsyncResult@)"/></strong> function.</p><p>If the asynchronous result object's internal <strong><see cref="T:SharpDX.ComObject"/></strong> reference is <strong><c>null</c></strong>, the method returns <strong>E_POINTER</strong>.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAsyncResult::GetObject']/*"/>	
            <msdn-id>bb970500</msdn-id>	
            <unmanaged>HRESULT IMFAsyncResult::GetObject([Out] IUnknown** ppObject)</unmanaged>	
            <unmanaged-short>IMFAsyncResult::GetObject</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.AsyncResult.GetStateNoAddRef">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Returns the state object specified by the caller in the asynchronous <strong>Begin</strong> method, without incrementing the object's reference count.</p>	
            </summary>	
            <returns><p>Returns a reference to the state object's <strong><see cref="T:SharpDX.ComObject"/></strong> interface, or <strong><c>null</c></strong> if no object was set. This reference does not have an outstanding reference count. If you store this reference, you must call <strong>AddRef</strong> on the reference.</p></returns>	
            <remarks>	
            <p>This method cannot be called remotely.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAsyncResult::GetStateNoAddRef']/*"/>	
            <msdn-id>ms696238</msdn-id>	
            <unmanaged>IUnknown* IMFAsyncResult::GetStateNoAddRef()</unmanaged>	
            <unmanaged-short>IMFAsyncResult::GetStateNoAddRef</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.AsyncResult.State">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Returns the state object specified by the caller in the asynchronous <strong>Begin</strong> method.</p>	
            </summary>	
            <remarks>	
            <p>The caller of the asynchronous method specifies the state object, and can use it for any caller-defined purpose. The state object can be <strong><c>null</c></strong>. If the state object is <strong><c>null</c></strong>, <strong>GetState</strong> returns <strong>E_POINTER</strong>.</p><p>If you are implementing an asynchronous method, set the state object on the through the <em>punkState</em> parameter of the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateAsyncResult(SharpDX.ComObject,SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject,SharpDX.MediaFoundation.AsyncResult@)"/></strong> function.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAsyncResult::GetState']/*"/>	
            <msdn-id>bb970576</msdn-id>	
            <unmanaged>GetState</unmanaged>	
            <unmanaged-short>GetState</unmanaged-short>	
            <unmanaged>HRESULT IMFAsyncResult::GetState([Out] IUnknown** ppunkState)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.AsyncResult.Status">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Returns the status of the asynchronous operation.</p>	
            </summary>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAsyncResult::GetStatus']/*"/>	
            <msdn-id>ms702095</msdn-id>	
            <unmanaged>GetStatus / SetStatus</unmanaged>	
            <unmanaged-short>GetStatus</unmanaged-short>	
            <unmanaged>HRESULT IMFAsyncResult::GetStatus()</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.AsyncResult.Object">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Returns an object associated with the asynchronous operation. The type of object, if any, depends on the asynchronous method that was called.</p>	
            </summary>	
            <remarks>	
            <p>Typically, this object is used by the component that implements the asynchronous method. It provides a way for the function that invokes the callback to pass information to the asynchronous <strong>End...</strong> method that completes the operation.</p><p>If you are implementing an asynchronous method, you can set the object through the <em>punkObject</em> parameter of the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateAsyncResult(SharpDX.ComObject,SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject,SharpDX.MediaFoundation.AsyncResult@)"/></strong> function.</p><p>If the asynchronous result object's internal <strong><see cref="T:SharpDX.ComObject"/></strong> reference is <strong><c>null</c></strong>, the method returns <strong>E_POINTER</strong>.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAsyncResult::GetObject']/*"/>	
            <msdn-id>bb970500</msdn-id>	
            <unmanaged>GetObject</unmanaged>	
            <unmanaged-short>GetObject</unmanaged-short>	
            <unmanaged>HRESULT IMFAsyncResult::GetObject([Out] IUnknown** ppObject)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.AsyncResult.StateNoAddRef">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Returns the state object specified by the caller in the asynchronous <strong>Begin</strong> method, without incrementing the object's reference count.</p>	
            </summary>	
            <remarks>	
            <p>This method cannot be called remotely.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFAsyncResult::GetStateNoAddRef']/*"/>	
            <msdn-id>ms696238</msdn-id>	
            <unmanaged>GetStateNoAddRef</unmanaged>	
            <unmanaged-short>GetStateNoAddRef</unmanaged-short>	
            <unmanaged>IUnknown* IMFAsyncResult::GetStateNoAddRef()</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.Buffer2D">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Represents a buffer that contains a two-dimensional surface, such as a video frame. </p>	
            </summary>	
            <remarks>	
            <p>To get a reference to this interface, call <strong>QueryInterface</strong> on the media buffer.</p><p>To use a 2-D buffer, it is important to know the <em>stride</em>, which is the number of bytes needed to go from one row of pixels to the next. The stride may be larger than the image width, because the surface may contain padding bytes after each row of pixels. Stride can also be negative, if the pixels are oriented bottom-up in memory. For more information, see Image Stride.</p><p>Every video format defines a <em>contiguous</em> or <em>packed</em> representation. This representation is compatible with the standard layout of a DirectX surface in system memory, with no additional padding. For RGB video, the contiguous representation has a pitch equal to the image width in bytes, rounded up to the nearest <strong>DWORD</strong> boundary. For YUV video, the layout of the contiguous representation depends on the YUV format. For planar YUV formats, the Y plane might have a different pitch than the U and V planes.</p><p>If a media buffer supports the <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D"/></strong> interface, the underlying buffer is not guaranteed to have a contiguous representation, because there might be additional padding bytes after each row of pixels. When a buffer is non-contiguous, the <strong>Lock</strong> and <strong>Lock2D</strong> methods have different behaviors:</p><ul> <li> The <strong>Lock2D</strong> method returns a reference to the underlying buffer. The buffer might not be contiguous. </li> <li> The <strong>Lock</strong> method returns a buffer that is guaranteed to be contiguous. If the underlying buffer is not contiguous, the method copies the data into a new buffer, and the <strong>Unlock</strong> method copies it back into the original buffer. </li> </ul><p>Call the <strong>Lock2D</strong> method to access the 2-D buffer in its native format. The native format might not be contiguous. The buffer's <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.Lock(System.Int32@,System.Int32@)"/></strong> method returns a contiguous representation of the buffer. However, this might require an internal copy from the native format. For 2-D buffers, therefore, you should use the <strong>Lock2D</strong> method and avoid the <strong>Lock</strong> method. Because the <strong>Lock</strong> method might cause up to two buffer copies, the <strong>Lock2D</strong> method is generally more efficient and should be used when possible. To find out if the underlying buffer is contiguous, call <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.IsContiguousFormat_(SharpDX.Bool@)"/></strong>.</p><p>For uncompressed images, the amount of valid data in the buffer is determined by the width, height, and pixel layout of the image. For this reason, if you call <strong>Lock2D</strong> to access the buffer, do not rely on the values returned by <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.GetCurrentLength(System.Int32@)"/></strong> or <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.GetMaxLength(System.Int32@)"/></strong>. Similarly, if you modify the data in the buffer, you do not have to call <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.SetCurrentLength(System.Int32)"/></strong> to update the size. Generally, you should avoid mixing calls to <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D"/></strong> and <strong><see cref="T:SharpDX.MediaFoundation.MediaBuffer"/></strong> methods on the same media buffer.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMF2DBuffer']/*"/>	
            <msdn-id>ms699894</msdn-id>	
            <unmanaged>IMF2DBuffer</unmanaged>	
            <unmanaged-short>IMF2DBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Buffer2D.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.Buffer2D"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Buffer2D.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.Buffer2D">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.Buffer2D"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.Buffer2D.Lock2D(System.Byte[],System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Gives the caller access to the memory in the buffer.</p>	
            </summary>	
            <param name="bScanline0Out"><dd> <p>Receives a reference to the first byte of the top row of pixels in the image. The top row is defined as the top row when the image is presented to the viewer, and might not be the first row in memory.</p> </dd></param>	
            <param name="lPitchRef"><dd> <p>Receives the surface stride, in bytes. The stride might be negative, indicating that the image is oriented from the bottom up in memory.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>D3DERR_INVALIDCALL</strong></dt> </dl> </td><td> <p>Cannot lock the Direct3D surface.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDREQUEST</strong></dt> </dl> </td><td> <p>The buffer cannot be locked at this time.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>If <em>p</em> is a reference to the first byte in a row of pixels, <em>p</em> + (*<em>plPitch</em>) points to the first byte in the next row of pixels. A buffer might contain padding after each row of pixels, so the stride might be wider than the width of the image in bytes. Do not access the memory that is reserved for padding bytes, because it might not be read-accessible or write-accessible. For more information, see Image Stride.</p><p>The reference returned in <em>pbScanline0</em> remains valid as long as the caller holds the lock. When you are done accessing the memory, call <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.Unlock2D"/></strong> to unlock the buffer. You must call <strong>Unlock2D</strong> once for each call to <strong>Lock2D</strong>. After you unlock the buffer, the reference returned in <em>pbScanline0</em> is no longer valid and should not be used. Generally, it is best to call <strong>Lock2D</strong> only when you need to access the buffer memory, and not earlier.</p><p>The values returned by the <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.GetCurrentLength(System.Int32@)"/></strong> and <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.GetMaxLength(System.Int32@)"/></strong> methods do not apply to the buffer that is returned by the <strong>Lock2D</strong> method. For the same reason, you do not need to call <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.SetCurrentLength(System.Int32)"/></strong> after manipulating the data in the buffer returned by the <strong>Lock2D</strong> method.</p><p>The <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.Lock(System.Int32@,System.Int32@)"/></strong> method fails while the <strong>Lock2D</strong> lock is held, and vice-versa. Applications should use only one of these methods at a time.</p><p>When the underlying buffer is a Direct3D surface, the method fails if the surface is not lockable.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMF2DBuffer::Lock2D']/*"/>	
            <msdn-id>ms700182</msdn-id>	
            <unmanaged>HRESULT IMF2DBuffer::Lock2D([Out, Buffer] unsigned char** ppbScanline0,[Out] int* plPitch)</unmanaged>	
            <unmanaged-short>IMF2DBuffer::Lock2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Buffer2D.Unlock2D">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Unlocks a buffer that was previously locked. Call this method once for each call to <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.Lock2D(System.Byte[],System.Int32@)"/></strong>.</p>	
            </summary>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMF2DBuffer::Unlock2D']/*"/>	
            <msdn-id>ms697066</msdn-id>	
            <unmanaged>HRESULT IMF2DBuffer::Unlock2D()</unmanaged>	
            <unmanaged-short>IMF2DBuffer::Unlock2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Buffer2D.GetScanline0AndPitch(System.Byte@,System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves a reference to the buffer memory and the surface stride.</p>	
            </summary>	
            <param name="bScanline0Ref"><dd> <p>Receives a reference to the first byte of the top row of pixels in the image.</p> </dd></param>	
            <param name="lPitchRef"><dd> <p>Receives the stride, in bytes. For more information, see Image Stride.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Win32.ErrorCode.InvalidFunction"/></strong></dt> </dl> </td><td> <p>You must lock the buffer before calling this method.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Before calling this method, you must lock the buffer by calling <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.Lock2D(System.Byte[],System.Int32@)"/></strong>. The reference returned in <em>plPitch</em> is valid only while the buffer remains locked.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMF2DBuffer::GetScanline0AndPitch']/*"/>	
            <msdn-id>ms694042</msdn-id>	
            <unmanaged>HRESULT IMF2DBuffer::GetScanline0AndPitch([Out] unsigned char** pbScanline0,[Out] int* plPitch)</unmanaged>	
            <unmanaged-short>IMF2DBuffer::GetScanline0AndPitch</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Buffer2D.IsContiguousFormat_(SharpDX.Bool@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Queries whether the buffer is contiguous in its native format.</p>	
            </summary>	
            <param name="fIsContiguousRef"><dd> <p>Receives a Boolean value. The value is <strong>TRUE</strong> if the buffer is contiguous, and <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>For a definition of contiguous as it applies to 2-D buffers, see the Remarks section in <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D"/></strong> interface. For non-contiguous buffers, the <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.Lock(System.Int32@,System.Int32@)"/></strong> method must perform an internal copy.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMF2DBuffer::IsContiguousFormat']/*"/>	
            <msdn-id>ms701629</msdn-id>	
            <unmanaged>HRESULT IMF2DBuffer::IsContiguousFormat([Out] BOOL* pfIsContiguous)</unmanaged>	
            <unmanaged-short>IMF2DBuffer::IsContiguousFormat</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Buffer2D.GetContiguousLength(System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the number of bytes needed to store the contents of the buffer in contiguous format.</p>	
            </summary>	
            <param name="cbLengthRef"><dd> <p>Receives the number of bytes needed to store the contents of the buffer in contiguous format.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>For a definition of contiguous as it applies to 2-D buffers, see the Remarks section in <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D"/></strong> interface.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMF2DBuffer::GetContiguousLength']/*"/>	
            <msdn-id>ms696971</msdn-id>	
            <unmanaged>HRESULT IMF2DBuffer::GetContiguousLength([Out] unsigned int* pcbLength)</unmanaged>	
            <unmanaged-short>IMF2DBuffer::GetContiguousLength</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Buffer2D.ContiguousCopyTo(System.Byte[],System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Copies this buffer into the caller's buffer, converting the data to contiguous format.</p>	
            </summary>	
            <param name="bDestBufferRef"><dd> <p>Pointer to the destination buffer where the data will be copied. The caller allocates the buffer.</p> </dd></param>	
            <param name="cbDestBuffer"><dd> <p>Size of the destination buffer, in bytes. To get the required size, call <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.GetContiguousLength(System.Int32@)"/></strong>.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_INVALIDARG</strong></dt> </dl> </td><td> <p>Invalid size specified in <em>pbDestBuffer</em>.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>If the original buffer is not contiguous, this method converts the contents into contiguous format during the copy. For a definition of contiguous as it applies to 2-D buffers, see the Remarks section in <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D"/></strong> interface.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMF2DBuffer::ContiguousCopyTo']/*"/>	
            <msdn-id>ms696215</msdn-id>	
            <unmanaged>HRESULT IMF2DBuffer::ContiguousCopyTo([Out, Buffer] unsigned char* pbDestBuffer,[In] unsigned int cbDestBuffer)</unmanaged>	
            <unmanaged-short>IMF2DBuffer::ContiguousCopyTo</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Buffer2D.ContiguousCopyFrom(System.Byte[],System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Copies data to this buffer from a buffer that has a contiguous format.</p>	
            </summary>	
            <param name="bSrcBufferRef"><dd> <p>Pointer to the source buffer. The caller allocates the buffer.</p> </dd></param>	
            <param name="cbSrcBuffer"><dd> <p>Size of the source buffer, in bytes. To get the maximum size of the buffer, call <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.GetContiguousLength(System.Int32@)"/></strong>.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This method copies the contents of the source buffer into the buffer that is managed by this <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D"/></strong> object. The source buffer must be in contiguous format. While copying, the method converts the contents into the destination buffer's native format, correcting for the buffer's pitch if necessary.</p><p>For a definition of contiguous as it applies to 2-D buffers, see the Remarks section in the <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D"/></strong> interface topic.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMF2DBuffer::ContiguousCopyFrom']/*"/>	
            <msdn-id>ms700162</msdn-id>	
            <unmanaged>HRESULT IMF2DBuffer::ContiguousCopyFrom([In, Buffer] const unsigned char* pbSrcBuffer,[In] unsigned int cbSrcBuffer)</unmanaged>	
            <unmanaged-short>IMF2DBuffer::ContiguousCopyFrom</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.Buffer2D.IsContiguousFormat">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Queries whether the buffer is contiguous in its native format.</p>	
            </summary>	
            <remarks>	
            <p>For a definition of contiguous as it applies to 2-D buffers, see the Remarks section in <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D"/></strong> interface. For non-contiguous buffers, the <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.Lock(System.Int32@,System.Int32@)"/></strong> method must perform an internal copy.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMF2DBuffer::IsContiguousFormat']/*"/>	
            <msdn-id>ms701629</msdn-id>	
            <unmanaged>IsContiguousFormat</unmanaged>	
            <unmanaged-short>IsContiguousFormat</unmanaged-short>	
            <unmanaged>HRESULT IMF2DBuffer::IsContiguousFormat([Out] BOOL* pfIsContiguous)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.Buffer2D.ContiguousLength">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the number of bytes needed to store the contents of the buffer in contiguous format.</p>	
            </summary>	
            <remarks>	
            <p>For a definition of contiguous as it applies to 2-D buffers, see the Remarks section in <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D"/></strong> interface.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMF2DBuffer::GetContiguousLength']/*"/>	
            <msdn-id>ms696971</msdn-id>	
            <unmanaged>GetContiguousLength</unmanaged>	
            <unmanaged-short>GetContiguousLength</unmanaged-short>	
            <unmanaged>HRESULT IMF2DBuffer::GetContiguousLength([Out] unsigned int* pcbLength)</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.Buffer2D2">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gives the caller access to the memory in the buffer.</p>	
            </summary>	
            <remarks>	
            <p>When you are done accessing the memory, call <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.Unlock2D"/></strong> to unlock the buffer. You must call <strong>Unlock2D</strong> once for each call to <strong>Lock2DSize</strong>.</p><p>This method is equivalent to the <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.Lock2D(System.Byte[],System.Int32@)"/></strong> method. However, <strong>Lock2DSize</strong> is preferred because it enables the caller to validate memory references, and because it supports read-only locks. A buffer is not guaranteed to support the <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D2"/></strong> interface. To access a buffer, you should try the following methods in the order listed:</p><ol> <li><strong><see cref="M:SharpDX.MediaFoundation.Buffer2D2.Lock2DSize(SharpDX.MediaFoundation.Buffer2DLockFlags,System.Byte[],System.Int32@,System.Byte[],System.Int32@)"/></strong></li> <li> <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.Lock2D(System.Byte[],System.Int32@)"/></strong> </li> <li> <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.Lock(System.Int32@,System.Int32@)"/></strong> </li> </ol><p>The <em>ppbBufferStart</em> and <em>pcbBufferLength</em> parameters receive the bounds of the buffer memory. Use these values to guard against buffer overruns. Use the values of <em>ppbScanline0</em> and <em>plPitch</em> to access the image data. If the image is bottom-up in memory, <em>ppbScanline0</em> will point to the last scan line in memory and <em>plPitch</em> will be negative. For more information, see Image Stride.</p><p>The <em>lockFlags</em> parameter specifies whether the buffer is locked for read-only access, write-only access,  or read/write access. </p><ul> <li>If the buffer is already locked for read-only access, it cannot be locked for write access.</li> <li>If the buffer is already locked for write-only access, it cannot be locked for read access.</li> <li>If the buffer is already locked for read/write acess, it can be locked for read or write acess.</li> </ul><p>When possible, use a read-only or write-only lock, and avoid locking the buffer for read/write access. If the buffer represents a DirectX Graphics Infrastructure (DXGI) surface, a read/write lock can cause an extra copy between CPU memory and GPU memory.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMF2DBuffer2']/*"/>	
            <msdn-id>hh447829</msdn-id>	
            <unmanaged>IMF2DBuffer2</unmanaged>	
            <unmanaged-short>IMF2DBuffer2</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Buffer2D2.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.Buffer2D2"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Buffer2D2.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.Buffer2D2">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.Buffer2D2"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.Buffer2D2.Lock2DSize(SharpDX.MediaFoundation.Buffer2DLockFlags,System.Byte[],System.Int32@,System.Byte[],System.Int32@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gives the caller access to the memory in the buffer.</p>	
            </summary>	
            <param name="lockFlags"><dd> <p>A member of the <strong><see cref="T:SharpDX.MediaFoundation.Buffer2DLockFlags"/></strong> enumeration that specifies whether to lock the buffer for reading, writing, or both.</p> </dd></param>	
            <param name="bScanline0Out"><dd> <p>Receives a reference to the first byte of the top row of pixels in the image. The top row is defined as the top row when the image is presented to the viewer, and might not be the first row in memory. </p> </dd></param>	
            <param name="lPitchRef"><dd> <p>Receives the surface stride, in bytes. The stride might be negative, indicating that the image is oriented from the bottom up in memory. </p> </dd></param>	
            <param name="bBufferStartOut"><dd> <p>Receives a reference to the start of the accessible buffer in memory.</p> </dd></param>	
            <param name="cbBufferLengthRef"><dd> <p>Receives the length of the buffer, in bytes.</p> </dd></param>	
            <returns><p>This method can return one of these values.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>Success.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDREQUEST</strong></dt> </dl> </td><td> <p>Invalid request. The buffer might already be locked with an incompatible locking flag. See Remarks.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>When you are done accessing the memory, call <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.Unlock2D"/></strong> to unlock the buffer. You must call <strong>Unlock2D</strong> once for each call to <strong>Lock2DSize</strong>.</p><p>This method is equivalent to the <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.Lock2D(System.Byte[],System.Int32@)"/></strong> method. However, <strong>Lock2DSize</strong> is preferred because it enables the caller to validate memory references, and because it supports read-only locks. A buffer is not guaranteed to support the <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D2"/></strong> interface. To access a buffer, you should try the following methods in the order listed:</p><ol> <li><strong><see cref="M:SharpDX.MediaFoundation.Buffer2D2.Lock2DSize(SharpDX.MediaFoundation.Buffer2DLockFlags,System.Byte[],System.Int32@,System.Byte[],System.Int32@)"/></strong></li> <li> <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.Lock2D(System.Byte[],System.Int32@)"/></strong> </li> <li> <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.Lock(System.Int32@,System.Int32@)"/></strong> </li> </ol><p>The <em>ppbBufferStart</em> and <em>pcbBufferLength</em> parameters receive the bounds of the buffer memory. Use these values to guard against buffer overruns. Use the values of <em>ppbScanline0</em> and <em>plPitch</em> to access the image data. If the image is bottom-up in memory, <em>ppbScanline0</em> will point to the last scan line in memory and <em>plPitch</em> will be negative. For more information, see Image Stride.</p><p>The <em>lockFlags</em> parameter specifies whether the buffer is locked for read-only access, write-only access,  or read/write access. </p><ul> <li>If the buffer is already locked for read-only access, it cannot be locked for write access.</li> <li>If the buffer is already locked for write-only access, it cannot be locked for read access.</li> <li>If the buffer is already locked for read/write acess, it can be locked for read or write acess.</li> </ul><p>When possible, use a read-only or write-only lock, and avoid locking the buffer for read/write access. If the buffer represents a DirectX Graphics Infrastructure (DXGI) surface, a read/write lock can cause an extra copy between CPU memory and GPU memory.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMF2DBuffer2::Lock2DSize']/*"/>	
            <msdn-id>hh447829</msdn-id>	
            <unmanaged>HRESULT IMF2DBuffer2::Lock2DSize([In] MF2DBuffer_LockFlags lockFlags,[Out, Buffer] unsigned char** ppbScanline0,[Out] int* plPitch,[Out, Buffer] unsigned char** ppbBufferStart,[Out] unsigned int* pcbBufferLength)</unmanaged>	
            <unmanaged-short>IMF2DBuffer2::Lock2DSize</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Buffer2D2.Copy2DTo(SharpDX.MediaFoundation.Buffer2D2)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Copies the buffer to another 2D buffer object.</p>	
            </summary>	
            <param name="destBufferRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D2"/></strong> interface of the destination buffer.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The destination buffer must be at least as large as the source buffer.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMF2DBuffer2::Copy2DTo']/*"/>	
            <msdn-id>hh447828</msdn-id>	
            <unmanaged>HRESULT IMF2DBuffer2::Copy2DTo([In] IMF2DBuffer2* pDestBuffer)</unmanaged>	
            <unmanaged-short>IMF2DBuffer2::Copy2DTo</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.ByteStreamBuffering">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Controls how a byte stream buffers data from a network. </p><p>To get a reference to this interface, call <strong>QueryInterface</strong> on the byte stream object.</p>	
            </summary>	
            <remarks>	
            <p> If a byte stream implements this interface, a media source can use it to control how the byte stream buffers data. This interface is designed for byte streams that read data from a network. </p><p> A byte stream that implements this interface should also implement the <strong><see cref="T:SharpDX.MediaFoundation.MediaEventGenerator"/></strong> interface. When the byte stream starts buffering, it sends an <see cref="F:SharpDX.MediaFoundation.MediaEventTypes.BufferingStarted"/> event. When it stops buffering, it sends an <see cref="F:SharpDX.MediaFoundation.MediaEventTypes.BufferingStopped"/> event. </p><p> The byte stream must send a matching <see cref="F:SharpDX.MediaFoundation.MediaEventTypes.BufferingStopped"/> event for every <see cref="F:SharpDX.MediaFoundation.MediaEventTypes.BufferingStarted"/> event. The byte stream must not send <see cref="F:SharpDX.MediaFoundation.MediaEventTypes.BufferingStarted"/> events unless the media source has enabled buffering by calling <strong>EnableBuffering</strong> with the value <strong>TRUE</strong>. </p><p> After the byte stream sends an <see cref="F:SharpDX.MediaFoundation.MediaEventTypes.BufferingStarted"/> event, it should send <see cref="F:SharpDX.MediaFoundation.MediaEventTypes.BufferingStopped"/> if any of the following occur: </p><ul> <li> The byte stream finishes buffering data. </li> <li> The byte stream reaches the end of the stream. </li> <li> The media source calls <strong>EnableBuffering</strong> with the value <strong><see cref="F:SharpDX.Result.False"/></strong>. </li> <li> The media source calls <strong>StopBuffering</strong>. </li> </ul><p> The byte stream should not send any more buffering events after it reaches the end of the file. </p><p> If buffering is disabled, the byte stream does not send any buffering events. Internally, however, it might still buffer data while it waits for I/O requests to complete. Therefore, <strong><see cref="T:SharpDX.MediaFoundation.IByteStream"/></strong> methods might take an indefinite length of time to complete. </p><p> If the byte stream is buffering data internally and the media source calls <strong>EnableBuffering</strong> with the value <strong>TRUE</strong>, the byte stream can send <see cref="F:SharpDX.MediaFoundation.MediaEventTypes.BufferingStarted"/> immediately. </p><p> After the presentation has started, the media source should forward and <see cref="F:SharpDX.MediaFoundation.MediaEventTypes.BufferingStarted"/> and <see cref="F:SharpDX.MediaFoundation.MediaEventTypes.BufferingStopped"/> events that it receives while started. The Media Session will pause the presentation clock while buffering is progress and restart the presentation clock when buffering completes. The media source should only forward these events while the presentation is playing. The purpose of sending these events to the Media Session is to pause the presentation time while the source buffers data. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamBuffering']/*"/>	
            <msdn-id>aa372548</msdn-id>	
            <unmanaged>IMFByteStreamBuffering</unmanaged>	
            <unmanaged-short>IMFByteStreamBuffering</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamBuffering.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.ByteStreamBuffering"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamBuffering.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.ByteStreamBuffering">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.ByteStreamBuffering"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamBuffering.SetBufferingParams(SharpDX.MediaFoundation.ByteStreamBufferingParameters@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Sets the buffering parameters.</p>	
            </summary>	
            <param name="paramsRef"><dd> <p>Pointer to an <strong><see cref="T:SharpDX.MediaFoundation.ByteStreamBufferingParameters"/></strong> structure that contains the buffering parameters. The byte stream uses this information to calculate how much data to buffer from the network.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamBuffering::SetBufferingParams']/*"/>	
            <msdn-id>aa366520</msdn-id>	
            <unmanaged>HRESULT IMFByteStreamBuffering::SetBufferingParams([In] MFBYTESTREAM_BUFFERING_PARAMS* pParams)</unmanaged>	
            <unmanaged-short>IMFByteStreamBuffering::SetBufferingParams</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamBuffering.EnableBuffering(SharpDX.Bool)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Enables or disables buffering.</p>	
            </summary>	
            <param name="fEnable"><dd> <p>Specifies whether the byte stream buffers data. If <strong>TRUE</strong>, buffering is enabled. If <strong><see cref="F:SharpDX.Result.False"/></strong>, buffering is disabled.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Before calling this method, call <strong><see cref="M:SharpDX.MediaFoundation.ByteStreamBuffering.SetBufferingParams(SharpDX.MediaFoundation.ByteStreamBufferingParameters@)"/></strong> to set the buffering parameters on the byte stream.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamBuffering::EnableBuffering']/*"/>	
            <msdn-id>aa369933</msdn-id>	
            <unmanaged>HRESULT IMFByteStreamBuffering::EnableBuffering([In] BOOL fEnable)</unmanaged>	
            <unmanaged-short>IMFByteStreamBuffering::EnableBuffering</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamBuffering.StopBuffering">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Stops any buffering that is in progress.</p>	
            </summary>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The byte stream successfully stopped buffering.</p> </td></tr> <tr><td> <dl> <dt><strong>S_FALSE</strong></dt> </dl> </td><td> <p>No buffering was in progress.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>If the byte stream is currently buffering data, it stops and sends an <see cref="F:SharpDX.MediaFoundation.MediaEventTypes.BufferingStopped"/> event. If the byte stream is not currently buffering, this method has no effect.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamBuffering::StopBuffering']/*"/>	
            <msdn-id>aa375256</msdn-id>	
            <unmanaged>HRESULT IMFByteStreamBuffering::StopBuffering()</unmanaged>	
            <unmanaged-short>IMFByteStreamBuffering::StopBuffering</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.ByteStreamBuffering.BufferingParams">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Sets the buffering parameters.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamBuffering::SetBufferingParams']/*"/>	
            <msdn-id>aa366520</msdn-id>	
            <unmanaged>SetBufferingParams</unmanaged>	
            <unmanaged-short>SetBufferingParams</unmanaged-short>	
            <unmanaged>HRESULT IMFByteStreamBuffering::SetBufferingParams([In] MFBYTESTREAM_BUFFERING_PARAMS* pParams)</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.ByteStreamCacheControl">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p>Stops the background transfer of data to the local cache.</p>	
            </summary>	
            <remarks>	
            <p>The byte stream resumes transferring data to the cache if the application does one of the following:</p><ul> <li>Reads data from the byte stream.</li> <li>Calls the byte stream's <strong><see cref="M:SharpDX.MediaFoundation.ByteStreamBuffering.EnableBuffering(SharpDX.Bool)"/></strong> method.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamCacheControl']/*"/>	
            <msdn-id>dd368786</msdn-id>	
            <unmanaged>IMFByteStreamCacheControl</unmanaged>	
            <unmanaged-short>IMFByteStreamCacheControl</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamCacheControl.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.ByteStreamCacheControl"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamCacheControl.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.ByteStreamCacheControl">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.ByteStreamCacheControl"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamCacheControl.StopBackgroundTransfer">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p>Stops the background transfer of data to the local cache.</p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The byte stream resumes transferring data to the cache if the application does one of the following:</p><ul> <li>Reads data from the byte stream.</li> <li>Calls the byte stream's <strong><see cref="M:SharpDX.MediaFoundation.ByteStreamBuffering.EnableBuffering(SharpDX.Bool)"/></strong> method.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamCacheControl::StopBackgroundTransfer']/*"/>	
            <msdn-id>dd368786</msdn-id>	
            <unmanaged>HRESULT IMFByteStreamCacheControl::StopBackgroundTransfer()</unmanaged>	
            <unmanaged-short>IMFByteStreamCacheControl::StopBackgroundTransfer</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.ByteStreamCacheControl2">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Queries whether background transfer is active.</p>	
            </summary>	
            <remarks>	
            <p>Background transfer might stop because the cache limit was reached (see <strong><see cref="M:SharpDX.MediaFoundation.ByteStreamCacheControl2.SetCacheLimit(System.Int64)"/></strong>) or because the <strong><see cref="M:SharpDX.MediaFoundation.ByteStreamCacheControl.StopBackgroundTransfer"/></strong> method was called.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamCacheControl2']/*"/>	
            <msdn-id>hh447832</msdn-id>	
            <unmanaged>IMFByteStreamCacheControl2</unmanaged>	
            <unmanaged-short>IMFByteStreamCacheControl2</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamCacheControl2.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.ByteStreamCacheControl2"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamCacheControl2.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.ByteStreamCacheControl2">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.ByteStreamCacheControl2"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamCacheControl2.GetByteRanges(System.Int32@,SharpDX.MediaFoundation.ByteStreamCacheRange[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets the ranges of bytes that are currently stored in the cache.</p>	
            </summary>	
            <param name="cRangesRef"><dd> <p>Receives the number of ranges returned in the <em>ppRanges</em> array.</p> </dd></param>	
            <param name="rangesOut"><dd> <p>Receives an array of <strong><see cref="T:SharpDX.MediaFoundation.ByteStreamCacheRange"/></strong> structures. Each structure specifies a range of bytes stored in the cache. The caller must free the array by calling <strong>CoTaskMemFree</strong>.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamCacheControl2::GetByteRanges']/*"/>	
            <msdn-id>hh447831</msdn-id>	
            <unmanaged>HRESULT IMFByteStreamCacheControl2::GetByteRanges([Out] unsigned int* pcRanges,[Out, Buffer, Optional] MF_BYTE_STREAM_CACHE_RANGE** ppRanges)</unmanaged>	
            <unmanaged-short>IMFByteStreamCacheControl2::GetByteRanges</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamCacheControl2.SetCacheLimit(System.Int64)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Limits the cache size.</p>	
            </summary>	
            <param name="qwBytes"><dd> <p>The maximum number of bytes to store in the cache, or <strong>ULONGLONG_MAX </strong> for no limit.  The default value is no limit.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamCacheControl2::SetCacheLimit']/*"/>	
            <msdn-id>hh447833</msdn-id>	
            <unmanaged>HRESULT IMFByteStreamCacheControl2::SetCacheLimit([In] unsigned longlong qwBytes)</unmanaged>	
            <unmanaged-short>IMFByteStreamCacheControl2::SetCacheLimit</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamCacheControl2.IsBackgroundTransferActive_(SharpDX.Bool@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Queries whether background transfer is active.</p>	
            </summary>	
            <param name="fActiveRef"><dd> <p>Receives the value <strong>TRUE</strong> if background transfer is currently active, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>Background transfer might stop because the cache limit was reached (see <strong><see cref="M:SharpDX.MediaFoundation.ByteStreamCacheControl2.SetCacheLimit(System.Int64)"/></strong>) or because the <strong><see cref="M:SharpDX.MediaFoundation.ByteStreamCacheControl.StopBackgroundTransfer"/></strong> method was called.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamCacheControl2::IsBackgroundTransferActive']/*"/>	
            <msdn-id>hh447832</msdn-id>	
            <unmanaged>HRESULT IMFByteStreamCacheControl2::IsBackgroundTransferActive([Out] BOOL* pfActive)</unmanaged>	
            <unmanaged-short>IMFByteStreamCacheControl2::IsBackgroundTransferActive</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.ByteStreamCacheControl2.CacheLimit">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Limits the cache size.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamCacheControl2::SetCacheLimit']/*"/>	
            <msdn-id>hh447833</msdn-id>	
            <unmanaged>SetCacheLimit</unmanaged>	
            <unmanaged-short>SetCacheLimit</unmanaged-short>	
            <unmanaged>HRESULT IMFByteStreamCacheControl2::SetCacheLimit([In] unsigned longlong qwBytes)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.ByteStreamCacheControl2.IsBackgroundTransferActive">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Queries whether background transfer is active.</p>	
            </summary>	
            <remarks>	
            <p>Background transfer might stop because the cache limit was reached (see <strong><see cref="M:SharpDX.MediaFoundation.ByteStreamCacheControl2.SetCacheLimit(System.Int64)"/></strong>) or because the <strong><see cref="M:SharpDX.MediaFoundation.ByteStreamCacheControl.StopBackgroundTransfer"/></strong> method was called.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamCacheControl2::IsBackgroundTransferActive']/*"/>	
            <msdn-id>hh447832</msdn-id>	
            <unmanaged>IsBackgroundTransferActive</unmanaged>	
            <unmanaged-short>IsBackgroundTransferActive</unmanaged-short>	
            <unmanaged>HRESULT IMFByteStreamCacheControl2::IsBackgroundTransferActive([Out] BOOL* pfActive)</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.ByteStreamTimeSeek">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets the result of a time-based seek.</p>	
            </summary>	
            <remarks>	
            <p>This method returns the server response from a previous time-based seek. </p><p><strong>Note</strong>??This method normally cannot be invoked until some data is read from the byte stream, because the <strong><see cref="M:SharpDX.MediaFoundation.ByteStreamTimeSeek.TimeSeek(System.Int64)"/></strong> method does not send a server request immediately.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamTimeSeek']/*"/>	
            <msdn-id>hh447837</msdn-id>	
            <unmanaged>IMFByteStreamTimeSeek</unmanaged>	
            <unmanaged-short>IMFByteStreamTimeSeek</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamTimeSeek.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.ByteStreamTimeSeek"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamTimeSeek.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.ByteStreamTimeSeek">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.ByteStreamTimeSeek"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamTimeSeek.IsTimeSeekSupported_(SharpDX.Bool@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Queries whether the byte stream supports time-based seeking.</p>	
            </summary>	
            <param name="fTimeSeekIsSupportedRef"><dd> <p>Receives the value <strong>TRUE</strong> if the byte stream supports time-based seeking, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamTimeSeek::IsTimeSeekSupported']/*"/>	
            <msdn-id>hh447838</msdn-id>	
            <unmanaged>HRESULT IMFByteStreamTimeSeek::IsTimeSeekSupported([Out] BOOL* pfTimeSeekIsSupported)</unmanaged>	
            <unmanaged-short>IMFByteStreamTimeSeek::IsTimeSeekSupported</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamTimeSeek.TimeSeek(System.Int64)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Seeks to a new position in the byte stream.</p>	
            </summary>	
            <param name="qwTimePosition"><dd> <p>The new position, in 100-nanosecond units.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>If the byte stream reads from a server, it might cache the seek request until the next read request. Therefore, the byte stream might not send a request to the server immediately.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamTimeSeek::TimeSeek']/*"/>	
            <msdn-id>hh447839</msdn-id>	
            <unmanaged>HRESULT IMFByteStreamTimeSeek::TimeSeek([In] unsigned longlong qwTimePosition)</unmanaged>	
            <unmanaged-short>IMFByteStreamTimeSeek::TimeSeek</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.ByteStreamTimeSeek.GetTimeSeekResult(System.Int64@,System.Int64@,System.Int64@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets the result of a time-based seek.</p>	
            </summary>	
            <param name="qwStartTimeRef"><dd> <p>Receives the new position after the seek, in 100-nanosecond units.</p> </dd></param>	
            <param name="qwStopTimeRef"><dd> <p>Receives the stop time, in 100-nanosecond units. If the stop time is unknown, the value is zero.</p> </dd></param>	
            <param name="qwDurationRef"><dd> <p>Receives the total duration of the file, in 100-nanosecond units. If the duration is unknown, the value is ?1.</p> </dd></param>	
            <returns><p>This method can return one of these values.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDREQUEST</strong></dt> </dl> </td><td> <p>The byte stream does not support time-based seeking, or no data is available.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This method returns the server response from a previous time-based seek. </p><p><strong>Note</strong>??This method normally cannot be invoked until some data is read from the byte stream, because the <strong><see cref="M:SharpDX.MediaFoundation.ByteStreamTimeSeek.TimeSeek(System.Int64)"/></strong> method does not send a server request immediately.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamTimeSeek::GetTimeSeekResult']/*"/>	
            <msdn-id>hh447837</msdn-id>	
            <unmanaged>HRESULT IMFByteStreamTimeSeek::GetTimeSeekResult([Out] unsigned longlong* pqwStartTime,[Out] unsigned longlong* pqwStopTime,[Out] unsigned longlong* pqwDuration)</unmanaged>	
            <unmanaged-short>IMFByteStreamTimeSeek::GetTimeSeekResult</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.ByteStreamTimeSeek.IsTimeSeekSupported">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Queries whether the byte stream supports time-based seeking.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFByteStreamTimeSeek::IsTimeSeekSupported']/*"/>	
            <msdn-id>hh447838</msdn-id>	
            <unmanaged>IsTimeSeekSupported</unmanaged>	
            <unmanaged-short>IsTimeSeekSupported</unmanaged-short>	
            <unmanaged>HRESULT IMFByteStreamTimeSeek::IsTimeSeekSupported([Out] BOOL* pfTimeSeekIsSupported)</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.Collection">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the number of objects in the collection.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFCollection']/*"/>	
            <msdn-id>ms697034</msdn-id>	
            <unmanaged>IMFCollection</unmanaged>	
            <unmanaged-short>IMFCollection</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Collection.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.Collection"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Collection.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.Collection">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.Collection"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.Collection.GetElementCount(System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the number of objects in the collection.</p>	
            </summary>	
            <param name="cElementsRef"><dd> <p>Receives the number of objects in the collection.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFCollection::GetElementCount']/*"/>	
            <msdn-id>ms697034</msdn-id>	
            <unmanaged>HRESULT IMFCollection::GetElementCount([Out] unsigned int* pcElements)</unmanaged>	
            <unmanaged-short>IMFCollection::GetElementCount</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Collection.GetElement(System.Int32,SharpDX.ComObject@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves an object in the collection.</p>	
            </summary>	
            <param name="dwElementIndex"><dd> <p> Zero-based index of the object to retrieve. Objects are indexed in the order in which they were added to the collection. </p> </dd></param>	
            <param name="unkElementOut"><dd> <p> Receives a reference to the object's <strong><see cref="T:SharpDX.ComObject"/></strong> interface. The caller must release the interface. The retrieved reference value might be <strong><c>null</c></strong>. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> This method does not remove the object from the collection. To remove an object, call <strong><see cref="M:SharpDX.MediaFoundation.Collection.RemoveElement(System.Int32,SharpDX.ComObject@)"/></strong>. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFCollection::GetElement']/*"/>	
            <msdn-id>ms701793</msdn-id>	
            <unmanaged>HRESULT IMFCollection::GetElement([In] unsigned int dwElementIndex,[Out] IUnknown** ppUnkElement)</unmanaged>	
            <unmanaged-short>IMFCollection::GetElement</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Collection.AddElement(SharpDX.ComObject)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Adds an object to the collection.</p>	
            </summary>	
            <param name="unkElementRef"><dd> <p>Pointer to the object's <strong><see cref="T:SharpDX.ComObject"/></strong> interface.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>If <em>pUnkElement</em> is <strong><c>null</c></strong>, a <strong><c>null</c></strong> reference is added to the collection.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFCollection::AddElement']/*"/>	
            <msdn-id>ms695202</msdn-id>	
            <unmanaged>HRESULT IMFCollection::AddElement([In, Optional] IUnknown* pUnkElement)</unmanaged>	
            <unmanaged-short>IMFCollection::AddElement</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Collection.RemoveElement(System.Int32,SharpDX.ComObject@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Removes an object from the collection.</p>	
            </summary>	
            <param name="dwElementIndex"><dd> <p>Zero-based index of the object to remove. Objects are indexed in the order in which they were added to the collection.</p> </dd></param>	
            <param name="unkElementOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of the object. The caller must release the interface. This parameter cannot be <strong><c>null</c></strong>, but the retrieved reference value might be <strong><c>null</c></strong>.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFCollection::RemoveElement']/*"/>	
            <msdn-id>ms697010</msdn-id>	
            <unmanaged>HRESULT IMFCollection::RemoveElement([In] unsigned int dwElementIndex,[Out] IUnknown** ppUnkElement)</unmanaged>	
            <unmanaged-short>IMFCollection::RemoveElement</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Collection.InsertElementAt(System.Int32,SharpDX.ComObject)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Adds an object at the specified index in the collection.</p>	
            </summary>	
            <param name="dwIndex"><dd> <p>The zero-based index where the object will be added to the collection.</p> </dd></param>	
            <param name="unknownRef"><dd> <p>The object to insert.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFCollection::InsertElementAt']/*"/>	
            <msdn-id>ms703963</msdn-id>	
            <unmanaged>HRESULT IMFCollection::InsertElementAt([In] unsigned int dwIndex,[In, Optional] IUnknown* pUnknown)</unmanaged>	
            <unmanaged-short>IMFCollection::InsertElementAt</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Collection.RemoveAllElements">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Removes all items from the collection.</p>	
            </summary>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFCollection::RemoveAllElements']/*"/>	
            <msdn-id>ms700194</msdn-id>	
            <unmanaged>HRESULT IMFCollection::RemoveAllElements()</unmanaged>	
            <unmanaged-short>IMFCollection::RemoveAllElements</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.Collection.ElementCount">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the number of objects in the collection.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFCollection::GetElementCount']/*"/>	
            <msdn-id>ms697034</msdn-id>	
            <unmanaged>GetElementCount</unmanaged>	
            <unmanaged-short>GetElementCount</unmanaged-short>	
            <unmanaged>HRESULT IMFCollection::GetElementCount([Out] unsigned int* pcElements)</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.DXGIBuffer">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries the Microsoft DirectX Graphics Infrastructure (DXGI) surface for an interface.</p>	
            </summary>	
            <remarks>	
            <p>You can use this method to get a reference to the <strong><see cref="!:SharpDX.Direct3D11.Texture2D"/></strong> interface of the surface. If the buffer is locked, the method returns <strong>MF_E_INVALIDREQUEST</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIBuffer']/*"/>	
            <msdn-id>hh447902</msdn-id>	
            <unmanaged>IMFDXGIBuffer</unmanaged>	
            <unmanaged-short>IMFDXGIBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIBuffer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.DXGIBuffer"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIBuffer.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.DXGIBuffer">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.DXGIBuffer"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIBuffer.GetResource(System.Guid,System.IntPtr@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries the Microsoft DirectX Graphics Infrastructure (DXGI) surface for an interface.</p>	
            </summary>	
            <param name="riid"><dd> <p>The interface identifer (IID) of the interface being requested.</p> </dd></param>	
            <param name="vObjectOut"><dd> <p>Receives a reference to the interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>This method can return one of these values.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>Success.</p> </td></tr> <tr><td> <dl> <dt><strong> E_NOINTERFACE</strong></dt> </dl> </td><td> <p>The object does not support the specified interface.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDREQUEST</strong></dt> </dl> </td><td> <p>Invalid request.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>You can use this method to get a reference to the <strong><see cref="!:SharpDX.Direct3D11.Texture2D"/></strong> interface of the surface. If the buffer is locked, the method returns <strong>MF_E_INVALIDREQUEST</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIBuffer::GetResource']/*"/>	
            <msdn-id>hh447902</msdn-id>	
            <unmanaged>HRESULT IMFDXGIBuffer::GetResource([In] const GUID&amp; riid,[Out] void** ppvObject)</unmanaged>	
            <unmanaged-short>IMFDXGIBuffer::GetResource</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIBuffer.GetSubresourceIndex(System.Int32@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the index of the subresource that is associated with this media buffer.</p>	
            </summary>	
            <param name="uSubresourceRef"><dd> <p>Receives the zero-based index of the subresource.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The subresource index is specified when you create the media buffer object. See <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateDXGISurfaceBuffer(System.Guid,SharpDX.ComObject,System.Int32,SharpDX.Bool,SharpDX.MediaFoundation.MediaBuffer@)"/></strong>.</p><p>For more information about texture subresources, see <strong><see cref="!:SharpDX.Direct3D11.Device.CreateTexture2D"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIBuffer::GetSubresourceIndex']/*"/>	
            <msdn-id>hh447903</msdn-id>	
            <unmanaged>HRESULT IMFDXGIBuffer::GetSubresourceIndex([Out] unsigned int* puSubresource)</unmanaged>	
            <unmanaged-short>IMFDXGIBuffer::GetSubresourceIndex</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIBuffer.GetUnknown(System.Guid,System.Guid,System.IntPtr@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets an <strong><see cref="T:SharpDX.ComObject"/></strong> reference that was previously stored in the media buffer object.</p>	
            </summary>	
            <param name="guid">No documentation.</param>	
            <param name="riid">No documentation.</param>	
            <param name="vObjectOut">No documentation.</param>	
            <returns><p>This method can return one of these values.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>Success.</p> </td></tr> <tr><td> <dl> <dt><strong> E_NOINTERFACE</strong></dt> </dl> </td><td> <p>The object does not support the specified interface.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_NOT_FOUND</strong></dt> </dl> </td><td> <p>The specified key was not found.</p> </td></tr> </table><p>?</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIBuffer::GetUnknown']/*"/>	
            <msdn-id>hh447904</msdn-id>	
            <unmanaged>HRESULT IMFDXGIBuffer::GetUnknown([In] const GUID&amp; guid,[In] const GUID&amp; riid,[Out] void** ppvObject)</unmanaged>	
            <unmanaged-short>IMFDXGIBuffer::GetUnknown</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.DXGIBuffer.SetUnknown(System.Guid,SharpDX.ComObject)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Stores an arbitrary <strong><see cref="T:SharpDX.ComObject"/></strong> reference in the media buffer object.</p>	
            </summary>	
            <param name="guid">No documentation.</param>	
            <param name="unkDataRef">No documentation.</param>	
            <returns><p>This method can return one of these values.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>Success.</p> </td></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Win32.ErrorCode.ObjectAlreadyExists"/></strong></dt> </dl> </td><td> <p>An item already exists with this key.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>To retrieve the reference from the object, call <strong><see cref="M:SharpDX.MediaFoundation.DXGIBuffer.GetUnknown(System.Guid,System.Guid,System.IntPtr@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIBuffer::SetUnknown']/*"/>	
            <msdn-id>hh447905</msdn-id>	
            <unmanaged>HRESULT IMFDXGIBuffer::SetUnknown([In] const GUID&amp; guid,[In, Optional] IUnknown* pUnkData)</unmanaged>	
            <unmanaged-short>IMFDXGIBuffer::SetUnknown</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.DXGIBuffer.SubresourceIndex">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the index of the subresource that is associated with this media buffer.</p>	
            </summary>	
            <remarks>	
            <p>The subresource index is specified when you create the media buffer object. See <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateDXGISurfaceBuffer(System.Guid,SharpDX.ComObject,System.Int32,SharpDX.Bool,SharpDX.MediaFoundation.MediaBuffer@)"/></strong>.</p><p>For more information about texture subresources, see <strong><see cref="!:SharpDX.Direct3D11.Device.CreateTexture2D"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFDXGIBuffer::GetSubresourceIndex']/*"/>	
            <msdn-id>hh447903</msdn-id>	
            <unmanaged>GetSubresourceIndex</unmanaged>	
            <unmanaged-short>GetSubresourceIndex</unmanaged-short>	
            <unmanaged>HRESULT IMFDXGIBuffer::GetSubresourceIndex([Out] unsigned int* puSubresource)</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaBuffer">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Represents a block of memory that contains media data. Use this interface to access the data in the buffer.</p>	
            </summary>	
            <remarks>	
            <p>If the buffer contains 2-D image data (such as an uncompressed video frame), you should query the buffer for the <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D"/></strong> interface. The methods on <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D"/></strong> are optimized for 2-D data.</p><p>To get a buffer from a media sample, call one of the following <strong><see cref="T:SharpDX.MediaFoundation.Sample"/></strong> methods:</p><ul> <li> <p> <strong><see cref="M:SharpDX.MediaFoundation.Sample.ConvertToContiguousBuffer"/></strong> </p> </li> <li> <p> <strong><see cref="M:SharpDX.MediaFoundation.Sample.GetBufferByIndex(System.Int32)"/></strong> </p> </li> </ul><p>To create a new buffer object, use one of the following functions.</p><table> <tr><th>Function</th><th>Description</th></tr> <tr><td> <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateMemoryBuffer(System.Int32,SharpDX.MediaFoundation.MediaBuffer@)"/></strong> </td><td>Creates a buffer and allocates system memory.</td></tr> <tr><td> <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateMediaBufferWrapper(SharpDX.MediaFoundation.MediaBuffer,System.Int32,System.Int32,SharpDX.MediaFoundation.MediaBuffer@)"/></strong> </td><td>Creates a media buffer that wraps an existing media buffer.</td></tr> <tr><td> <strong>MFCreateDXSurfaceBuffer</strong> </td><td>Creates a buffer that manages a DirectX surface.</td></tr> <tr><td> <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateAlignedMemoryBuffer(System.Int32,System.Int32,SharpDX.MediaFoundation.MediaBuffer@)"/></strong> </td><td>Creates a buffer and allocates system memory with a specified alignment.</td></tr> </table><p>?</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaBuffer']/*"/>	
            <msdn-id>ms696261</msdn-id>	
            <unmanaged>IMFMediaBuffer</unmanaged>	
            <unmanaged-short>IMFMediaBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaBuffer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaBuffer"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaBuffer.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.MediaBuffer">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.MediaBuffer"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaBuffer.Lock(System.Int32@,System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Gives the caller access to the memory in the buffer, for reading or writing</p>	
            </summary>	
            <param name="cbMaxLengthRef"><dd> <p>Receives the maximum amount of data that can be written to the buffer. This parameter can be <strong><c>null</c></strong>. The same value is returned by the <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.GetMaxLength(System.Int32@)"/></strong> method.</p> </dd></param>	
            <param name="cbCurrentLengthRef"><dd> <p>Receives the length of the valid data in the buffer, in bytes. This parameter can be <strong><c>null</c></strong>. The same value is returned by the <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.GetCurrentLength(System.Int32@)"/></strong> method.</p> </dd></param>	
            <returns><dd> <p>Receives a reference to the start of the buffer.</p> </dd></returns>	
            <remarks>	
            <p>This method gives the caller access to the entire buffer, up to the maximum size returned in the <em>pcbMaxLength</em> parameter. The value returned in <em>pcbCurrentLength</em> is the size of any valid data already in the buffer, which might be less than the total buffer size.</p><p>The reference returned in <em>ppbBuffer</em> is guaranteed to be valid, and can safely be accessed across the entire buffer for as long as the lock is held. When you are done accessing the buffer, call <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.Unlock"/></strong> to unlock the buffer. You must call <strong>Unlock</strong> once for each call to <strong>Lock</strong>. After you unlock the buffer, the reference returned in <em>ppbBuffer</em> is no longer valid, and should not be used. Generally, it is best to call <strong>Lock</strong> only when you need to access the buffer memory, and not earlier.</p><p>Locking the buffer does not prevent other threads from calling <strong>Lock</strong>, so you should not rely on this method to synchronize threads.</p><p>This method does not allocate any memory, or transfer ownership of the memory to the caller. Do not release or free the memory; the media buffer will free the memory when the media buffer is destroyed.</p><p>If you modify the contents of the buffer, update the current length by calling <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.SetCurrentLength(System.Int32)"/></strong>.</p><p>If the buffer supports the <strong><see cref="T:SharpDX.MediaFoundation.Buffer2D"/></strong> interface, you should use the <strong><see cref="M:SharpDX.MediaFoundation.Buffer2D.Lock2D(System.Byte[],System.Int32@)"/></strong> method to lock the buffer. For 2-D buffers, the <strong>Lock2D</strong> method is more efficient than the <strong>Lock</strong> method. If the buffer is locked using <strong>Lock2D</strong>, the Lock method might return <strong>MF_E_INVALIDREQUEST</strong>.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaBuffer::Lock']/*"/>	
            <msdn-id>bb970366</msdn-id>	
            <unmanaged>HRESULT IMFMediaBuffer::Lock([Out] void** ppbBuffer,[Out, Optional] unsigned int* pcbMaxLength,[Out, Optional] unsigned int* pcbCurrentLength)</unmanaged>	
            <unmanaged-short>IMFMediaBuffer::Lock</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaBuffer.Unlock">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Unlocks a buffer that was previously locked. Call this method once for every call to <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.Lock(System.Int32@,System.Int32@)"/></strong>.</p>	
            </summary>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>D3DERR_INVALIDCALL</strong></dt> </dl> </td><td> <p>For Direct3D surface buffers, an error occurred when unlocking the surface.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>It is an error to call <strong>Unlock</strong> if you did not call <strong>Lock</strong> previously.</p><p>After calling this method, do not use the reference returned by the <strong>Lock</strong> method. It is no longer guaranteed to be valid.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaBuffer::Unlock']/*"/>	
            <msdn-id>ms696259</msdn-id>	
            <unmanaged>HRESULT IMFMediaBuffer::Unlock()</unmanaged>	
            <unmanaged-short>IMFMediaBuffer::Unlock</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaBuffer.GetCurrentLength(System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the length of the valid data in the buffer.</p>	
            </summary>	
            <param name="cbCurrentLengthRef"><dd> <p>Receives the length of the valid data, in bytes. If the buffer does not contain any valid data, the value is zero.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaBuffer::GetCurrentLength']/*"/>	
            <msdn-id>ms698987</msdn-id>	
            <unmanaged>HRESULT IMFMediaBuffer::GetCurrentLength([Out] unsigned int* pcbCurrentLength)</unmanaged>	
            <unmanaged-short>IMFMediaBuffer::GetCurrentLength</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaBuffer.SetCurrentLength(System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Sets the length of the valid data in the buffer.</p>	
            </summary>	
            <param name="cbCurrentLength"><dd> <p>Length of the valid data, in bytes. This value cannot be greater than the allocated size of the buffer, which is returned by the <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.GetMaxLength(System.Int32@)"/></strong> method.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_INVALIDARG</strong></dt> </dl> </td><td> <p>The specified length is greater than the maximum size of the buffer.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Call this method if you write data into the buffer.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaBuffer::SetCurrentLength']/*"/>	
            <msdn-id>ms703202</msdn-id>	
            <unmanaged>HRESULT IMFMediaBuffer::SetCurrentLength([In] unsigned int cbCurrentLength)</unmanaged>	
            <unmanaged-short>IMFMediaBuffer::SetCurrentLength</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaBuffer.GetMaxLength(System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the allocated size of the buffer.</p>	
            </summary>	
            <param name="cbMaxLengthRef"><dd> <p>Receives the allocated size of the buffer, in bytes.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>The buffer might or might not contain any valid data, and if there is valid data in the buffer, it might be smaller than the buffer's allocated size. To get the length of the valid data, call <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.GetCurrentLength(System.Int32@)"/></strong>.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaBuffer::GetMaxLength']/*"/>	
            <msdn-id>ms704840</msdn-id>	
            <unmanaged>HRESULT IMFMediaBuffer::GetMaxLength([Out] unsigned int* pcbMaxLength)</unmanaged>	
            <unmanaged-short>IMFMediaBuffer::GetMaxLength</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaBuffer.CurrentLength">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the length of the valid data in the buffer.</p>	
            </summary>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaBuffer::GetCurrentLength']/*"/>	
            <msdn-id>ms698987</msdn-id>	
            <unmanaged>GetCurrentLength / SetCurrentLength</unmanaged>	
            <unmanaged-short>GetCurrentLength</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaBuffer::GetCurrentLength([Out] unsigned int* pcbCurrentLength)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaBuffer.MaxLength">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the allocated size of the buffer.</p>	
            </summary>	
            <remarks>	
            <p>The buffer might or might not contain any valid data, and if there is valid data in the buffer, it might be smaller than the buffer's allocated size. To get the length of the valid data, call <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.GetCurrentLength(System.Int32@)"/></strong>.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaBuffer::GetMaxLength']/*"/>	
            <msdn-id>ms704840</msdn-id>	
            <unmanaged>GetMaxLength</unmanaged>	
            <unmanaged-short>GetMaxLength</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaBuffer::GetMaxLength([Out] unsigned int* pcbMaxLength)</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineSrcElements">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Provides the Media Engine with a list of media resources.</p>	
            </summary>	
            <remarks>	
            <p>The <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineSrcElements"/></strong> interface represents an ordered list of media resources.</p><p>This interface enables the application to provide the same audio/video content in several different encoding formats, such as H.264 and Windows Media Video. If a particular codec is not present on the user's computer, the Media Engine will try the next URL in the list. To use this interface, do the following:</p><ol> <li>Create an implementation of this interface.</li> <li>Initialize your implementation with a list of URLs. Optionally, provide MIME types and media query strings for each URL.</li> <li>Call the <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.SetSourceElements(SharpDX.MediaFoundation.MediaEngineSrcElements)"/></strong> method.</li> </ol>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineSrcElements']/*"/>	
            <msdn-id>hh447971</msdn-id>	
            <unmanaged>IMFMediaEngineSrcElements</unmanaged>	
            <unmanaged-short>IMFMediaEngineSrcElements</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineSrcElements.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaEngineSrcElements"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineSrcElements.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.MediaEngineSrcElements">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.MediaEngineSrcElements"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineSrcElements.GetLength">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the number of source elements in the list.</p>	
            </summary>	
            <returns><p>Returns the number of source elements.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineSrcElements::GetLength']/*"/>	
            <msdn-id>hh447973</msdn-id>	
            <unmanaged>unsigned int IMFMediaEngineSrcElements::GetLength()</unmanaged>	
            <unmanaged-short>IMFMediaEngineSrcElements::GetLength</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineSrcElements.GetURL(System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the URL of an element in the list.</p>	
            </summary>	
            <param name="index"><dd> <p>The zero-based index of the source element. To get the number of source elements, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineSrcElements.GetLength"/></strong>.</p> </dd></param>	
            <param name="uRLRef"><dd> <p>Receives a <strong>BSTR</strong> that contains the URL of the source element. The caller must free the  <strong>BSTR</strong> by calling <strong>SysFreeString</strong>. If no URL is set, this parameter receives the value <strong><c>null</c></strong>.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineSrcElements::GetURL']/*"/>	
            <msdn-id>hh447976</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineSrcElements::GetURL([In] unsigned int index,[Out] wchar_t** pURL)</unmanaged>	
            <unmanaged-short>IMFMediaEngineSrcElements::GetURL</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineSrcElements.GetTypeInfo(System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the MIME type of an element in the list.</p>	
            </summary>	
            <param name="index"><dd> <p>The zero-based index of the source element. To get the number of source elements, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineSrcElements.GetLength"/></strong>.</p> </dd></param>	
            <param name="typeRef"><dd> <p>Receives a <strong>BSTR</strong> that contains the MIME type. The caller must free the  <strong>BSTR</strong> by calling <strong>SysFreeString</strong>. If no MIME type is set, this parameter receives the value <strong><c>null</c></strong>.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineSrcElements::GetType']/*"/>	
            <msdn-id>hh447975</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineSrcElements::GetType([In] unsigned int index,[Out] wchar_t** pType)</unmanaged>	
            <unmanaged-short>IMFMediaEngineSrcElements::GetType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineSrcElements.GetMedia(System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the intended media type of an element in the list.</p>	
            </summary>	
            <param name="index"><dd> <p>The zero-based index of the source element. To get the number of source elements, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngineSrcElements.GetLength"/></strong>.</p> </dd></param>	
            <param name="mediaRef"><dd> <p>Receives a <strong>BSTR</strong> that contains a media-query string. The caller must free the  <strong>BSTR</strong> by calling <strong>SysFreeString</strong>. If no media type is set, this parameter receives the value <strong><c>null</c></strong>.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The string returned in <em>pMedia</em> should be a media-query string that conforms to the W3C <em>Media Queries</em> specification.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineSrcElements::GetMedia']/*"/>	
            <msdn-id>hh447974</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineSrcElements::GetMedia([In] unsigned int index,[Out] wchar_t** pMedia)</unmanaged>	
            <unmanaged-short>IMFMediaEngineSrcElements::GetMedia</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineSrcElements.AddElement(System.String,System.String,System.String)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Adds a source element to the end of the list.</p>	
            </summary>	
            <param name="uRLRef"><dd> <p>The URL of the source element, or <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="typeRef"><dd> <p>The MIME type of the source element, or <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="mediaRef"><dd> <p>A media-query string that specifies the intended media type, or <strong><c>null</c></strong>. If specified, the string should conform to the W3C <em>Media Queries</em> specification.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>Any of the parameters to this method can be <strong><c>null</c></strong>.</p><p>This method allocates copies of the <strong>BSTR</strong>s that are passed in.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineSrcElements::AddElement']/*"/>	
            <msdn-id>hh447972</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineSrcElements::AddElement([In, Optional] wchar_t* pURL,[In, Optional] wchar_t* pType,[In, Optional] wchar_t* pMedia)</unmanaged>	
            <unmanaged-short>IMFMediaEngineSrcElements::AddElement</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineSrcElements.RemoveAllElements">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Removes all of the source elements from the list.</p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineSrcElements::RemoveAllElements']/*"/>	
            <msdn-id>hh447977</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineSrcElements::RemoveAllElements()</unmanaged>	
            <unmanaged-short>IMFMediaEngineSrcElements::RemoveAllElements</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEngineSrcElements.Length">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the number of source elements in the list.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEngineSrcElements::GetLength']/*"/>	
            <msdn-id>hh447973</msdn-id>	
            <unmanaged>GetLength</unmanaged>	
            <unmanaged-short>GetLength</unmanaged-short>	
            <unmanaged>unsigned int IMFMediaEngineSrcElements::GetLength()</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaError">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Provides the current error status for the Media Engine.</p>	
            </summary>	
            <remarks>	
            <p>The <strong><see cref="T:SharpDX.MediaFoundation.MediaError"/></strong> interface corresponds to the <strong>MediaError</strong> object in HTML5.</p><p>To get a reference to this interface, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEngine.GetError(SharpDX.MediaFoundation.MediaError@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaError']/*"/>	
            <msdn-id>hh448022</msdn-id>	
            <unmanaged>IMFMediaError</unmanaged>	
            <unmanaged-short>IMFMediaError</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaError.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaError"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaError.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.MediaError">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.MediaError"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaError.GetErrorCode">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the error code.</p>	
            </summary>	
            <returns><p>Returns a value from the <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineErr"/></strong> enumeration.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaError::GetErrorCode']/*"/>	
            <msdn-id>hh448023</msdn-id>	
            <unmanaged>unsigned short IMFMediaError::GetErrorCode()</unmanaged>	
            <unmanaged-short>IMFMediaError::GetErrorCode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaError.GetExtendedErrorCode">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the extended error code.</p>	
            </summary>	
            <returns><p>Returns an <strong><see cref="T:SharpDX.Result"/></strong> value that gives additional information about the last error.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaError::GetExtendedErrorCode']/*"/>	
            <msdn-id>hh448024</msdn-id>	
            <unmanaged>HRESULT IMFMediaError::GetExtendedErrorCode()</unmanaged>	
            <unmanaged-short>IMFMediaError::GetExtendedErrorCode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaError.SetErrorCode(SharpDX.MediaFoundation.MediaEngineErr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the error code.</p>	
            </summary>	
            <param name="error"><dd> <p>The error code, specified as an <strong><see cref="T:SharpDX.MediaFoundation.MediaEngineErr"/></strong> value.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaError::SetErrorCode']/*"/>	
            <msdn-id>hh448025</msdn-id>	
            <unmanaged>HRESULT IMFMediaError::SetErrorCode([In] MF_MEDIA_ENGINE_ERR error)</unmanaged>	
            <unmanaged-short>IMFMediaError::SetErrorCode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaError.SetExtendedErrorCode(SharpDX.Result)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the extended error code.</p>	
            </summary>	
            <param name="error"><dd> <p>An <strong><see cref="T:SharpDX.Result"/></strong> value that gives additional information about the last error.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaError::SetExtendedErrorCode']/*"/>	
            <msdn-id>hh448026</msdn-id>	
            <unmanaged>HRESULT IMFMediaError::SetExtendedErrorCode([In] HRESULT error)</unmanaged>	
            <unmanaged-short>IMFMediaError::SetExtendedErrorCode</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaError.ExtendedErrorCode">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the extended error code.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaError::GetExtendedErrorCode']/*"/>	
            <msdn-id>hh448024</msdn-id>	
            <unmanaged>GetExtendedErrorCode / SetExtendedErrorCode</unmanaged>	
            <unmanaged-short>GetExtendedErrorCode</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaError::GetExtendedErrorCode()</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEvent">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves an <strong><see cref="T:SharpDX.Result"/></strong> that specifies the event status.</p>	
            </summary>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEvent']/*"/>	
            <msdn-id>ms704650</msdn-id>	
            <unmanaged>IMFMediaEvent</unmanaged>	
            <unmanaged-short>IMFMediaEvent</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEvent.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaEvent"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEvent.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.MediaEvent">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.MediaEvent"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEvent.GetTypeInfo(System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the event type. The event type indicates what happened to trigger the event. It also defines the meaning of the event value.</p>	
            </summary>	
            <param name="metRef"><dd> <p>Receives the event type. For a list of event types, see Media Foundation Events.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEvent::GetType']/*"/>	
            <msdn-id>ms702255</msdn-id>	
            <unmanaged>HRESULT IMFMediaEvent::GetType([Out] unsigned int* pmet)</unmanaged>	
            <unmanaged-short>IMFMediaEvent::GetType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEvent.GetExtendedType(System.Guid@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the extended type of the event.</p>	
            </summary>	
            <param name="guidExtendedTypeRef"><dd> <p>Receives a <strong><see cref="T:System.Guid"/></strong> that identifies the extended type.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>To define a custom event, create a new extended-type <see cref="T:System.Guid"/> and send an <see cref="F:SharpDX.MediaFoundation.MediaEventTypes.ExtendedType"/> event with that <see cref="T:System.Guid"/>.</p><p>Some standard Media Foundation events also use the extended type to differentiate between types of event data.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEvent::GetExtendedType']/*"/>	
            <msdn-id>ms697235</msdn-id>	
            <unmanaged>HRESULT IMFMediaEvent::GetExtendedType([Out] GUID* pguidExtendedType)</unmanaged>	
            <unmanaged-short>IMFMediaEvent::GetExtendedType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEvent.GetStatus(SharpDX.Result@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves an <strong><see cref="T:SharpDX.Result"/></strong> that specifies the event status.</p>	
            </summary>	
            <param name="hrStatusRef"><dd> <p>Receives the event status. If the operation that generated the event was successful, the value is a success code. A failure code means that an error condition triggered the event.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEvent::GetStatus']/*"/>	
            <msdn-id>ms704650</msdn-id>	
            <unmanaged>HRESULT IMFMediaEvent::GetStatus([Out] HRESULT* phrStatus)</unmanaged>	
            <unmanaged-short>IMFMediaEvent::GetStatus</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEvent.GetValue(SharpDX.Win32.Variant@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Represents an event generated by a Media Foundation object. Use this interface to get information about the event.</p><p>To get a reference to this interface, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEventGenerator.BeginGetEvent(SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject)"/></strong> or <strong><see cref="M:SharpDX.MediaFoundation.MediaEventGenerator.GetEvent(System.Int32,SharpDX.MediaFoundation.MediaEvent@)"/></strong> on the event generator.</p>	
            </summary>	
            <param name="vValueRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <remarks>	
            <p>If you are implementing an object that generates events, call the <strong>MFCreateMediaEvent</strong> function to create a new event object.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEvent::GetValue']/*"/>	
            <msdn-id>ms702249</msdn-id>	
            <unmanaged>HRESULT IMFMediaEvent::GetValue([Out] PROPVARIANT* pvValue)</unmanaged>	
            <unmanaged-short>IMFMediaEvent::GetValue</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEvent.TypeInfo">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the event type. The event type indicates what happened to trigger the event. It also defines the meaning of the event value.</p>	
            </summary>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEvent::GetType']/*"/>	
            <msdn-id>ms702255</msdn-id>	
            <unmanaged>GetType</unmanaged>	
            <unmanaged-short>GetType</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEvent::GetType([Out] unsigned int* pmet)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEvent.ExtendedType">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the extended type of the event.</p>	
            </summary>	
            <remarks>	
            <p>To define a custom event, create a new extended-type <see cref="T:System.Guid"/> and send an <see cref="F:SharpDX.MediaFoundation.MediaEventTypes.ExtendedType"/> event with that <see cref="T:System.Guid"/>.</p><p>Some standard Media Foundation events also use the extended type to differentiate between types of event data.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEvent::GetExtendedType']/*"/>	
            <msdn-id>ms697235</msdn-id>	
            <unmanaged>GetExtendedType</unmanaged>	
            <unmanaged-short>GetExtendedType</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEvent::GetExtendedType([Out] GUID* pguidExtendedType)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEvent.Status">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves an <strong><see cref="T:SharpDX.Result"/></strong> that specifies the event status.</p>	
            </summary>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEvent::GetStatus']/*"/>	
            <msdn-id>ms704650</msdn-id>	
            <unmanaged>GetStatus</unmanaged>	
            <unmanaged-short>GetStatus</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEvent::GetStatus([Out] HRESULT* phrStatus)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaEvent.Value">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Represents an event generated by a Media Foundation object. Use this interface to get information about the event.</p><p>To get a reference to this interface, call <strong><see cref="M:SharpDX.MediaFoundation.MediaEventGenerator.BeginGetEvent(SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject)"/></strong> or <strong><see cref="M:SharpDX.MediaFoundation.MediaEventGenerator.GetEvent(System.Int32,SharpDX.MediaFoundation.MediaEvent@)"/></strong> on the event generator.</p>	
            </summary>	
            <remarks>	
            <p>If you are implementing an object that generates events, call the <strong>MFCreateMediaEvent</strong> function to create a new event object.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEvent::GetValue']/*"/>	
            <msdn-id>ms702249</msdn-id>	
            <unmanaged>GetValue</unmanaged>	
            <unmanaged-short>GetValue</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaEvent::GetValue([Out] PROPVARIANT* pvValue)</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEventGenerator">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Retrieves events from any Media Foundation object that generates events. </p>	
            </summary>	
            <remarks>	
            <p>An object that supports this interface maintains a queue of events. The client of the object can retrieve the events either synchronously or asynchronously. The synchronous method is <strong>GetEvent</strong>. The asynchronous methods are <strong>BeginGetEvent</strong> and <strong>EndGetEvent</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEventGenerator']/*"/>	
            <msdn-id>ms701755</msdn-id>	
            <unmanaged>IMFMediaEventGenerator</unmanaged>	
            <unmanaged-short>IMFMediaEventGenerator</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventGenerator.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaEventGenerator"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventGenerator.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.MediaEventGenerator">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.MediaEventGenerator"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventGenerator.GetEvent(System.Int32,SharpDX.MediaFoundation.MediaEvent@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the next event in the queue. This method is synchronous.</p>	
            </summary>	
            <param name="dwFlags"><dd> <p>Specifies one of the following values.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>0</strong></dt> </dl> </td><td> <p>The method blocks until the event generator queues an event.</p> </td></tr> <tr><td><dl> <dt><strong>MF_EVENT_FLAG_NO_WAIT</strong></dt> </dl> </td><td> <p>The method returns immediately.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="eventOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaEvent"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_INVALIDARG</strong></dt> </dl> </td><td> <p><c>null</c> reference argument.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_MULTIPLE_SUBSCRIBERS</strong></dt> </dl> </td><td> <p>There is a pending request.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_NO_EVENTS_AVAILABLE</strong></dt> </dl> </td><td> <p>There are no events in the queue.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_SHUTDOWN</strong></dt> </dl> </td><td> <p>The object was shut down.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This method executes synchronously.</p><p>If the queue already contains an event, the method returns <see cref="F:SharpDX.Result.Ok"/> immediately. If the queue does not contain an event, the behavior depends on the value of <em>dwFlags</em>:</p><ul> <li> <p>If <em>dwFlags</em> is 0, the method blocks indefinitely until a new event is queued, or until the event generator is shut down.</p> </li> <li> <p>If <em>dwFlags</em> is MF_EVENT_FLAG_NO_WAIT, the method fails immediately with the return code MF_E_NO_EVENTS_AVAILABLE.</p> </li> </ul><p>This method returns MF_E_MULTIPLE_SUBSCRIBERS if you previously called <strong><see cref="M:SharpDX.MediaFoundation.MediaEventGenerator.BeginGetEvent(SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject)"/></strong> and have not yet called <strong><see cref="M:SharpDX.MediaFoundation.MediaEventGenerator.EndGetEvent(SharpDX.MediaFoundation.AsyncResult,SharpDX.MediaFoundation.MediaEvent@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEventGenerator::GetEvent']/*"/>	
            <msdn-id>ms704754</msdn-id>	
            <unmanaged>HRESULT IMFMediaEventGenerator::GetEvent([In] unsigned int dwFlags,[Out] IMFMediaEvent** ppEvent)</unmanaged>	
            <unmanaged-short>IMFMediaEventGenerator::GetEvent</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventGenerator.BeginGetEvent(SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Begins an asynchronous request for the next event in the queue.</p>	
            </summary>	
            <param name="callbackRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncCallback"/></strong> interface of a callback object. The client must implement this interface.</p> </dd></param>	
            <param name="unkStateRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of a state object, defined by the caller. This parameter can be <strong><c>null</c></strong>. You can use this object to hold state information. The object is returned to the caller when the callback is invoked.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_INVALIDARG</strong></dt> </dl> </td><td> <p><strong><c>null</c></strong> reference argument.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_MULTIPLE_BEGIN</strong></dt> </dl> </td><td> <p>There is a pending request with the same callback reference and a different state object.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_MULTIPLE_SUBSCRIBERS</strong></dt> </dl> </td><td> <p>There is a pending request with a different callback reference.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_SHUTDOWN</strong></dt> </dl> </td><td> <p>The object was shut down.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_S_MULTIPLE_BEGIN</strong></dt> </dl> </td><td> <p>There is a pending request with the same callback reference and state object.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>When a new event is available, the event generator calls the <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method. The <strong>Invoke</strong> method should call <strong><see cref="M:SharpDX.MediaFoundation.MediaEventGenerator.EndGetEvent(SharpDX.MediaFoundation.AsyncResult,SharpDX.MediaFoundation.MediaEvent@)"/></strong> to get a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaEvent"/></strong> interface, and use that interface to examine the event.</p><p>Do not call <strong>BeginGetEvent</strong> a second time before calling <strong>EndGetEvent</strong>. While the first call is still pending, additional calls to the same object will fail. Also, the <strong><see cref="M:SharpDX.MediaFoundation.MediaEventGenerator.GetEvent(System.Int32,SharpDX.MediaFoundation.MediaEvent@)"/></strong> method fails if an asynchronous request is still pending.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEventGenerator::BeginGetEvent']/*"/>	
            <msdn-id>ms701637</msdn-id>	
            <unmanaged>HRESULT IMFMediaEventGenerator::BeginGetEvent([In] IMFAsyncCallback* pCallback,[In] IUnknown* punkState)</unmanaged>	
            <unmanaged-short>IMFMediaEventGenerator::BeginGetEvent</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventGenerator.EndGetEvent(SharpDX.MediaFoundation.AsyncResult,SharpDX.MediaFoundation.MediaEvent@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Completes an asynchronous request for the next event in the queue.</p>	
            </summary>	
            <param name="resultRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface. Pass in the same reference that your callback object received in the <strong>Invoke</strong> method.</p> </dd></param>	
            <param name="eventOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaEvent"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_SHUTDOWN</strong></dt> </dl> </td><td> <p>The object was shut down.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Call this method from inside your application's <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method. For example code, see <strong><see cref="M:SharpDX.MediaFoundation.MediaEventGenerator.BeginGetEvent(SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEventGenerator::EndGetEvent']/*"/>	
            <msdn-id>ms698866</msdn-id>	
            <unmanaged>HRESULT IMFMediaEventGenerator::EndGetEvent([In] IMFAsyncResult* pResult,[Out] IMFMediaEvent** ppEvent)</unmanaged>	
            <unmanaged-short>IMFMediaEventGenerator::EndGetEvent</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventGenerator.QueueEvent(System.Int32,System.Guid,SharpDX.Result,System.Nullable{SharpDX.Win32.Variant})">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Puts a new event in the object's queue.</p>	
            </summary>	
            <param name="met"><dd> <p>Specifies the event type. The event type is returned by the event's <strong><see cref="M:SharpDX.MediaFoundation.MediaEvent.GetTypeInfo(System.Int32@)"/></strong> method. For a list of event types, see Media Foundation Events.</p> </dd></param>	
            <param name="guidExtendedType"><dd> <p>The extended type. If the event does not have an extended type, use the value GUID_NULL. The extended type is returned by the event's <strong><see cref="M:SharpDX.MediaFoundation.MediaEvent.GetExtendedType(System.Guid@)"/></strong> method.</p> </dd></param>	
            <param name="hrStatus"><dd> <p>A success or failure code indicating the status of the event. This value is returned by the event's <strong><see cref="M:SharpDX.MediaFoundation.MediaEvent.GetStatus(SharpDX.Result@)"/></strong> method.</p> </dd></param>	
            <param name="vValueRef"><dd> <p>Pointer to a <strong><see cref="T:SharpDX.Win32.Variant"/></strong> that contains the event value. This parameter can be <strong><c>null</c></strong>. This value is returned by the event's <strong><see cref="M:SharpDX.MediaFoundation.MediaEvent.GetValue(SharpDX.Win32.Variant@)"/></strong> method.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_SHUTDOWN</strong></dt> </dl> </td><td> <p>The object was shut down.</p> </td></tr> </table><p>?</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEventGenerator::QueueEvent']/*"/>	
            <msdn-id>ms696255</msdn-id>	
            <unmanaged>HRESULT IMFMediaEventGenerator::QueueEvent([In] unsigned int met,[In] const GUID&amp; guidExtendedType,[In] HRESULT hrStatus,[In, Optional] const PROPVARIANT* pvValue)</unmanaged>	
            <unmanaged-short>IMFMediaEventGenerator::QueueEvent</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEventQueue">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Provides an event queue for applications that need to implement the <strong><see cref="T:SharpDX.MediaFoundation.MediaEventGenerator"/></strong> interface.</p><p>This interface is exposed by a helper object that implements an event queue. If you are writing a component that implements the <strong><see cref="T:SharpDX.MediaFoundation.MediaEventGenerator"/></strong> interface, you can use this object in your implementation. The event queue object is thread safe and provides methods to queue events and to pull them from the queue either synchronously or asynchronously. To create the event queue object, call <strong>MFCreateEventQueue</strong>.</p>	
            </summary>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEventQueue']/*"/>	
            <msdn-id>ms704617</msdn-id>	
            <unmanaged>IMFMediaEventQueue</unmanaged>	
            <unmanaged-short>IMFMediaEventQueue</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventQueue.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaEventQueue"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventQueue.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.MediaEventQueue">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.MediaEventQueue"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventQueue.GetEvent(System.Int32,SharpDX.MediaFoundation.MediaEvent@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the next event in the queue. This method is synchronous.</p><p>Call this method inside your implementation of <strong><see cref="M:SharpDX.MediaFoundation.MediaEventGenerator.GetEvent(System.Int32,SharpDX.MediaFoundation.MediaEvent@)"/></strong>. Pass the parameters from that method directly to this method.</p>	
            </summary>	
            <param name="dwFlags">No documentation.</param>	
            <param name="eventOut">No documentation.</param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_SHUTDOWN</strong></dt> </dl> </td><td> <p>The <strong>Shutdown</strong> method was called.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEventQueue::GetEvent']/*"/>	
            <msdn-id>ms702270</msdn-id>	
            <unmanaged>HRESULT IMFMediaEventQueue::GetEvent([In] unsigned int dwFlags,[Out] IMFMediaEvent** ppEvent)</unmanaged>	
            <unmanaged-short>IMFMediaEventQueue::GetEvent</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventQueue.BeginGetEvent(SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Begins an asynchronous request for the next event in the queue.</p><p>Call this method inside your implementation of <strong><see cref="M:SharpDX.MediaFoundation.MediaEventGenerator.BeginGetEvent(SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject)"/></strong>. Pass the parameters from that method directly to this method.</p>	
            </summary>	
            <param name="callbackRef">No documentation.</param>	
            <param name="unkStateRef">No documentation.</param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_SHUTDOWN</strong></dt> </dl> </td><td> <p>The <strong>Shutdown</strong> method was called.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEventQueue::BeginGetEvent']/*"/>	
            <msdn-id>ms696998</msdn-id>	
            <unmanaged>HRESULT IMFMediaEventQueue::BeginGetEvent([In] IMFAsyncCallback* pCallback,[In] IUnknown* punkState)</unmanaged>	
            <unmanaged-short>IMFMediaEventQueue::BeginGetEvent</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventQueue.EndGetEvent(SharpDX.MediaFoundation.AsyncResult,SharpDX.MediaFoundation.MediaEvent@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Completes an asynchronous request for the next event in the queue.</p><p>Call this method inside your implementation of <strong><see cref="M:SharpDX.MediaFoundation.MediaEventGenerator.EndGetEvent(SharpDX.MediaFoundation.AsyncResult,SharpDX.MediaFoundation.MediaEvent@)"/></strong>. Pass the parameters from that method directly to this method.</p>	
            </summary>	
            <param name="resultRef">No documentation.</param>	
            <param name="eventOut">No documentation.</param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_SHUTDOWN</strong></dt> </dl> </td><td> <p>The <strong>Shutdown</strong> method was called.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEventQueue::EndGetEvent']/*"/>	
            <msdn-id>ms702986</msdn-id>	
            <unmanaged>HRESULT IMFMediaEventQueue::EndGetEvent([In] IMFAsyncResult* pResult,[Out] IMFMediaEvent** ppEvent)</unmanaged>	
            <unmanaged-short>IMFMediaEventQueue::EndGetEvent</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventQueue.QueueEvent(SharpDX.MediaFoundation.MediaEvent)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Puts an event in the queue.</p>	
            </summary>	
            <param name="eventRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.MediaEvent"/></strong> interface of the event to be put in the queue.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_SHUTDOWN</strong></dt> </dl> </td><td> <p>The <strong>Shutdown</strong> method was called.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Call this method when your component needs to raise an event that contains attributes. To create the event object, call <strong>MFCreateMediaEvent</strong>. Add attributes to the event by using methods from the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface. (The <strong><see cref="T:SharpDX.MediaFoundation.MediaEvent"/></strong> interface inherits <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong>.)</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEventQueue::QueueEvent']/*"/>	
            <msdn-id>ms704792</msdn-id>	
            <unmanaged>HRESULT IMFMediaEventQueue::QueueEvent([In] IMFMediaEvent* pEvent)</unmanaged>	
            <unmanaged-short>IMFMediaEventQueue::QueueEvent</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventQueue.QueueEventParamVar(System.Int32,System.Guid,SharpDX.Result,SharpDX.Win32.Variant)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Creates an event, sets a <strong><see cref="T:SharpDX.Win32.Variant"/></strong> as the event data, and puts the event in the queue.</p><p>Call this method inside your implementation of <strong><see cref="M:SharpDX.MediaFoundation.MediaEventGenerator.QueueEvent(System.Int32,System.Guid,SharpDX.Result,System.Nullable{SharpDX.Win32.Variant})"/></strong>. Pass the parameters from that method directly to this method.</p><p>You can also call this method when your component needs to raise an event that does not contain attributes. If the event data is an <strong><see cref="T:SharpDX.ComObject"/></strong> reference, you can use <strong><see cref="M:SharpDX.MediaFoundation.MediaEventQueue.QueueEventParamUnk(System.Int32,System.Guid,SharpDX.Result,SharpDX.ComObject)"/></strong>. If the event contains attributes, use <strong><see cref="M:SharpDX.MediaFoundation.MediaEventQueue.QueueEvent(SharpDX.MediaFoundation.MediaEvent)"/></strong> instead.</p>	
            </summary>	
            <param name="met">No documentation.</param>	
            <param name="guidExtendedType">No documentation.</param>	
            <param name="hrStatus">No documentation.</param>	
            <param name="vValueRef">No documentation.</param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_SHUTDOWN</strong></dt> </dl> </td><td> <p>The <strong>Shutdown</strong> method was called.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEventQueue::QueueEventParamVar']/*"/>	
            <msdn-id>ms704641</msdn-id>	
            <unmanaged>HRESULT IMFMediaEventQueue::QueueEventParamVar([In] unsigned int met,[In] const GUID&amp; guidExtendedType,[In] HRESULT hrStatus,[In] const PROPVARIANT* pvValue)</unmanaged>	
            <unmanaged-short>IMFMediaEventQueue::QueueEventParamVar</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventQueue.QueueEventParamUnk(System.Int32,System.Guid,SharpDX.Result,SharpDX.ComObject)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Creates an event, sets an <strong><see cref="T:SharpDX.ComObject"/></strong> reference as the event data, and puts the event in the queue.</p>	
            </summary>	
            <param name="met"><dd> <p>Specifies the event type of the event to be added to the queue. The event type is returned by the event's <strong><see cref="M:SharpDX.MediaFoundation.MediaEvent.GetTypeInfo(System.Int32@)"/></strong> method. For a list of event types, see Media Foundation Events.</p> </dd></param>	
            <param name="guidExtendedType"><dd> <p>The extended type of the event. If the event does not have an extended type, use the value GUID_NULL. The extended type is returned by the event's <strong><see cref="M:SharpDX.MediaFoundation.MediaEvent.GetExtendedType(System.Guid@)"/></strong> method.</p> </dd></param>	
            <param name="hrStatus"><dd> <p>A success or failure code indicating the status of the event. This value is returned by the event's <strong><see cref="M:SharpDX.MediaFoundation.MediaEvent.GetStatus(SharpDX.Result@)"/></strong> method.</p> </dd></param>	
            <param name="unkRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface. The method sets this reference as the event value. The reference is returned by the event's <strong><see cref="M:SharpDX.MediaFoundation.MediaEvent.GetValue(SharpDX.Win32.Variant@)"/></strong> method.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_SHUTDOWN</strong></dt> </dl> </td><td> <p>The <strong>Shutdown</strong> method was called.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Call this method when your component needs to raise an event that contains an <strong><see cref="T:SharpDX.ComObject"/></strong> reference value and no attributes. If the event contains attributes, use <strong><see cref="M:SharpDX.MediaFoundation.MediaEventQueue.QueueEvent(SharpDX.MediaFoundation.MediaEvent)"/></strong> instead.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEventQueue::QueueEventParamUnk']/*"/>	
            <msdn-id>ms704686</msdn-id>	
            <unmanaged>HRESULT IMFMediaEventQueue::QueueEventParamUnk([In] unsigned int met,[In] const GUID&amp; guidExtendedType,[In] HRESULT hrStatus,[In] IUnknown* pUnk)</unmanaged>	
            <unmanaged-short>IMFMediaEventQueue::QueueEventParamUnk</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEventQueue.Shutdown">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Shuts down the event queue.</p>	
            </summary>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Call this method when your component shuts down. After this method is called, all <strong><see cref="T:SharpDX.MediaFoundation.MediaEventQueue"/></strong> methods return <strong>MF_E_SHUTDOWN</strong>.</p><p>This method removes all of the events from the queue.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaEventQueue::Shutdown']/*"/>	
            <msdn-id>ms698923</msdn-id>	
            <unmanaged>HRESULT IMFMediaEventQueue::Shutdown()</unmanaged>	
            <unmanaged-short>IMFMediaEventQueue::Shutdown</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaTimeRange">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Represents a list of time ranges, where each range is defined by a start and end time.</p>	
            </summary>	
            <remarks>	
            <p>The <strong><see cref="T:SharpDX.MediaFoundation.MediaTimeRange"/></strong> interface corresponds to the <strong>TimeRanges</strong> interface in HTML5.</p><p>Several <strong><see cref="T:SharpDX.MediaFoundation.MediaEngine"/></strong> methods return <strong><see cref="T:SharpDX.MediaFoundation.MediaTimeRange"/></strong> references.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaTimeRange']/*"/>	
            <msdn-id>hh448033</msdn-id>	
            <unmanaged>IMFMediaTimeRange</unmanaged>	
            <unmanaged-short>IMFMediaTimeRange</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaTimeRange.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaTimeRange"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaTimeRange.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.MediaTimeRange">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.MediaTimeRange"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaTimeRange.GetLength">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the number of time ranges contained in the object.</p>	
            </summary>	
            <returns><p>Returns the number of time ranges.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>TimeRanges.length</strong> attribute in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaTimeRange::GetLength']/*"/>	
            <msdn-id>hh448038</msdn-id>	
            <unmanaged>unsigned int IMFMediaTimeRange::GetLength()</unmanaged>	
            <unmanaged-short>IMFMediaTimeRange::GetLength</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaTimeRange.GetStart(System.Int32,System.Double@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the start time for a specified time range.</p>	
            </summary>	
            <param name="index"><dd> <p>The zero-based index of the time range to query. To get the  number of time ranges, call <strong><see cref="M:SharpDX.MediaFoundation.MediaTimeRange.GetLength"/></strong>.</p> </dd></param>	
            <param name="startRef"><dd> <p>Receives the start time, in seconds.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>TimeRanges.start</strong> method in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaTimeRange::GetStart']/*"/>	
            <msdn-id>hh448039</msdn-id>	
            <unmanaged>HRESULT IMFMediaTimeRange::GetStart([In] unsigned int index,[Out] double* pStart)</unmanaged>	
            <unmanaged-short>IMFMediaTimeRange::GetStart</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaTimeRange.GetEnd(System.Int32,System.Double@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the end time for a specified time range.</p>	
            </summary>	
            <param name="index"><dd> <p>The zero-based index of the time range to query. To get the  number of time ranges, call <strong><see cref="M:SharpDX.MediaFoundation.MediaTimeRange.GetLength"/></strong>.</p> </dd></param>	
            <param name="endRef"><dd> <p>Receives the end time, in seconds.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method corresponds to the <strong>TimeRanges.end</strong> method in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaTimeRange::GetEnd']/*"/>	
            <msdn-id>hh448037</msdn-id>	
            <unmanaged>HRESULT IMFMediaTimeRange::GetEnd([In] unsigned int index,[Out] double* pEnd)</unmanaged>	
            <unmanaged-short>IMFMediaTimeRange::GetEnd</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaTimeRange.ContainsTime(System.Double)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether a specified time falls within any of the time ranges.</p>	
            </summary>	
            <param name="time"><dd> <p>The time, in seconds.</p> </dd></param>	
            <returns><p>Returns <strong>TRUE</strong> if any time range contained in this object spans the value of the <em>time</em> parameter. Otherwise, returns <strong><see cref="F:SharpDX.Result.False"/></strong>.</p></returns>	
            <remarks>	
            <p>This method returns <strong>TRUE</strong> if the following condition holds for any time range in the list:</p><dl> <dd>(<em>start</em> &lt;= <em>time</em>) &amp;&amp; (<em>time</em> &lt;= <em>end</em>)</dd> </dl>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaTimeRange::ContainsTime']/*"/>	
            <msdn-id>hh448036</msdn-id>	
            <unmanaged>BOOL IMFMediaTimeRange::ContainsTime([In] double time)</unmanaged>	
            <unmanaged-short>IMFMediaTimeRange::ContainsTime</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaTimeRange.AddRange(System.Double,System.Double)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Adds a new range to the list of time ranges.</p>	
            </summary>	
            <param name="startTime"><dd> <p>The start time, in seconds.</p> </dd></param>	
            <param name="endTime"><dd> <p>The end time, in seconds.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>If the new range intersects a range already in the list, the two ranges are combined. Otherwise, the new range is added to the list.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaTimeRange::AddRange']/*"/>	
            <msdn-id>hh448034</msdn-id>	
            <unmanaged>HRESULT IMFMediaTimeRange::AddRange([In] double startTime,[In] double endTime)</unmanaged>	
            <unmanaged-short>IMFMediaTimeRange::AddRange</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaTimeRange.Clear">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Clears the list of time ranges.</p>	
            </summary>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaTimeRange::Clear']/*"/>	
            <msdn-id>hh448035</msdn-id>	
            <unmanaged>HRESULT IMFMediaTimeRange::Clear()</unmanaged>	
            <unmanaged-short>IMFMediaTimeRange::Clear</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaTimeRange.Length">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the number of time ranges contained in the object.</p>	
            </summary>	
            <remarks>	
            <p>This method corresponds to the <strong>TimeRanges.length</strong> attribute in HTML5.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaTimeRange::GetLength']/*"/>	
            <msdn-id>hh448038</msdn-id>	
            <unmanaged>GetLength</unmanaged>	
            <unmanaged-short>GetLength</unmanaged-short>	
            <unmanaged>unsigned int IMFMediaTimeRange::GetLength()</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaType">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Represents a description of a media format. </p>	
            </summary>	
            <remarks>	
            <p> To create a new media type, call <strong>MFCreateMediaType</strong>. </p><p> All of the information in a media type is stored as attributes. To clone a media type, call <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.CopyAllItems(SharpDX.MediaFoundation.MediaAttributes)"/></strong>. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaType']/*"/>	
            <msdn-id>ms704850</msdn-id>	
            <unmanaged>IMFMediaType</unmanaged>	
            <unmanaged-short>IMFMediaType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaType.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaType"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaType.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.MediaType">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.MediaType"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaType.GetMajorType(System.Guid@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the major type of the format. </p>	
            </summary>	
            <param name="guidMajorTypeRef"><dd> <p>Receives the major type <strong><see cref="T:System.Guid"/></strong>. The major type describes the broad category of the format, such as audio or video. For a list of possible values, see Major Media Types. </p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_ATTRIBUTENOTFOUND</strong></dt> </dl> </td><td> <p> The major type is not set. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> This method is equivalent to getting the <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.MajorType"/></strong> attribute from the media type. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaType::GetMajorType']/*"/>	
            <msdn-id>ms701588</msdn-id>	
            <unmanaged>HRESULT IMFMediaType::GetMajorType([Out] GUID* pguidMajorType)</unmanaged>	
            <unmanaged-short>IMFMediaType::GetMajorType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaType.IsCompressedFormat_(SharpDX.Bool@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Queries whether the media type is a temporally compressed format. Temporal compression uses information from previously decoded samples when decompressing the current sample.</p>	
            </summary>	
            <param name="fCompressedRef"><dd> <p>Receives a Boolean value. The value is <strong>TRUE</strong> if the format uses temporal compression, or <strong><see cref="F:SharpDX.Result.False"/></strong> if the format does not use temporal compression.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> This method returns <strong><see cref="F:SharpDX.Result.False"/></strong> in <em>pfCompressed</em> if the media type's <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AllSamplesIndependent"/></strong> attribute is <strong>TRUE</strong>. If the <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AllSamplesIndependent"/></strong> attribute is <strong><see cref="F:SharpDX.Result.False"/></strong> or not set, the method returns <strong>TRUE</strong>. </p><p> If the method returns <strong>TRUE</strong> in <em>pfCompressed</em>, it is a hint that the format has temporal compression applied to it. If the method returns <strong><see cref="F:SharpDX.Result.False"/></strong>, the format does not use temporal compression, although it might use intra-frame compression. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaType::IsCompressedFormat']/*"/>	
            <msdn-id>ms703821</msdn-id>	
            <unmanaged>HRESULT IMFMediaType::IsCompressedFormat([Out] BOOL* pfCompressed)</unmanaged>	
            <unmanaged-short>IMFMediaType::IsCompressedFormat</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaType.IsEqual(SharpDX.MediaFoundation.MediaType,System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Compares two media types and determines whether they are identical. If they are not identical, the method indicates how the two formats differ. </p>	
            </summary>	
            <param name="iMediaTypeRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.MediaType"/></strong> interface of the media type to compare.</p> </dd></param>	
            <param name="dwFlagsRef"><dd> <p>Receives a bitwise <strong>OR</strong> of zero or more flags, indicating the degree of similarity between the two media types. The following flags are defined.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>MF_MEDIATYPE_EQUAL_MAJOR_TYPES</strong></dt> <dt>0x00000001</dt> </dl> </td><td> <p>The major types are the same. The major type is specified by the <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.MajorType"/></strong> attribute.</p> </td></tr> <tr><td><dl> <dt><strong>MF_MEDIATYPE_EQUAL_FORMAT_TYPES</strong></dt> <dt>0x00000002</dt> </dl> </td><td> <p>The subtypes are the same, or neither media type has a subtype. The subtype is specified by the <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.Subtype"/></strong> attribute.</p> </td></tr> <tr><td><dl> <dt><strong>MF_MEDIATYPE_EQUAL_FORMAT_DATA</strong></dt> <dt>0x00000004</dt> </dl> </td><td> <p>The attributes in one of the media types are a  subset of the attributes in the other, and the values of these attributes match, excluding the value of the <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.UserData"/></strong> attribute.</p> <p>Specifically, the method takes the media type with the smaller number of attributes and checks whether each attribute from that type is present in the other media type and has the same value (not including <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.UserData"/></strong>). </p> <p>To perform other comparisons, use the <strong><see cref="M:SharpDX.MediaFoundation.MediaAttributes.Compare(SharpDX.MediaFoundation.MediaAttributes,SharpDX.MediaFoundation.AttributesMatchType)"/></strong> method. For example, the <strong>Compare</strong> method can test for identical attributes, or test the intersection of the two attribute sets. For more information, see <strong><see cref="T:SharpDX.MediaFoundation.AttributesMatchType"/></strong>.</p> </td></tr> <tr><td><dl> <dt><strong>MF_MEDIATYPE_EQUAL_FORMAT_USER_DATA</strong></dt> <dt>0x00000008</dt> </dl> </td><td> <p>The user data is identical, or neither media type contains user data. User data is specified by the <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.UserData"/></strong> attribute.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong>S_FALSE</strong></dt> </dl> </td><td> <p> The types are not equal. Examine the <em>pdwFlags</em> parameter to determine how the types differ. </p> </td></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The types are equal. </p> </td></tr> <tr><td> <dl> <dt><strong>E_INVALIDARG</strong></dt> </dl> </td><td> <p> One or both media types are invalid. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> Both of the media types must have a major type, or the method returns <strong>E_INVALIDARG</strong>. </p><p> If the method succeeds and all of the comparison flags are set in <em>pdwFlags</em>, the return value is <strong><see cref="F:SharpDX.Result.Ok"/></strong>. If the method succeeds but one or more comparison flags are not set, the method returns <strong>S_FALSE</strong>. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaType::IsEqual']/*"/>	
            <msdn-id>ms696980</msdn-id>	
            <unmanaged>HRESULT IMFMediaType::IsEqual([In] IMFMediaType* pIMediaType,[Out] unsigned int* pdwFlags)</unmanaged>	
            <unmanaged-short>IMFMediaType::IsEqual</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaType.GetRepresentation(System.Guid,System.IntPtr@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves an alternative representation of the media type. Currently only the DirectShow <strong><see cref="!:SharpDX.Win32.Unsupported.AMMediaType"/></strong> structure is supported.</p>	
            </summary>	
            <param name="guidRepresentation"><dd> <p> <see cref="T:System.Guid"/> that specifies the representation to retrieve. The following values are defined. </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>AM_MEDIA_TYPE_REPRESENTATION</strong></dt> </dl> </td><td> <p> Convert the media type to a DirectShow <strong><see cref="!:SharpDX.Win32.Unsupported.AMMediaType"/></strong> structure. The method selects the most appropriate format structure (<strong>pbFormat</strong>). </p> </td></tr> <tr><td><dl> <dt><strong>FORMAT_MFVideoFormat</strong></dt> </dl> </td><td> <p> Convert the media type to a DirectShow <strong><see cref="!:SharpDX.Win32.Unsupported.AMMediaType"/></strong> structure with an <strong>MFVIDEOFORMAT</strong> format structure. </p> </td></tr> <tr><td><dl> <dt><strong>FORMAT_VideoInfo</strong></dt> </dl> </td><td> <p> Convert the media type to a DirectShow <strong><see cref="!:SharpDX.Win32.Unsupported.AMMediaType"/></strong> structure with a <strong><see cref="!:SharpDX.Win32.Unsupported.VideoInfoHeader"/></strong> format structure. </p> </td></tr> <tr><td><dl> <dt><strong>FORMAT_VideoInfo2</strong></dt> </dl> </td><td> <p> Convert the media type to a DirectShow <strong><see cref="!:SharpDX.Win32.Unsupported.AMMediaType"/></strong> structure with a <strong><see cref="!:SharpDX.MediaFoundation.VideoInformationHeader2"/></strong> format structure. </p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="vRepresentationOut"><dd> <p> Receives a reference to a structure that contains the representation. The method allocates the memory for the structure. The caller must release the memory by calling <strong><see cref="M:SharpDX.MediaFoundation.MediaType.FreeRepresentation(System.Guid,System.IntPtr)"/></strong>. </p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_ATTRIBUTENOTFOUND</strong></dt> </dl> </td><td> <p> The details of the media type do not match the requested representation. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDMEDIATYPE</strong></dt> </dl> </td><td> <p> The media type is not valid. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_UNSUPPORTED_REPRESENTATION</strong></dt> </dl> </td><td> <p> The media type does not support the requested representation. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> If you request a specific format structure in the <em>guidRepresentation</em> parameter, such as <strong><see cref="!:SharpDX.Win32.Unsupported.VideoInfoHeader"/></strong>, you might lose some of the format information. </p><p> You can also use the <strong>MFInitAMMediaTypeFromMFMediaType</strong> function to convert a Media Foundation media type into a DirectShow media type. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaType::GetRepresentation']/*"/>	
            <msdn-id>ms695248</msdn-id>	
            <unmanaged>HRESULT IMFMediaType::GetRepresentation([In] GUID guidRepresentation,[Out] void** ppvRepresentation)</unmanaged>	
            <unmanaged-short>IMFMediaType::GetRepresentation</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaType.FreeRepresentation(System.Guid,System.IntPtr)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Frees memory that was allocated by the <strong><see cref="M:SharpDX.MediaFoundation.MediaType.GetRepresentation(System.Guid,System.IntPtr@)"/></strong> method.</p>	
            </summary>	
            <param name="guidRepresentation">No documentation.</param>	
            <param name="vRepresentationRef">No documentation.</param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaType::FreeRepresentation']/*"/>	
            <msdn-id>ms703846</msdn-id>	
            <unmanaged>HRESULT IMFMediaType::FreeRepresentation([In] GUID guidRepresentation,[In] void* pvRepresentation)</unmanaged>	
            <unmanaged-short>IMFMediaType::FreeRepresentation</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaType.MajorType">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the major type of the format. </p>	
            </summary>	
            <remarks>	
            <p> This method is equivalent to getting the <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.MajorType"/></strong> attribute from the media type. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaType::GetMajorType']/*"/>	
            <msdn-id>ms701588</msdn-id>	
            <unmanaged>GetMajorType</unmanaged>	
            <unmanaged-short>GetMajorType</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaType::GetMajorType([Out] GUID* pguidMajorType)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaType.IsCompressedFormat">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Queries whether the media type is a temporally compressed format. Temporal compression uses information from previously decoded samples when decompressing the current sample.</p>	
            </summary>	
            <remarks>	
            <p> This method returns <strong><see cref="F:SharpDX.Result.False"/></strong> in <em>pfCompressed</em> if the media type's <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AllSamplesIndependent"/></strong> attribute is <strong>TRUE</strong>. If the <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AllSamplesIndependent"/></strong> attribute is <strong><see cref="F:SharpDX.Result.False"/></strong> or not set, the method returns <strong>TRUE</strong>. </p><p> If the method returns <strong>TRUE</strong> in <em>pfCompressed</em>, it is a hint that the format has temporal compression applied to it. If the method returns <strong><see cref="F:SharpDX.Result.False"/></strong>, the format does not use temporal compression, although it might use intra-frame compression. </p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFMediaType::IsCompressedFormat']/*"/>	
            <msdn-id>ms703821</msdn-id>	
            <unmanaged>IsCompressedFormat</unmanaged>	
            <unmanaged-short>IsCompressedFormat</unmanaged-short>	
            <unmanaged>HRESULT IMFMediaType::IsCompressedFormat([Out] BOOL* pfCompressed)</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.Mfasyncresult">
            <summary>	
            <p>This topic describes how to implement the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface.</p><p>It is rare that you will need to write a custom implementation of the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface. In almost all cases, the standard Media Foundation implementation is sufficient. (This implementation is returned by the <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateAsyncResult(SharpDX.ComObject,SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject,SharpDX.MediaFoundation.AsyncResult@)"/></strong> function.) However, if you do write a custom implementation, there are some issues to be aware of.</p><p>First, your implementation must inherit the <strong><see cref="T:SharpDX.MediaFoundation.Mfasyncresult"/></strong> structure. The Media Foundation work queues use this structure internally to dispatch the operation. Initialize all of the structure members to zero, except for the <strong>pCallback</strong> member, which contains a reference to the caller's callback interface.</p><p>Second, your object should call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.LockPlatform"/></strong> in its constructor, to lock the Media Foundation platform. Call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.UnlockPlatform"/></strong> to unlock the platform. These functions help to prevent the platform from shutting down before the object is destroyed. For more information, see Work Queues.</p><p>The following code shows a basic implementation of the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface. As shown, this code provides no additional features beyond the standard Media Foundation implementation. </p><pre>///////////////////////////////////////////////////////////////////////////////	
            //  CMyAsyncResult	
            //	
            //  Custom implementation of <see cref="T:SharpDX.MediaFoundation.AsyncResult"/>. All implementations of this 	
            //  interface must inherit the <see cref="T:SharpDX.MediaFoundation.Mfasyncresult"/> structure.	
            // 	
            /////////////////////////////////////////////////////////////////////////////// class CMyAsyncResult : public <see cref="T:SharpDX.MediaFoundation.Mfasyncresult"/>	
            {	
            protected: LONG        m_cRef;             // Reference count. <see cref="T:SharpDX.Bool"/>        m_bLockPlatform;    // Locked the Media Foundation platform? <see cref="T:SharpDX.ComObject"/>*   m_pState;           // Caller's state object.  <see cref="T:SharpDX.ComObject"/>*   m_pObject;  // Optional object. See <see cref="M:SharpDX.MediaFoundation.AsyncResult.GetObject(SharpDX.ComObject@)"/>. // Constructor.  CMyAsyncResult(<see cref="T:SharpDX.MediaFoundation.AsyncCallback"/> *pCallback, <see cref="T:SharpDX.ComObject"/> *pState, <see cref="T:SharpDX.Result"/> *phr) : m_cRef(1), m_bLockPlatform(<see cref="F:SharpDX.Result.False"/>), m_pObject(<c>null</c>), m_pState(pState) { *phr = <see cref="M:SharpDX.MediaFoundation.MediaFactory.LockPlatform"/>(); m_bLockPlatform = TRUE; // Initialize the <see cref="T:SharpDX.MediaFoundation.Mfasyncresult"/> members. ZeroMemory(&amp;this-&gt;overlapped, sizeof(OVERLAPPED)); hrStatusResult = <see cref="F:SharpDX.Result.Ok"/>; dwBytesTransferred = 0; hEvent = <c>null</c>; this-&gt;pCallback = pCallback; if (pCallback) { this-&gt;pCallback-&gt;AddRef(); } if (m_pState) { m_pState-&gt;AddRef(); } } virtual ~CMyAsyncResult() { SafeRelease(&amp;pCallback); SafeRelease(&amp;m_pState); SafeRelease(&amp;m_pObject); if (m_bLockPlatform) { <see cref="M:SharpDX.MediaFoundation.MediaFactory.UnlockPlatform"/>(); } } public: // Static method to create an instance of this object. static <see cref="T:SharpDX.Result"/> CreateInstance( <see cref="T:SharpDX.MediaFoundation.AsyncCallback"/> *pCallback,    // Callback to invoke. <see cref="T:SharpDX.ComObject"/> *pState,               // Optional state object. CMyAsyncResult **ppResult       // Receives a reference to the object. ) { <see cref="T:SharpDX.Result"/> hr = <see cref="F:SharpDX.Result.Ok"/>; *ppResult = <c>null</c>; CMyAsyncResult *pResult =  new (std::nothrow) CMyAsyncResult(pCallback, pState, &amp;hr); if (pResult == <c>null</c>) { return E_OUTOFMEMORY; } if (FAILED(hr)) { delete pResult; return hr; } // If the callback is <c>null</c>, create an event that will be signaled. if (pCallback == <c>null</c>) { pResult-&gt;hEvent = CreateEvent(<c>null</c>, <see cref="F:SharpDX.Result.False"/>, <see cref="F:SharpDX.Result.False"/>, <c>null</c>); if (pResult-&gt;hEvent == <c>null</c>) { hr = HRESULT_FROM_WIN32(GetLastError()); } } if (SUCCEEDED(hr)) { *ppResult = pResult;  // Return the reference to the caller. } else { pResult-&gt;Release(); } return hr; } // SetObject: Sets the optional result object.  // (This method is not part of the interface.) <see cref="T:SharpDX.Result"/> SetObject(<see cref="T:SharpDX.ComObject"/> *pObject) { SafeRelease(&amp;m_pObject); m_pObject = pObject; if (pObject) { m_pObject-&gt;AddRef(); } return <see cref="F:SharpDX.Result.Ok"/>; } // <see cref="T:SharpDX.ComObject"/> methods. STDMETHODIMP QueryInterface(REFIID riid, void **ppv) { static const QITAB qit[] =  { QITABENT(CMyAsyncResult, <see cref="T:SharpDX.MediaFoundation.AsyncResult"/>), { 0 } }; return QISearch(this, qit, riid, ppv); } STDMETHODIMP_(ULONG) AddRef() { return InterlockedIncrement(&amp;m_cRef); } STDMETHODIMP_(ULONG) Release() { LONG cRef = InterlockedDecrement(&amp;m_cRef); if (cRef == 0) { delete this; } return cRef; } // <see cref="T:SharpDX.MediaFoundation.AsyncResult"/> methods. STDMETHODIMP GetState(<see cref="T:SharpDX.ComObject"/>** ppunkState) { if (ppunkState == <c>null</c>) { return E_POINTER; } *ppunkState = m_pState; if (m_pState) { (*ppunkState)-&gt;AddRef(); } return <see cref="F:SharpDX.Result.Ok"/>; } STDMETHODIMP GetStatus( void) { return hrStatusResult; } STDMETHODIMP STDMETHODCALLTYPE SetStatus(<see cref="T:SharpDX.Result"/> hrStatus) { hrStatusResult = hrStatus; return <see cref="F:SharpDX.Result.Ok"/>; } STDMETHODIMP GetObject(<see cref="T:SharpDX.ComObject"/> **ppObject) { if (ppObject == <c>null</c>) { return E_POINTER; } *ppObject = m_pObject; if (m_pObject) { (*ppObject)-&gt;AddRef(); } return <see cref="F:SharpDX.Result.Ok"/>; } <see cref="T:SharpDX.ComObject"/>* STDMETHODCALLTYPE GetStateNoAddRef() { return m_pState;  // Warning! Can be <c>null</c>.  }	
            };	
            </pre>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFASYNCRESULT']/*"/>	
            <msdn-id>aa370805</msdn-id>	
            <unmanaged>MFASYNCRESULT</unmanaged>	
            <unmanaged-short>MFASYNCRESULT</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Mfasyncresult.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.Mfasyncresult"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Mfasyncresult.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.Mfasyncresult">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.Mfasyncresult"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:SharpDX.MediaFoundation.Sample">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Represents a media sample, which is a container object for media data. For video, a sample typically contains one video frame. For audio data, a sample typically contains multiple audio samples, rather than a single sample of audio.</p><p>A media sample contains zero or more buffers. Each buffer manages a block of memory, and is represented by the <strong><see cref="T:SharpDX.MediaFoundation.MediaBuffer"/></strong> interface. A sample can have multiple buffers. The buffers are kept in an ordered list and accessed by index value. It is also valid to have an empty sample with no buffers.</p>	
            </summary>	
            <remarks>	
            <p>To create a new media sample, call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateSample(SharpDX.MediaFoundation.Sample@)"/></strong>.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample']/*"/>	
            <msdn-id>ms702192</msdn-id>	
            <unmanaged>IMFSample</unmanaged>	
            <unmanaged-short>IMFSample</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.Sample"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.Sample">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.Sample"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.GetSampleFlags(System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves flags associated with the sample.</p><p>Currently no flags are defined. Instead, metadata for samples is defined using attributes. To get attibutes from a sample, use the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface, which <strong><see cref="T:SharpDX.MediaFoundation.Sample"/></strong> inherits. For a list of sample attributes, see Sample Attributes.</p>	
            </summary>	
            <param name="dwSampleFlagsRef">No documentation.</param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::GetSampleFlags']/*"/>	
            <msdn-id>ms701587</msdn-id>	
            <unmanaged>HRESULT IMFSample::GetSampleFlags([Out] unsigned int* pdwSampleFlags)</unmanaged>	
            <unmanaged-short>IMFSample::GetSampleFlags</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.SetSampleFlags(System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Sets flags associated with the sample.</p><p>Currently no flags are defined. Instead, metadata for samples is defined using attributes. To set attibutes on a sample, use the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface, which <strong><see cref="T:SharpDX.MediaFoundation.Sample"/></strong> inherits. For a list of sample attributes, see Sample Attributes.</p>	
            </summary>	
            <param name="dwSampleFlags">No documentation.</param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::SetSampleFlags']/*"/>	
            <msdn-id>ms696207</msdn-id>	
            <unmanaged>HRESULT IMFSample::SetSampleFlags([In] unsigned int dwSampleFlags)</unmanaged>	
            <unmanaged-short>IMFSample::SetSampleFlags</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.GetSampleTime(System.Int64@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the presentation time of the sample.</p>	
            </summary>	
            <param name="hnsSampleTimeRef"><dd> <p>Receives the presentation time, in 100-nanosecond units.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_NO_SAMPLE_TIMESTAMP</strong></dt> </dl> </td><td> <p>The sample does not have a presentation time.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::GetSampleTime']/*"/>	
            <msdn-id>ms705645</msdn-id>	
            <unmanaged>HRESULT IMFSample::GetSampleTime([Out] longlong* phnsSampleTime)</unmanaged>	
            <unmanaged-short>IMFSample::GetSampleTime</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.SetSampleTime(System.Int64)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Sets the presentation time of the sample.</p>	
            </summary>	
            <param name="hnsSampleTime"><dd> <p>The presentation time, in 100-nanosecond units.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>Some pipeline components require samples that have time stamps. Generally the component that generates the data for the sample also sets the time stamp. The Media Session might modify the time stamps.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::SetSampleTime']/*"/>	
            <msdn-id>ms697282</msdn-id>	
            <unmanaged>HRESULT IMFSample::SetSampleTime([In] longlong hnsSampleTime)</unmanaged>	
            <unmanaged-short>IMFSample::SetSampleTime</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.GetSampleDuration(System.Int64@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the duration of the sample.</p>	
            </summary>	
            <param name="hnsSampleDurationRef"><dd> <p>Receives the duration, in 100-nanosecond units.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_NO_SAMPLE_DURATION</strong></dt> </dl> </td><td> <p>The sample does not have a specified duration.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>If the sample contains more than one buffer, the duration includes the data from all of the buffers.</p><p>If the retrieved duration is zero, or if the method returns <strong>MF_E_NO_SAMPLE_DURATION</strong>, the duration is unknown. In that case, it might be possible to calculate the duration from the media type?for example, by using the video frame rate or the audio sampling rate.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::GetSampleDuration']/*"/>	
            <msdn-id>ms703056</msdn-id>	
            <unmanaged>HRESULT IMFSample::GetSampleDuration([Out] longlong* phnsSampleDuration)</unmanaged>	
            <unmanaged-short>IMFSample::GetSampleDuration</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.SetSampleDuration(System.Int64)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Sets the duration of the sample.</p>	
            </summary>	
            <param name="hnsSampleDuration"><dd> <p>Duration of the sample, in 100-nanosecond units.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method succeeds if the duration is negative, although negative durations are probably not valid for most types of data. It is the responsibility of the object that consumes the sample to validate the duration.</p><p>The duration can also be zero. This might be valid for some types of data. For example, the sample might contain stream metadata with no buffers.</p><p>Until this method is called, the <strong><see cref="M:SharpDX.MediaFoundation.Sample.GetSampleDuration(System.Int64@)"/></strong> method returns <strong>MF_E_NO_SAMPLE_DURATION</strong>.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::SetSampleDuration']/*"/>	
            <msdn-id>ms705626</msdn-id>	
            <unmanaged>HRESULT IMFSample::SetSampleDuration([In] longlong hnsSampleDuration)</unmanaged>	
            <unmanaged-short>IMFSample::SetSampleDuration</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.GetBufferCount(System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the number of buffers in the sample.</p>	
            </summary>	
            <param name="dwBufferCountRef"><dd> <p>Receives the number of buffers in the sample. A sample might contain zero buffers.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::GetBufferCount']/*"/>	
            <msdn-id>ms705655</msdn-id>	
            <unmanaged>HRESULT IMFSample::GetBufferCount([Out] unsigned int* pdwBufferCount)</unmanaged>	
            <unmanaged-short>IMFSample::GetBufferCount</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.GetBufferByIndex(System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets a buffer from the sample, by index.</p><p> </p><p><strong>Note</strong>??In most cases, it is safer to use the <strong><see cref="M:SharpDX.MediaFoundation.Sample.ConvertToContiguousBuffer"/></strong> method.  If the sample contains more than one buffer, the <strong>ConvertToContiguousBuffer</strong> method replaces them with a single buffer, copies the original data into that buffer, and returns the new buffer to the caller. The copy operation occurs at most once. On subsequent calls, no data is copied.</p>	
            </summary>	
            <param name="dwIndex">No documentation.</param>	
            <returns>No documentation.</returns>	
            <remarks>	
            <p>A sample might contain more than one buffer. Use the <strong>GetBufferByIndex</strong> method to enumerate the individual buffers.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::GetBufferByIndex']/*"/>	
            <msdn-id>ms697014</msdn-id>	
            <unmanaged>HRESULT IMFSample::GetBufferByIndex([In] unsigned int dwIndex,[Out] IMFMediaBuffer** ppBuffer)</unmanaged>	
            <unmanaged-short>IMFSample::GetBufferByIndex</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.ConvertToContiguousBuffer">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Converts a sample with multiple buffers into a sample with a single buffer. </p>	
            </summary>	
            <returns><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaBuffer"/></strong> interface. The caller must release the interface.</p> </dd></returns>	
            <remarks>	
            <p>If the sample contains more than one buffer, this method copies the data from the original buffers into a new buffer, and replaces the original buffer list with the new buffer. The new buffer is returned in the <em>ppBuffer</em> parameter.</p><p> If the sample contains a single buffer, this method returns a reference to the original buffer. In typical use, most samples do not contain multiple buffers.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::ConvertToContiguousBuffer']/*"/>	
            <msdn-id>ms698917</msdn-id>	
            <unmanaged>HRESULT IMFSample::ConvertToContiguousBuffer([Out] IMFMediaBuffer** ppBuffer)</unmanaged>	
            <unmanaged-short>IMFSample::ConvertToContiguousBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.AddBuffer(SharpDX.MediaFoundation.MediaBuffer)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Adds a buffer to the end of the list of buffers in the sample. </p>	
            </summary>	
            <param name="bufferRef"><dd> <p>Pointer to the buffer's <strong><see cref="T:SharpDX.MediaFoundation.MediaBuffer"/></strong> interface.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_INVALIDARG</strong></dt> </dl> </td><td> <p><c>null</c> reference argument.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>For uncompressed video data, each buffer should contain a single video frame, and samples should not contain multiple frames. In general, storing multiple buffers in a sample is discouraged.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::AddBuffer']/*"/>	
            <msdn-id>ms697465</msdn-id>	
            <unmanaged>HRESULT IMFSample::AddBuffer([In] IMFMediaBuffer* pBuffer)</unmanaged>	
            <unmanaged-short>IMFSample::AddBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.RemoveBufferByIndex(System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Removes a buffer at a specified index from the sample.</p>	
            </summary>	
            <param name="dwIndex"><dd> <p>Index of the buffer. To find the number of buffers in the sample, call <strong><see cref="M:SharpDX.MediaFoundation.Sample.GetBufferCount(System.Int32@)"/></strong>. Buffers are indexed from zero.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::RemoveBufferByIndex']/*"/>	
            <msdn-id>ms705646</msdn-id>	
            <unmanaged>HRESULT IMFSample::RemoveBufferByIndex([In] unsigned int dwIndex)</unmanaged>	
            <unmanaged-short>IMFSample::RemoveBufferByIndex</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.RemoveAllBuffers">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Removes all of the buffers from the sample.</p>	
            </summary>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::RemoveAllBuffers']/*"/>	
            <msdn-id>ms703108</msdn-id>	
            <unmanaged>HRESULT IMFSample::RemoveAllBuffers()</unmanaged>	
            <unmanaged-short>IMFSample::RemoveAllBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.GetTotalLength(System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the total length of the valid data in all of the buffers in the sample. The length is calculated as the sum of the values retrieved by the <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.GetCurrentLength(System.Int32@)"/></strong> method.</p>	
            </summary>	
            <param name="cbTotalLengthRef">No documentation.</param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::GetTotalLength']/*"/>	
            <msdn-id>ms704584</msdn-id>	
            <unmanaged>HRESULT IMFSample::GetTotalLength([Out] unsigned int* pcbTotalLength)</unmanaged>	
            <unmanaged-short>IMFSample::GetTotalLength</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Sample.CopyToBuffer(SharpDX.MediaFoundation.MediaBuffer)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Copies the sample data to a buffer. This method concatenates the valid data from all of the buffers of the sample, in order.</p>	
            </summary>	
            <param name="bufferRef"><dd> <p>Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.MediaBuffer"/></strong> interface of the destination buffer. The buffer must be large enough to hold the valid data in the sample. To get the size of the data in the sample, call <strong><see cref="M:SharpDX.MediaFoundation.Sample.GetTotalLength(System.Int32@)"/></strong>.</p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p>The method succeeded.</p> </td></tr> <tr><td> <dl> <dt><strong>E_INVALIDARG</strong></dt> </dl> </td><td> <p><c>null</c> reference argument.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_BUFFERTOOSMALL</strong></dt> </dl> </td><td> <p>The buffer is not large enough to contain the data.</p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::CopyToBuffer']/*"/>	
            <msdn-id>ms703119</msdn-id>	
            <unmanaged>HRESULT IMFSample::CopyToBuffer([In] IMFMediaBuffer* pBuffer)</unmanaged>	
            <unmanaged-short>IMFSample::CopyToBuffer</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.Sample.SampleFlags">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves flags associated with the sample.</p><p>Currently no flags are defined. Instead, metadata for samples is defined using attributes. To get attibutes from a sample, use the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface, which <strong><see cref="T:SharpDX.MediaFoundation.Sample"/></strong> inherits. For a list of sample attributes, see Sample Attributes.</p>	
            </summary>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::GetSampleFlags']/*"/>	
            <msdn-id>ms701587</msdn-id>	
            <unmanaged>GetSampleFlags / SetSampleFlags</unmanaged>	
            <unmanaged-short>GetSampleFlags</unmanaged-short>	
            <unmanaged>HRESULT IMFSample::GetSampleFlags([Out] unsigned int* pdwSampleFlags)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.Sample.SampleTime">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the presentation time of the sample.</p>	
            </summary>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::GetSampleTime']/*"/>	
            <msdn-id>ms705645</msdn-id>	
            <unmanaged>GetSampleTime / SetSampleTime</unmanaged>	
            <unmanaged-short>GetSampleTime</unmanaged-short>	
            <unmanaged>HRESULT IMFSample::GetSampleTime([Out] longlong* phnsSampleTime)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.Sample.SampleDuration">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the duration of the sample.</p>	
            </summary>	
            <remarks>	
            <p>If the sample contains more than one buffer, the duration includes the data from all of the buffers.</p><p>If the retrieved duration is zero, or if the method returns <strong>MF_E_NO_SAMPLE_DURATION</strong>, the duration is unknown. In that case, it might be possible to calculate the duration from the media type?for example, by using the video frame rate or the audio sampling rate.</p><p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::GetSampleDuration']/*"/>	
            <msdn-id>ms703056</msdn-id>	
            <unmanaged>GetSampleDuration / SetSampleDuration</unmanaged>	
            <unmanaged-short>GetSampleDuration</unmanaged-short>	
            <unmanaged>HRESULT IMFSample::GetSampleDuration([Out] longlong* phnsSampleDuration)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.Sample.BufferCount">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the number of buffers in the sample.</p>	
            </summary>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::GetBufferCount']/*"/>	
            <msdn-id>ms705655</msdn-id>	
            <unmanaged>GetBufferCount</unmanaged>	
            <unmanaged-short>GetBufferCount</unmanaged-short>	
            <unmanaged>HRESULT IMFSample::GetBufferCount([Out] unsigned int* pdwBufferCount)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.Sample.TotalLength">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Retrieves the total length of the valid data in all of the buffers in the sample. The length is calculated as the sum of the values retrieved by the <strong><see cref="M:SharpDX.MediaFoundation.MediaBuffer.GetCurrentLength(System.Int32@)"/></strong> method.</p>	
            </summary>	
            <remarks>	
            <p>This interface is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSample::GetTotalLength']/*"/>	
            <msdn-id>ms704584</msdn-id>	
            <unmanaged>GetTotalLength</unmanaged>	
            <unmanaged-short>GetTotalLength</unmanaged-short>	
            <unmanaged>HRESULT IMFSample::GetTotalLength([Out] unsigned int* pcbTotalLength)</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.SampleOutputStream">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Begins an asynchronous request to write a media sample to the stream.</p>	
            </summary>	
            <remarks>	
            <p>When the sample has been written to the stream, the callback object's <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method is called. At that point, the caller should call <strong><see cref="M:SharpDX.MediaFoundation.SampleOutputStream.EndWriteSample(SharpDX.MediaFoundation.AsyncResult)"/></strong> to complete the asynchronous request.  </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSampleOutputStream']/*"/>	
            <msdn-id>hh448052</msdn-id>	
            <unmanaged>IMFSampleOutputStream</unmanaged>	
            <unmanaged-short>IMFSampleOutputStream</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.SampleOutputStream.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.SampleOutputStream"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.SampleOutputStream.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.SampleOutputStream">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.SampleOutputStream"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.SampleOutputStream.BeginWriteSample(SharpDX.MediaFoundation.Sample,SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Begins an asynchronous request to write a media sample to the stream.</p>	
            </summary>	
            <param name="sampleRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.MediaFoundation.Sample"/></strong> interface of the sample.</p> </dd></param>	
            <param name="callbackRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncCallback"/></strong> interface of a callback object. The caller must implement this interface.</p> </dd></param>	
            <param name="unkStateRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.ComObject"/></strong> interface of a state object, defined by the caller. This parameter can be <strong><c>null</c></strong>. You can use this object to hold state information. The object is returned to the caller when the callback is invoked.  </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>When the sample has been written to the stream, the callback object's <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method is called. At that point, the caller should call <strong><see cref="M:SharpDX.MediaFoundation.SampleOutputStream.EndWriteSample(SharpDX.MediaFoundation.AsyncResult)"/></strong> to complete the asynchronous request.  </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSampleOutputStream::BeginWriteSample']/*"/>	
            <msdn-id>hh448052</msdn-id>	
            <unmanaged>HRESULT IMFSampleOutputStream::BeginWriteSample([In, Optional] IMFSample* pSample,[In, Optional] IMFAsyncCallback* pCallback,[In, Optional] IUnknown* punkState)</unmanaged>	
            <unmanaged-short>IMFSampleOutputStream::BeginWriteSample</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.SampleOutputStream.EndWriteSample(SharpDX.MediaFoundation.AsyncResult)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Completes an asynchronous request to write a media sample to the stream.</p>	
            </summary>	
            <param name="resultRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.MediaFoundation.AsyncResult"/></strong> interface. Pass in the same reference that your callback object received in the <strong><see cref="M:SharpDX.MediaFoundation.AsyncCallback.Invoke(SharpDX.MediaFoundation.AsyncResult)"/></strong> method. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>Call this method when the <strong><see cref="M:SharpDX.MediaFoundation.SampleOutputStream.BeginWriteSample(SharpDX.MediaFoundation.Sample,SharpDX.MediaFoundation.AsyncCallback,SharpDX.ComObject)"/></strong> method completes asynchronously.  </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSampleOutputStream::EndWriteSample']/*"/>	
            <msdn-id>hh448053</msdn-id>	
            <unmanaged>HRESULT IMFSampleOutputStream::EndWriteSample([In, Optional] IMFAsyncResult* pResult)</unmanaged>	
            <unmanaged-short>IMFSampleOutputStream::EndWriteSample</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.SampleOutputStream.Close">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p>These are the API elements for use in desktop apps that are new for Windows?8 Consumer Preview:</p><p> </p><ul> <li>Win32/{{COM}}</li> <li>Windows</li> </ul><p>For a list of technologies that are new for desktop apps, see Windows 8 Technologies.</p><p>For info about the APIs that can be used in Metro style apps, see APIs for Metro style apps.</p>	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFSampleOutputStream::Close']/*"/>	
            <msdn-id>hh405363</msdn-id>	
            <unmanaged>HRESULT IMFSampleOutputStream::Close()</unmanaged>	
            <unmanaged-short>IMFSampleOutputStream::Close</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.Transform">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Implemented by all Media Foundation Transforms (MFTs).</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform']/*"/>	
            <msdn-id>ms696260</msdn-id>	
            <unmanaged>IMFTransform</unmanaged>	
            <unmanaged-short>IMFTransform</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.Transform"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.op_Explicit(System.IntPtr)~SharpDX.MediaFoundation.Transform">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.MediaFoundation.Transform"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetStreamLimits(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets the minimum and maximum number of input and output streams for this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwInputMinimumRef"><dd> <p> Receives the minimum number of input streams. </p> </dd></param>	
            <param name="dwInputMaximumRef"><dd> <p> Receives the maximum number of input streams. If there is no maximum, receives the value <strong>MFT_STREAMS_UNLIMITED</strong>. </p> </dd></param>	
            <param name="dwOutputMinimumRef"><dd> <p> Receives the minimum number of output streams. </p> </dd></param>	
            <param name="dwOutputMaximumRef"><dd> <p> Receives the maximum number of output streams. If there is no maximum, receives the value <strong>MFT_STREAMS_UNLIMITED</strong>. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> If the MFT has a fixed number of streams, the minimum and maximum values are the same. </p><p> It is not recommended to create an MFT that supports zero inputs or zero outputs. An MFT with no inputs or no outputs may not be compatible with the rest of the Media Foundation pipeline. You should create a Media Foundation sink or source for this purpose instead. </p><p> When an MFT is first created, it is not guaranteed to have the minimum number of streams. To find the actual number of streams, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamCount(System.Int32@,System.Int32@)"/></strong>. </p><p> This method should not be called with <strong><c>null</c></strong> parameters, although in practice some implementations may allow <strong><c>null</c></strong> parameters. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTGetStreamLimits</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetStreamLimits']/*"/>	
            <msdn-id>ms697040</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetStreamLimits([Out] unsigned int* pdwInputMinimum,[Out] unsigned int* pdwInputMaximum,[Out] unsigned int* pdwOutputMinimum,[Out] unsigned int* pdwOutputMaximum)</unmanaged>	
            <unmanaged-short>IMFTransform::GetStreamLimits</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetStreamCount(System.Int32@,System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets the current number of input and output streams on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="cInputStreamsRef"><dd> <p> Receives the number of input streams. </p> </dd></param>	
            <param name="cOutputStreamsRef"><dd> <p> Receives the number of output streams. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p> The number of streams includes unselected streams?that is, streams with no media type or a <strong><c>null</c></strong> media type.</p><p> This method should not be called with <strong><c>null</c></strong> parameters, although in practice some implementations may allow <strong><c>null</c></strong> parameters. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTGetStreamCount</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetStreamCount']/*"/>	
            <msdn-id>ms697018</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetStreamCount([Out] unsigned int* pcInputStreams,[Out] unsigned int* pcOutputStreams)</unmanaged>	
            <unmanaged-short>IMFTransform::GetStreamCount</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets the stream identifiers for the input and output streams on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwInputIDArraySize"><dd> <p> Number of elements in the <em>pdwInputIDs</em> array. </p> </dd></param>	
            <param name="dwInputIDsRef"><dd> <p> Pointer to an array allocated by the caller. The method fills the array with the input stream identifiers. The array size must be at least equal to the number of input streams. To get the number of input streams, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamCount(System.Int32@,System.Int32@)"/></strong>. </p> <p>If the caller passes an array that is larger than the number of input streams, the MFT must not write values into the extra array entries.</p> </dd></param>	
            <param name="dwOutputIDArraySize"><dd> <p> Number of elements in the <em>pdwOutputIDs</em> array. </p> </dd></param>	
            <param name="dwOutputIDsRef"><dd> <p> Pointer to an array allocated by the caller. The method fills the array with the output stream identifiers. The array size must be at least equal to the number of output streams. To get the number of output streams, call <strong>GetStreamCount</strong>. </p> <p>If the caller passes an array that is larger than the number of output streams, the MFT must not write values into the extra array entries.</p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_NOTIMPL</strong></dt> </dl> </td><td> <p> Not implemented. See Remarks. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_BUFFERTOOSMALL</strong></dt> </dl> </td><td> <p> One or both of the arrays is too small. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> Stream identifiers are necessary because some MFTs can add or remove streams, so the index of a stream may not be unique. Therefore, <strong><see cref="T:SharpDX.MediaFoundation.Transform"/></strong> methods that operate on streams take stream identifiers. </p><p>This method can return <strong>E_NOTIMPL</strong> if both of the following conditions are true:</p><ul> <li> The transform has a fixed number of streams. </li> <li> The streams are numbered consecutively from 0 to n ? 1, where n is the number of input streams or output streams. In other words, the first input stream is 0, the second is 1, and so on; and the first output stream is 0, the second is 1, and so on. </li> </ul><p>This method must be implemented if any of the following conditions is true:</p><ul> <li> The MFT can add or remove output streams. </li> <li> The MFT allows the client to add or remove input streams. </li> <li> The stream identifiers are not consecutive. </li> </ul><p> All input stream identifiers must be unique within an MFT, and all output stream identifiers must be unique. However, an input stream and an output stream can share the same identifier. </p><p> If the client adds an input stream, the client assigns the identifier, so the MFT must allow arbitrary identifiers, as long as they are unique. If the MFT creates an output stream, the MFT assigns the identifier. </p><p> By convention, if an MFT has exactly one fixed input stream and one fixed output stream, it should assign the identifier 0 to both streams. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTGetStreamIDs</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetStreamIDs']/*"/>	
            <msdn-id>ms693988</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetStreamIDs([In] unsigned int dwInputIDArraySize,[Out, Buffer] unsigned int* pdwInputIDs,[In] unsigned int dwOutputIDArraySize,[Out, Buffer] unsigned int* pdwOutputIDs)</unmanaged>	
            <unmanaged-short>IMFTransform::GetStreamIDs</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetInputStreamInfo(System.Int32,SharpDX.MediaFoundation.TInputStreamInformation@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets the buffer requirements and other information for an input stream on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwInputStreamID"><dd> <p> Input stream identifier. To get the list of stream identifiers, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong>. </p> </dd></param>	
            <param name="streamInfoRef"><dd> <p> Pointer to an <strong><see cref="T:SharpDX.MediaFoundation.TInputStreamInformation"/></strong> structure. The method fills the structure with information about the input stream. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream identifier. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>It is valid to call this method before setting the media types.</p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTGetInputStreamInfo</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetInputStreamInfo']/*"/>	
            <msdn-id>ms703894</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetInputStreamInfo([In] unsigned int dwInputStreamID,[Out] MFT_INPUT_STREAM_INFO* pStreamInfo)</unmanaged>	
            <unmanaged-short>IMFTransform::GetInputStreamInfo</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetOutputStreamInfo(System.Int32,SharpDX.MediaFoundation.TOutputStreamInformation@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets the buffer requirements and other information for an output stream on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwOutputStreamID"><dd> <p> Output stream identifier. To get the list of stream identifiers, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong>. </p> </dd></param>	
            <param name="streamInfoRef"><dd> <p> Pointer to an <strong><see cref="T:SharpDX.MediaFoundation.TOutputStreamInformation"/></strong> structure. The method fills the structure with information about the output stream. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream number. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>It is valid to call this method before setting the media types.</p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTGetOutputStreamInfo</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetOutputStreamInfo']/*"/>	
            <msdn-id>ms693880</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetOutputStreamInfo([In] unsigned int dwOutputStreamID,[Out] MFT_OUTPUT_STREAM_INFO* pStreamInfo)</unmanaged>	
            <unmanaged-short>IMFTransform::GetOutputStreamInfo</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetAttributes(SharpDX.MediaFoundation.MediaAttributes@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets the global attribute store for this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="attributesRef"><dd> <p> Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface. The caller must release the interface. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_NOTIMPL</strong></dt> </dl> </td><td> <p> The MFT does not support attributes. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> Use the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> reference retrieved by this method to get or set attributes that apply to the entire MFT. To get the attribute store for an input stream, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetInputStreamAttributes(System.Int32,SharpDX.MediaFoundation.MediaAttributes@)"/></strong>. To get the attribute store for an output stream, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetOutputStreamAttributes(System.Int32,SharpDX.MediaFoundation.MediaAttributes@)"/></strong>. </p><p> Implementation of this method is optional unless the MFT needs to support a particular set of attributes. Exception: Hardware-based MFTs must implement this method. See Hardware MFTs.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetAttributes']/*"/>	
            <msdn-id>ms703141</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetAttributes([Out] IMFAttributes** pAttributes)</unmanaged>	
            <unmanaged-short>IMFTransform::GetAttributes</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetInputStreamAttributes(System.Int32,SharpDX.MediaFoundation.MediaAttributes@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets the attribute store for an input stream on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwInputStreamID"><dd> <p> Input stream identifier. To get the list of stream identifiers, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong>. </p> </dd></param>	
            <param name="attributesRef"><dd> <p> Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface. The caller must release the interface. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_NOTIMPL</strong></dt> </dl> </td><td> <p> The MFT does not support input stream attributes. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream identifier. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> Implementation of this method is optional unless the MFT needs to support a particular set of attributes. </p><p> To get the attribute store for the entire MFT, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetAttributes(SharpDX.MediaFoundation.MediaAttributes@)"/></strong>. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetInputStreamAttributes']/*"/>	
            <msdn-id>ms695366</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetInputStreamAttributes([In] unsigned int dwInputStreamID,[Out] IMFAttributes** pAttributes)</unmanaged>	
            <unmanaged-short>IMFTransform::GetInputStreamAttributes</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetOutputStreamAttributes(System.Int32,SharpDX.MediaFoundation.MediaAttributes@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets the attribute store for an output stream on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwOutputStreamID"><dd> <p> Output stream identifier. To get the list of stream identifiers, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong>. </p> </dd></param>	
            <param name="attributesRef"><dd> <p> Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface. The caller must release the interface. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_NOTIMPL</strong></dt> </dl> </td><td> <p> The MFT does not support output stream attributes. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream identifier. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> Implementation of this method is optional unless the MFT needs to support a particular set of attributes. </p><p> To get the attribute store for the entire MFT, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetAttributes(SharpDX.MediaFoundation.MediaAttributes@)"/></strong>. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetOutputStreamAttributes']/*"/>	
            <msdn-id>ms703886</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetOutputStreamAttributes([In] unsigned int dwOutputStreamID,[Out] IMFAttributes** pAttributes)</unmanaged>	
            <unmanaged-short>IMFTransform::GetOutputStreamAttributes</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.DeleteInputStream(System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Removes an input stream from this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwStreamID"><dd> <p> Identifier of the input stream to remove. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_NOTIMPL</strong></dt> </dl> </td><td> <p> The transform has a fixed number of input streams. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDREQUEST</strong></dt> </dl> </td><td> <p> The stream is not removable, or the transform currently has the minimum number of input streams it can support. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream identifier. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_INPUT_REMAINING</strong></dt> </dl> </td><td> <p> The transform has unprocessed input buffers for the specified stream. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> If the transform has a fixed number of input streams, the method returns <strong>E_NOTIMPL</strong>. </p><p> An MFT might support this method but not allow certain input streams to be removed. If an input stream can be removed, the <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetInputStreamInfo(System.Int32,SharpDX.MediaFoundation.TInputStreamInformation@)"/></strong> method returns the <strong><see cref="F:SharpDX.MediaFoundation.MftInputStreamInformationFlags.MftInputStreamRemovable"/></strong> flag for that stream. Otherwise, the stream cannot be removed, and the method returns <strong>MF_E_INVALIDREQUEST</strong>. The method also fails if the MFT currently has the minimum number of input streams that it requires. To find the minimum number of streams, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamLimits(System.Int32@,System.Int32@,System.Int32@,System.Int32@)"/></strong>. </p><p> If the transform still has unprocessed input for that stream, the method might succeed or it might return <strong>MF_E_TRANSFORM_INPUT_REMAINING</strong>. If the method succeeds, the MFT will continue to process the remaining input after the stream is removed. If the method returns <strong>MF_E_TRANSFORM_INPUT_REMAINING</strong>, you must clear the input buffers before removing the stream. To clear the input buffers, either call <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong> or else call <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessMessage(SharpDX.MediaFoundation.TMessageType,System.IntPtr)"/></strong> with the <strong><see cref="F:SharpDX.MediaFoundation.TMessageType.CommandFlush"/></strong> to flush the MFT. Then call the <strong>DeleteInputStream</strong> again. An MFT should never discard input buffers when <strong>DeleteInputStream</strong> is called. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTDeleteInputStream</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::DeleteInputStream']/*"/>	
            <msdn-id>ms703159</msdn-id>	
            <unmanaged>HRESULT IMFTransform::DeleteInputStream([In] unsigned int dwStreamID)</unmanaged>	
            <unmanaged-short>IMFTransform::DeleteInputStream</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.AddInputStreams(System.Int32,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Adds one or more new input streams to this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="cStreams"><dd> <p> Number of streams to add. </p> </dd></param>	
            <param name="adwStreamIDs"><dd> <p> Array of stream identifiers. The new stream identifiers must not match any existing input streams. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_INVALIDARG</strong></dt> </dl> </td><td> <p> Invalid argument. </p> </td></tr> <tr><td> <dl> <dt><strong>E_NOTIMPL</strong></dt> </dl> </td><td> <p> The MFT has a fixed number of input streams. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> If the new streams exceed the maximum number of input streams for this transform, the method returns <strong>E_INVALIDARG.</strong> To find the maximum number of input streams, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamLimits(System.Int32@,System.Int32@,System.Int32@,System.Int32@)"/></strong>. </p><p> If any of the new stream identifiers conflicts with an existing input stream, the method returns <strong>E_INVALIDARG</strong>. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTAddInputStreams</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::AddInputStreams']/*"/>	
            <msdn-id>ms696211</msdn-id>	
            <unmanaged>HRESULT IMFTransform::AddInputStreams([In] unsigned int cStreams,[In] unsigned int* adwStreamIDs)</unmanaged>	
            <unmanaged-short>IMFTransform::AddInputStreams</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetInputAvailableType(System.Int32,System.Int32,SharpDX.MediaFoundation.MediaType@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets an available media type for an input stream on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwInputStreamID"><dd> <p> Input stream identifier. To get the list of stream identifiers, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong>. </p> </dd></param>	
            <param name="dwTypeIndex"><dd> <p> Index of the media type to retrieve. Media types are indexed from zero and returned in approximate order of preference. </p> </dd></param>	
            <param name="typeOut"><dd> <p> Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaType"/></strong> interface. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_NOTIMPL</strong></dt> </dl> </td><td> <p> The MFT does not have a list of available input types. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream identifier. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_NO_MORE_TYPES</strong></dt> </dl> </td><td> <p> The <em>dwTypeIndex</em> parameter is out of range. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong></dt> </dl> </td><td> <p> You must set the output types before setting the input types. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> The MFT defines a list of available media types for each input stream and orders them by preference. This method enumerates the available media types for an input stream. To enumerate the available types, increment <em>dwTypeIndex</em> until the method returns <strong>MF_E_NO_MORE_TYPES</strong>. </p><p> Setting the media type on one stream might change the available types for another stream, or change the preference order. However, an MFT is not required to update the list of available types dynamically. The only guaranteed way to test whether you can set a particular input type is to call <strong><see cref="M:SharpDX.MediaFoundation.Transform.SetInputType(System.Int32,SharpDX.MediaFoundation.MediaType,System.Int32)"/></strong>. </p><p> In some cases, an MFT cannot return a list of input types until one or more output types are set. If so, the method returns <strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong>. </p><p> An MFT is not required to implement this method. However, most MFTs should implement this method, unless the supported types are simple and can be discovered through the <strong>MFTGetInfo</strong> function.</p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTGetInputAvailableType</strong>. See Creating Hybrid DMO/MFT Objects.</p>Implementation Notes<p>If the MFT stores a media type internally, the MFT should return a clone of the media  type, not a reference to the original type. Otherwise, the caller might modify the type and alter the internal state of the MFT.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetInputAvailableType']/*"/>	
            <msdn-id>ms704814</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetInputAvailableType([In] unsigned int dwInputStreamID,[In] unsigned int dwTypeIndex,[Out] IMFMediaType** ppType)</unmanaged>	
            <unmanaged-short>IMFTransform::GetInputAvailableType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetOutputAvailableType(System.Int32,System.Int32,SharpDX.MediaFoundation.MediaType@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets an available media type for an output stream on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwOutputStreamID"><dd> <p> Output stream identifier. To get the list of stream identifiers, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong>. </p> </dd></param>	
            <param name="dwTypeIndex"><dd> <p> Index of the media type to retrieve. Media types are indexed from zero and returned in approximate order of preference. </p> </dd></param>	
            <param name="typeOut"><dd> <p> Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaType"/></strong> interface. The caller must release the interface. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_NOTIMPL</strong></dt> </dl> </td><td> <p> The MFT does not have a list of available output types. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream identifier. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_NO_MORE_TYPES</strong></dt> </dl> </td><td> <p> The <em>dwTypeIndex</em> parameter is out of range. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong></dt> </dl> </td><td> <p> You must set the input types before setting the output types. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> The MFT defines a list of available media types for each output stream and orders them by preference. This method enumerates the available media types for an output stream. To enumerate the available types, increment <em>dwTypeIndex</em> until the method returns MF_<strong>E_NO_MORE_TYPES</strong>. </p><p> Setting the media type on one stream can change the available types for another stream (or change the preference order). However, an MFT is not required to update the list of available types dynamically. The only guaranteed way to test whether you can set a particular input type is to call <strong><see cref="M:SharpDX.MediaFoundation.Transform.SetOutputType(System.Int32,SharpDX.MediaFoundation.MediaType,System.Int32)"/></strong>. </p><p> In some cases, an MFT cannot return a list of output types until one or more input types are set. If so, the method returns <strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong>. </p><p> An MFT is not required to implement this method. However, most MFTs should implement this method, unless the supported types are simple and can be discovered through the <strong>MFTGetInfo</strong> function. </p><p> This method can return a <em>partial</em> media type. A partial media type contains an incomplete description of a format, and is used to provide a hint to the caller. For example, a partial type might include just the major type and subtype GUIDs. However, after the client sets the input types on the MFT, the MFT should generally return at least one complete output type, which can be used without further modification. For more information, see Complete and Partial Media Types.</p><p>Some MFTs cannot provide an accurate list of output types until the MFT receives the first input sample. For example, the MFT might need to read the first packet header to deduce the format. An MFT should handle this situation as follows:</p><ol> <li> Before the MFT receives any input, it offers a list of one or more output types that it could possibly produce. For example, an MPEG-2 decoder might return a media type that describes the MPEG-2 main profile/main level. </li> <li> The client selects one of these types (generally the first) and sets it on the output stream. </li> <li> The client delivers the first input sample by calling <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessInput(System.Int32,SharpDX.MediaFoundation.Sample,System.Int32)"/></strong>. </li> <li> If the output type does not conform to the input data, the transform signals a format change in the <strong>ProcessOutput</strong> method. For more information about format changes, see <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong>. </li> <li> The calls <strong>GetOutputAvailableType</strong> again. At this point, the method should return an updated list of types that reflects the input data. </li> <li> The client selects a new output type from this list and calls <strong>SetOutputType</strong>. </li> </ol><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTGetOutputAvailableType</strong>. See Creating Hybrid DMO/MFT Objects.</p>Implementation Notes<p>If the MFT stores a media type internally, the MFT should return a clone of the media  type, not a reference to the original type. Otherwise, the caller might modify the type and alter the internal state of the MFT.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetOutputAvailableType']/*"/>	
            <msdn-id>ms703812</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetOutputAvailableType([In] unsigned int dwOutputStreamID,[In] unsigned int dwTypeIndex,[Out] IMFMediaType** ppType)</unmanaged>	
            <unmanaged-short>IMFTransform::GetOutputAvailableType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.SetInputType(System.Int32,SharpDX.MediaFoundation.MediaType,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Sets, tests, or clears the media type for an input stream on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwInputStreamID"><dd> <p> Input stream identifier. To get the list of stream identifiers, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong>. </p> </dd></param>	
            <param name="typeRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.MediaType"/></strong> interface, or <strong><c>null</c></strong>. </p> </dd></param>	
            <param name="dwFlags"><dd> <p> Zero or more flags from the <strong>_MFT_SET_TYPE_FLAGS</strong> enumeration. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDMEDIATYPE</strong></dt> </dl> </td><td> <p> The MFT cannot use the proposed media type. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream identifier. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDTYPE</strong></dt> </dl> </td><td> <p> The proposed type is not valid. This error code indicates that the media type itself is not configured correctly; for example, it might contain mutually contradictory attributes. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_CANNOT_CHANGE_MEDIATYPE_WHILE_PROCESSING</strong></dt> </dl> </td><td> <p> The MFT cannot switch types while processing data. Try draining or flushing the MFT. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong></dt> </dl> </td><td> <p> You must set the output types before setting the input types. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_UNSUPPORTED_D3D_TYPE</strong></dt> </dl> </td><td> <p> The MFT could not find a suitable DirectX Video Acceleration (DXVA) configuration. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This method can be used to set, test without setting, or clear the media type:</p><ul> <li> To set the media type, set <em>dwFlags</em> to zero and set <em>pType</em> to a non-<strong><c>null</c></strong> reference that specifies the media type. </li> <li> To test the media type without setting it, set <em>dwFlags</em> to <strong><see cref="F:SharpDX.MediaFoundation.MftSetTypeFlags.MftSetTypeTestOnly"/></strong> and set <em>pType</em> to a non-<strong><c>null</c></strong> reference that specifies the media type. If the media type is acceptable, the method return <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns <strong>MF_E_INVALIDMEDIATYPE</strong>. Regardless of the return value, the current media type does not change. </li> <li> To clear the media type, set <em>pType</em> to <strong><c>null</c></strong>. </li> </ul><p> Setting the media type on one stream may change the acceptable types on another stream. </p><p> An MFT may require the caller to set one or more output types before setting the input type. If so, the method returns <strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong>. </p><p> If the MFT supports DirectX Video Acceleration (DXVA) but is unable to find a suitable DXVA configuration (for example, if the graphics driver does not have the right capabilities), the method should return <strong>MF_E_UNSUPPORTED_D3D_TYPE</strong>. For more information, see Supporting DXVA 2.0 in Media Foundation. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTSetInputType</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::SetInputType']/*"/>	
            <msdn-id>ms700113</msdn-id>	
            <unmanaged>HRESULT IMFTransform::SetInputType([In] unsigned int dwInputStreamID,[In, Optional] IMFMediaType* pType,[In] unsigned int dwFlags)</unmanaged>	
            <unmanaged-short>IMFTransform::SetInputType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.SetOutputType(System.Int32,SharpDX.MediaFoundation.MediaType,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Sets, tests, or clears the media type for an output stream on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwOutputStreamID"><dd> <p> Output stream identifier. To get the list of stream identifiers, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong>. </p> </dd></param>	
            <param name="typeRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.MediaType"/></strong> interface, or <strong><c>null</c></strong>. </p> </dd></param>	
            <param name="dwFlags"><dd> <p> Zero or more flags from the <strong>_MFT_SET_TYPE_FLAGS</strong> enumeration. </p> </dd></param>	
            <returns><p>The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table.</p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDMEDIATYPE</strong></dt> </dl> </td><td> <p> The transform cannot use the proposed media type. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream identifier. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDTYPE</strong></dt> </dl> </td><td> <p> The proposed type is not valid. This error code indicates that the media type itself is not configured correctly; for example, it might contain mutually contradictory flags. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_CANNOT_CHANGE_MEDIATYPE_WHILE_PROCESSING</strong></dt> </dl> </td><td> <p> The MFT cannot switch types while processing data. Try draining or flushing the MFT. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong></dt> </dl> </td><td> <p> You must set the input types before setting the output types. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_UNSUPPORTED_D3D_TYPE</strong></dt> </dl> </td><td> <p> The MFT could not find a suitable DirectX Video Acceleration (DXVA) configuration. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p>This method can be used to set, test without setting, or clear the media type:</p><ul> <li> To set the media type, set <em>dwFlags</em> to zero and set <em>pType</em> to a non-<strong><c>null</c></strong> reference that specifies the media type. </li> <li> To test the media type without setting it, set <em>dwFlags</em> to <strong><see cref="F:SharpDX.MediaFoundation.MftSetTypeFlags.MftSetTypeTestOnly"/></strong> and set <em>pType</em> to a non-<strong><c>null</c></strong> reference that specifies the media type. If the media type is acceptable, the method return <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns <strong>MF_E_INVALIDMEDIATYPE</strong>. Regardless of the return value, the current media type does not change. </li> <li> To clear the media type, set <em>pType</em> to <strong><c>null</c></strong>. </li> </ul><p> Setting the media type on one stream may change the acceptable types on another stream. </p><p> An MFT may require the caller to set one or more input types before setting the output type. If so, the method returns <strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong>. </p><p>If the MFT supports DirectX Video Acceleration (DXVA) but is unable to find a suitable DXVA configuration (for example, if the graphics driver does not have the right capabilities), the method should return <strong>MF_E_UNSUPPORTED_D3D_TYPE</strong>. For more information, see Supporting DXVA 2.0 in Media Foundation.</p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTSetOutputType</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::SetOutputType']/*"/>	
            <msdn-id>ms702016</msdn-id>	
            <unmanaged>HRESULT IMFTransform::SetOutputType([In] unsigned int dwOutputStreamID,[In, Optional] IMFMediaType* pType,[In] unsigned int dwFlags)</unmanaged>	
            <unmanaged-short>IMFTransform::SetOutputType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetInputCurrentType(System.Int32,SharpDX.MediaFoundation.MediaType@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets the current media type for an input stream on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwInputStreamID"><dd> <p> Input stream identifier. To get the list of stream identifiers, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong>. </p> </dd></param>	
            <param name="typeOut"><dd> <p> Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaType"/></strong> interface. The caller must release the interface. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream identifier. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong></dt> </dl> </td><td> <p> The input media type has not been set. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> If the specified input stream does not yet have a media type, the method returns <strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong>. Most MFTs do not set any default media types when first created. Instead, the client must set the media type by calling <strong><see cref="M:SharpDX.MediaFoundation.Transform.SetInputType(System.Int32,SharpDX.MediaFoundation.MediaType,System.Int32)"/></strong>. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTGetInputCurrentType</strong>. See Creating Hybrid DMO/MFT Objects.</p>Implementation Notes<p>The MFT should return a clone of the media  type, not a reference to the original type. Otherwise, the caller might modify the type and alter the internal state of the MFT.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetInputCurrentType']/*"/>	
            <msdn-id>ms705607</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetInputCurrentType([In] unsigned int dwInputStreamID,[Out] IMFMediaType** ppType)</unmanaged>	
            <unmanaged-short>IMFTransform::GetInputCurrentType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetOutputCurrentType(System.Int32,SharpDX.MediaFoundation.MediaType@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets the current media type for an output stream on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwOutputStreamID"><dd> <p> Output stream identifier. To get the list of stream identifiers, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong>. </p> </dd></param>	
            <param name="typeOut"><dd> <p> Receives a reference to the <strong><see cref="T:SharpDX.MediaFoundation.MediaType"/></strong> interface. The caller must release the interface. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream identifier. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong></dt> </dl> </td><td> <p> The output media type has not been set. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> If the specified output stream does not yet have a media type, the method returns <strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong>. Most MFTs do not set any default media types when first created. Instead, the client must set the media type by calling <strong><see cref="M:SharpDX.MediaFoundation.Transform.SetOutputType(System.Int32,SharpDX.MediaFoundation.MediaType,System.Int32)"/></strong>. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTGetOutputCurrentType</strong>. See Creating Hybrid DMO/MFT Objects.</p>Implementation Notes<p>The MFT should return a clone of the media  type, not a reference to the original type. Otherwise, the caller might modify the type and alter the internal state of the MFT.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetOutputCurrentType']/*"/>	
            <msdn-id>ms696985</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetOutputCurrentType([In] unsigned int dwOutputStreamID,[Out] IMFMediaType** ppType)</unmanaged>	
            <unmanaged-short>IMFTransform::GetOutputCurrentType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetInputStatus(System.Int32,System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Queries whether an input stream on this Media Foundation transform (MFT) can accept more data. </p>	
            </summary>	
            <param name="dwInputStreamID"><dd> <p> Input stream identifier. To get the list of stream identifiers, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong>. </p> </dd></param>	
            <param name="dwFlagsRef"><dd> <p> Receives a member of the <strong>_MFT_INPUT_STATUS_FLAGS</strong> enumeration, or zero. If the value is <strong><see cref="F:SharpDX.MediaFoundation.MftInputStatusFlags.MftInputStatusAcceptData"/></strong>, the stream specified in <em>dwInputStreamID</em> can accept more input data. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream identifier. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong></dt> </dl> </td><td> <p> The media type is not set on one or more streams. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> If the method returns the <strong><see cref="F:SharpDX.MediaFoundation.MftInputStatusFlags.MftInputStatusAcceptData"/></strong> flag, you can deliver an input sample to the specified stream by calling <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessInput(System.Int32,SharpDX.MediaFoundation.Sample,System.Int32)"/></strong>. If the method succeeds but does not return any flags in the <em>pdwFlags</em> parameter, it means the input stream already has as much data as it can accept. </p><p> Use this method to test whether the input stream is ready to accept more data, without incurring the overhead of allocating a new sample and calling <strong>ProcessInput</strong>. </p><p> After the client has set valid media types on all of the streams, the MFT should always be in one of two states: Able to accept more input, or able to produce more output (or both). </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTGetInputStatus</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetInputStatus']/*"/>	
            <msdn-id>ms697478</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetInputStatus([In] unsigned int dwInputStreamID,[Out] unsigned int* pdwFlags)</unmanaged>	
            <unmanaged-short>IMFTransform::GetInputStatus</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.GetOutputStatus(System.Int32@)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Queries whether the Media Foundation transform (MFT) is ready to produce output data. </p>	
            </summary>	
            <param name="dwFlagsRef"><dd> <p> Receives a member of the <strong>_MFT_OUTPUT_STATUS_FLAGS</strong> enumeration, or zero. If the value is <strong><see cref="F:SharpDX.MediaFoundation.MftOutputStatusFlags.MftOutputStatusSampleReady"/></strong>, the MFT can produce an output sample. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_NOTIMPL</strong></dt> </dl> </td><td> <p> Not implemented. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong></dt> </dl> </td><td> <p> The media type is not set on one or more streams. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> If the method returns the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputStatusFlags.MftOutputStatusSampleReady"/></strong> flag, it means you can generate one or more output samples by calling <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong>. </p><p> MFTs are not required to implement this method. If the method returns <strong>E_NOTIMPL</strong>, you must call <strong>ProcessOutput</strong> to determine whether the transform has output data. </p><p> If the MFT has more than one output stream, but it does not produce samples at the same time for each stream, it can set the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputStatusFlags.MftOutputStatusSampleReady"/></strong> flag when just one stream is ready. However, if the MFT normally produces samples at the same time for each output stream, it should not set this flag until all streams are ready. </p><p> After the client has set valid media types on all of the streams, the MFT should always be in one of two states: Able to accept more input, or able to produce more output. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTGetOutputStatus</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetOutputStatus']/*"/>	
            <msdn-id>ms696269</msdn-id>	
            <unmanaged>HRESULT IMFTransform::GetOutputStatus([Out] unsigned int* pdwFlags)</unmanaged>	
            <unmanaged-short>IMFTransform::GetOutputStatus</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.SetOutputBounds(System.Int64,System.Int64)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Sets the range of time stamps the client needs for output. </p>	
            </summary>	
            <param name="hnsLowerBound"><dd> <p> Specifies the earliest time stamp. The Media Foundation transform (MFT) will accept input until it can produce an output sample that begins at this time; or until it can produce a sample that ends at this time or later. If there is no lower bound, use the value <strong>MFT_OUTPUT_BOUND_LOWER_UNBOUNDED</strong>. </p> </dd></param>	
            <param name="hnsUpperBound"><dd> <p> Specifies the latest time stamp. The MFT will not produce an output sample with time stamps later than this time. If there is no upper bound, use the value <strong>MFT_OUTPUT_BOUND_UPPER_UNBOUNDED</strong>. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_NOTIMPL</strong></dt> </dl> </td><td> <p> Not implemented. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong></dt> </dl> </td><td> <p> The media type is not set on one or more streams. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> This method can be used to optimize preroll, especially in formats that have gaps between time stamps, or formats where the data must start on a sync point, such as MPEG-2. Calling this method is optional, and implementation of this method by an MFT is optional. If the MFT does not implement the method, the return value is <strong>E_NOTIMPL</strong>.</p><p> If an MFT implements this method, it must limit its output data to the range of times specified by <em>hnsLowerBound</em> and <em>hnsUpperBound</em>. The MFT discards any input data that is not needed to produce output within this range. If the sample boundaries do not exactly match the range, the MFT should split the output samples, if possible. Otherwise, the output samples can overlap the range. </p><p> For example, suppose the output range is 100 to 150 milliseconds (ms), and the output format is video with each frame lasting 33 ms. A sample with a time stamp of 67 ms overlaps the range (67 + 33 = 100) and is produced as output. A sample with a time stamp of  66 ms is discarded (66 + 33 = 99). Similarly, a sample with a time stamp of 150 ms is produced as output, but a sample with a time stamp of 151 is discarded.</p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTSetOutputBounds</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::SetOutputBounds']/*"/>	
            <msdn-id>ms693812</msdn-id>	
            <unmanaged>HRESULT IMFTransform::SetOutputBounds([In] longlong hnsLowerBound,[In] longlong hnsUpperBound)</unmanaged>	
            <unmanaged-short>IMFTransform::SetOutputBounds</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.ProcessEvent(System.Int32,SharpDX.MediaFoundation.MediaEvent)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Sends an event to an input stream on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwInputStreamID"><dd> <p> Input stream identifier. To get the list of stream identifiers, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong>. </p> </dd></param>	
            <param name="eventRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.MediaEvent"/></strong> interface of an event object. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_NOTIMPL</strong></dt> </dl> </td><td> <p> Not implemented. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream number. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong></dt> </dl> </td><td> <p> The media type is not set on one or more streams. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_S_TRANSFORM_DO_NOT_PROPAGATE_EVENT</strong></dt> </dl> </td><td> <p> The pipeline should not propagate the event. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> An MFT can handle sending the event downstream, or it can let the pipeline do this, as indicated by the return value: </p><ul> <li><strong>E_NOTIMPL</strong>: The MFT ignores all events, and the pipeline should send all events downstream. After the pipeline receives this return value, it might not call <strong>ProcessEvent</strong> again. </li> <li><strong><see cref="F:SharpDX.Result.Ok"/></strong>: The MFT has examined this event, but the pipeline should send the event downstream. Internally, the MFT might respond to the event in some way, or it might ignore the event. </li> <li><strong>MF_S_TRANSFORM_DO_NOT_PROPAGATE_EVENT</strong>: The pipeline should not propagate this event downstream. Either the MFT will send the event downstream, or else the MFT will consume the event and not send it downstream. The MFT should only consume the event if the event should stop at this MFT and not travel any further downstream. But in most cases, the event should travel downstream. </li> </ul><p> To send the event downstream, the MFT adds the event to the collection object that is provided by the client in the <strong>pEvents</strong> member of the <strong><see cref="T:SharpDX.MediaFoundation.TOutputDataBuffer"/></strong> structure, when the client calls <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong>. </p><p> Events must be serialized with the samples that come before and after them. Attach the event to the output sample that follows the event. (The pipeline will process the event first, and then the sample.) If an MFT holds back one or more samples between calls to <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessInput(System.Int32,SharpDX.MediaFoundation.Sample,System.Int32)"/></strong> and <strong>ProcessOutput</strong>, the MFT should handle sending all events downstream, because in this situation the pipeline cannot correlate input samples with output samples. </p><p> If an MFT does not hold back samples and does not need to examine any events, it can return <strong>E_NOTIMPL</strong>. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTProcessEvent</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::ProcessEvent']/*"/>	
            <msdn-id>ms695394</msdn-id>	
            <unmanaged>HRESULT IMFTransform::ProcessEvent([In] unsigned int dwInputStreamID,[In, Optional] IMFMediaEvent* pEvent)</unmanaged>	
            <unmanaged-short>IMFTransform::ProcessEvent</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.ProcessMessage(SharpDX.MediaFoundation.TMessageType,System.IntPtr)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Sends a message to the Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="eMessage"><dd> <p> The message to send, specified as a member of the <strong><see cref="T:SharpDX.MediaFoundation.TMessageType"/></strong> enumeration. </p> </dd></param>	
            <param name="ulParam"><dd> <p> Message parameter. The meaning of this parameter depends on the message type. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream number. Applies to the <strong><see cref="F:SharpDX.MediaFoundation.TMessageType.NotifyEndOfStream"/></strong> message. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong></dt> </dl> </td><td> <p> The media type is not set on one or more streams. </p> </td></tr> </table><p>?</p></returns>	
            <remarks>	
            <p> Before calling this method, set the media types on all input and output streams. </p><p> The MFT might ignore certain message types. If so, the method returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. An error code indicates that the transform handles this message type but was unable to process the message in this instance. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTProcessMessage</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::ProcessMessage']/*"/>	
            <msdn-id>ms701863</msdn-id>	
            <unmanaged>HRESULT IMFTransform::ProcessMessage([In] MFT_MESSAGE_TYPE eMessage,[In] ULONG_PTR ulParam)</unmanaged>	
            <unmanaged-short>IMFTransform::ProcessMessage</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.ProcessInput(System.Int32,SharpDX.MediaFoundation.Sample,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Delivers data to an input stream on this Media Foundation transform (MFT). </p>	
            </summary>	
            <param name="dwInputStreamID"><dd> <p> Input stream identifier. To get the list of stream identifiers, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetStreamIDs(System.Int32,System.Int32[],System.Int32,System.Int32[])"/></strong>. </p> </dd></param>	
            <param name="sampleRef"><dd> <p> Pointer to the <strong><see cref="T:SharpDX.MediaFoundation.Sample"/></strong> interface of the input sample. The sample must contain at least one media buffer that contains valid input data. </p> </dd></param>	
            <param name="dwFlags"><dd> <p> Reserved. Must be zero. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_INVALIDARG</strong></dt> </dl> </td><td> <p> Invalid argument. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream identifier. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_NO_SAMPLE_DURATION</strong></dt> </dl> </td><td> <p>The input sample requires a valid sample duration. To set the duration, call <strong><see cref="M:SharpDX.MediaFoundation.Sample.SetSampleDuration(System.Int64)"/></strong>. </p> <p>Some MFTs require that input samples have valid durations. Some MFTs do not require sample durations.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_NO_SAMPLE_TIMESTAMP</strong></dt> </dl> </td><td> <p>The input sample requires a time stamp. To set the time stamp, call <strong><see cref="M:SharpDX.MediaFoundation.Sample.SetSampleTime(System.Int64)"/></strong>. </p> <p>Some MFTs require that input samples have valid time stamps. Some MFTs do not require time stamps.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_NOTACCEPTING</strong></dt> </dl> </td><td> <p> The transform cannot process more input at this time. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong></dt> </dl> </td><td> <p> The media type is not set on one or more streams. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_UNSUPPORTED_D3D_TYPE</strong></dt> </dl> </td><td> <p> The media type is not supported for DirectX Video Acceleration (DXVA). A DXVA-enabled decoder might return this error code. </p> </td></tr> </table><p>?</p><p><strong>Note</strong>??If you are converting a DirectX Media Object (DMO) to an MFT, be aware that <strong>S_FALSE</strong> is not a valid return code for <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessInput(System.Int32,SharpDX.MediaFoundation.Sample,System.Int32)"/></strong>, unlike the <strong>IMediaObject::ProcessInput</strong> method.</p></returns>	
            <remarks>	
            <p> In most cases, if the method succeeds, the MFT stores the sample and holds a reference count on the <strong><see cref="T:SharpDX.MediaFoundation.Sample"/></strong> reference. Do not re-use the sample until the MFT releases the sample. Instead of storing the sample, however, an MFT might copy the sample data into a new buffer. In that case, the MFT should set the <strong><see cref="F:SharpDX.MediaFoundation.MftInputStreamInformationFlags.MftInputStreamDoesNotAddref"/></strong> flag in the <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetInputStreamInfo(System.Int32,SharpDX.MediaFoundation.TInputStreamInformation@)"/></strong> method. </p><p> If the MFT already has enough input data to produce an output sample, it does not accept new input data, and <strong>ProcessInput</strong> returns <strong>MF_E_NOTACCEPTING</strong>. At that point, the client should clear the pending input data by doing one of the following: </p><ul> <li> Generate new output by calling <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong>. </li> <li> Flush the input data by calling <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessMessage(SharpDX.MediaFoundation.TMessageType,System.IntPtr)"/></strong> with the MFT_<strong>MESSAGE_COMMAND_FLUSH</strong> message. </li> </ul><p> An exception to this rule is the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamLazyRead"/></strong> flag. When this flag is present, the transform will discard stored samples if you give it more input. For more information, see <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetOutputStreamInfo(System.Int32,SharpDX.MediaFoundation.TOutputStreamInformation@)"/></strong>. A transform should never queue any more input data than is required to produce the correct output. </p><p> An MFT can process the input data in the <strong>ProcessInput</strong> method. However, most MFTs wait until the client calls <strong>ProcessOutput</strong>. </p><p> After the client has set valid media types on all of the streams, the MFT should always be in one of two states: Able to accept more input, or able to produce more output. It should never be in both states or neither state. An MFT should only accept as much input as it needs to generate at least one output sample, at which point <strong>ProcessInput</strong> returns <strong>MF_E_NOTACCEPTING</strong>. When <strong>ProcessInput</strong> returns <strong>MF_E_NOTACCEPTING</strong>, the client can assume that the MFT is ready to produce output. </p><p> If an MFT encounters a non-fatal error in the input data, it can simply drop the data and attempt to recover when it gets the more input data. To request more input data, the MFT returns <strong>MF_E_TRANSFORM_NEED_MORE_INPUT</strong> from the <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong> method. If the MFT drops any data, it should set the <strong><see cref="F:SharpDX.MediaFoundation.SampleAttributeKeys.Discontinuity"/></strong> attribute attribute on the next output sample, to notify the caller that there is a gap in the data stream. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTProcessInput</strong>. See Creating Hybrid DMO/MFT Objects.</p>Asynchronous Processing<p>The previous remarks describe the <em>synchronous</em> processing model. To support asynchronous processing, see Asynchronous MFTs.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::ProcessInput']/*"/>	
            <msdn-id>ms703131</msdn-id>	
            <unmanaged>HRESULT IMFTransform::ProcessInput([In] unsigned int dwInputStreamID,[In] IMFSample* pSample,[In] unsigned int dwFlags)</unmanaged>	
            <unmanaged-short>IMFTransform::ProcessInput</unmanaged-short>	
        </member>
        <member name="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Generates output from the current input data. </p>	
            </summary>	
            <param name="dwFlags"><dd> <p> Bitwise <strong>OR</strong> of zero or more flags from the <strong>_MFT_PROCESS_OUTPUT_FLAGS</strong> enumeration. </p> </dd></param>	
            <param name="cOutputBufferCount"><dd> <p> Number of elements in the <em>pOutputSamples</em> array. The value must be at least 1. </p> </dd></param>	
            <param name="outputSamplesRef"><dd> <p> Pointer to an array of <strong><see cref="T:SharpDX.MediaFoundation.TOutputDataBuffer"/></strong> structures, allocated by the caller. The MFT uses this array to return output data to the caller. </p> </dd></param>	
            <param name="dwStatusRef"><dd> <p> Receives a bitwise <strong>OR</strong> of zero or more flags from the <strong>_MFT_PROCESS_OUTPUT_STATUS</strong> enumeration. </p> </dd></param>	
            <returns><p> The method returns an <strong><see cref="T:SharpDX.Result"/></strong>. Possible values include, but are not limited to, those in the following table. </p><table> <tr><th>Return code</th><th>Description</th></tr> <tr><td> <dl> <dt><strong><see cref="F:SharpDX.Result.Ok"/></strong></dt> </dl> </td><td> <p> The method succeeded. </p> </td></tr> <tr><td> <dl> <dt><strong>E_UNEXPECTED</strong></dt> </dl> </td><td> <p>The <strong>ProcessOutput</strong> method was called on an asynchronous MFT that was not expecting this method call.</p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_INVALIDSTREAMNUMBER</strong></dt> </dl> </td><td> <p> Invalid stream identifier in the <strong>dwStreamID</strong> member of one or more <strong><see cref="T:SharpDX.MediaFoundation.TOutputDataBuffer"/></strong> structures. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_NEED_MORE_INPUT</strong></dt> </dl> </td><td> <p> The transform cannot produce output data until it receives more input data. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_STREAM_CHANGE</strong></dt> </dl> </td><td> <p> The format has changed on an output stream, or there is a new preferred format, or there is a new output stream. </p> </td></tr> <tr><td> <dl> <dt><strong>MF_E_TRANSFORM_TYPE_NOT_SET</strong></dt> </dl> </td><td> <p> You must set the media type on one or more streams of the MFT. </p> </td></tr> </table><p>?</p><p><strong>Note</strong>??If you are converting a DirectX Media Object (DMO) to an MFT, be aware that <strong>S_FALSE</strong> is not a valid return code for <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong>, unlike the <strong>IMediaObject::ProcessOutput</strong> method.</p></returns>	
            <remarks>	
            <p> The size of the <em>pOutputSamples</em> array must be equal to or greater than the number of <em>selected</em> output streams. The number of selected output streams equals the total number of output streams minus the number of <em>deselected</em> streams. A stream is deselected if it has the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamOptional"/></strong> flag and the caller does not set a media type (or sets the media type to <strong><c>null</c></strong>). For more information, see <strong>_MFT_OUTPUT_STREAM_INFO_FLAGS</strong> enumeration. </p><p>This method generates output samples and can also generate events. If the method succeeds, at least one of the following conditions is true:</p><ul> <li> One or more samples in the <em>pOutputSamples</em> array contains output data. </li> <li> One or more members of the <em>pOutputSamples</em> array contains a non-empty collection of events. </li> </ul><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including Mftransform.h, this method is renamed <strong>MFTProcessOutput</strong>. See Creating Hybrid DMO/MFT Objects.</p>Output Buffers<p>The MFT returns output data for a stream through the <strong>pSample</strong> member of the <strong><see cref="T:SharpDX.MediaFoundation.TOutputDataBuffer"/></strong> structure. This structure member is a reference to the <strong><see cref="T:SharpDX.MediaFoundation.Sample"/></strong> interface of a media sample. (See Media Samples.) The media sample is allocated either by the caller or by the MFT, depending on the MFT's allocation model. To find the allocation model, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetOutputStreamInfo(System.Int32,SharpDX.MediaFoundation.TOutputStreamInformation@)"/></strong> and examine the <strong>dwFlags</strong> member of the <strong><see cref="T:SharpDX.MediaFoundation.TOutputStreamInformation"/></strong> structure:</p><ul> <li> If the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamProvidesSamples"/></strong> flag is present, the MFT allocates the media sample. </li> <li> If the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamCanProvideSamples"/></strong> flag is present, the caller can optionally provide a media sample. If <strong>pSample</strong> is <strong><c>null</c></strong>, the MFT will allocate the media sample. </li> <li> If neither of these two flags is present, the caller must allocate the media sample. </li> </ul><p>These flags remain constant unless the media type for the output stream changes.</p><p>If the caller allocates the media sample, the media sample must contain a buffer that is large enough to hold the output data. To find the buffer requirements, call <strong>GetOutputStreamInfo</strong>. The MFT writes the output data to the start of the buffer, overwriting any data that already exists in the buffer.</p><p>If the MFT allocates the sample, the MFT also allocates the buffers for the sample.</p><p>If the MFT has multiple output streams, the streams might produce output at different rates, so some streams might have output while other streams do not. If a stream did not any produce output, the MFT sets the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferNoSample"/></strong> flag in the <strong>dwStatus</strong> member of the <strong><see cref="T:SharpDX.MediaFoundation.TOutputDataBuffer"/></strong> structure for that stream. In that case, if the caller allocated <strong>pSample</strong>, the buffers in the sample do not contain any valid data. If the caller did not allocate <strong>pSample</strong>, the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferNoSample"/></strong> flag indicates that <strong>pSample</strong> still equals <strong><c>null</c></strong> after the method returns.</p><p>If no output streams have data, and the MFT has no events to return, then <strong>ProcessOutput</strong> returns <strong>MF_E_TRANSFORM_NEED_MORE_INPUT</strong>.</p><p>The MFT cannot return more than one sample per stream in a single call to <strong>ProcessOutput</strong>. If there is more output data available for a stream after <strong>ProcessOutput</strong> returns, the MFT sets the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferIncomplete"/></strong> flag in the <strong>dwStatus</strong> member of the <strong><see cref="T:SharpDX.MediaFoundation.TOutputDataBuffer"/></strong> structure for that stream.</p><p>If the MFT has enough data to produce output, it should refuse to accept any more input until <strong>ProcessOutput</strong> has been called enough times to pull all of the available output. (An exception is when the <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetOutputStreamInfo(System.Int32,SharpDX.MediaFoundation.TOutputStreamInformation@)"/></strong> method returns the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamLazyRead"/></strong> flag.) Generally, an MFT with multiple output streams should produce output for a stream as soon as possible, and not wait for all of the streams to have output.</p>In-Band Events<p>The MFT can return a collection of event objects in the <strong>pEvents</strong> member of each <strong><see cref="T:SharpDX.MediaFoundation.TOutputDataBuffer"/></strong> structure. The MFT allocates both the collection object and the events.</p><p>To send an event to the caller, the MFT performs the following steps inside <strong>ProcessOutput</strong>:</p><ol> <li> Create a new collection object by calling <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.CreateCollection(SharpDX.MediaFoundation.Collection@)"/></strong>. </li> <li> Add one or more events to the collection by calling <strong><see cref="M:SharpDX.MediaFoundation.Collection.AddElement(SharpDX.ComObject)"/></strong>. </li> <li> Set the <strong>pEvents</strong> member of the <strong><see cref="T:SharpDX.MediaFoundation.TOutputDataBuffer"/></strong> structure equal to the <strong><see cref="T:SharpDX.MediaFoundation.Collection"/></strong> reference. The MFT leaves a reference count on this interface; the caller must release the reference. </li> </ol><p>Events do not have time stamps. The caller should process the events before processing the output samples. In other words, events occur at the point in the stream immediately after the previous call to <strong>ProcessOutput</strong>, and prior to any output samples returned from the current <strong>ProcessOutput</strong> call.</p><p>It is valid for the <strong>ProcessOutput</strong> method to return one or more events and zero output samples.</p><p>The caller is responsible for releasing any events that the MFT allocates. When the method returns, check the <strong>pEvents</strong> member of each <strong><see cref="T:SharpDX.MediaFoundation.TOutputDataBuffer"/></strong> structure. If the value is not <strong><c>null</c></strong>, the caller must release the <strong><see cref="T:SharpDX.MediaFoundation.Collection"/></strong> interface reference:</p><pre>// Release the events that an MFT might allocate in <see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/>().	
            void ReleaseEventCollection(DWORD cOutputBuffers, <see cref="T:SharpDX.MediaFoundation.TOutputDataBuffer"/>* pBuffers)	
            { for (DWORD i = 0; i &lt; cOutputBuffers; i++) { if (pBuffers[i].pEvents) { pBuffers[i].pEvents-&gt;Release(); pBuffers[i].pEvents = <c>null</c>; } }	
            }	
            </pre><p>An MFT should not use the <strong><see cref="T:SharpDX.MediaFoundation.MediaEventGenerator"/></strong> interface to send in-band events.</p>Stream Changes<p>The <strong>ProcessOutput</strong> method can cause any of the following changes in an output stream:</p><ul> <li> The deletion of an output stream. To signal a stream deletion, the MFT sets the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferStreamEnd"/></strong> flag in the <strong>dwStatus</strong> member of the <strong><see cref="T:SharpDX.MediaFoundation.TOutputDataBuffer"/></strong> structure for that stream. </li> <li> The creation of a new output stream. To signal a new output stream, the MFT sets the <strong><see cref="F:SharpDX.MediaFoundation.MftProcessOutputStatus.MftProcessOutputStatusNewStreams"/></strong> flag in the <em>pdwStatus</em> parameter. A new stream can have the same stream identifier as a deleted stream. </li> <li> A format change on an output stream. To signal a format change, the MFT sets the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferFormatChange"/></strong> flag in the <strong>dwStatus</strong> member of the <strong><see cref="T:SharpDX.MediaFoundation.TOutputDataBuffer"/></strong> structure for that stream. </li> </ul><p>It is possible that all three of these actions will result from a single call to <strong>ProcessOutput</strong>. The caller must respond to them in the order listed here?first deletions, then additions, then format changes.</p><p>The <strong><see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferFormatChange"/></strong> flag signals a format change on an output stream. This might mean the current media type has become invalid, or the preference order has changed and a more efficient format is available. In the latter case, it is possible that the client will re-set the original media type. To guard against endless loops, the MFT should not set the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputDataBufferFlags.MftOutputDataBufferFormatChange"/></strong> flag again until there is another change. Also, avoid setting this flag if the preference order changes but the current media type is still the most preferred type.</p>Sample Attributes<p>An input sample might have attributes, which are accessed through the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> interface. Unless a specific attribute no longer applies, all attributes should be copied into the corresponding output sample. The responsibily for copying attributes is determined as follows:</p><ul> <li> If the value of the <strong>MFPKEY_EXATTRIBUTE_SUPPORTED</strong> property on the MFT is <strong>VARIANT_TRUE</strong>, the MFT copies the attributes. </li> <li> If the value of <strong>MFPKEY_EXATTRIBUTE_SUPPORTED</strong> is <strong>VARIANT_FALSE</strong>, or the property is not set, the client must copy the sample attributes. Do not overwrite any attributes that the MFT sets on the output sample. </li> </ul><p>For a list of sample attributes, see Sample Attributes.</p>Asynchronous Processing<p>The previous remarks describe the <em>synchronous</em> processing model. To support asynchronous processing, see Asynchronous MFTs.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::ProcessOutput']/*"/>	
            <msdn-id>ms704014</msdn-id>	
            <unmanaged>HRESULT IMFTransform::ProcessOutput([In] unsigned int dwFlags,[In] unsigned int cOutputBufferCount,[In] MFT_OUTPUT_DATA_BUFFER* pOutputSamples,[In] unsigned int* pdwStatus)</unmanaged>	
            <unmanaged-short>IMFTransform::ProcessOutput</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.Transform.Attributes">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Gets the global attribute store for this Media Foundation transform (MFT). </p>	
            </summary>	
            <remarks>	
            <p> Use the <strong><see cref="T:SharpDX.MediaFoundation.MediaAttributes"/></strong> reference retrieved by this method to get or set attributes that apply to the entire MFT. To get the attribute store for an input stream, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetInputStreamAttributes(System.Int32,SharpDX.MediaFoundation.MediaAttributes@)"/></strong>. To get the attribute store for an output stream, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetOutputStreamAttributes(System.Int32,SharpDX.MediaFoundation.MediaAttributes@)"/></strong>. </p><p> Implementation of this method is optional unless the MFT needs to support a particular set of attributes. Exception: Hardware-based MFTs must implement this method. See Hardware MFTs.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetAttributes']/*"/>	
            <msdn-id>ms703141</msdn-id>	
            <unmanaged>GetAttributes</unmanaged>	
            <unmanaged-short>GetAttributes</unmanaged-short>	
            <unmanaged>HRESULT IMFTransform::GetAttributes([Out] IMFAttributes** pAttributes)</unmanaged>
        </member>
        <member name="P:SharpDX.MediaFoundation.Transform.OutputStatus">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> Queries whether the Media Foundation transform (MFT) is ready to produce output data. </p>	
            </summary>	
            <remarks>	
            <p> If the method returns the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputStatusFlags.MftOutputStatusSampleReady"/></strong> flag, it means you can generate one or more output samples by calling <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong>. </p><p> MFTs are not required to implement this method. If the method returns <strong>E_NOTIMPL</strong>, you must call <strong>ProcessOutput</strong> to determine whether the transform has output data. </p><p> If the MFT has more than one output stream, but it does not produce samples at the same time for each stream, it can set the <strong><see cref="F:SharpDX.MediaFoundation.MftOutputStatusFlags.MftOutputStatusSampleReady"/></strong> flag when just one stream is ready. However, if the MFT normally produces samples at the same time for each output stream, it should not set this flag until all streams are ready. </p><p> After the client has set valid media types on all of the streams, the MFT should always be in one of two states: Able to accept more input, or able to produce more output. </p><p>If <strong>MFT_UNIQUE_METHOD_NAMES</strong> is defined before including mftransform.h, this method is renamed <strong>MFTGetOutputStatus</strong>. See Creating Hybrid DMO/MFT Objects.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IMFTransform::GetOutputStatus']/*"/>	
            <msdn-id>ms696269</msdn-id>	
            <unmanaged>GetOutputStatus</unmanaged>	
            <unmanaged-short>GetOutputStatus</unmanaged-short>	
            <unmanaged>HRESULT IMFTransform::GetOutputStatus([Out] unsigned int* pdwFlags)</unmanaged>
        </member>
        <member name="T:SharpDX.MediaFoundation.AYUVSample">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> </p><p>Contains private data for the <strong>IDirectXVideoDecoder::Execute</strong> method.</p>	
            </summary>	
            <remarks>	
            <p>This structure corresponds to parameters of the <strong>IAMVideoAccelerator::Execute</strong> method in DirectX Video Acceleration (DXVA) version 1.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFAYUVSample']/*"/>	
            <msdn-id>ms696173</msdn-id>	
            <unmanaged>MFAYUVSample</unmanaged>	
            <unmanaged-short>MFAYUVSample</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AYUVSample.BCrValue">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFAYUVSample::bCrValue']/*"/>	
            <unmanaged>unsigned char bCrValue</unmanaged>	
            <unmanaged-short>unsigned char bCrValue</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AYUVSample.BCbValue">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFAYUVSample::bCbValue']/*"/>	
            <unmanaged>unsigned char bCbValue</unmanaged>	
            <unmanaged-short>unsigned char bCbValue</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AYUVSample.BYValue">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFAYUVSample::bYValue']/*"/>	
            <unmanaged>unsigned char bYValue</unmanaged>	
            <unmanaged-short>unsigned char bYValue</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.AYUVSample.BSampleAlpha8">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFAYUVSample::bSampleAlpha8']/*"/>	
            <unmanaged>unsigned char bSampleAlpha8</unmanaged>	
            <unmanaged-short>unsigned char bSampleAlpha8</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.ByteStreamBufferingParameters">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> </p><p>Contains private data for the <strong>IDirectXVideoDecoder::Execute</strong> method.</p>	
            </summary>	
            <remarks>	
            <p>This structure corresponds to parameters of the <strong>IAMVideoAccelerator::Execute</strong> method in DirectX Video Acceleration (DXVA) version 1.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFBYTESTREAM_BUFFERING_PARAMS']/*"/>	
            <msdn-id>ms696173</msdn-id>	
            <unmanaged>MFBYTESTREAM_BUFFERING_PARAMS</unmanaged>	
            <unmanaged-short>MFBYTESTREAM_BUFFERING_PARAMS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamBufferingParameters.CbTotalFileSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFBYTESTREAM_BUFFERING_PARAMS::cbTotalFileSize']/*"/>	
            <unmanaged>unsigned longlong cbTotalFileSize</unmanaged>	
            <unmanaged-short>unsigned longlong cbTotalFileSize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamBufferingParameters.CbPlayableDataSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFBYTESTREAM_BUFFERING_PARAMS::cbPlayableDataSize']/*"/>	
            <unmanaged>unsigned longlong cbPlayableDataSize</unmanaged>	
            <unmanaged-short>unsigned longlong cbPlayableDataSize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamBufferingParameters.PrgBuckets">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFBYTESTREAM_BUFFERING_PARAMS::prgBuckets']/*"/>	
            <unmanaged>MF_LEAKY_BUCKET_PAIR* prgBuckets</unmanaged>	
            <unmanaged-short>MF_LEAKY_BUCKET_PAIR prgBuckets</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamBufferingParameters.CBuckets">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFBYTESTREAM_BUFFERING_PARAMS::cBuckets']/*"/>	
            <unmanaged>unsigned int cBuckets</unmanaged>	
            <unmanaged-short>unsigned int cBuckets</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamBufferingParameters.QwNetBufferingTime">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFBYTESTREAM_BUFFERING_PARAMS::qwNetBufferingTime']/*"/>	
            <unmanaged>unsigned longlong qwNetBufferingTime</unmanaged>	
            <unmanaged-short>unsigned longlong qwNetBufferingTime</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamBufferingParameters.QwExtraBufferingTimeDuringSeek">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFBYTESTREAM_BUFFERING_PARAMS::qwExtraBufferingTimeDuringSeek']/*"/>	
            <unmanaged>unsigned longlong qwExtraBufferingTimeDuringSeek</unmanaged>	
            <unmanaged-short>unsigned longlong qwExtraBufferingTimeDuringSeek</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamBufferingParameters.QwPlayDuration">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFBYTESTREAM_BUFFERING_PARAMS::qwPlayDuration']/*"/>	
            <unmanaged>unsigned longlong qwPlayDuration</unmanaged>	
            <unmanaged-short>unsigned longlong qwPlayDuration</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamBufferingParameters.DRate">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFBYTESTREAM_BUFFERING_PARAMS::dRate']/*"/>	
            <unmanaged>float dRate</unmanaged>	
            <unmanaged-short>float dRate</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.ByteStreamCacheRange">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Specifies a range of bytes.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_BYTE_STREAM_CACHE_RANGE']/*"/>	
            <msdn-id>hh162808</msdn-id>	
            <unmanaged>MF_BYTE_STREAM_CACHE_RANGE</unmanaged>	
            <unmanaged-short>MF_BYTE_STREAM_CACHE_RANGE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamCacheRange.QwStartOffset">
            <summary>	
            <dd> <p>The offset, in bytes, of the start of the range.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_BYTE_STREAM_CACHE_RANGE::qwStartOffset']/*"/>	
            <msdn-id>hh162808</msdn-id>	
            <unmanaged>unsigned longlong qwStartOffset</unmanaged>	
            <unmanaged-short>unsigned longlong qwStartOffset</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ByteStreamCacheRange.QwEndOffset">
            <summary>	
            <dd> <p>The offset, in bytes, of the end of the range.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_BYTE_STREAM_CACHE_RANGE::qwEndOffset']/*"/>	
            <msdn-id>hh162808</msdn-id>	
            <unmanaged>unsigned longlong qwEndOffset</unmanaged>	
            <unmanaged-short>unsigned longlong qwEndOffset</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.DmoMediaType">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> </p><p>The <strong><see cref="T:SharpDX.MediaFoundation.DmoMediaType"/></strong> structure describes the format of the data used by a stream in a Microsoft DirectX Media Object (DMO).</p>	
            </summary>	
            <remarks>	
            <p>This structure is identical to the DirectShow <strong><see cref="!:SharpDX.Win32.Unsupported.AMMediaType"/></strong> structure. The <strong>bFixedSizeSamples</strong>, <strong>bTemporalCompression</strong>, and <strong>lSampleSize</strong> members are for compatibility with DirectShow. Other DMO clients are not required to use them.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_MEDIA_TYPE']/*"/>	
            <msdn-id>dd375504</msdn-id>	
            <unmanaged>DMO_MEDIA_TYPE</unmanaged>	
            <unmanaged-short>DMO_MEDIA_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoMediaType.Majortype">
            <summary>	
            <dd> <p>Major type <see cref="T:System.Guid"/> of the stream.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_MEDIA_TYPE::majortype']/*"/>	
            <msdn-id>dd375504</msdn-id>	
            <unmanaged>GUID majortype</unmanaged>	
            <unmanaged-short>GUID majortype</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoMediaType.Subtype">
            <summary>	
            <dd> <p>Subtype <see cref="T:System.Guid"/> of the stream.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_MEDIA_TYPE::subtype']/*"/>	
            <msdn-id>dd375504</msdn-id>	
            <unmanaged>GUID subtype</unmanaged>	
            <unmanaged-short>GUID subtype</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoMediaType.BFixedSizeSamples">
            <summary>	
            <dd> <p>If <strong>TRUE</strong>, samples are of a fixed size. This field is informational only. For audio, it is generally set to <strong>TRUE</strong>. For video, it is usually <strong>TRUE</strong> for uncompressed video and <strong><see cref="F:SharpDX.Result.False"/></strong> for compressed video.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_MEDIA_TYPE::bFixedSizeSamples']/*"/>	
            <msdn-id>dd375504</msdn-id>	
            <unmanaged>BOOL bFixedSizeSamples</unmanaged>	
            <unmanaged-short>BOOL bFixedSizeSamples</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoMediaType.BTemporalCompression">
            <summary>	
            <dd> <p>If <strong>TRUE</strong>, samples are compressed using temporal (interframe) compression. (A value of <strong>TRUE</strong> indicates that not all frames are key frames.) This field is informational only.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_MEDIA_TYPE::bTemporalCompression']/*"/>	
            <msdn-id>dd375504</msdn-id>	
            <unmanaged>BOOL bTemporalCompression</unmanaged>	
            <unmanaged-short>BOOL bTemporalCompression</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoMediaType.LSampleSize">
            <summary>	
            <dd> <p>Size of the sample in bytes. For compressed data, the value can be zero.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_MEDIA_TYPE::lSampleSize']/*"/>	
            <msdn-id>dd375504</msdn-id>	
            <unmanaged>unsigned int lSampleSize</unmanaged>	
            <unmanaged-short>unsigned int lSampleSize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoMediaType.Formattype">
            <summary>	
            <dd> <p><see cref="T:System.Guid"/> specifying the format type. The <strong>pbFormat</strong> member points to the corresponding format structure. Format types include the following.</p> <table> <tr><th>Format type</th><th>Format structure</th></tr> <tr><td><dl> <dt><strong>FORMAT_DvInfo</strong></dt> </dl> </td><td> <p> <strong>DVINFO</strong> </p> </td></tr> <tr><td><dl> <dt><strong>FORMAT_MPEG2Video</strong></dt> </dl> </td><td> <p> <strong><see cref="!:SharpDX.MediaFoundation.Mpeg2VideoInformation"/></strong> </p> </td></tr> <tr><td><dl> <dt><strong>FORMAT_MPEGVideo</strong></dt> </dl> </td><td> <p> <strong><see cref="!:SharpDX.MediaFoundation.Mpeg1VideoInformation"/></strong> </p> </td></tr> <tr><td><dl> <dt><strong>FORMAT_None</strong></dt> </dl> </td><td> <p>None.</p> </td></tr> <tr><td><dl> <dt><strong>FORMAT_VideoInfo</strong></dt> </dl> </td><td> <p> <strong><see cref="!:SharpDX.Win32.Unsupported.VideoInfoHeader"/></strong> </p> </td></tr> <tr><td><dl> <dt><strong>FORMAT_VideoInfo2</strong></dt> </dl> </td><td> <p> <strong><see cref="!:SharpDX.MediaFoundation.VideoInformationHeader2"/></strong> </p> </td></tr> <tr><td><dl> <dt><strong>FORMAT_WaveFormatEx</strong></dt> </dl> </td><td> <p> <strong><see cref="T:SharpDX.Multimedia.WaveFormat"/></strong> </p> </td></tr> </table> <p>?</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_MEDIA_TYPE::formattype']/*"/>	
            <msdn-id>dd375504</msdn-id>	
            <unmanaged>GUID formattype</unmanaged>	
            <unmanaged-short>GUID formattype</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoMediaType.PUnk">
            <summary>	
            <dd> <p>Not used. Set to <strong><c>null</c></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_MEDIA_TYPE::pUnk']/*"/>	
            <msdn-id>dd375504</msdn-id>	
            <unmanaged>IUnknown* pUnk</unmanaged>	
            <unmanaged-short>IUnknown pUnk</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoMediaType.CbFormat">
            <summary>	
            <dd> <p>Size of the format block of the media type.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_MEDIA_TYPE::cbFormat']/*"/>	
            <msdn-id>dd375504</msdn-id>	
            <unmanaged>unsigned int cbFormat</unmanaged>	
            <unmanaged-short>unsigned int cbFormat</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.DmoMediaType.PbFormat">
            <summary>	
            <dd> <p>Pointer to the format structure. The structure type is specified by the <strong>formattype</strong> member. The format structure must be present, unless <strong>formattype</strong> is GUID_NULL or FORMAT_None.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DMO_MEDIA_TYPE::pbFormat']/*"/>	
            <msdn-id>dd375504</msdn-id>	
            <unmanaged>unsigned char* pbFormat</unmanaged>	
            <unmanaged-short>unsigned char pbFormat</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.FolddownMatrix">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> </p><p>Contains coefficients used to transform multichannel audio into a smaller number of audio channels. This process is called <em>fold-down</em>.</p>	
            </summary>	
            <remarks>	
            <p>To specify this information in the media type, set the <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioFolddownMatrix"/></strong> attribute.</p><p>The ASF media source supports fold-down from six channels (5.1 audio) to two channels (stereo). It gets the information from the g_wszFold6To2Channels3 attribute in the ASF header. This attribute is documented in the Windows Media Format SDK documentation.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFFOLDDOWN_MATRIX']/*"/>	
            <msdn-id>aa369731</msdn-id>	
            <unmanaged>MFFOLDDOWN_MATRIX</unmanaged>	
            <unmanaged-short>MFFOLDDOWN_MATRIX</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.FolddownMatrix.CbSize">
            <summary>	
            <dd> <p>Size of the structure, in bytes.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFFOLDDOWN_MATRIX::cbSize']/*"/>	
            <msdn-id>aa369731</msdn-id>	
            <unmanaged>unsigned int cbSize</unmanaged>	
            <unmanaged-short>unsigned int cbSize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.FolddownMatrix.CSrcChannels">
            <summary>	
            <dd> <p>Number of source channels.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFFOLDDOWN_MATRIX::cSrcChannels']/*"/>	
            <msdn-id>aa369731</msdn-id>	
            <unmanaged>unsigned int cSrcChannels</unmanaged>	
            <unmanaged-short>unsigned int cSrcChannels</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.FolddownMatrix.CDstChannels">
            <summary>	
            <dd> <p>Number of destination channels.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFFOLDDOWN_MATRIX::cDstChannels']/*"/>	
            <msdn-id>aa369731</msdn-id>	
            <unmanaged>unsigned int cDstChannels</unmanaged>	
            <unmanaged-short>unsigned int cDstChannels</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.FolddownMatrix.DwChannelMask">
            <summary>	
            <dd> <p>Specifies the assignment of audio channels to speaker positions in the transformed audio. This member is a bitwise <strong>OR</strong> of flags that define the speaker positions. For a list of valid flags, see <strong><see cref="F:SharpDX.MediaFoundation.MediaTypeAttributeKeys.AudioChannelMask"/></strong> attribute.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFFOLDDOWN_MATRIX::dwChannelMask']/*"/>	
            <msdn-id>aa369731</msdn-id>	
            <unmanaged>unsigned int dwChannelMask</unmanaged>	
            <unmanaged-short>unsigned int dwChannelMask</unmanaged-short>	
        </member>
        <member name="P:SharpDX.MediaFoundation.FolddownMatrix.Coeff">
            <summary>	
            <dd> <p>Array that contains the fold-down coefficients. The number of coefficients is <strong>cSrcChannels</strong>?<strong>cDstChannels</strong>. If the number of coefficients is less than the size of the array, the remaining elements in the array are ignored. For more information about how the coefficients are applied, see Windows Media Audio Professional Codec Features.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFFOLDDOWN_MATRIX::Coeff']/*"/>	
            <msdn-id>aa369731</msdn-id>	
            <unmanaged>int Coeff[64]</unmanaged>	
            <unmanaged-short>int Coeff</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.LeakyBucketPair">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> </p><p>Contains private data for the <strong>IDirectXVideoDecoder::Execute</strong> method.</p>	
            </summary>	
            <remarks>	
            <p>This structure corresponds to parameters of the <strong>IAMVideoAccelerator::Execute</strong> method in DirectX Video Acceleration (DXVA) version 1.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_LEAKY_BUCKET_PAIR']/*"/>	
            <msdn-id>ms696173</msdn-id>	
            <unmanaged>MF_LEAKY_BUCKET_PAIR</unmanaged>	
            <unmanaged-short>MF_LEAKY_BUCKET_PAIR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.LeakyBucketPair.DwBitrate">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_LEAKY_BUCKET_PAIR::dwBitrate']/*"/>	
            <unmanaged>unsigned int dwBitrate</unmanaged>	
            <unmanaged-short>unsigned int dwBitrate</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.LeakyBucketPair.MsBufferWindow">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MF_LEAKY_BUCKET_PAIR::msBufferWindow']/*"/>	
            <unmanaged>unsigned int msBufferWindow</unmanaged>	
            <unmanaged-short>unsigned int msBufferWindow</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.Offset">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies a rectangular area within a video frame. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFOffset']/*"/>	
            <msdn-id>ms703850</msdn-id>	
            <unmanaged>MFOffset</unmanaged>	
            <unmanaged-short>MFOffset</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Offset.Fract">
            <summary>	
            <dd> <p> An <strong><see cref="T:SharpDX.MediaFoundation.Offset"/></strong> structure that contains the x-coordinate of the upper-left corner of the rectangle. This coordinate might have a fractional value. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFOffset::fract']/*"/>	
            <msdn-id>ms703850</msdn-id>	
            <unmanaged>unsigned short fract</unmanaged>	
            <unmanaged-short>unsigned short fract</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Offset.Value">
            <summary>	
            <dd> <p> An <strong><see cref="T:SharpDX.MediaFoundation.Offset"/></strong> structure that contains the y-coordinate of the upper-left corner of the rectangle. This coordinate might have a fractional value. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFOffset::value']/*"/>	
            <msdn-id>ms703850</msdn-id>	
            <unmanaged>short value</unmanaged>	
            <unmanaged-short>short value</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.PaletteEntry">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p>Contains one palette entry in a color table.</p>	
            </summary>	
            <remarks>	
            <p>This union can be used to represent both RGB palettes and Y'Cb'Cr' palettes. The video format that defines the palette determines which union member should be used.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFPaletteEntry']/*"/>	
            <msdn-id>ms698970</msdn-id>	
            <unmanaged>MFPaletteEntry</unmanaged>	
            <unmanaged-short>MFPaletteEntry</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.PaletteEntry.Argb">
            <summary>	
            <dd> <p> <strong><see cref="T:SharpDX.ColorBGRA"/></strong> structure that contains an RGB color.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFPaletteEntry::ARGB']/*"/>	
            <msdn-id>ms698970</msdn-id>	
            <unmanaged>MFARGB ARGB</unmanaged>	
            <unmanaged-short>MFARGB ARGB</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.PaletteEntry.AYCbCr">
            <summary>	
            <dd> <p> <strong><see cref="T:SharpDX.MediaFoundation.AYUVSample"/></strong> structure that contains a Y'Cb'Cr' color.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFPaletteEntry::AYCbCr']/*"/>	
            <msdn-id>ms698970</msdn-id>	
            <unmanaged>MFAYUVSample AYCbCr</unmanaged>	
            <unmanaged-short>MFAYUVSample AYCbCr</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.Ratio">
            <summary>	
            <p>This topic describes how to create a media type that describes an uncompressed video format. For more information about media types generally, see About Media Types.</p><p>To create a complete uncompressed video type, set the following attributes on the <strong><see cref="T:SharpDX.MediaFoundation.MediaType"/></strong> interface reference.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFRatio']/*"/>	
            <msdn-id>ff485865</msdn-id>	
            <unmanaged>MFRatio</unmanaged>	
            <unmanaged-short>MFRatio</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Ratio.Numerator">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFRatio::Numerator']/*"/>	
            <unmanaged>unsigned int Numerator</unmanaged>	
            <unmanaged-short>unsigned int Numerator</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.Ratio.Denominator">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFRatio::Denominator']/*"/>	
            <unmanaged>unsigned int Denominator</unmanaged>	
            <unmanaged-short>unsigned int Denominator</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.TInputStreamInformation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_INFO']/*"/>	
            <unmanaged>MFT_INPUT_STREAM_INFO</unmanaged>	
            <unmanaged-short>MFT_INPUT_STREAM_INFO</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TInputStreamInformation.HnsMaxLatency">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_INFO::hnsMaxLatency']/*"/>	
            <unmanaged>longlong hnsMaxLatency</unmanaged>	
            <unmanaged-short>longlong hnsMaxLatency</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TInputStreamInformation.DwFlags">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_INFO::dwFlags']/*"/>	
            <unmanaged>unsigned int dwFlags</unmanaged>	
            <unmanaged-short>unsigned int dwFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TInputStreamInformation.CbSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_INFO::cbSize']/*"/>	
            <unmanaged>unsigned int cbSize</unmanaged>	
            <unmanaged-short>unsigned int cbSize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TInputStreamInformation.CbMaxLookahead">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_INFO::cbMaxLookahead']/*"/>	
            <unmanaged>unsigned int cbMaxLookahead</unmanaged>	
            <unmanaged-short>unsigned int cbMaxLookahead</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TInputStreamInformation.CbAlignment">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_INPUT_STREAM_INFO::cbAlignment']/*"/>	
            <unmanaged>unsigned int cbAlignment</unmanaged>	
            <unmanaged-short>unsigned int cbAlignment</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.TOutputDataBuffer">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Contains information about an output buffer for a Media Foundation transform. This structure is used in the <strong><see cref="M:SharpDX.MediaFoundation.Transform.ProcessOutput(System.Int32,System.Int32,SharpDX.MediaFoundation.TOutputDataBuffer,System.Int32)"/></strong> method.</p>	
            </summary>	
            <remarks>	
            <p>You must provide an <strong><see cref="T:SharpDX.MediaFoundation.TOutputDataBuffer"/></strong> structure for each selected output stream.</p><p>MFTs can support two different allocation models for output samples:</p><ul> <li> The MFT allocates the output sample. </li> <li> The client allocates the output sample. </li> </ul><p>To find which model the MFT supports for a given output stream, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetOutputStreamInfo(System.Int32,SharpDX.MediaFoundation.TOutputStreamInformation@)"/></strong> and check the value of <strong>dwFlags</strong>.</p><table> <tr><th>Flag</th><th>Allocation Model</th></tr> <tr><td><see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamProvidesSamples"/></td><td>The MFT allocates the output samples for the stream. Set <strong>pSample</strong> to <strong><c>null</c></strong> for this stream.</td></tr> <tr><td><see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamCanProvideSamples"/></td><td>The MFT supports both allocation models.</td></tr> <tr><td>Neither (default)</td><td>The client must allocate the output samples for the stream.</td></tr> </table><p>?</p><p>The behavior of <strong>ProcessOutput</strong> depends on the initial value of <strong>pSample</strong> and the value of the <em>dwFlags</em> parameter in the <strong>ProcessOutput</strong> method.</p><ul> <li> <p>If <strong>pSample</strong> is <strong><c>null</c></strong> and <em>dwFlags</em> contains the <see cref="F:SharpDX.MediaFoundation.MftProcessOutputFlags.MftProcessOutputDiscardWhenNoBuffer"/> flag, the MFT discards the output data.</p> <p>Restriction: This output stream must have the <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamDiscardable"/> or <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamLazyRead"/> flag. (To get the flags for the output stream, call the <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetOutputStreamInfo(System.Int32,SharpDX.MediaFoundation.TOutputStreamInformation@)"/></strong> method.)</p> </li> <li> <p>If <strong>pSample</strong> is <strong><c>null</c></strong> and <em>dwFlags</em> does not contain the <see cref="F:SharpDX.MediaFoundation.MftProcessOutputFlags.MftProcessOutputDiscardWhenNoBuffer"/>, the MFT provides a sample for the output data. The MFT sets <strong>pSample</strong> to point to the sample that it provides. The MFT can either allocate a new sample or re-use an input sample.</p> <p>Restriction: This output stream must have the <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamProvidesSamples"/> or <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamCanProvideSamples"/> flag.</p> </li> <li> <p>If <strong>pSample</strong> is non-<strong><c>null</c></strong>, the MFT uses the sample provided by the caller.</p> <p>Restriction: This output stream must not have the <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamProvidesSamples"/> flag.</p> </li> </ul><p>Any other combinations are invalid and cause <strong>ProcessOutput</strong> to return E_INVALIDARG.</p><p>Each call to <strong>ProcessOutput</strong> can produce zero or more events and up to one sample per output stream.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_DATA_BUFFER']/*"/>	
            <msdn-id>ms697247</msdn-id>	
            <unmanaged>MFT_OUTPUT_DATA_BUFFER</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_DATA_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TOutputDataBuffer.DwStreamID">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_DATA_BUFFER::dwStreamID']/*"/>	
            <unmanaged>unsigned int dwStreamID</unmanaged>	
            <unmanaged-short>unsigned int dwStreamID</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TOutputDataBuffer.PSample">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_DATA_BUFFER::pSample']/*"/>	
            <unmanaged>IMFSample* pSample</unmanaged>	
            <unmanaged-short>IMFSample pSample</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TOutputDataBuffer.DwStatus">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_DATA_BUFFER::dwStatus']/*"/>	
            <unmanaged>unsigned int dwStatus</unmanaged>	
            <unmanaged-short>unsigned int dwStatus</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TOutputDataBuffer.PEvents">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_DATA_BUFFER::pEvents']/*"/>	
            <unmanaged>IMFCollection* pEvents</unmanaged>	
            <unmanaged-short>IMFCollection pEvents</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.TOutputStreamInformation">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Contains information about an output stream on a Media Foundation transform (MFT). To get these values, call <strong><see cref="M:SharpDX.MediaFoundation.Transform.GetOutputStreamInfo(System.Int32,SharpDX.MediaFoundation.TOutputStreamInformation@)"/></strong>.</p>	
            </summary>	
            <remarks>	
            <p>Before the media types are set, the only values that should be considered valid is the <see cref="F:SharpDX.MediaFoundation.MftOutputStreamInformationFlags.MftOutputStreamOptional"/> flag in the <strong>dwFlags</strong> member. This flag indicates that the stream is optional and does not require a media type.</p><p>After you set a media type on all of the input and output streams (not including optional streams), all of the values returned by the <strong>GetOutputStreamInfo</strong> method are valid. They might change if you set different media types.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STREAM_INFO']/*"/>	
            <msdn-id>ms696974</msdn-id>	
            <unmanaged>MFT_OUTPUT_STREAM_INFO</unmanaged>	
            <unmanaged-short>MFT_OUTPUT_STREAM_INFO</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TOutputStreamInformation.DwFlags">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STREAM_INFO::dwFlags']/*"/>	
            <unmanaged>unsigned int dwFlags</unmanaged>	
            <unmanaged-short>unsigned int dwFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TOutputStreamInformation.CbSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STREAM_INFO::cbSize']/*"/>	
            <unmanaged>unsigned int cbSize</unmanaged>	
            <unmanaged-short>unsigned int cbSize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.TOutputStreamInformation.CbAlignment">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFT_OUTPUT_STREAM_INFO::cbAlignment']/*"/>	
            <unmanaged>unsigned int cbAlignment</unmanaged>	
            <unmanaged-short>unsigned int cbAlignment</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.VideoArea">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps only</p><p> Specifies a rectangular area within a video frame. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoArea']/*"/>	
            <msdn-id>ms703850</msdn-id>	
            <unmanaged>MFVideoArea</unmanaged>	
            <unmanaged-short>MFVideoArea</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoArea.OffsetX">
            <summary>	
            <dd> <p> An <strong><see cref="T:SharpDX.MediaFoundation.Offset"/></strong> structure that contains the x-coordinate of the upper-left corner of the rectangle. This coordinate might have a fractional value. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoArea::OffsetX']/*"/>	
            <msdn-id>ms703850</msdn-id>	
            <unmanaged>MFOffset OffsetX</unmanaged>	
            <unmanaged-short>MFOffset OffsetX</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoArea.OffsetY">
            <summary>	
            <dd> <p> An <strong><see cref="T:SharpDX.MediaFoundation.Offset"/></strong> structure that contains the y-coordinate of the upper-left corner of the rectangle. This coordinate might have a fractional value. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoArea::OffsetY']/*"/>	
            <msdn-id>ms703850</msdn-id>	
            <unmanaged>MFOffset OffsetY</unmanaged>	
            <unmanaged-short>MFOffset OffsetY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoArea.Area">
            <summary>	
            <dd> <p> A <strong><see cref="T:SharpDX.DrawingSize"/></strong> structure that contains the width and height of the rectangle. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoArea::Area']/*"/>	
            <msdn-id>ms703850</msdn-id>	
            <unmanaged>SIZE Area</unmanaged>	
            <unmanaged-short>SIZE Area</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.VideoNormalizedRect">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p> </p><p>Defines a normalized rectangle, which is used to specify sub-rectangles in a video rectangle. When a rectangle N is <em>normalized</em> relative to some other rectangle R, it means the following:</p><ul> <li> <p>The coordinate (0.0, 0.0) on N is mapped to the upper-left corner of R.</p> </li> <li> <p>The coordinate (1.0, 1.0) on N is mapped to the lower-right corner of R.</p> </li> </ul><p>Any coordinates of N that fall outside the range [0...1] are mapped to positions outside the rectangle R. A normalized rectangle can be used to specify a region within a video rectangle without knowing the resolution or even the aspect ratio of the video. For example, the upper-left quadrant is defined as {0.0, 0.0, 0.5, 0.5}.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoNormalizedRect']/*"/>	
            <msdn-id>ms703049</msdn-id>	
            <unmanaged>MFVideoNormalizedRect</unmanaged>	
            <unmanaged-short>MFVideoNormalizedRect</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoNormalizedRect.Left">
            <summary>	
            <dd> <p>X-coordinate of the upper-left corner of the rectangle.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoNormalizedRect::left']/*"/>	
            <msdn-id>ms703049</msdn-id>	
            <unmanaged>float left</unmanaged>	
            <unmanaged-short>float left</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoNormalizedRect.Top">
            <summary>	
            <dd> <p>Y-coordinate of the upper-left corner of the rectangle.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoNormalizedRect::top']/*"/>	
            <msdn-id>ms703049</msdn-id>	
            <unmanaged>float top</unmanaged>	
            <unmanaged-short>float top</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoNormalizedRect.Right">
            <summary>	
            <dd> <p>X-coordinate of the lower-right corner of the rectangle.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoNormalizedRect::right']/*"/>	
            <msdn-id>ms703049</msdn-id>	
            <unmanaged>float right</unmanaged>	
            <unmanaged-short>float right</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.VideoNormalizedRect.Bottom">
            <summary>	
            <dd> <p>Y-coordinate of the lower-right corner of the rectangle.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='MFVideoNormalizedRect::bottom']/*"/>	
            <msdn-id>ms703049</msdn-id>	
            <unmanaged>float bottom</unmanaged>	
            <unmanaged-short>float bottom</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaAttributeKey">
            <summary>
            Associate an attribute key with a type used to retreive keys from a <see cref="T:SharpDX.MediaFoundation.MediaAttributes"/> instance.
            </summary>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributeKey.#ctor(System.Guid,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaAttributeKey"/> struct.
            </summary>
            <param name="guid">The GUID.</param>
            <param name="type">The type.</param>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaAttributeKey.Guid">
            <summary>
            Gets or sets the GUID.
            </summary>
            <value>
            The GUID.
            </value>
        </member>
        <member name="P:SharpDX.MediaFoundation.MediaAttributeKey.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaAttributeKey`1">
            <summary>
            Generic version of <see cref="T:SharpDX.MediaFoundation.MediaAttributeKey"/>
            </summary>
            <typeparam name="T">Type of the value of this key</typeparam>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributeKey`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaAttributeKey`1"/> class.
            </summary>
            <param name="guid">The GUID.</param>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaAttributeKey`1.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.MediaFoundation.MediaAttributeKey`1"/> class.
            </summary>
            <param name="guid">The GUID.</param>
        </member>
        <member name="T:SharpDX.MediaFoundation.MediaEngineAttributes">
            <summary>
            Attributes used when instantiating <see cref="T:SharpDX.MediaFoundation.MediaEngine"/> class.
            </summary>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineAttributes.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of <see cref="T:SharpDX.MediaFoundation.MediaEngineAttributes"/> class.
            </summary>
            <param name="nativePtr">A native COM pointer to a MediaEngineAttributes</param>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaEngineAttributes.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:SharpDX.MediaFoundation.MediaEngineAttributes"/> class.
            </summary>
            <param name="initialSizeInBytes">Size of the data to allocate</param>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaManager.Startup(System.Boolean)">
            <summary>
              <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Initializes Microsoft Media Foundation.</p>
            </summary>
            <param name="useLightVersion">If true, do not initialize the sockets library, else full initialization. Default is false</param>
            <msdn-id>ms702238</msdn-id>
            <unmanaged>HRESULT MFStartup([In] unsigned int Version,[In] unsigned int dwFlags)</unmanaged>
            <unmanaged-short>MFStartup</unmanaged-short>
            <remarks>
              <p> An application must call this function before using Media Foundation. Before your application quits, call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> once for every previous call to <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Startup(System.Int32,System.Int32)"/></strong>. </p><p> Do not call <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Startup(System.Int32,System.Int32)"/></strong> or <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Shutdown"/></strong> from work queue threads. For more information about work queues, see Work Queues. </p><p>This function is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul>
            		<li>Windows?XP with Service Pack?2 (SP2) and later.</li>
            		<li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li>
            	</ul>
            </remarks>
        </member>
        <member name="M:SharpDX.MediaFoundation.MediaManager.Shutdown">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Shuts down the Microsoft Media Foundation platform. Call this function once for every call to <strong><see cref="M:SharpDX.MediaFoundation.MediaFactory.Startup(System.Int32,System.Int32)"/></strong>. Do not call this function from work queue threads.</p>	
            </summary>	
            <returns><p>If this function succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This function is available on the following platforms if the Windows Media Format 11 SDK redistributable components are installed:</p><ul> <li>Windows?XP with Service Pack?2 (SP2) and later.</li> <li>Windows?XP Media Center Edition?2005 with KB900325 (Windows?XP Media Center Edition?2005) and KB925766 (October 2006 Update Rollup for Windows?XP Media Center Edition) installed.</li> </ul>	
            </remarks>	
            <msdn-id>ms694273</msdn-id>	
            <unmanaged>HRESULT MFShutdown()</unmanaged>	
            <unmanaged-short>MFShutdown</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.NamespaceDoc">
            <summary>
            The <see cref="N:SharpDX.MediaFoundation"/> namespace provides a managed MediaFoundation API.
            </summary>
            <msdn-id></msdn-id>
            <unmanaged>MediaFoundation</unmanaged>	
            <unmanaged-short>MediaFoundation</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.OPM.NamespaceDoc">
            <summary>
            The <see cref="N:SharpDX.MediaFoundation.OPM"/> namespace provides a managed MediaFoundation for OPM API.
            </summary>
            <msdn-id></msdn-id>
            <unmanaged>MediaFoundation</unmanaged>	
            <unmanaged-short>MediaFoundation</unmanaged-short>	
        </member>
        <member name="T:SharpDX.MediaFoundation.ResourceCharacteristics">
            <summary>
            Resource characteristics returned by <see cref="P:SharpDX.MediaFoundation.MediaEngineEx.ResourceCharacteristics"/>.
            </summary>
            <msdn-id>hh447939</msdn-id>	
            <unmanaged>HRESULT IMFMediaEngineEx::GetResourceCharacteristics([Out] unsigned int* pCharacteristics)</unmanaged>	
            <unmanaged-short>IMFMediaEngineEx::GetResourceCharacteristics</unmanaged-short>	
        </member>
        <member name="F:SharpDX.MediaFoundation.ResourceCharacteristics.None">
            <summary>
            None flag.
            </summary>
        </member>
        <member name="F:SharpDX.MediaFoundation.ResourceCharacteristics.LiveSource">
            <summary>
            The media resource represents a live data source, such as a video camera. If playback is stopped and then restarted, there will be a gap in the content.
            </summary>
        </member>
        <member name="F:SharpDX.MediaFoundation.ResourceCharacteristics.CanSeek">
            <summary>
            The media resource supports seeking. To get the seekable range, call IMFMediaEngine::GetSeekable.
            </summary>
        </member>
        <member name="F:SharpDX.MediaFoundation.ResourceCharacteristics.CanPause">
            <summary>
            The media resource can be paused.
            </summary>
        </member>
        <member name="F:SharpDX.MediaFoundation.ResourceCharacteristics.LongTimeToSeek">
            <summary>
            Seeking this resource can take a long time. For example, it might download through HTTP.
            </summary>
        </member>
    </members>
</doc>
