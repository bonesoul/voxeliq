<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpDX.Direct3D11</name>
    </assembly>
    <members>
        <member name="T:SharpDX.Direct3D11.AssemblyDoc">
            <summary>
            The <see cref="A:SharpDX.Direct3D11"/> assembly provides managed Direct3D11 API.
            </summary>
            <msdn-id>ff476080</msdn-id>
            <unmanaged>Direct3D11</unmanaged>	
            <unmanaged-short>Direct3D11</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.BlendState">
            <summary>	
            <p>The blend-state interface holds a description for blending state that you can bind to the output-merger stage.</p>	
            </summary>	
            <remarks>	
            <p>Blending applies a simple function to combine output values from a pixel shader with data in a render target. You have control over how the pixels are blended by using a predefined set of blending operations and preblending operations.</p><p>To create a blend-state object, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateBlendState(SharpDX.Direct3D11.BlendStateDescription@,SharpDX.Direct3D11.BlendState)"/></strong>. To bind the blend-state object to the output-merger stage, call <strong><see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetBlendState(SharpDX.Direct3D11.BlendState,System.Nullable{SharpDX.Color4},System.UInt32)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11BlendState']/*"/>	
            <msdn-id>ff476349</msdn-id>	
            <unmanaged>ID3D11BlendState</unmanaged>	
            <unmanaged-short>ID3D11BlendState</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DeviceChild">
            <summary>	
            <p>A device-child interface accesses data used by a device.</p>	
            </summary>	
            <remarks>	
            <p>There are several types of device child interfaces, all of which inherit this interface. They include shaders, state objects, and input layouts.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceChild']/*"/>	
            <msdn-id>ff476380</msdn-id>	
            <unmanaged>ID3D11DeviceChild</unmanaged>	
            <unmanaged-short>ID3D11DeviceChild</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceChild.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DeviceChild"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceChild.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.DeviceChild">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.DeviceChild"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceChild.GetDevice(SharpDX.Direct3D11.Device@)">
            <summary>	
            <p>Get a reference to the device that created this interface.</p>	
            </summary>	
            <param name="deviceOut"><dd>  <p>Address of a reference to a device (see <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong>).</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one, so be sure to call ::release() on the returned reference(s) before they are freed or else you will have a memory leak.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceChild::GetDevice']/*"/>	
            <msdn-id>ff476381</msdn-id>	
            <unmanaged>void ID3D11DeviceChild::GetDevice([Out] ID3D11Device** ppDevice)</unmanaged>	
            <unmanaged-short>ID3D11DeviceChild::GetDevice</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceChild.GetPrivateData(System.Guid,System.Int32@,System.IntPtr)">
            <summary>	
            <p>Get application-defined data from a device child.</p>	
            </summary>	
            <param name="guid"><dd>  <p>Guid associated with the data.</p> </dd></param>	
            <param name="dataSizeRef"><dd>  <p>A reference to a variable that on input contains the size, in bytes, of the buffer that <em>pData</em> points to, and on output contains the size, in bytes, of the amount of data that <strong>GetPrivateData</strong> retrieved.</p> </dd></param>	
            <param name="dataRef"><dd>  <p>A reference to a buffer that <strong>GetPrivateData</strong> fills with data from the device child if <em>pDataSize</em> points to a value that specifies a buffer large enough to hold the data.</p> </dd></param>	
            <returns><p>This method returns one of the codes described in the topic Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>The data stored in the device child is set by calling <strong><see cref="M:SharpDX.Direct3D11.DeviceChild.SetPrivateData(System.Guid,System.Int32,System.IntPtr)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceChild::GetPrivateData']/*"/>	
            <msdn-id>ff476382</msdn-id>	
            <unmanaged>HRESULT ID3D11DeviceChild::GetPrivateData([In] const GUID&amp; guid,[InOut] unsigned int* pDataSize,[Out, Buffer, Optional] void* pData)</unmanaged>	
            <unmanaged-short>ID3D11DeviceChild::GetPrivateData</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceChild.SetPrivateData(System.Guid,System.Int32,System.IntPtr)">
            <summary>	
            <p>Set application-defined data to a device child and associate that data with an application-defined guid.</p>	
            </summary>	
            <param name="guid"><dd>  <p>Guid associated with the data.</p> </dd></param>	
            <param name="dataSize"><dd>  <p>Size of the data.</p> </dd></param>	
            <param name="dataRef"><dd>  <p>Pointer to the data to be stored with this device child. If pData is <strong><c>null</c></strong>, DataSize must also be 0, and any data previously associated with the specified guid will be destroyed.</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>The data stored in the device child with this method can be retrieved with <strong><see cref="M:SharpDX.Direct3D11.DeviceChild.GetPrivateData(System.Guid,System.Int32@,System.IntPtr)"/></strong>.</p><p>The debug layer reports memory leaks by outputting a list of object interface references along with their friendly names. The default friendly name is "&lt;unnamed&gt;". You can set the friendly name so that you can determine if the corresponding object interface reference caused the leak. To set the friendly name, use the <strong>SetPrivateData</strong> method and the <strong><see cref="F:SharpDX.Direct3D.CommonGuid.DebugObjectName"/></strong> <see cref="T:System.Guid"/> that is in D3Dcommon.h. For example, to give pContext a friendly name of <em>My name</em>, use the following code:</p><pre><code> static const char c_szName[] = "My name";	
            hr = pContext-&gt;SetPrivateData( <see cref="F:SharpDX.Direct3D.CommonGuid.DebugObjectName"/>, sizeof( c_szName ) - 1, c_szName );	
            </code></pre>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceChild::SetPrivateData']/*"/>	
            <msdn-id>ff476383</msdn-id>	
            <unmanaged>HRESULT ID3D11DeviceChild::SetPrivateData([In] const GUID&amp; guid,[In] unsigned int DataSize,[In, Buffer, Optional] const void* pData)</unmanaged>	
            <unmanaged-short>ID3D11DeviceChild::SetPrivateData</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceChild.SetPrivateDataInterface(System.Guid,SharpDX.ComObject)">
            <summary>	
            <p>Associate an <see cref="T:SharpDX.ComObject"/>-derived interface with this device child and associate that interface with an application-defined guid.</p>	
            </summary>	
            <param name="guid"><dd>  <p>Guid associated with the interface.</p> </dd></param>	
            <param name="dataRef"><dd>  <p>Pointer to an <see cref="T:SharpDX.ComObject"/>-derived interface to be associated with the device child.</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>When this method is called ::addref() will be called on the <see cref="T:SharpDX.ComObject"/>-derived interface, and when the device child is detroyed ::release() will be called on the <see cref="T:SharpDX.ComObject"/>-derived interface.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceChild::SetPrivateDataInterface']/*"/>	
            <msdn-id>ff476384</msdn-id>	
            <unmanaged>HRESULT ID3D11DeviceChild::SetPrivateDataInterface([In] const GUID&amp; guid,[In, Optional] const IUnknown* pData)</unmanaged>	
            <unmanaged-short>ID3D11DeviceChild::SetPrivateDataInterface</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceChild.DebugName">
            <summary>
            Gets or sets the debug-name for this object.
            </summary>
            <value>
            The debug name.
            </value>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceChild.Device">
            <summary>	
            <p>Get a reference to the device that created this interface.</p>	
            </summary>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one, so be sure to call ::release() on the returned reference(s) before they are freed or else you will have a memory leak.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceChild::GetDevice']/*"/>	
            <msdn-id>ff476381</msdn-id>	
            <unmanaged>GetDevice</unmanaged>	
            <unmanaged-short>GetDevice</unmanaged-short>	
            <unmanaged>void ID3D11DeviceChild::GetDevice([Out] ID3D11Device** ppDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BlendStateDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.BlendState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.BlendState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.BlendState">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.BlendState"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState.GetDescription(SharpDX.Direct3D11.BlendStateDescription@)">
            <summary>	
            <p>Gets the description for blending state that you used to create the blend-state object.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.BlendStateDescription"/></strong> structure that receives a description of the blend state.</p> </dd></param>	
            <remarks>	
            <p>You use the description for blending state in a call to the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateBlendState(SharpDX.Direct3D11.BlendStateDescription@,SharpDX.Direct3D11.BlendState)"/></strong> method to create the blend-state object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11BlendState::GetDesc']/*"/>	
            <msdn-id>ff476350</msdn-id>	
            <unmanaged>void ID3D11BlendState::GetDesc([Out] D3D11_BLEND_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11BlendState::GetDesc</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.BlendState.Description">
            <summary>	
            <p>Gets the description for blending state that you used to create the blend-state object.</p>	
            </summary>	
            <remarks>	
            <p>You use the description for blending state in a call to the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateBlendState(SharpDX.Direct3D11.BlendStateDescription@,SharpDX.Direct3D11.BlendState)"/></strong> method to create the blend-state object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11BlendState::GetDesc']/*"/>	
            <msdn-id>ff476350</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11BlendState::GetDesc([Out] D3D11_BLEND_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.BlendStateDescription">
            <summary>	
            <p>Describes the blend state that you use in a call to <strong><see cref="M:SharpDX.Direct3D11.Device.CreateBlendState(SharpDX.Direct3D11.BlendStateDescription@,SharpDX.Direct3D11.BlendState)"/></strong> to create a blend-state object.</p>	
            </summary>	
            <remarks>	
            <p>Here are the default values for blend state.</p><table> <tr><th>State</th><th>Default Value</th></tr> <tr><td>AlphaToCoverageEnable</td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td>IndependentBlendEnable</td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td>RenderTarget[0].BlendEnable</td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td>RenderTarget[0].SrcBlend</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.One"/></td></tr> <tr><td>RenderTarget[0].DestBlend</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.Zero"/></td></tr> <tr><td>RenderTarget[0].BlendOp</td><td><see cref="F:SharpDX.Direct3D11.BlendOperation.Add"/></td></tr> <tr><td>RenderTarget[0].SrcBlendAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.One"/></td></tr> <tr><td>RenderTarget[0].DestBlendAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.Zero"/></td></tr> <tr><td>RenderTarget[0].BlendOpAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOperation.Add"/></td></tr> <tr><td>RenderTarget[0].RenderTargetWriteMask</td><td><see cref="F:SharpDX.Direct3D11.ColorWriteMaskFlags.All"/></td></tr> </table><p>?</p><p><strong>Note</strong>??<strong><see cref="T:SharpDX.Direct3D11.BlendStateDescription"/></strong> is identical to <strong>D3D10_BLEND_DESC1</strong>.</p><p>If the driver type is set to <strong><see cref="F:SharpDX.Direct3D.DriverType.Hardware"/></strong>, the feature level is set to less than or equal to <strong><see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/></strong>, and the pixel format of the render target is set to <strong><see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UNorm_SRgb"/></strong>, <strong><see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm_SRgb"/></strong>, or <strong><see cref="F:SharpDX.DXGI.Format.B8G8R8X8_UNorm_SRgb"/></strong>, the display device performs the blend in standard RGB (sRGB) space and not in linear space. However, if the feature level is set to greater than <strong><see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/></strong>, the display device performs the blend in linear space, which is ideal.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC']/*"/>	
            <msdn-id>ff476087</msdn-id>	
            <unmanaged>D3D11_BLEND_DESC</unmanaged>	
            <unmanaged-short>D3D11_BLEND_DESC</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.BlendStateDescription.Default">
            <summary>
            Returns default values for <see cref="T:SharpDX.Direct3D11.BlendStateDescription"/>. 
            </summary>
            <remarks>
            See MSDN documentation for default values.
            </remarks>
        </member>
        <member name="M:SharpDX.Direct3D11.BlendStateDescription.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A copy of this instance.</returns>
            <remarks>
            Because this structure contains an array, it is not possible to modify it without making an explicit clone method.
            </remarks>
        </member>
        <member name="F:SharpDX.Direct3D11.BlendStateDescription.AlphaToCoverageEnable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC::AlphaToCoverageEnable']/*"/>	
            <unmanaged>BOOL AlphaToCoverageEnable</unmanaged>	
            <unmanaged-short>BOOL AlphaToCoverageEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendStateDescription.IndependentBlendEnable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC::IndependentBlendEnable']/*"/>	
            <unmanaged>BOOL IndependentBlendEnable</unmanaged>	
            <unmanaged-short>BOOL IndependentBlendEnable</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.BlendStateDescription.RenderTarget">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC::RenderTarget']/*"/>	
            <unmanaged>D3D11_RENDER_TARGET_BLEND_DESC RenderTarget[8]</unmanaged>	
            <unmanaged-short>D3D11_RENDER_TARGET_BLEND_DESC RenderTarget</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Buffer">
            <summary>	
            <p>A buffer interface accesses a buffer resource, which is unstructured memory. Buffers typically store vertex or index data.</p>	
            </summary>	
            <remarks>	
            <p>There are three types of buffers: vertex, index, or a shader-constant buffer. Create a buffer resource by calling <strong><see cref="M:SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)"/></strong>.</p><p>A buffer must be bound to the pipeline before it can be accessed. Buffers can be bound to the input-assembler stage by calls to <strong><see cref="M:SharpDX.Direct3D11.InputAssemblerStage.SetVertexBuffers(System.Int32,SharpDX.Direct3D11.VertexBufferBinding)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.InputAssemblerStage.SetIndexBuffer(SharpDX.Direct3D11.Buffer,SharpDX.DXGI.Format,System.Int32)"/></strong>, to the stream-output stage by a call to <strong><see cref="M:SharpDX.Direct3D11.StreamOutputStage.SetTargets(SharpDX.Direct3D11.StreamOutputBufferBinding[])"/></strong>, and to a shader stage by calling the appropriate shader method (such as <strong><see cref="M:SharpDX.Direct3D11.VertexShaderStage.SetConstantBuffers(System.Int32,System.Int32,System.IntPtr)"/></strong> for example).</p><p>Buffers can be bound to multiple pipeline stages simultaneously for reading. A buffer can also be bound to a single pipeline stage for writing; however, the same buffer cannot be bound for reading and writing simultaneously.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Buffer']/*"/>	
            <msdn-id>ff476351</msdn-id>	
            <unmanaged>ID3D11Buffer</unmanaged>	
            <unmanaged-short>ID3D11Buffer</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Resource">
            <summary>	
            <p>A resource interface provides common actions on all resources.</p>	
            </summary>	
            <remarks>	
            <p>A resource interface cannot be created directly; instead, buffers and textures are created that inherit from a resource interface (see Creating Buffer Resources or Creating Texture Resources).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Resource']/*"/>	
            <msdn-id>ff476584</msdn-id>	
            <unmanaged>ID3D11Resource</unmanaged>	
            <unmanaged-short>ID3D11Resource</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumMipLevels">
            <summary>Constant MaximumMipLevels.</summary>
            <unmanaged>D3D11_REQ_MIP_LEVELS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.ResourceSizeInMegabytes">
            <summary>Constant ResourceSizeInMegabytes.</summary>
            <unmanaged>D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_A_TERM</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumTexture1DArraySize">
            <summary>Constant MaximumTexture1DArraySize.</summary>
            <unmanaged>D3D11_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumTexture2DArraySize">
            <summary>Constant MaximumTexture2DArraySize.</summary>
            <unmanaged>D3D11_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumTexture1DSize">
            <summary>Constant MaximumTexture1DSize.</summary>
            <unmanaged>D3D11_REQ_TEXTURE1D_U_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumTexture2DSize">
            <summary>Constant MaximumTexture2DSize.</summary>
            <unmanaged>D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize">
            <summary>Constant MaximumTexture3DSize.</summary>
            <unmanaged>D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumTextureCubeSize">
            <summary>Constant MaximumTextureCubeSize.</summary>
            <unmanaged>D3D11_REQ_TEXTURECUBE_DIMENSION</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Resource"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.Resource">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.Resource"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.GetDimension(SharpDX.Direct3D11.ResourceDimension@)">
            <summary>	
            <p>Get the type of the resource.</p>	
            </summary>	
            <param name="resourceDimensionRef"><dd>  <p>Pointer to the resource type (see <strong><see cref="T:SharpDX.Direct3D11.ResourceDimension"/></strong>).</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Resource::GetType']/*"/>	
            <msdn-id>ff476586</msdn-id>	
            <unmanaged>void ID3D11Resource::GetType([Out] D3D11_RESOURCE_DIMENSION* pResourceDimension)</unmanaged>	
            <unmanaged-short>ID3D11Resource::GetType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.SetEvictionPriority(System.Int32)">
            <summary>	
            <p>Set the eviction priority of a resource.</p>	
            </summary>	
            <param name="evictionPriority"><dd>  <p>Eviction priority for the resource, which is one of the following values:</p> <ul> <li><see cref="F:SharpDX.DXGI.ResourcePriority.Minimum"/></li> <li><see cref="F:SharpDX.DXGI.ResourcePriority.Low"/></li> <li><see cref="F:SharpDX.DXGI.ResourcePriority.Normal"/></li> <li><see cref="F:SharpDX.DXGI.ResourcePriority.High"/></li> <li><see cref="F:SharpDX.DXGI.ResourcePriority.Maximum"/></li> </ul> </dd></param>	
            <remarks>	
            <p>Resource priorities determine which resource to evict from video memory when the system has run out of video memory. The resource will not be lost; it will be removed from video memory and placed into system memory, or possibly placed onto the hard drive. The resource will be loaded back into video memory when it is required.</p><p>A resource that is set to the maximum priority, <see cref="F:SharpDX.DXGI.ResourcePriority.Maximum"/>, is only evicted if there is no other way of resolving the incoming memory request. The Windows Display Driver Model (WDDM) tries to split an incoming memory request to its minimum size and evict lower-priority resources before evicting a resource with maximum priority.</p><p>Changing the priorities of resources should be done carefully. The wrong eviction priorities could be a detriment to performance rather than an improvement. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Resource::SetEvictionPriority']/*"/>	
            <msdn-id>ff476587</msdn-id>	
            <unmanaged>void ID3D11Resource::SetEvictionPriority([In] unsigned int EvictionPriority)</unmanaged>	
            <unmanaged-short>ID3D11Resource::SetEvictionPriority</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.GetEvictionPriority">
            <summary>	
            <p>Get the eviction priority of a resource.</p>	
            </summary>	
            <returns><p>One of the following values, which specifies the eviction priority for the resource:</p><ul> <li><see cref="F:SharpDX.DXGI.ResourcePriority.Minimum"/></li> <li><see cref="F:SharpDX.DXGI.ResourcePriority.Low"/></li> <li><see cref="F:SharpDX.DXGI.ResourcePriority.Normal"/></li> <li><see cref="F:SharpDX.DXGI.ResourcePriority.High"/></li> <li><see cref="F:SharpDX.DXGI.ResourcePriority.Maximum"/></li> </ul></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Resource::GetEvictionPriority']/*"/>	
            <msdn-id>ff476585</msdn-id>	
            <unmanaged>unsigned int ID3D11Resource::GetEvictionPriority()</unmanaged>	
            <unmanaged-short>ID3D11Resource::GetEvictionPriority</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.FromSwapChain``1(SharpDX.DXGI.SwapChain,System.Int32)">
            <summary>
              Gets a swap chain back buffer.
            </summary>
            <typeparam name = "T">The type of the buffer.</typeparam>
            <param name = "swapChain">The swap chain to get the buffer from.</param>
            <param name = "index">The index of the desired buffer.</param>
            <returns>The buffer interface, or <c>null</c> on failure.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.CalculateSubResourceIndex(System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the sub resource index from a miplevel.
            </summary>
            <param name="mipSlice">A zero-based index for the mipmap level to address; 0 indicates the first, most detailed mipmap level.</param>
            <param name="arraySlice">The zero-based index for the array level to address; always use 0 for volume (3D) textures.</param>
            <param name="mipLevel">Number of mipmap levels in the resource.</param>
            <returns>
            The index which equals MipSlice + (ArraySlice * MipLevels).
            </returns>
            <unmanaged>D3D11CalcSubresource</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.CalculateMipSize(System.Int32,System.Int32)">
            <summary>
            Calculates the resulting size at a single level for an original size.
            </summary>
            <param name="mipLevel">The mip level to get the size.</param>
            <param name="baseSize">Size of the base.</param>
            <returns>
            Size of the mipLevel
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.CalculateSubResourceIndex(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Calculates the sub resource index for a particular mipSlice and arraySlice.
            </summary>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mipSize">The size of slice. This values is resource dependent. Texture1D -> mipSize of the Width. Texture2D -> mipSize of the Height. Texture3D -> mipsize of the Depth</param>
            <returns>The resulting miplevel calulated for this instance with this mipSlice and arraySlice.</returns>
        </member>
        <member name="P:SharpDX.Direct3D11.Resource.Dimension">
            <summary>	
            <p>Get the type of the resource.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Resource::GetType']/*"/>	
            <msdn-id>ff476586</msdn-id>	
            <unmanaged>GetType</unmanaged>	
            <unmanaged-short>GetType</unmanaged-short>	
            <unmanaged>void ID3D11Resource::GetType([Out] D3D11_RESOURCE_DIMENSION* pResourceDimension)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.Resource.EvictionPriority">
            <summary>	
            <p>Get or sets the eviction priority of a resource.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Resource::GetEvictionPriority']/*"/>	
            <msdn-id>ff476585</msdn-id>	
            <unmanaged>GetEvictionPriority / SetEvictionPriority</unmanaged>	
            <unmanaged-short>GetEvictionPriority</unmanaged-short>	
            <unmanaged>unsigned int ID3D11Resource::GetEvictionPriority()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BufferDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Buffer" /> class.
            </summary>
            <param name = "device">The device with which to associate the buffer.</param>
            <param name = "description">The description of the buffer.</param>
            <msdn-id>ff476501</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateBuffer([In] const D3D11_BUFFER_DESC* pDesc,[In, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Buffer** ppBuffer)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.#ctor(SharpDX.Direct3D11.Device,SharpDX.DataStream,SharpDX.Direct3D11.BufferDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Buffer" /> class.
            </summary>
            <param name = "device">The device with which to associate the buffer.</param>
            <param name = "data">Initial data used to initialize the buffer.</param>
            <param name = "description">The description of the buffer.</param>
            <msdn-id>ff476501</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateBuffer([In] const D3D11_BUFFER_DESC* pDesc,[In, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Buffer** ppBuffer)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.#ctor(SharpDX.Direct3D11.Device,System.IntPtr,SharpDX.Direct3D11.BufferDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Buffer" /> class.
            </summary>
            <param name="device">The device with which to associate the buffer.</param>
            <param name="dataPointer">The data pointer.</param>
            <param name="description">The description of the buffer.</param>
            <msdn-id>ff476501</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateBuffer([In] const D3D11_BUFFER_DESC* pDesc,[In, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Buffer** ppBuffer)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.#ctor(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Direct3D11.ResourceUsage,SharpDX.Direct3D11.BindFlags,SharpDX.Direct3D11.CpuAccessFlags,SharpDX.Direct3D11.ResourceOptionFlags,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Buffer" /> class.
            </summary>
            <param name = "device">The device with which to associate the buffer.</param>
            <param name = "sizeInBytes">The size, in bytes, of the buffer.</param>
            <param name = "usage">The usage pattern for the buffer.</param>
            <param name = "bindFlags">Flags specifying how the buffer will be bound to the pipeline.</param>
            <param name = "accessFlags">Flags specifying how the buffer will be accessible from the CPU.</param>
            <param name = "optionFlags">Miscellaneous resource options.</param>
            <param name = "structureByteStride">The size (in bytes) of the structure element for structured buffers.</param>
            <msdn-id>ff476501</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateBuffer([In] const D3D11_BUFFER_DESC* pDesc,[In, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Buffer** ppBuffer)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.#ctor(SharpDX.Direct3D11.Device,SharpDX.DataStream,System.Int32,SharpDX.Direct3D11.ResourceUsage,SharpDX.Direct3D11.BindFlags,SharpDX.Direct3D11.CpuAccessFlags,SharpDX.Direct3D11.ResourceOptionFlags,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Buffer" /> class.
            </summary>
            <param name = "device">The device with which to associate the buffer.</param>
            <param name = "data">Initial data used to initialize the buffer.</param>
            <param name = "sizeInBytes">The size, in bytes, of the buffer.</param>
            <param name = "usage">The usage pattern for the buffer.</param>
            <param name = "bindFlags">Flags specifying how the buffer will be bound to the pipeline.</param>
            <param name = "accessFlags">Flags specifying how the buffer will be accessible from the CPU.</param>
            <param name = "optionFlags">Miscellaneous resource options.</param>
            <param name = "structureByteStride">The size (in bytes) of the structure element for structured buffers.</param>
            <msdn-id>ff476501</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateBuffer([In] const D3D11_BUFFER_DESC* pDesc,[In, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Buffer** ppBuffer)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.Create``1(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BindFlags,``0@,System.Int32,SharpDX.Direct3D11.ResourceUsage,SharpDX.Direct3D11.CpuAccessFlags,SharpDX.Direct3D11.ResourceOptionFlags,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:SharpDX.Direct3D11.Buffer"/> class.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="device">The device with which to associate the buffer.</param>
            <param name="bindFlags">Flags specifying how the buffer will be bound to the pipeline.</param>
            <param name="data">Initial data used to initialize the buffer.</param>
            <param name="sizeInBytes">The size, in bytes, of the buffer. If 0 is specified, sizeof(T) is used. </param>
            <param name="usage">The usage pattern for the buffer.</param>
            <param name="accessFlags">Flags specifying how the buffer will be accessible from the CPU.</param>
            <param name="optionFlags">Miscellaneous resource options.</param>
            <param name="structureByteStride">The size (in bytes) of the structure element for structured buffers.</param>
            <returns>An initialized buffer</returns>
            <msdn-id>ff476501</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateBuffer([In] const D3D11_BUFFER_DESC* pDesc,[In, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Buffer** ppBuffer)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.Create``1(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BindFlags,``0[],System.Int32,SharpDX.Direct3D11.ResourceUsage,SharpDX.Direct3D11.CpuAccessFlags,SharpDX.Direct3D11.ResourceOptionFlags,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:SharpDX.Direct3D11.Buffer"/> class.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="device">The device with which to associate the buffer.</param>
            <param name="bindFlags">Flags specifying how the buffer will be bound to the pipeline.</param>
            <param name="data">Initial data used to initialize the buffer.</param>
            <param name="sizeInBytes">The size, in bytes, of the buffer. If 0 is specified, sizeof(T) * data.Length is used.</param>
            <param name="usage">The usage pattern for the buffer.</param>
            <param name="accessFlags">Flags specifying how the buffer will be accessible from the CPU.</param>
            <param name="optionFlags">Miscellaneous resource options.</param>
            <param name="structureByteStride">The size (in bytes) of the structure element for structured buffers.</param>
            <returns>An initialized buffer</returns>
            <msdn-id>ff476501</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateBuffer([In] const D3D11_BUFFER_DESC* pDesc,[In, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Buffer** ppBuffer)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.Create``1(SharpDX.Direct3D11.Device,``0@,SharpDX.Direct3D11.BufferDescription)">
            <summary>
            Creates a new instance of the <see cref="T:SharpDX.Direct3D11.Buffer"/> class.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="device">The device with which to associate the buffer.</param>
            <param name="data">Initial data used to initialize the buffer.</param>
            <param name="description">The description.</param>
            <returns>
            An initialized buffer
            </returns>
            <remarks>
            If the <see cref="F:SharpDX.Direct3D11.BufferDescription.SizeInBytes"/> is at 0, sizeof(T) is used.
            </remarks>
            <msdn-id>ff476501</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateBuffer([In] const D3D11_BUFFER_DESC* pDesc,[In, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Buffer** ppBuffer)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.Create``1(SharpDX.Direct3D11.Device,``0[],SharpDX.Direct3D11.BufferDescription)">
            <summary>
            Creates a new instance of the <see cref="T:SharpDX.Direct3D11.Buffer"/> class.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="device">The device with which to associate the buffer.</param>
            <param name="data">Initial data used to initialize the buffer.</param>
            <param name="description">The description.</param>
            <returns>
            An initialized buffer
            </returns>
            <remarks>
            If the <see cref="F:SharpDX.Direct3D11.BufferDescription.SizeInBytes"/> is at 0, sizeof(T) * data.Length is used.
            </remarks>
            <msdn-id>ff476501</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateBuffer([In] const D3D11_BUFFER_DESC* pDesc,[In, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Buffer** ppBuffer)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Buffer"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.Buffer">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.Buffer"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.GetDescription(SharpDX.Direct3D11.BufferDescription@)">
            <summary>	
            <p>Get the properties of a buffer resource.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>Pointer to a resource description (see <strong><see cref="T:SharpDX.Direct3D11.BufferDescription"/></strong>) filled in by the method.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Buffer::GetDesc']/*"/>	
            <msdn-id>ff476352</msdn-id>	
            <unmanaged>void ID3D11Buffer::GetDesc([Out] D3D11_BUFFER_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11Buffer::GetDesc</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.Buffer.Description">
            <summary>	
            <p>Get the properties of a buffer resource.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Buffer::GetDesc']/*"/>	
            <msdn-id>ff476352</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11Buffer::GetDesc([Out] D3D11_BUFFER_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.BufferDescription">
            <summary>	
            <p>Describes a buffer resource.</p>	
            </summary>	
            <remarks>	
            <p>This structure is used by <strong><see cref="M:SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)"/></strong> to create buffer resources.</p><p>In addition to this structure, there is also a derived structure in D3D11.h (CD3D11_BUFFER_DESC) which behaves like an inherited class to help create a buffer description.</p><p>If the bind flag is <see cref="F:SharpDX.Direct3D11.BindFlags.ConstantBuffer"/> then the <strong>ByteWidth</strong> value must be in multiples of 16, and less than or equal to D3D11_REQ_CONSTANT_BUFFER_ELEMENT_COUNT.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC']/*"/>	
            <msdn-id>ff476092</msdn-id>	
            <unmanaged>D3D11_BUFFER_DESC</unmanaged>	
            <unmanaged-short>D3D11_BUFFER_DESC</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.BufferDescription.#ctor(System.Int32,SharpDX.Direct3D11.ResourceUsage,SharpDX.Direct3D11.BindFlags,SharpDX.Direct3D11.CpuAccessFlags,SharpDX.Direct3D11.ResourceOptionFlags,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.BufferDescription"/> struct.
            </summary>
            <param name="sizeInBytes">The size in bytes.</param>
            <param name="usage">The usage.</param>
            <param name="bindFlags">The bind flags.</param>
            <param name="cpuAccessFlags">The cpu access flags.</param>
            <param name="optionFlags">The option flags.</param>
            <param name="structureByteStride">The structure byte stride.</param>
        </member>
        <member name="F:SharpDX.Direct3D11.BufferDescription.SizeInBytes">
            <summary>	
            <dd> <p>Size of the buffer in bytes.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC::ByteWidth']/*"/>	
            <msdn-id>ff476092</msdn-id>	
            <unmanaged>unsigned int ByteWidth</unmanaged>	
            <unmanaged-short>unsigned int ByteWidth</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BufferDescription.Usage">
            <summary>	
            <dd> <p>Identify how the buffer is expected to be read from and written to. Frequency of update is a key factor. The most common value is typically <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/>; see <strong><see cref="T:SharpDX.Direct3D11.ResourceUsage"/></strong> for all possible values.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC::Usage']/*"/>	
            <msdn-id>ff476092</msdn-id>	
            <unmanaged>D3D11_USAGE Usage</unmanaged>	
            <unmanaged-short>D3D11_USAGE Usage</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BufferDescription.BindFlags">
            <summary>	
            <dd> <p>Identify how the buffer will be bound to the pipeline. Flags (see <strong><see cref="T:SharpDX.Direct3D11.BindFlags"/></strong>) can be combined with a logical OR.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC::BindFlags']/*"/>	
            <msdn-id>ff476092</msdn-id>	
            <unmanaged>D3D11_BIND_FLAG BindFlags</unmanaged>	
            <unmanaged-short>D3D11_BIND_FLAG BindFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BufferDescription.CpuAccessFlags">
            <summary>	
            <dd> <p>CPU access flags (see <strong><see cref="T:SharpDX.Direct3D11.CpuAccessFlags"/></strong>) or 0 if no CPU access is necessary. Flags can be combined with a logical OR.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC::CPUAccessFlags']/*"/>	
            <msdn-id>ff476092</msdn-id>	
            <unmanaged>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged>	
            <unmanaged-short>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BufferDescription.OptionFlags">
            <summary>	
            <dd> <p>Miscellaneous flags (see <strong><see cref="T:SharpDX.Direct3D11.ResourceOptionFlags"/></strong>) or 0 if unused. Flags can be combined with a logical OR.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC::MiscFlags']/*"/>	
            <msdn-id>ff476092</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BufferDescription.StructureByteStride">
            <summary>	
            <dd> <p>The size of the structure (in bytes) when it represents a structured buffer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC::StructureByteStride']/*"/>	
            <msdn-id>ff476092</msdn-id>	
            <unmanaged>unsigned int StructureByteStride</unmanaged>	
            <unmanaged-short>unsigned int StructureByteStride</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ClassInstance">
            <summary>	
            <p>This interface encapsulates an HLSL class.</p>	
            </summary>	
            <remarks>	
            <p>This interface is created by calling <strong><see cref="M:SharpDX.Direct3D11.ClassLinkage.CreateClassInstance(System.String,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.ClassInstance)"/></strong>. The interface is used when binding shader resources to the pipeline using APIs such as <strong><see cref="M:SharpDX.Direct3D11.VertexShaderStage.SetShader(SharpDX.Direct3D11.VertexShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance']/*"/>	
            <msdn-id>ff476353</msdn-id>	
            <unmanaged>ID3D11ClassInstance</unmanaged>	
            <unmanaged-short>ID3D11ClassInstance</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassInstance.#ctor(SharpDX.Direct3D11.ClassLinkage,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>	
            Initializes a class-instance object that represents an HLSL class instance.	
            </summary>	
            <remarks>	
            Instances can be created (or gotten) before or after a shader is created. Use the same shader linkage object to acquire a class instance and create the shader the instance is going to be used in. For more information about using the <see cref="T:SharpDX.Direct3D11.ClassLinkage"/> interface, see {{Dynamic Linking}}. 	
            </remarks>	
            <param name="linkage">An instance of <see cref="P:SharpDX.Direct3D11.ClassInstance.ClassLinkage"/>.</param>
            <param name="classTypeName">The type name of a class to initialize. </param>
            <param name="constantBufferOffset">Identifies the constant buffer that contains the class data. </param>
            <param name="constantVectorOffset">The four-component vector offset from the start of the constant buffer where the class data will begin. Consequently, this is not a byte offset. </param>
            <param name="textureOffset">The texture slot for the first texture; there may be multiple textures following the offset. </param>
            <param name="samplerOffset">The sampler slot for the first sampler; there may be multiple samplers following the offset. </param>
            <returns>Returns S_OK if successful; otherwise, returns one of the following {{Direct3D 11 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D11ClassLinkage::CreateClassInstance([In] const char* pClassTypeName,[In] int ConstantBufferOffset,[In] int ConstantVectorOffset,[In] int TextureOffset,[In] int SamplerOffset,[Out] ID3D11ClassInstance** ppInstance)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ClassInstance.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ClassInstance"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassInstance.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.ClassInstance">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.ClassInstance"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.ClassInstance.GetClassLinkage(SharpDX.Direct3D11.ClassLinkage@)">
            <summary>	
            <p>Gets the <strong><see cref="T:SharpDX.Direct3D11.ClassLinkage"/></strong> object associated with the current HLSL class.</p>	
            </summary>	
            <param name="linkageOut">No documentation.</param>	
            <remarks>	
            <p>For more information about using the <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong> interface, see Dynamic Linking.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance::GetClassLinkage']/*"/>	
            <msdn-id>ff476354</msdn-id>	
            <unmanaged>void ID3D11ClassInstance::GetClassLinkage([Out] ID3D11ClassLinkage** ppLinkage)</unmanaged>	
            <unmanaged-short>ID3D11ClassInstance::GetClassLinkage</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassInstance.GetDescription(SharpDX.Direct3D11.ClassInstanceDescription@)">
            <summary>	
            <p>Gets a description of the current HLSL class.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.ClassInstanceDescription"/></strong> structure that describes the current HLSL class.</p> </dd></param>	
            <remarks>	
            <p>For more information about using the <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong> interface, see Dynamic Linking.</p><p>An instance is not restricted to being used for a single type in a single shader. An instance is flexible and can be used for any shader that used the same type name or instance name when the instance was generated.</p><ul> <li>A created instance will work for any shader that contains a type of the same type name. For instance, a class instance created with the type name <strong>DefaultShader</strong> would work in any shader that contained a type <strong>DefaultShader</strong> even though several shaders could describe a different type.</li> <li>A gotten instance maps directly to an instance name/index in a shader.  A class instance aquired using GetClassInstance will work for any shader that contains a class instance of the name used to generate the runtime instance, the instance does not have to be the same type in all of the shaders it's used in.</li> </ul><p>An instance does not replace the importance of reflection for a particular shader since a gotten instance will not know its slot location and a created instance only specifies a type name.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance::GetDesc']/*"/>	
            <msdn-id>ff476355</msdn-id>	
            <unmanaged>void ID3D11ClassInstance::GetDesc([Out] D3D11_CLASS_INSTANCE_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11ClassInstance::GetDesc</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassInstance.GetInstanceName(System.IntPtr,SharpDX.PointerSize@)">
            <summary>	
            <p>Gets the instance name of the current HLSL class.</p>	
            </summary>	
            <param name="instanceNameRef"><dd>  <p>The instance name of the current HLSL class.</p> </dd></param>	
            <param name="bufferLengthRef"><dd>  <p>The length of the <em>pInstanceName</em> parameter.</p> </dd></param>	
            <remarks>	
            <p>GetInstanceName will return a valid name only for instances acquired using <strong><see cref="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)"/></strong>.</p><p>For more information about using the <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong> interface, see Dynamic Linking.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance::GetInstanceName']/*"/>	
            <msdn-id>ff476356</msdn-id>	
            <unmanaged>void ID3D11ClassInstance::GetInstanceName([Out, Buffer, Optional] char* pInstanceName,[InOut] SIZE_T* pBufferLength)</unmanaged>	
            <unmanaged-short>ID3D11ClassInstance::GetInstanceName</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassInstance.GetTypeName(System.IntPtr,SharpDX.PointerSize@)">
            <summary>	
            <p>Gets the type of the current HLSL class.</p>	
            </summary>	
            <param name="typeNameRef"><dd>  <p>Type of the current HLSL class.</p> </dd></param>	
            <param name="bufferLengthRef"><dd>  <p>The length of the <em>pTypeName</em> parameter.</p> </dd></param>	
            <remarks>	
            <p>GetTypeName will return a valid name only for instances acquired using <strong><see cref="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)"/></strong>.</p><p>For more information about using the <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong> interface, see Dynamic Linking.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance::GetTypeName']/*"/>	
            <msdn-id>ff476357</msdn-id>	
            <unmanaged>void ID3D11ClassInstance::GetTypeName([Out, Buffer, Optional] char* pTypeName,[InOut] SIZE_T* pBufferLength)</unmanaged>	
            <unmanaged-short>ID3D11ClassInstance::GetTypeName</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.ClassInstance.InstanceName">
            <summary>
              Gets the instance name of the current HLSL class.
            </summary>
            <remarks>
              GetInstanceName will return a valid name only for instances acquired using <see cref="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)"/>.For more information about using the <see cref="T:SharpDX.Direct3D11.ClassInstance"/> interface, see {{Dynamic Linking}}.
            </remarks>
            <returns>The instance name of the current HLSL class.</returns>
            <unmanaged>void GetInstanceName([Out, Buffer, Optional] LPSTR pInstanceName,[InOut] SIZE_T* pBufferLength)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.ClassInstance.TypeName">
            <summary>
              Gets the type of the current HLSL class.
            </summary>
            <remarks>
              GetTypeName will return a valid name only for instances acquired using <see cref="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)"/>.For more information about using the <see cref="T:SharpDX.Direct3D11.ClassInstance"/> interface, see {{Dynamic Linking}}.
            </remarks>
            <returns>Type of the current HLSL class.</returns>
            <unmanaged>void GetTypeName([Out, Buffer, Optional] LPSTR pTypeName,[InOut] SIZE_T* pBufferLength)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.ClassInstance.ClassLinkage">
            <summary>	
            <p>Gets the <strong><see cref="T:SharpDX.Direct3D11.ClassLinkage"/></strong> object associated with the current HLSL class.</p>	
            </summary>	
            <remarks>	
            <p>For more information about using the <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong> interface, see Dynamic Linking.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance::GetClassLinkage']/*"/>	
            <msdn-id>ff476354</msdn-id>	
            <unmanaged>GetClassLinkage</unmanaged>	
            <unmanaged-short>GetClassLinkage</unmanaged-short>	
            <unmanaged>void ID3D11ClassInstance::GetClassLinkage([Out] ID3D11ClassLinkage** ppLinkage)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.ClassInstance.Description">
            <summary>	
            <p>Gets a description of the current HLSL class.</p>	
            </summary>	
            <remarks>	
            <p>For more information about using the <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong> interface, see Dynamic Linking.</p><p>An instance is not restricted to being used for a single type in a single shader. An instance is flexible and can be used for any shader that used the same type name or instance name when the instance was generated.</p><ul> <li>A created instance will work for any shader that contains a type of the same type name. For instance, a class instance created with the type name <strong>DefaultShader</strong> would work in any shader that contained a type <strong>DefaultShader</strong> even though several shaders could describe a different type.</li> <li>A gotten instance maps directly to an instance name/index in a shader.  A class instance aquired using GetClassInstance will work for any shader that contains a class instance of the name used to generate the runtime instance, the instance does not have to be the same type in all of the shaders it's used in.</li> </ul><p>An instance does not replace the importance of reflection for a particular shader since a gotten instance will not know its slot location and a created instance only specifies a type name.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance::GetDesc']/*"/>	
            <msdn-id>ff476355</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11ClassInstance::GetDesc([Out] D3D11_CLASS_INSTANCE_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.ClassLinkage">
            <summary>	
            <p>This interface encapsulates an HLSL dynamic linkage.</p>	
            </summary>	
            <remarks>	
            <p>A class linkage object can hold up to 64K gotten instances. A gotten instance is a handle that references a variable name in any shader that is created with that linkage object. When you create a shader with a class linkage object, the runtime gathers these instances and stores them in the class linkage object. For more information about how a class linkage object is used, see Storing Variables and Types for Shaders to Share.</p><p>An <strong><see cref="T:SharpDX.Direct3D11.ClassLinkage"/></strong> object is created using the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateClassLinkage(SharpDX.Direct3D11.ClassLinkage)"/></strong> method.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassLinkage']/*"/>	
            <msdn-id>ff476358</msdn-id>	
            <unmanaged>ID3D11ClassLinkage</unmanaged>	
            <unmanaged-short>ID3D11ClassLinkage</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassLinkage.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
              Create a new instance of <see cref = "T:SharpDX.Direct3D11.ClassLinkage" />.
            </summary>
            <param name = "device"></param>
        </member>
        <member name="M:SharpDX.Direct3D11.ClassLinkage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ClassLinkage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassLinkage.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.ClassLinkage">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.ClassLinkage"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)">
            <summary>	
            <p>Gets the class-instance object that represents the specified HLSL class.</p>	
            </summary>	
            <param name="classInstanceNameRef"><dd>  <p>The name of a class for which to get the class instance.</p> </dd></param>	
            <param name="instanceIndex"><dd>  <p>The index of the class instance.</p> </dd></param>	
            <returns><dd>  <p>The address of a reference to an <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong> interface to initialize.</p> </dd></returns>	
            <remarks>	
            <p>For more information about using the <strong><see cref="T:SharpDX.Direct3D11.ClassLinkage"/></strong> interface, see Dynamic Linking.</p><p>A class instance must have at least 1 data member in order to be available for the runtime to use with <strong><see cref="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)"/></strong>. Any instance with no members will be optimized out of a compiled shader blob as a zero-sized object. If you have a class with no data members, use <strong><see cref="M:SharpDX.Direct3D11.ClassLinkage.CreateClassInstance(System.String,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.ClassInstance)"/></strong> instead.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassLinkage::GetClassInstance']/*"/>	
            <msdn-id>ff476360</msdn-id>	
            <unmanaged>HRESULT ID3D11ClassLinkage::GetClassInstance([In] const char* pClassInstanceName,[In] unsigned int InstanceIndex,[Out] ID3D11ClassInstance** ppInstance)</unmanaged>	
            <unmanaged-short>ID3D11ClassLinkage::GetClassInstance</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassLinkage.CreateClassInstance(System.String,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.ClassInstance)">
            <summary>	
            <p>Initializes a class-instance object that represents an HLSL class instance.</p>	
            </summary>	
            <param name="classTypeNameRef"><dd>  <p>The type name of a class to initialize.</p> </dd></param>	
            <param name="constantBufferOffset"><dd>  <p>Identifies the constant buffer that contains the class data.</p> </dd></param>	
            <param name="constantVectorOffset"><dd>  <p>The four-component vector offset from the start of the constant buffer where the class data will begin. Consequently, this is not a byte offset.</p> </dd></param>	
            <param name="textureOffset"><dd>  <p>The texture slot for the first texture; there may be multiple textures following the offset.</p> </dd></param>	
            <param name="samplerOffset"><dd>  <p>The sampler slot for the first sampler; there may be multiple samplers following the offset.</p> </dd></param>	
            <param name="instanceOut"><dd>  <p>The address of a reference to an <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong> interface to initialize.</p> </dd></param>	
            <returns><p>Returns <see cref="F:SharpDX.Result.Ok"/> if successful; otherwise, returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>Instances can be created (or gotten) before or after a shader is created. Use the same shader linkage object to acquire a class instance and create the shader the instance is going to be used in.</p><p>For more information about using the <strong><see cref="T:SharpDX.Direct3D11.ClassLinkage"/></strong> interface, see Dynamic Linking.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassLinkage::CreateClassInstance']/*"/>	
            <msdn-id>ff476359</msdn-id>	
            <unmanaged>HRESULT ID3D11ClassLinkage::CreateClassInstance([In] const char* pClassTypeName,[In] unsigned int ConstantBufferOffset,[In] unsigned int ConstantVectorOffset,[In] unsigned int TextureOffset,[In] unsigned int SamplerOffset,[Out, Fast] ID3D11ClassInstance** ppInstance)</unmanaged>	
            <unmanaged-short>ID3D11ClassLinkage::CreateClassInstance</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ComputeShader">
            <summary>	
            <p>A compute-shader interface manages an executable program (a compute shader) that controls the compute-shader stage.</p>	
            </summary>	
            <remarks>	
            <p>The compute-shader interface has no methods; use HLSL to implement your shader functionality. All shaders are implemented from a common set of features referred to as the common-shader core..</p><p>To create a compute-shader interface, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateComputeShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.ComputeShader)"/></strong>. Before using a compute shader you must bind it to the device by calling <strong><see cref="M:SharpDX.Direct3D11.ComputeShaderStage.SetShader(SharpDX.Direct3D11.ComputeShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)"/></strong>.</p><p>This interface is defined in D3D11.h.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ComputeShader']/*"/>	
            <msdn-id>ff476363</msdn-id>	
            <unmanaged>ID3D11ComputeShader</unmanaged>	
            <unmanaged-short>ID3D11ComputeShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShader.#ctor(SharpDX.Direct3D11.Device,System.Byte[],SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.ComputeShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ComputeShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShader.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.ComputeShader">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.ComputeShader"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:SharpDX.Direct3D11.BlendState1">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the description for blending state that you used to create the blend-state object.</p>	
            </summary>	
            <remarks>	
            <p>You use the description for blending state in a call to the <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateBlendState1(SharpDX.Direct3D11.BlendStateDescription1@,SharpDX.Direct3D11.BlendState1)"/></strong> method to create the blend-state object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11BlendState1']/*"/>	
            <msdn-id>hh404573</msdn-id>	
            <unmanaged>ID3D11BlendState1</unmanaged>	
            <unmanaged-short>ID3D11BlendState1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState1.#ctor(SharpDX.Direct3D11.Device1,SharpDX.Direct3D11.BlendStateDescription1)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.BlendState1" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState1.#ctor(SharpDX.Direct3D11.Device1,SharpDX.Direct3D11.BlendStateDescription1@)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.BlendState1" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.BlendState1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState1.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.BlendState1">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.BlendState1"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState1.GetDescription1(SharpDX.Direct3D11.BlendStateDescription1@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the description for blending state that you used to create the blend-state object.</p>	
            </summary>	
            <param name="descRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.BlendStateDescription1"/></strong> structure that receives a description of the blend state. This blend state can specify logical operations as well as blending operations.</p> </dd></param>	
            <remarks>	
            <p>You use the description for blending state in a call to the <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateBlendState1(SharpDX.Direct3D11.BlendStateDescription1@,SharpDX.Direct3D11.BlendState1)"/></strong> method to create the blend-state object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11BlendState1::GetDesc1']/*"/>	
            <msdn-id>hh404573</msdn-id>	
            <unmanaged>void ID3D11BlendState1::GetDesc1([Out] D3D11_BLEND_DESC1* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11BlendState1::GetDesc1</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.BlendState1.Description1">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the description for blending state that you used to create the blend-state object.</p>	
            </summary>	
            <remarks>	
            <p>You use the description for blending state in a call to the <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateBlendState1(SharpDX.Direct3D11.BlendStateDescription1@,SharpDX.Direct3D11.BlendState1)"/></strong> method to create the blend-state object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11BlendState1::GetDesc1']/*"/>	
            <msdn-id>hh404573</msdn-id>	
            <unmanaged>GetDesc1</unmanaged>	
            <unmanaged-short>GetDesc1</unmanaged-short>	
            <unmanaged>void ID3D11BlendState1::GetDesc1([Out] D3D11_BLEND_DESC1* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.BlendStateDescription1">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p><strong>Note</strong>??This structure is supported by the Direct3D 11.1 runtime, which is available on Windows?8 Consumer Preview and later operating systems.</p><p>Describes the blend state that you use in a call to <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateBlendState1(SharpDX.Direct3D11.BlendStateDescription1@,SharpDX.Direct3D11.BlendState1)"/></strong> to create a blend-state object.</p>	
            </summary>	
            <remarks>	
            <p>Here are the default values for blend state.</p><table> <tr><th>State</th><th>Default Value</th></tr> <tr><td>AlphaToCoverageEnable</td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td>IndependentBlendEnable</td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td>RenderTarget[0].BlendEnable</td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td>RenderTarget[0].LogicOpEnable</td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td>RenderTarget[0].SrcBlend</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.One"/></td></tr> <tr><td>RenderTarget[0].DestBlend</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.Zero"/></td></tr> <tr><td>RenderTarget[0].BlendOp</td><td><see cref="F:SharpDX.Direct3D11.BlendOperation.Add"/></td></tr> <tr><td>RenderTarget[0].SrcBlendAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.One"/></td></tr> <tr><td>RenderTarget[0].DestBlendAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.Zero"/></td></tr> <tr><td>RenderTarget[0].BlendOpAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOperation.Add"/></td></tr> <tr><td>RenderTarget[0].LogicOp</td><td><see cref="F:SharpDX.Direct3D11.LogicOperation.Noop"/></td></tr> <tr><td>RenderTarget[0].RenderTargetWriteMask</td><td><see cref="F:SharpDX.Direct3D11.ColorWriteMaskFlags.All"/></td></tr> </table><p>?</p><p>If the driver type is set to <strong><see cref="F:SharpDX.Direct3D.DriverType.Hardware"/></strong>, the feature level is set to less than or equal to <strong><see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/></strong>, and the pixel format of the render target is set to <strong><see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UNorm_SRgb"/></strong>, <strong><see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm_SRgb"/></strong>, or <strong><see cref="F:SharpDX.DXGI.Format.B8G8R8X8_UNorm_SRgb"/></strong>, the display device performs the blend in standard RGB (sRGB) space and not in linear space. However, if the feature level is set to greater than <strong><see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/></strong>, the display device performs the blend in linear space, which is ideal.</p><p>When you set the <strong>LogicOpEnable</strong> member of the first element of the <strong>RenderTarget</strong> array (<strong>RenderTarget</strong>[0]) to <strong>TRUE</strong>, you must also set the <strong>BlendEnable</strong> member of  <strong>RenderTarget</strong>[0] to <strong><see cref="F:SharpDX.Result.False"/></strong>, and the <strong>IndependentBlendEnable</strong> member of  this <strong><see cref="T:SharpDX.Direct3D11.BlendStateDescription1"/></strong> to <strong><see cref="F:SharpDX.Result.False"/></strong>.  This reflects the limitation in hardware that you can't mix logic operations with blending across multiple render targets, and that when you use a logic operation, you must apply the same logic operation to all render targets.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC1']/*"/>	
            <msdn-id>hh404435</msdn-id>	
            <unmanaged>D3D11_BLEND_DESC1</unmanaged>	
            <unmanaged-short>D3D11_BLEND_DESC1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.BlendStateDescription1.Default">
            <summary>
            Returns default values for <see cref="T:SharpDX.Direct3D11.BlendStateDescription1"/>. 
            </summary>
            <remarks>
            See MSDN documentation for default values.
            </remarks>
        </member>
        <member name="M:SharpDX.Direct3D11.BlendStateDescription1.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A copy of this instance.</returns>
            <remarks>
            Because this structure contains an array, it is not possible to modify it without making an explicit clone method.
            </remarks>
        </member>
        <member name="F:SharpDX.Direct3D11.BlendStateDescription1.AlphaToCoverageEnable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC1::AlphaToCoverageEnable']/*"/>	
            <unmanaged>BOOL AlphaToCoverageEnable</unmanaged>	
            <unmanaged-short>BOOL AlphaToCoverageEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendStateDescription1.IndependentBlendEnable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC1::IndependentBlendEnable']/*"/>	
            <unmanaged>BOOL IndependentBlendEnable</unmanaged>	
            <unmanaged-short>BOOL IndependentBlendEnable</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.BlendStateDescription1.RenderTarget">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC1::RenderTarget']/*"/>	
            <unmanaged>D3D11_RENDER_TARGET_BLEND_DESC1 RenderTarget[8]</unmanaged>	
            <unmanaged-short>D3D11_RENDER_TARGET_BLEND_DESC1 RenderTarget</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RasterizerStateDescription1">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p><strong>Note</strong>??This structure is supported by the Direct3D 11.1 runtime, which is available on Windows?8 Consumer Preview and later operating systems.</p><p>Describes rasterizer state.</p>	
            </summary>	
            <remarks>	
            <p>Rasterizer state defines the behavior of the rasterizer stage. To create a rasterizer-state object, call <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateRasterizerState1(SharpDX.Direct3D11.RasterizerStateDescription1@,SharpDX.Direct3D11.RasterizerState1)"/></strong>. To set rasterizer state, call <strong><see cref="M:SharpDX.Direct3D11.RasterizerStage.SetState(SharpDX.Direct3D11.RasterizerState)"/></strong>.</p><p>If you do not specify some rasterizer state,  the Direct3D runtime uses the following default values for rasterizer state.</p><table> <tr><th>State</th><th>Default Value</th></tr> <tr><td><strong>FillMode</strong></td><td>Solid</td></tr> <tr><td><strong>CullMode</strong></td><td>Back</td></tr> <tr><td><strong>FrontCounterClockwise</strong></td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td><strong>DepthBias</strong></td><td>0</td></tr> <tr><td><strong>SlopeScaledDepthBias</strong></td><td>0.0f</td></tr> <tr><td><strong>DepthBiasClamp</strong></td><td>0.0f</td></tr> <tr><td><strong>DepthClipEnable</strong></td><td><strong>TRUE</strong></td></tr> <tr><td><strong>ScissorEnable</strong></td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td><strong>MultisampleEnable</strong></td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td><strong>AntialiasedLineEnable</strong></td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td><strong>ForcedSampleCount</strong></td><td>0</td></tr> </table><p>?</p><p><strong>Note</strong>??For feature levels 9.1, 9.2, 9.3, and 10.0, if you set <strong>MultisampleEnable</strong> to <strong><see cref="F:SharpDX.Result.False"/></strong>, the runtime renders all points, lines, and triangles without anti-aliasing even for render targets with a sample count greater than 1. For feature levels 10.1 and higher, the setting of <strong>MultisampleEnable</strong> has no effect on points and triangles with regard to MSAA and impacts only the selection of the line-rendering algorithm as shown in this table:</p><p> </p><table> <tr><th>Line-rendering algorithm</th><th><strong>MultisampleEnable</strong></th><th><strong>AntialiasedLineEnable</strong></th></tr> <tr><td>Aliased</td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td>Alpha antialiased</td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td><td><strong>TRUE</strong></td></tr> <tr><td>Quadrilateral</td><td><strong>TRUE</strong></td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td>Quadrilateral</td><td><strong>TRUE</strong></td><td><strong>TRUE</strong></td></tr> </table><p>?</p><p>The settings of the <strong>MultisampleEnable</strong> and <strong>AntialiasedLineEnable</strong> members apply only to multisample antialiasing (MSAA) render targets (that is, render targets with sample counts greater than 1). Because of the differences in feature-level behavior and as long as you aren?t performing any line drawing or don?t mind that lines render as quadrilaterals, we recommend that you always set <strong>MultisampleEnable</strong> to <strong>TRUE</strong> whenever you render on MSAA render targets.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1']/*"/>	
            <msdn-id>hh404489</msdn-id>	
            <unmanaged>D3D11_RASTERIZER_DESC1</unmanaged>	
            <unmanaged-short>D3D11_RASTERIZER_DESC1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStateDescription1.Default">
            <summary>
            Returns default values for <see cref="T:SharpDX.Direct3D11.RasterizerStateDescription1"/>. 
            </summary>
            <remarks>
            See MSDN documentation for default values.
            </remarks>
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription1.FillMode">
            <summary>	
            <dd> <p>Determines the fill mode to use when rendering.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::FillMode']/*"/>	
            <msdn-id>hh404489</msdn-id>	
            <unmanaged>D3D11_FILL_MODE FillMode</unmanaged>	
            <unmanaged-short>D3D11_FILL_MODE FillMode</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription1.CullMode">
            <summary>	
            <dd> <p>Indicates that triangles facing the specified direction are not drawn.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::CullMode']/*"/>	
            <msdn-id>hh404489</msdn-id>	
            <unmanaged>D3D11_CULL_MODE CullMode</unmanaged>	
            <unmanaged-short>D3D11_CULL_MODE CullMode</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription1.IsFrontCounterClockwise">
            <summary>	
            <dd> <p>Specifies whether a triangle is front- or back-facing. If <strong>TRUE</strong>, a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If <strong><see cref="F:SharpDX.Result.False"/></strong>, the opposite is true.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::FrontCounterClockwise']/*"/>	
            <msdn-id>hh404489</msdn-id>	
            <unmanaged>BOOL FrontCounterClockwise</unmanaged>	
            <unmanaged-short>BOOL FrontCounterClockwise</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription1.DepthBias">
            <summary>	
            <dd> <p>Depth value added to a given pixel. For info about depth bias, see Depth Bias.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::DepthBias']/*"/>	
            <msdn-id>hh404489</msdn-id>	
            <unmanaged>int DepthBias</unmanaged>	
            <unmanaged-short>int DepthBias</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription1.DepthBiasClamp">
            <summary>	
            <dd> <p>Maximum depth bias of a pixel. For info about depth bias, see Depth Bias.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::DepthBiasClamp']/*"/>	
            <msdn-id>hh404489</msdn-id>	
            <unmanaged>float DepthBiasClamp</unmanaged>	
            <unmanaged-short>float DepthBiasClamp</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription1.SlopeScaledDepthBias">
            <summary>	
            <dd> <p>Scalar on a given pixel's slope. For info about depth bias, see Depth Bias.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::SlopeScaledDepthBias']/*"/>	
            <msdn-id>hh404489</msdn-id>	
            <unmanaged>float SlopeScaledDepthBias</unmanaged>	
            <unmanaged-short>float SlopeScaledDepthBias</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription1.IsDepthClipEnabled">
            <summary>	
            <dd> <p>Specifies whether to enable clipping based on distance.</p> <p>The hardware always performs x and y clipping of rasterized coordinates. When <strong>DepthClipEnable</strong> is set to the default?<strong>TRUE</strong>, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).	
            </p> <code> 0 &lt; w	
            -w &lt;= x &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)	
            -w &lt;= y &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)	
            0 &lt;= z &lt;= w	
            </code> <p>When you set <strong>DepthClipEnable</strong> to <strong><see cref="F:SharpDX.Result.False"/></strong>, the hardware skips the z clipping (that is, the last step in the preceding algorithm). However, the hardware still performs the "0 &lt; w" clipping. When z clipping is disabled, improper depth ordering at the pixel level might result. However, when z clipping is disabled, stencil shadow implementations are simplified. In other words, you can avoid complex special-case handling for geometry that goes beyond the back clipping plane.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::DepthClipEnable']/*"/>	
            <msdn-id>hh404489</msdn-id>	
            <unmanaged>BOOL DepthClipEnable</unmanaged>	
            <unmanaged-short>BOOL DepthClipEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription1.IsScissorEnabled">
            <summary>	
            <dd> <p>Specifies whether to enable scissor-rectangle culling. All pixels outside an active scissor rectangle are culled.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::ScissorEnable']/*"/>	
            <msdn-id>hh404489</msdn-id>	
            <unmanaged>BOOL ScissorEnable</unmanaged>	
            <unmanaged-short>BOOL ScissorEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription1.IsMultisampleEnabled">
            <summary>	
            <dd> <p>Specifies whether to use the quadrilateral or alpha line anti-aliasing algorithm on multisample antialiasing (MSAA) render targets. Set to <strong>TRUE</strong> to use the quadrilateral line anti-aliasing algorithm and to <strong><see cref="F:SharpDX.Result.False"/></strong> to use the alpha line anti-aliasing algorithm. For more info about this member, see Remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::MultisampleEnable']/*"/>	
            <msdn-id>hh404489</msdn-id>	
            <unmanaged>BOOL MultisampleEnable</unmanaged>	
            <unmanaged-short>BOOL MultisampleEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription1.IsAntialiasedLineEnabled">
            <summary>	
            <dd> <p>Specifies whether to enable line antialiasing; only applies if doing line drawing and <strong>MultisampleEnable</strong> is <strong><see cref="F:SharpDX.Result.False"/></strong>. For more info about this member, see Remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::AntialiasedLineEnable']/*"/>	
            <msdn-id>hh404489</msdn-id>	
            <unmanaged>BOOL AntialiasedLineEnable</unmanaged>	
            <unmanaged-short>BOOL AntialiasedLineEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription1.ForcedSampleCount">
            <summary>	
            <dd> <p>The sample count that is forced while UAV rendering or rasterizing. Valid values are 0, 1, 2, 4, 8, and optionally 16. 0 indicates that the sample count is not forced.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::ForcedSampleCount']/*"/>	
            <msdn-id>hh404489</msdn-id>	
            <unmanaged>unsigned int ForcedSampleCount</unmanaged>	
            <unmanaged-short>unsigned int ForcedSampleCount</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilStateDescription">
            <summary>	
            <p>Describes depth-stencil state.</p>	
            </summary>	
            <remarks>	
            <p>Depth-stencil state controls how depth-stencil testing is performed by the output-merger stage.</p><p>The following table shows the default values of depth-stencil states.</p><table> <tr><th>State</th><th>Default Value</th></tr> <tr><td>DepthEnable</td><td>TRUE</td></tr> <tr><td>DepthWriteMask</td><td><see cref="F:SharpDX.Direct3D11.DepthWriteMask.All"/></td></tr> <tr><td>DepthFunc</td><td><see cref="F:SharpDX.Direct3D11.Comparison.Less"/></td></tr> <tr><td>StencilEnable</td><td><see cref="F:SharpDX.Result.False"/></td></tr> <tr><td>StencilReadMask</td><td>D3D11_DEFAULT_STENCIL_READ_MASK</td></tr> <tr><td>StencilWriteMask</td><td>D3D11_DEFAULT_STENCIL_WRITE_MASK</td></tr> <tr><td> <p>FrontFace.StencilFunc</p> <p>and</p> <p>BackFace.StencilFunc</p> </td><td><see cref="F:SharpDX.Direct3D11.Comparison.Always"/></td></tr> <tr><td> <p>FrontFace.StencilDepthFailOp</p> <p>and</p> <p>BackFace.StencilDepthFailOp</p> </td><td><see cref="F:SharpDX.Direct3D11.StencilOperation.Keep"/></td></tr> <tr><td> <p>FrontFace.StencilPassOp</p> <p>and</p> <p>BackFace.StencilPassOp</p> </td><td><see cref="F:SharpDX.Direct3D11.StencilOperation.Keep"/></td></tr> <tr><td> <p>FrontFace.StencilFailOp</p> <p>and</p> <p>BackFace.StencilFailOp</p> </td><td><see cref="F:SharpDX.Direct3D11.StencilOperation.Keep"/></td></tr> </table><p>?</p><p>The formats that support stenciling are <see cref="F:SharpDX.DXGI.Format.D24_UNorm_S8_UInt"/> and <see cref="F:SharpDX.DXGI.Format.D32_Float_S8X24_UInt"/>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC']/*"/>	
            <msdn-id>ff476110</msdn-id>	
            <unmanaged>D3D11_DEPTH_STENCIL_DESC</unmanaged>	
            <unmanaged-short>D3D11_DEPTH_STENCIL_DESC</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilStateDescription.Default">
            <summary>
            Returns default values for <see cref="T:SharpDX.Direct3D11.DepthStencilStateDescription"/>. 
            </summary>
            <remarks>
            See MSDN documentation for default values.
            </remarks>
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.IsDepthEnabled">
            <summary>	
            <dd> <p>Enable depth testing.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::DepthEnable']/*"/>	
            <msdn-id>ff476110</msdn-id>	
            <unmanaged>BOOL DepthEnable</unmanaged>	
            <unmanaged-short>BOOL DepthEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.DepthWriteMask">
            <summary>	
            <dd> <p>Identify a portion of the depth-stencil buffer that can be modified by depth data (see <strong><see cref="T:SharpDX.Direct3D11.DepthWriteMask"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::DepthWriteMask']/*"/>	
            <msdn-id>ff476110</msdn-id>	
            <unmanaged>D3D11_DEPTH_WRITE_MASK DepthWriteMask</unmanaged>	
            <unmanaged-short>D3D11_DEPTH_WRITE_MASK DepthWriteMask</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.DepthComparison">
            <summary>	
            <dd> <p>A function that compares depth data against existing depth data. The function options are listed in <strong><see cref="T:SharpDX.Direct3D11.Comparison"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::DepthFunc']/*"/>	
            <msdn-id>ff476110</msdn-id>	
            <unmanaged>D3D11_COMPARISON_FUNC DepthFunc</unmanaged>	
            <unmanaged-short>D3D11_COMPARISON_FUNC DepthFunc</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.IsStencilEnabled">
            <summary>	
            <dd> <p>Enable stencil testing.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::StencilEnable']/*"/>	
            <msdn-id>ff476110</msdn-id>	
            <unmanaged>BOOL StencilEnable</unmanaged>	
            <unmanaged-short>BOOL StencilEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.StencilReadMask">
            <summary>	
            <dd> <p>Identify a portion of the depth-stencil buffer for reading stencil data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::StencilReadMask']/*"/>	
            <msdn-id>ff476110</msdn-id>	
            <unmanaged>unsigned char StencilReadMask</unmanaged>	
            <unmanaged-short>unsigned char StencilReadMask</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.StencilWriteMask">
            <summary>	
            <dd> <p>Identify a portion of the depth-stencil buffer for writing stencil data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::StencilWriteMask']/*"/>	
            <msdn-id>ff476110</msdn-id>	
            <unmanaged>unsigned char StencilWriteMask</unmanaged>	
            <unmanaged-short>unsigned char StencilWriteMask</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.FrontFace">
            <summary>	
            <dd> <p>Identify how to use the results of the depth test and the stencil test for pixels whose surface normal is facing towards the camera (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilOperationDescription"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::FrontFace']/*"/>	
            <msdn-id>ff476110</msdn-id>	
            <unmanaged>D3D11_DEPTH_STENCILOP_DESC FrontFace</unmanaged>	
            <unmanaged-short>D3D11_DEPTH_STENCILOP_DESC FrontFace</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.BackFace">
            <summary>	
            <dd> <p>Identify how to use the results of the depth test and the stencil test for pixels whose surface normal is facing away from the camera (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilOperationDescription"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::BackFace']/*"/>	
            <msdn-id>ff476110</msdn-id>	
            <unmanaged>D3D11_DEPTH_STENCILOP_DESC BackFace</unmanaged>	
            <unmanaged-short>D3D11_DEPTH_STENCILOP_DESC BackFace</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Device1">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gives a device access to a shared resource that is referenced by name and that was created on a different device. You must have previously created the resource as shared and specified that it uses NT handles (that is, you set the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle"/></strong> flag).</p>	
            </summary>	
            <remarks>	
            <p>The behavior of <strong>OpenSharedResourceByName</strong> is similar to the behavior of the <strong><see cref="M:SharpDX.Direct3D11.Device1.OpenSharedResource1(System.IntPtr,System.Guid,System.IntPtr@)"/></strong> method; each call to <strong>OpenSharedResourceByName</strong> to access a resource creates a new resource object.  In other words, if you call <strong>OpenSharedResourceByName</strong> twice and pass the same resource name to <em>lpName</em>, you receive two resource  objects with different <strong><see cref="T:SharpDX.ComObject"/></strong> references.</p><p><strong>To share a resource between two devices</strong></p><ol> <li>Create the resource as shared and specify that it uses NT handles, by setting the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle"/></strong> flag.</li> <li>Obtain the REFIID, or <see cref="T:System.Guid"/>, of the interface to the resource by using the __uuidof() macro. For example, __uuidof(<strong><see cref="T:SharpDX.Direct3D11.Texture2D"/></strong>) retrieves the <see cref="T:System.Guid"/> of the interface to a 2D texture.</li> <li>Query the resource for the <strong><see cref="T:SharpDX.DXGI.Resource1"/></strong> interface.</li> <li>Call the <strong><see cref="M:SharpDX.DXGI.Resource1.CreateSharedHandle(System.String,SharpDX.DXGI.SharedResourceFlags,System.Nullable{SharpDX.Win32.SecurityAttributes})"/></strong> method to obtain the unique handle to the resource. In this <strong><see cref="M:SharpDX.DXGI.Resource1.CreateSharedHandle(System.String,SharpDX.DXGI.SharedResourceFlags,System.Nullable{SharpDX.Win32.SecurityAttributes})"/></strong> call, you must pass a name for the resource if you want to subsequently call <strong>OpenSharedResourceByName</strong> to access the resource by name. </li> </ol>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1']/*"/>	
            <msdn-id>hh404595</msdn-id>	
            <unmanaged>ID3D11Device1</unmanaged>	
            <unmanaged-short>ID3D11Device1</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Device">
            <summary>	
            <p>The device interface represents a virtual adapter; it is used to create resources.</p>	
            </summary>	
            <remarks>	
            <p>A device is created using <strong><see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device']/*"/>	
            <msdn-id>ff476379</msdn-id>	
            <unmanaged>ID3D11Device</unmanaged>	
            <unmanaged-short>ID3D11Device</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Device.MultisampleCountMaximum">
            <summary>Constant MultisampleCountMaximum.</summary>
            <unmanaged>D3D11_MAX_MULTISAMPLE_SAMPLE_COUNT</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(SharpDX.Direct3D.DriverType)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Device"/> class. 
            </summary>
            <param name="driverType">
            Type of the driver.
            </param>
            <msdn-id>ff476082</msdn-id>	
            <unmanaged>HRESULT D3D11CreateDevice([In, Optional] IDXGIAdapter* pAdapter,[In] D3D_DRIVER_TYPE DriverType,[In] HINSTANCE Software,[In] D3D11_CREATE_DEVICE_FLAG Flags,[In, Buffer, Optional] const D3D_FEATURE_LEVEL* pFeatureLevels,[In] unsigned int FeatureLevels,[In] unsigned int SDKVersion,[Out, Fast] ID3D11Device** ppDevice,[Out, Optional] D3D_FEATURE_LEVEL* pFeatureLevel,[Out, Optional] ID3D11DeviceContext** ppImmediateContext)</unmanaged>	
            <unmanaged-short>D3D11CreateDevice</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(SharpDX.DXGI.Adapter)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Device"/> class. 
            </summary>
            <param name="adapter">
            The adapter.
            </param>
            <msdn-id>ff476082</msdn-id>	
            <unmanaged>HRESULT D3D11CreateDevice([In, Optional] IDXGIAdapter* pAdapter,[In] D3D_DRIVER_TYPE DriverType,[In] HINSTANCE Software,[In] D3D11_CREATE_DEVICE_FLAG Flags,[In, Buffer, Optional] const D3D_FEATURE_LEVEL* pFeatureLevels,[In] unsigned int FeatureLevels,[In] unsigned int SDKVersion,[Out, Fast] ID3D11Device** ppDevice,[Out, Optional] D3D_FEATURE_LEVEL* pFeatureLevel,[Out, Optional] ID3D11DeviceContext** ppImmediateContext)</unmanaged>	
            <unmanaged-short>D3D11CreateDevice</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(SharpDX.Direct3D.DriverType,SharpDX.Direct3D11.DeviceCreationFlags)">
            <summary>
            Constructor for a D3D11 Device. See <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> for more information.
            </summary>
            <param name="driverType">Type of the driver.</param>
            <param name="flags">The flags.</param>
            <msdn-id>ff476082</msdn-id>	
            <unmanaged>HRESULT D3D11CreateDevice([In, Optional] IDXGIAdapter* pAdapter,[In] D3D_DRIVER_TYPE DriverType,[In] HINSTANCE Software,[In] D3D11_CREATE_DEVICE_FLAG Flags,[In, Buffer, Optional] const D3D_FEATURE_LEVEL* pFeatureLevels,[In] unsigned int FeatureLevels,[In] unsigned int SDKVersion,[Out, Fast] ID3D11Device** ppDevice,[Out, Optional] D3D_FEATURE_LEVEL* pFeatureLevel,[Out, Optional] ID3D11DeviceContext** ppImmediateContext)</unmanaged>	
            <unmanaged-short>D3D11CreateDevice</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(SharpDX.DXGI.Adapter,SharpDX.Direct3D11.DeviceCreationFlags)">
            <summary>
              Constructor for a D3D11 Device. See <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> for more information.
            </summary>
            <param name="adapter"></param>
            <param name="flags"></param>
            <msdn-id>ff476082</msdn-id>	
            <unmanaged>HRESULT D3D11CreateDevice([In, Optional] IDXGIAdapter* pAdapter,[In] D3D_DRIVER_TYPE DriverType,[In] HINSTANCE Software,[In] D3D11_CREATE_DEVICE_FLAG Flags,[In, Buffer, Optional] const D3D_FEATURE_LEVEL* pFeatureLevels,[In] unsigned int FeatureLevels,[In] unsigned int SDKVersion,[Out, Fast] ID3D11Device** ppDevice,[Out, Optional] D3D_FEATURE_LEVEL* pFeatureLevel,[Out, Optional] ID3D11DeviceContext** ppImmediateContext)</unmanaged>	
            <unmanaged-short>D3D11CreateDevice</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(SharpDX.Direct3D.DriverType,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[])">
            <summary>
              Constructor for a D3D11 Device. See <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> for more information.
            </summary>
            <param name="driverType"></param>
            <param name="flags"></param>
            <param name="featureLevels"></param>
            <msdn-id>ff476082</msdn-id>	
            <unmanaged>HRESULT D3D11CreateDevice([In, Optional] IDXGIAdapter* pAdapter,[In] D3D_DRIVER_TYPE DriverType,[In] HINSTANCE Software,[In] D3D11_CREATE_DEVICE_FLAG Flags,[In, Buffer, Optional] const D3D_FEATURE_LEVEL* pFeatureLevels,[In] unsigned int FeatureLevels,[In] unsigned int SDKVersion,[Out, Fast] ID3D11Device** ppDevice,[Out, Optional] D3D_FEATURE_LEVEL* pFeatureLevel,[Out, Optional] ID3D11DeviceContext** ppImmediateContext)</unmanaged>	
            <unmanaged-short>D3D11CreateDevice</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(SharpDX.DXGI.Adapter,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[])">
            <summary>
              Constructor for a D3D11 Device. See <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> for more information.
            </summary>
            <param name="adapter"></param>
            <param name="flags"></param>
            <param name="featureLevels"></param>
            <msdn-id>ff476082</msdn-id>	
            <unmanaged>HRESULT D3D11CreateDevice([In, Optional] IDXGIAdapter* pAdapter,[In] D3D_DRIVER_TYPE DriverType,[In] HINSTANCE Software,[In] D3D11_CREATE_DEVICE_FLAG Flags,[In, Buffer, Optional] const D3D_FEATURE_LEVEL* pFeatureLevels,[In] unsigned int FeatureLevels,[In] unsigned int SDKVersion,[Out, Fast] ID3D11Device** ppDevice,[Out, Optional] D3D_FEATURE_LEVEL* pFeatureLevel,[Out, Optional] ID3D11DeviceContext** ppImmediateContext)</unmanaged>	
            <unmanaged-short>D3D11CreateDevice</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetCounterMetadata(SharpDX.Direct3D11.CounterDescription)">
            <summary>
            Get the type, name, units of measure, and a description of an existing counter.	
            </summary>
            <param name="counterDescription">The counter description.</param>
            <returns>Description of the counter</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.OpenSharedResource``1(System.IntPtr)">
            <summary>
            Give a device access to a shared resource created on a different Direct3d device.
            </summary>
            <typeparam name="T">The type of the resource we are gaining access to.</typeparam>
            <param name="resourceHandle">A resource handle. See remarks.</param>
            <returns>
            This method returns a reference to the resource we are gaining access to.
            </returns>
            <remarks>
            To share a resource between two Direct3D 10 devices the resource must have been created with the  <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.Shared"/> flag, if it was created using the ID3D10Device interface.  If it was created using the IDXGIDevice interface, then the resource is always shared. The REFIID, or GUID, of the interface to the resource can be obtained by using the __uuidof() macro.  For example, __uuidof(ID3D10Buffer) will get the GUID of the interface to a buffer resource. When sharing a resource between two Direct3D 10 devices the unique handle of the resource can be obtained by querying the resource for the <see cref="T:SharpDX.DXGI.Resource"/> interface and then calling {{GetSharedHandle}}.
            <code> IDXGIResource* pOtherResource(NULL);
            hr = pOtherDeviceResource-&gt;QueryInterface( __uuidof(IDXGIResource), (void**)&amp;pOtherResource );
            HANDLE sharedHandle;
            pOtherResource-&gt;GetSharedHandle(&amp;sharedHandle); </code>
            The only resources that can be shared are 2D non-mipmapped textures. To share a resource between a Direct3D 9 device and a Direct3D 10 device the texture must have been created using  the pSharedHandle argument of {{CreateTexture}}.   The shared Direct3D 9 handle is then passed to OpenSharedResource in the hResource argument. The following code illustrates the method calls involved.
            <code> sharedHandle = NULL; // must be set to NULL to create, can use a valid handle here to open in D3D9
            pDevice9-&gt;CreateTexture(..., pTex2D_9, &amp;sharedHandle);
            ...
            pDevice10-&gt;OpenSharedResource(sharedHandle, __uuidof(ID3D10Resource), (void**)(&amp;tempResource10));
            tempResource10-&gt;QueryInterface(__uuidof(ID3D10Texture2D), (void**)(&amp;pTex2D_10));
            tempResource10-&gt;Release();
            // now use pTex2D_10 with pDevice10    </code>
            Textures being shared from D3D9 to D3D10 have the following restrictions.  Textures must be 2D Only 1 mip level is allowed Texture must have default usage Texture must be write only MSAA textures are not allowed Bind flags must have SHADER_RESOURCE and RENDER_TARGET set Only R10G10B10A2_UNORM, R16G16B16A16_FLOAT and R8G8B8A8_UNORM formats are allowed  If a shared texture is updated on one device <see cref="M:SharpDX.Direct3D11.DeviceContext.Flush"/> must be called on that device.
            </remarks>
            <unmanaged>HRESULT ID3D10Device::OpenSharedResource([In] void* hResource,[In] GUID* ReturnedInterface,[Out, Optional] void** ppResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckComputeShaderFormatSupport(SharpDX.DXGI.Format)">
            <summary>
            Check if this device is supporting compute shaders for the specified format.
            </summary>
            <param name="format">The format for which to check support.</param>
            <returns>Flags indicating usage contexts in which the specified format is supported.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckD3D11Feature">
            <summary>	
            <p>Gets information about the features <see cref="F:SharpDX.Direct3D11.Feature.D3D11Options"/> that are supported by the current graphics driver.</p>	
            </summary>	
            <returns>Returns a structure <see cref="T:SharpDX.Direct3D11.FeatureDataD3D11Options"/> </returns>	
            <msdn-id>ff476497</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CheckFeatureSupport([In] D3D11_FEATURE Feature,[Out, Buffer] void* pFeatureSupportData,[In] unsigned int FeatureSupportDataSize)</unmanaged>	
            <unmanaged-short>ID3D11Device::CheckFeatureSupport</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckShaderMinimumPrecisionSupport">
            <summary>	
            <p>Gets information about the features <see cref="F:SharpDX.Direct3D11.Feature.ShaderMinimumPrecisionSupport"/> that are supported by the current graphics driver.</p>	
            </summary>	
            <returns>Returns a structure <see cref="T:SharpDX.Direct3D11.FeatureDataShaderMinimumPrecisionSupport"/> </returns>	
            <msdn-id>ff476497</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CheckFeatureSupport([In] D3D11_FEATURE Feature,[Out, Buffer] void* pFeatureSupportData,[In] unsigned int FeatureSupportDataSize)</unmanaged>	
            <unmanaged-short>ID3D11Device::CheckFeatureSupport</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckFullNonPow2TextureSupport">
            <summary>	
            <p>Gets information about whether the driver supports the nonpowers-of-2-unconditionally feature. <strong>TRUE</strong> for hardware at Direct3D 10 and higher feature levels. </p>	
            </summary>	
            <returns>Returns <strong>true</strong> if this hardware supports non-powers-of-2 texture. This returns always true Direct3D 10 and higher feature levels.</returns>	
            <msdn-id>ff476497</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CheckFeatureSupport([In] D3D11_FEATURE Feature,[Out, Buffer] void* pFeatureSupportData,[In] unsigned int FeatureSupportDataSize)</unmanaged>	
            <unmanaged-short>ID3D11Device::CheckFeatureSupport</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckTileBasedDeferredRendererSupport">
            <summary>	
            <p>Gets information about whether a rendering device batches rendering commands and performs multipass rendering into tiles or bins over a render area. Certain API usage patterns that are fine TileBasedDefferredRenderers (TBDRs) can perform worse on non-TBDRs and vice versa.  Applications that are careful about rendering can be friendly to both TBDR and non-TBDR architectures.</p> 
            </summary>	
            <returns>Returns <strong>TRUE</strong> if the rendering device batches rendering commands and <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</returns>	
            <msdn-id>ff476497</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CheckFeatureSupport([In] D3D11_FEATURE Feature,[Out, Buffer] void* pFeatureSupportData,[In] unsigned int FeatureSupportDataSize)</unmanaged>	
            <unmanaged-short>ID3D11Device::CheckFeatureSupport</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)">
            <summary>
            Check if this device is supporting a feature.
            </summary>
            <param name="feature">The feature to check.</param>
            <returns>
            Returns true if this device supports this feature, otherwise false.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckThreadingSupport(System.Boolean@,System.Boolean@)">
            <summary>
            Check if this device is supporting threading.
            </summary>
            <param name="supportsConcurrentResources">Support concurrent resources.</param>
            <param name="supportsCommandLists">Support command lists.</param>
            <returns>
            A <see cref="T:SharpDX.Result"/> object describing the result of the operation.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetSupportedFeatureLevel">
            <summary>
            Gets the highest supported hardware feature level of the primary adapter.
            </summary>
            <returns>The highest supported hardware feature level.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetSupportedFeatureLevel(SharpDX.DXGI.Adapter)">
            <summary>
            Gets the highest supported hardware feature level of the primary adapter.
            </summary>
            <param name="adapter">The adapter.</param>
            <returns>
            The highest supported hardware feature level.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[])">
            <summary>
              Internal CreateDevice
            </summary>
            <param name = "adapter"></param>
            <param name = "driverType"></param>
            <param name = "flags"></param>
            <param name = "featureLevels"></param>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Device"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.Device">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.Device"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)">
            <summary>	
            <p>Creates a buffer (vertex buffer, index buffer, or shader-constant buffer).</p>	
            </summary>	
            <param name="descRef"><dd>  <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.BufferDescription"/></strong> structure that describes the buffer.</p> </dd></param>	
            <param name="initialDataRef"><dd>  <p>A reference to a <strong><see cref="T:SharpDX.DataBox"/></strong> structure that describes  the initialization data;  use <strong><c>null</c></strong> to allocate space only (with the exception that it cannot be <strong><c>null</c></strong> if the usage flag is <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/></strong>).</p> </dd></param>	
            <param name="bufferOut"><dd>  <p>Address of a reference to the <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong> interface for the buffer object created.  Set this parameter to <strong><c>null</c></strong> to validate the other input parameters (<strong>S_FALSE</strong> indicates a pass).</p> </dd></param>	
            <returns><p>This method returns <strong>E_OUTOFMEMORY</strong> if there is insufficient memory to create the buffer.   See Direct3D 11 Return Codes for other possible return values.</p></returns>	
            <remarks>	
            <p>For example code, see How to: Create a Vertex Buffer,  How to: Create an Index Buffer or How to: Create a Constant Buffer.</p><p>The Direct3D 11.1 runtime, which is available on Windows Developer Preview and later operating systems, provides the following new functionality for <strong>CreateBuffer</strong>.</p><p>You can create a constant buffer that is larger than the maximum constant buffer size that a shader can access (4096 32-bit*4-component constants ? 64KB).  When you bind the constant buffer to the pipeline (for example, via <strong>PSSetConstantBuffers</strong> or <strong>PSSetConstantBuffers1</strong>), you can define a range of the buffer that the shader can access that fits within the 4096 constant limit.</p><p>The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.  On existing drivers that are implemented to feature level 10 and higher, a call to <strong>CreateBuffer</strong> to request a constant buffer that is larger than 4096 fails.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateBuffer']/*"/>	
            <msdn-id>ff476501</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateBuffer([In] const D3D11_BUFFER_DESC* pDesc,[In, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Buffer** ppBuffer)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateTexture1D(SharpDX.Direct3D11.Texture1DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture1D)">
            <summary>	
            <p>Creates an array of 1D textures.</p>	
            </summary>	
            <param name="descRef">No documentation.</param>	
            <param name="initialDataRef">No documentation.</param>	
            <param name="texture1DOut">No documentation.</param>	
            <returns><p>If the method succeeds, the return code is <see cref="F:SharpDX.Result.Ok"/>. See Direct3D 11 Return Codes for failing error codes.</p></returns>	
            <remarks>	
            <p><strong>CreateTexture1D</strong> creates a 1D texture resource, which can contain a number of 1D subresources. The number of textures is specified in the texture description. All textures in a resource must have the same format, size, and number of mipmap levels.</p><p>All resources are made up of one or more subresources. To load data into the texture, applications can supply the data initially as an array of <strong><see cref="T:SharpDX.DataBox"/></strong> structures pointed to by <em>pInitialData</em>, or they can use one of the D3DX texture functions such as <strong>D3DX11CreateTextureFromFile</strong>.</p><p>For a 32 width texture with a full mipmap chain, the <em>pInitialData</em> array has the following 6 elements:	
            </p><ul> <li>pInitialData[0] = 32x1</li> <li>pInitialData[1] = 16x1</li> <li>pInitialData[2] = 8x1</li> <li>pInitialData[3] = 4x1	
            </li> <li>pInitialData[4] = 2x1	
            </li> <li>pInitialData[5] = 1x1	
            </li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateTexture1D']/*"/>	
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateTexture2D(SharpDX.Direct3D11.Texture2DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture2D)">
            <summary>	
            <p>Create an array of 2D textures.</p>	
            </summary>	
            <param name="descRef">No documentation.</param>	
            <param name="initialDataRef">No documentation.</param>	
            <param name="texture2DOut">No documentation.</param>	
            <returns><p>If the method succeeds, the return code is <see cref="F:SharpDX.Result.Ok"/>. See Direct3D 11 Return Codes for failing error codes.</p></returns>	
            <remarks>	
            <p><strong>CreateTexture2D</strong> creates a 2D texture resource, which can contain a number of 2D subresources. The number of textures is specified in the texture description. All textures in a resource must have the same format, size, and number of mipmap levels.</p><p>All resources are made up of one or more subresources. To load data into the texture, applications can supply the data initially as an array of <strong><see cref="T:SharpDX.DataBox"/></strong> structures pointed to by <em>pInitialData</em>, or it may use one of the D3DX texture functions such as <strong>D3DX11CreateTextureFromFile</strong>.</p><p>For a 32 x 32 texture with a full mipmap chain, the <em>pInitialData</em> array has the following 6 elements:	
            </p><ul> <li>pInitialData[0] = 32x32</li> <li>pInitialData[1] = 16x16</li> <li>pInitialData[2] = 8x8</li> <li>pInitialData[3] = 4x4	
            </li> <li>pInitialData[4] = 2x2	
            </li> <li>pInitialData[5] = 1x1	
            </li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateTexture2D']/*"/>	
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateTexture3D(SharpDX.Direct3D11.Texture3DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture3D)">
            <summary>	
            <p>Create a single 3D texture.</p>	
            </summary>	
            <param name="descRef">No documentation.</param>	
            <param name="initialDataRef">No documentation.</param>	
            <param name="texture3DOut">No documentation.</param>	
            <returns><p>If the method succeeds, the return code is <see cref="F:SharpDX.Result.Ok"/>. See Direct3D 11 Return Codes for failing error codes.</p></returns>	
            <remarks>	
            <p><strong>CreateTexture3D</strong> creates a 3D texture resource, which can contain a number of 3D subresources. The number of textures is specified in the texture description. All textures in a resource must have the same format, size, and number of mipmap levels.</p><p>All resources are made up of one or more subresources. To load data into the texture, applications can supply the data initially as an array of <strong><see cref="T:SharpDX.DataBox"/></strong> structures pointed to by <em>pInitialData</em>, or they can use one of the D3DX texture functions such as <strong>D3DX11CreateTextureFromFile</strong>.</p><p>Each element of <em>pInitialData</em> provides all of the slices that are defined for a given miplevel. For example, for a 32 x 32 x 4 volume texture with a full mipmap chain, the array has the following 6 elements:</p><ul> <li>pInitialData[0] = 32x32 with 4 slices</li> <li>pInitialData[1] = 16x16 with 2 slices</li> <li>pInitialData[2] = 8x8 with 1 slice</li> <li>pInitialData[3] = 4x4	
            with 1 slice</li> <li>pInitialData[4] = 2x2	
            with 1 slice</li> <li>pInitialData[5] = 1x1	
            with 1 slice</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateTexture3D']/*"/>	
            <msdn-id>ff476522</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)">
            <summary>	
            <p>Create a shader-resource view for accessing data in a resource.</p>	
            </summary>	
            <param name="resourceRef"><dd>  <p>Pointer to the resource that will serve as input to a shader. This resource must have been created with the <strong> <see cref="F:SharpDX.Direct3D11.BindFlags.ShaderResource"/></strong> flag.</p> </dd></param>	
            <param name="descRef"><dd>  <p>Pointer to a shader-resource view description (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/></strong>). Set this parameter to <strong><c>null</c></strong> to create a  view that accesses the entire resource (using the format the resource was created with).</p> </dd></param>	
            <param name="sRViewOut"><dd>  <p>Address of a reference to an <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceView"/></strong>. Set this parameter to <strong><c>null</c></strong> to validate the  other input parameters (the method will return <strong>S_FALSE</strong> if the other input parameters pass validation).</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>A resource is made up of one or more subresources; a view identifies which subresources to allow the pipeline to access. In addition, each resource is bound to the pipeline using a view. A shader-resource view is designed to bind any buffer or texture resource to the shader stages using the following  API methods: <strong><see cref="M:SharpDX.Direct3D11.VertexShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/></strong>, <strong><see cref="M:SharpDX.Direct3D11.GeometryShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.PixelShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/></strong>.</p><p>Because a view is fully typed, this means that typeless resources become fully typed when bound to the pipeline.</p><p><strong>Note</strong>??To successfully create a shader-resource view from a typeless buffer (for example, <strong><see cref="F:SharpDX.DXGI.Format.R32G32B32A32_Typeless"/></strong>), you must set the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.BufferAllowRawViews"/></strong> flag when you create the buffer.</p><p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, allows you to use <strong>CreateShaderResourceView</strong> for the following new purpose. </p><p>You can create shader-resource views of video resources so that Direct3D shaders can process those shader-resource views. These video resources are either Texture2D or Texture2DArray. The value in the <strong>ViewDimension</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/></strong> structure for a created shader-resource view must match the type of video resource, D3D11_SRV_DIMENSION_TEXTURE2D          for Texture2D and D3D11_SRV_DIMENSION_TEXTURE2DARRAY for Texture2DArray. Additionally, the format of the underlying video resource restricts the formats that the view can use. The video resource format values on the <strong><see cref="T:SharpDX.DXGI.Format"/></strong> reference page specify the format values that views are restricted to.</p><p>The runtime read+write conflict prevention logic (which stops a resource from being bound as an SRV and RTV or UAV at the same time) treats views of different parts of the same video surface as conflicting for simplicity.  Therefore, the runtime does not allow an application to read from luma while the application simultaneously renders to chroma in the same surface even though the hardware might allow these simultaneous operations.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateShaderResourceView']/*"/>	
            <msdn-id>ff476519</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateShaderResourceView([In] ID3D11Resource* pResource,[In, Optional] const D3D11_SHADER_RESOURCE_VIEW_DESC* pDesc,[Out, Fast] ID3D11ShaderResourceView** ppSRView)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateShaderResourceView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateUnorderedAccessView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.UnorderedAccessViewDescription},SharpDX.Direct3D11.UnorderedAccessView)">
            <summary>	
            <p>Creates a view for accessing an unordered access resource.</p>	
            </summary>	
            <param name="resourceRef">No documentation.</param>	
            <param name="descRef">No documentation.</param>	
            <param name="uAViewOut">No documentation.</param>	
            <returns><p>This method returns one of the Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, allows you to use <strong>CreateUnorderedAccessView</strong> for the following new purpose. </p><p>You can create unordered-access views of video resources so that Direct3D shaders can process those unordered-access views. These video resources are either Texture2D or Texture2DArray. The value in the <strong>ViewDimension</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/></strong> structure for a created unordered-access view must match the type of video resource, <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture2D"/>          for Texture2D and <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture2DArray"/> for Texture2DArray. Additionally, the format of the underlying video resource restricts the formats that the view can use. The video resource format values on the <strong><see cref="T:SharpDX.DXGI.Format"/></strong> reference page specify the format values that views are restricted to.</p><p>The runtime read+write conflict prevention logic (which stops a resource from being bound as an SRV and RTV or UAV at the same time) treats views of different parts of the same video surface as conflicting for simplicity.  Therefore, the runtime does not allow an application to read from luma while the application simultaneously renders to chroma in the same surface even though the hardware might allow these simultaneous operations.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateUnorderedAccessView']/*"/>	
            <msdn-id>ff476523</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateUnorderedAccessView([In] ID3D11Resource* pResource,[In, Optional] const D3D11_UNORDERED_ACCESS_VIEW_DESC* pDesc,[Out, Fast] ID3D11UnorderedAccessView** ppUAView)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateUnorderedAccessView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateRenderTargetView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.RenderTargetViewDescription},SharpDX.Direct3D11.RenderTargetView)">
            <summary>	
            <p>Creates a render-target view for accessing resource data.</p>	
            </summary>	
            <param name="resourceRef"><dd>  <p>Pointer to a <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong> that represents a render target. This resource must have been created with the <strong><see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/></strong> flag.</p> </dd></param>	
            <param name="descRef"><dd>  <p>Pointer to a <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/></strong> that represents a render-target view description. Set this parameter to <strong><c>null</c></strong> to create a view that accesses all of the subresources in mipmap level 0.</p> </dd></param>	
            <param name="rTViewOut"><dd>  <p>Address of a reference to an <strong><see cref="T:SharpDX.Direct3D11.RenderTargetView"/></strong>. Set this parameter to <strong><c>null</c></strong> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</p> </dd></param>	
            <returns><p>This method returns one of the Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>A render-target view can be bound to the output-merger stage by calling <strong><see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargets(System.Int32,System.IntPtr,SharpDX.Direct3D11.DepthStencilView)"/></strong>.</p><p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, allows you to use <strong>CreateRenderTargetView</strong> for the following new purpose. </p><p>You can create render-target views of video resources so that Direct3D shaders can process those render-target views. These video resources are either Texture2D or Texture2DArray. The value in the <strong>ViewDimension</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/></strong> structure for a created render-target view must match the type of video resource, <see cref="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture2D"/>          for Texture2D and <see cref="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture2DArray"/> for Texture2DArray. Additionally, the format of the underlying video resource restricts the formats that the view can use. The video resource format values on the <strong><see cref="T:SharpDX.DXGI.Format"/></strong> reference page specify the format values that views are restricted to.</p><p>The runtime read+write conflict prevention logic (which stops a resource from being bound as an SRV and RTV or UAV at the same time) treats views of different parts of the same video surface as conflicting for simplicity.  Therefore, the runtime does not allow an application to read from luma while the application simultaneously renders to chroma in the same surface even though the hardware might allow these simultaneous operations.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateRenderTargetView']/*"/>	
            <msdn-id>ff476517</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateRenderTargetView([In] ID3D11Resource* pResource,[In, Optional] const D3D11_RENDER_TARGET_VIEW_DESC* pDesc,[Out, Fast] ID3D11RenderTargetView** ppRTView)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateRenderTargetView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateDepthStencilView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.DepthStencilViewDescription},SharpDX.Direct3D11.DepthStencilView)">
            <summary>	
            <p>Create a depth-stencil view for accessing resource data.</p>	
            </summary>	
            <param name="resourceRef"><dd>  <p>Pointer to the resource that will serve as the depth-stencil surface. This resource must have been created with the <strong><see cref="F:SharpDX.Direct3D11.BindFlags.DepthStencil"/></strong> flag.</p> </dd></param>	
            <param name="descRef"><dd>  <p>Pointer to a depth-stencil-view description (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/></strong>). Set this parameter to <strong><c>null</c></strong> to create a view that accesses mipmap level 0 of the entire resource (using the format the resource was created with).</p> </dd></param>	
            <param name="depthStencilViewOut"><dd>  <p>Address of a reference to an <strong><see cref="T:SharpDX.Direct3D11.DepthStencilView"/></strong>. Set this parameter to <strong><c>null</c></strong> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>A depth-stencil view can be bound to the output-merger stage by calling <strong><see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargets(System.Int32,System.IntPtr,SharpDX.Direct3D11.DepthStencilView)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateDepthStencilView']/*"/>	
            <msdn-id>ff476507</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateDepthStencilView([In] ID3D11Resource* pResource,[In, Optional] const D3D11_DEPTH_STENCIL_VIEW_DESC* pDesc,[Out, Fast] ID3D11DepthStencilView** ppDepthStencilView)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateDepthStencilView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateInputLayout(SharpDX.Direct3D11.InputElement[],System.Int32,System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.InputLayout)">
            <summary>	
            <p>Create an input-layout object to describe the input-buffer data for the input-assembler stage.</p>	
            </summary>	
            <param name="inputElementDescsRef"><dd>  <p>An array of the input-assembler stage input data types; each type is described by an element description (see <strong><see cref="T:SharpDX.Direct3D11.InputElement"/></strong>).</p> </dd></param>	
            <param name="numElements"><dd>  <p>The number of input-data types in the array of input-elements.</p> </dd></param>	
            <param name="shaderBytecodeWithInputSignatureRef"><dd>  <p>A reference to the compiled shader.  The compiled shader code contains a input signature which is validated against the array of elements. See remarks.</p> </dd></param>	
            <param name="bytecodeLength"><dd>  <p>Size of the compiled shader.</p> </dd></param>	
            <param name="inputLayoutOut"><dd>  <p>A reference to the input-layout object created (see <strong><see cref="T:SharpDX.Direct3D11.InputLayout"/></strong>). To validate the other input parameters, set this reference to be <strong><c>null</c></strong> and verify that the method returns S_FALSE.</p> </dd></param>	
            <returns><p>If the method succeeds, the return code is <see cref="F:SharpDX.Result.Ok"/>. See Direct3D 11 Return Codes for failing error codes.</p></returns>	
            <remarks>	
            <p>After creating an input layout object, it must be bound to the input-assembler stage before calling a draw API.</p><p>Once an input-layout object is created from a shader signature, the input-layout object can be reused with any other shader that has an identical input signature (semantics included). This can simplify the creation of input-layout objects when you are working with many shaders with identical inputs.</p><p>If a data type in the input-layout declaration does not match the data type in a shader-input signature, CreateInputLayout will generate a warning during compilation. The warning is simply to call attention to the fact that the data may be reinterpreted when read from a register. You may either disregard this warning (if reinterpretation is intentional) or make the data types match in both declarations to eliminate the warning.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateInputLayout']/*"/>	
            <msdn-id>ff476512</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateInputLayout([In, Buffer] const D3D11_INPUT_ELEMENT_DESC* pInputElementDescs,[In] unsigned int NumElements,[In] const void* pShaderBytecodeWithInputSignature,[In] SIZE_T BytecodeLength,[Out, Fast] ID3D11InputLayout** ppInputLayout)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateInputLayout</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateVertexShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.VertexShader)">
            <summary>	
            <p>Create a vertex-shader object from a compiled shader.</p>	
            </summary>	
            <param name="shaderBytecodeRef"><dd>  <p>A reference to the compiled shader. </p> </dd></param>	
            <param name="bytecodeLength"><dd>  <p>Size of the compiled vertex shader.</p> </dd></param>	
            <param name="classLinkageRef"><dd>  <p>A reference to a class linkage interface (see <strong><see cref="T:SharpDX.Direct3D11.ClassLinkage"/></strong>); the value can be <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="vertexShaderOut"><dd>  <p>Address of a reference to a <strong><see cref="T:SharpDX.Direct3D11.VertexShader"/></strong> interface. If this is <strong><c>null</c></strong>, all other parameters will be validated, and if all parameters pass validation this API will return <strong>S_FALSE</strong> instead of <strong><see cref="F:SharpDX.Result.Ok"/></strong>.</p> </dd></param>	
            <returns><p>This method returns one of the Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, provides the following new functionality for <strong>CreateVertexShader</strong>.</p><p>The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages.</p><p>Therefore, if you use the following shader model 5.0 instructions in a vertex shader, you can successfully pass the compiled vertex shader to <em>pShaderBytecode</em>. That is, the call to <strong>CreateVertexShader</strong> succeeds.</p><p>If you pass a compiled shader to <em>pShaderBytecode</em> that uses any of the following instructions on a device that doesn?t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), <strong>CreateVertexShader</strong> fails.  <strong>CreateVertexShader</strong> also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports.</p><ul> <li> dcl_uav_typed </li> <li> dcl_uav_raw </li> <li> dcl_uav_structured </li> <li> ld_raw </li> <li> ld_structured </li> <li> ld_uav_typed </li> <li> store_raw </li> <li> store_structured </li> <li> store_uav_typed </li> <li> sync_uglobal </li> <li>All atomics and immediate atomics (for example, atomic_and and imm_atomic_and)</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateVertexShader']/*"/>	
            <msdn-id>ff476524</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateVertexShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11VertexShader** ppVertexShader)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateVertexShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateGeometryShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.GeometryShader)">
            <summary>	
            <p>Create a geometry shader.</p>	
            </summary>	
            <param name="shaderBytecodeRef"><dd>  <p>A reference to the compiled shader.  </p> </dd></param>	
            <param name="bytecodeLength"><dd>  <p>Size of the compiled geometry shader.</p> </dd></param>	
            <param name="classLinkageRef"><dd>  <p>A reference to a class linkage interface (see <strong><see cref="T:SharpDX.Direct3D11.ClassLinkage"/></strong>); the value can be <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="geometryShaderOut"><dd>  <p>Address of a reference to a <strong><see cref="T:SharpDX.Direct3D11.GeometryShader"/></strong> interface. If this is <strong><c>null</c></strong>, all other parameters will be validated, and if all parameters pass validation this API will return S_FALSE instead of <see cref="F:SharpDX.Result.Ok"/>.</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>After it is created, the shader can be set to the device by calling <strong><see cref="M:SharpDX.Direct3D11.GeometryShaderStage.SetShader(SharpDX.Direct3D11.GeometryShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)"/></strong>.</p><p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, provides the following new functionality for <strong>CreateGeometryShader</strong>.</p><p>The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages.</p><p>Therefore, if you use the following shader model 5.0 instructions in a geometry shader, you can successfully pass the compiled geometry shader to <em>pShaderBytecode</em>. That is, the call to <strong>CreateGeometryShader</strong> succeeds.</p><p>If you pass a compiled shader to <em>pShaderBytecode</em> that uses any of the following instructions on a device that doesn?t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), <strong>CreateGeometryShader</strong> fails.  <strong>CreateGeometryShader</strong> also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports.</p><ul> <li> dcl_uav_typed </li> <li> dcl_uav_raw </li> <li> dcl_uav_structured </li> <li> ld_raw </li> <li> ld_structured </li> <li> ld_uav_typed </li> <li> store_raw </li> <li> store_structured </li> <li> store_uav_typed </li> <li> sync_uglobal </li> <li>All atomics and immediate atomics (for example, atomic_and and imm_atomic_and)</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateGeometryShader']/*"/>	
            <msdn-id>ff476509</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateGeometryShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11GeometryShader** ppGeometryShader)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateGeometryShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateGeometryShaderWithStreamOutput(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.StreamOutputElement[],System.Int32,System.Int32[],System.Int32,System.Int32,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.GeometryShader)">
            <summary>	
            <p>Creates a geometry shader that can write to streaming output buffers.</p>	
            </summary>	
            <param name="shaderBytecodeRef"><dd>  <p>A reference to the compiled geometry shader for a standard geometry shader plus stream output. For info on how to get this reference, see Getting a Pointer to a Compiled Shader.</p> <p>To create the stream output without using a geometry shader, pass a reference to the output signature for the prior stage. To obtain this output signature, call the <strong><see cref="!:SharpDX.D3DCompiler.D3D.GetOutputSignatureBlob"/></strong> compiler function. You can also pass a reference to the compiled shader for the prior stage (for example, the vertex-shader stage or domain-shader stage). This compiled shader provides the output signature for the data.</p> </dd></param>	
            <param name="bytecodeLength"><dd>  <p>Size of the compiled geometry shader.</p> </dd></param>	
            <param name="sODeclarationRef"><dd>  <p>Pointer to a <strong><see cref="T:SharpDX.Direct3D11.StreamOutputElement"/></strong> array. Cannot be <strong><c>null</c></strong> if NumEntries &gt; 0.</p> </dd></param>	
            <param name="numEntries"><dd>  <p>The number of entries in the stream output declaration ( ranges from 0 to D3D11_SO_STREAM_COUNT * D3D11_SO_OUTPUT_COMPONENT_COUNT ).</p> </dd></param>	
            <param name="bufferStridesRef"><dd>  <p>An array of buffer strides; each stride is the size of an element for that buffer.</p> </dd></param>	
            <param name="numStrides"><dd>  <p>The number of strides (or buffers) in <em>pBufferStrides</em> (ranges from 0 to D3D11_SO_BUFFER_SLOT_COUNT).</p> </dd></param>	
            <param name="rasterizedStream"><dd>  <p>The index number of the stream to be sent to the rasterizer stage (ranges from 0 to D3D11_SO_STREAM_COUNT - 1).  Set to D3D11_SO_NO_RASTERIZED_STREAM if no stream is to be rasterized.</p> </dd></param>	
            <param name="classLinkageRef"><dd>  <p>A reference to a class linkage interface (see <strong><see cref="T:SharpDX.Direct3D11.ClassLinkage"/></strong>); the value can be <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="geometryShaderOut"><dd>  <p>Address of a reference to an <strong><see cref="T:SharpDX.Direct3D11.GeometryShader"/></strong> interface, representing the geometry shader that was created.  Set this to <strong><c>null</c></strong> to validate the other parameters; if validation passes, the method will return S_FALSE instead of <see cref="F:SharpDX.Result.Ok"/>.</p> </dd></param>	
            <returns><p>This method returns one of the Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>For more info about using <strong>CreateGeometryShaderWithStreamOutput</strong>, see Create a Geometry-Shader Object with Stream Output.</p><p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, provides the following new functionality for <strong>CreateGeometryShaderWithStreamOutput</strong>.</p><p>The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages.</p><p>Therefore, if you use the following shader model 5.0 instructions in a geometry shader, you can successfully pass the compiled geometry shader to <em>pShaderBytecode</em>. That is, the call to <strong>CreateGeometryShaderWithStreamOutput</strong> succeeds.</p><p>If you pass a compiled shader to <em>pShaderBytecode</em> that uses any of the following instructions on a device that doesn?t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), <strong>CreateGeometryShaderWithStreamOutput</strong> fails.  <strong>CreateGeometryShaderWithStreamOutput</strong> also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports.</p><ul> <li> dcl_uav_typed </li> <li> dcl_uav_raw </li> <li> dcl_uav_structured </li> <li> ld_raw </li> <li> ld_structured </li> <li> ld_uav_typed </li> <li> store_raw </li> <li> store_structured </li> <li> store_uav_typed </li> <li> sync_uglobal </li> <li>All atomics and immediate atomics (for example, atomic_and and imm_atomic_and)</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateGeometryShaderWithStreamOutput']/*"/>	
            <msdn-id>ff476510</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateGeometryShaderWithStreamOutput([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Buffer, Optional] const D3D11_SO_DECLARATION_ENTRY* pSODeclaration,[In] unsigned int NumEntries,[In, Buffer, Optional] const unsigned int* pBufferStrides,[In] unsigned int NumStrides,[In] unsigned int RasterizedStream,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11GeometryShader** ppGeometryShader)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateGeometryShaderWithStreamOutput</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreatePixelShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.PixelShader)">
            <summary>	
            <p>Create a pixel shader.</p>	
            </summary>	
            <param name="shaderBytecodeRef"><dd>  <p>A reference to the compiled shader. </p> </dd></param>	
            <param name="bytecodeLength"><dd>  <p>Size of the compiled pixel shader.</p> </dd></param>	
            <param name="classLinkageRef"><dd>  <p>A reference to a class linkage interface (see <strong><see cref="T:SharpDX.Direct3D11.ClassLinkage"/></strong>); the value can be <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="pixelShaderOut"><dd>  <p>Address of a reference to a <strong><see cref="T:SharpDX.Direct3D11.PixelShader"/></strong> interface. If this is <strong><c>null</c></strong>, all other parameters will be validated, and if all parameters pass validation this API will return S_FALSE instead of <see cref="F:SharpDX.Result.Ok"/>.</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>After creating the pixel shader, you can set it to the device using <strong><see cref="M:SharpDX.Direct3D11.PixelShaderStage.SetShader(SharpDX.Direct3D11.PixelShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreatePixelShader']/*"/>	
            <msdn-id>ff476513</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreatePixelShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11PixelShader** ppPixelShader)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreatePixelShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateHullShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.HullShader)">
            <summary>	
            <p>Create a hull shader.</p>	
            </summary>	
            <param name="shaderBytecodeRef">No documentation.</param>	
            <param name="bytecodeLength">No documentation.</param>	
            <param name="classLinkageRef">No documentation.</param>	
            <param name="hullShaderOut">No documentation.</param>	
            <returns><p>This method returns one of the Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, provides the following new functionality for <strong>CreateHullShader</strong>.</p><p>The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages.</p><p>Therefore, if you use the following shader model 5.0 instructions in a hull shader, you can successfully pass the compiled hull shader to <em>pShaderBytecode</em>. That is, the call to <strong>CreateHullShader</strong> succeeds.</p><p>If you pass a compiled shader to <em>pShaderBytecode</em> that uses any of the following instructions on a device that doesn?t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), <strong>CreateHullShader</strong> fails.  <strong>CreateHullShader</strong> also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports.</p><ul> <li> dcl_uav_typed </li> <li> dcl_uav_raw </li> <li> dcl_uav_structured </li> <li> ld_raw </li> <li> ld_structured </li> <li> ld_uav_typed </li> <li> store_raw </li> <li> store_structured </li> <li> store_uav_typed </li> <li> sync_uglobal </li> <li>All atomics and immediate atomics (for example, atomic_and and imm_atomic_and)</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateHullShader']/*"/>	
            <msdn-id>ff476511</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateHullShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11HullShader** ppHullShader)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateHullShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateDomainShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.DomainShader)">
            <summary>	
            <p>Create a domain shader .</p>	
            </summary>	
            <param name="shaderBytecodeRef">No documentation.</param>	
            <param name="bytecodeLength">No documentation.</param>	
            <param name="classLinkageRef">No documentation.</param>	
            <param name="domainShaderOut">No documentation.</param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, provides the following new functionality for <strong>CreateDomainShader</strong>.</p><p>The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages.</p><p>Therefore, if you use the following shader model 5.0 instructions in a domain shader, you can successfully pass the compiled domain shader to <em>pShaderBytecode</em>. That is, the call to <strong>CreateDomainShader</strong> succeeds.</p><p>If you pass a compiled shader to <em>pShaderBytecode</em> that uses any of the following instructions on a device that doesn?t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), <strong>CreateDomainShader</strong> fails.  <strong>CreateDomainShader</strong> also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports.</p><ul> <li> dcl_uav_typed </li> <li> dcl_uav_raw </li> <li> dcl_uav_structured </li> <li> ld_raw </li> <li> ld_structured </li> <li> ld_uav_typed </li> <li> store_raw </li> <li> store_structured </li> <li> store_uav_typed </li> <li> sync_uglobal </li> <li>All atomics and immediate atomics (for example, atomic_and and imm_atomic_and)</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateDomainShader']/*"/>	
            <msdn-id>ff476508</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateDomainShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11DomainShader** ppDomainShader)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateDomainShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateComputeShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.ComputeShader)">
            <summary>	
            <p>Create a compute shader.</p>	
            </summary>	
            <param name="shaderBytecodeRef">No documentation.</param>	
            <param name="bytecodeLength">No documentation.</param>	
            <param name="classLinkageRef">No documentation.</param>	
            <param name="computeShaderOut">No documentation.</param>	
            <returns><p>This method returns E_OUTOFMEMORY if there is insufficient memory to create the compute shader.   See Direct3D 11 Return Codes for other possible return values.</p></returns>	
            <remarks>	
            <p>For an example, see How To: Create a Compute Shader and HDRToneMappingCS11 Sample.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateComputeShader']/*"/>	
            <msdn-id>ff476503</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateComputeShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11ComputeShader** ppComputeShader)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateComputeShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateClassLinkage(SharpDX.Direct3D11.ClassLinkage)">
            <summary>	
            <p>Creates class linkage libraries to enable dynamic shader linkage.</p>	
            </summary>	
            <param name="linkageOut"><dd>  <p>A reference to a class-linkage interface reference (see <strong><see cref="T:SharpDX.Direct3D11.ClassLinkage"/></strong>).</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.ClassLinkage"/></strong> interface returned in <em>ppLinkage</em> is associated with a shader by passing it as a parameter to one of the <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong> create shader methods such as <strong><see cref="M:SharpDX.Direct3D11.Device.CreatePixelShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.PixelShader)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateClassLinkage']/*"/>	
            <msdn-id>ff476502</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateClassLinkage([Out, Fast] ID3D11ClassLinkage** ppLinkage)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateClassLinkage</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateBlendState(SharpDX.Direct3D11.BlendStateDescription@,SharpDX.Direct3D11.BlendState)">
            <summary>	
            <p>Create a blend-state object that encapsules blend state for the output-merger stage.</p>	
            </summary>	
            <param name="blendStateDescRef"><dd>  <p>Pointer to a blend-state description (see <strong><see cref="T:SharpDX.Direct3D11.BlendStateDescription"/></strong>).</p> </dd></param>	
            <param name="blendStateOut"><dd>  <p>Address of a reference to the blend-state object created (see <strong><see cref="T:SharpDX.Direct3D11.BlendState"/></strong>).</p> </dd></param>	
            <returns><p>This method returns E_OUTOFMEMORY if there is insufficient memory to create the blend-state object.   See Direct3D 11 Return Codes for other possible return values.</p></returns>	
            <remarks>	
            <p>An application can create up to 4096 unique blend-state objects. For each object created, the runtime checks to see if a previous object  has the same state. If such a previous object exists, the runtime will return a reference to previous instance instead of creating a duplicate object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateBlendState']/*"/>	
            <msdn-id>ff476500</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateBlendState([In] const D3D11_BLEND_DESC* pBlendStateDesc,[Out, Fast] ID3D11BlendState** ppBlendState)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateBlendState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateDepthStencilState(SharpDX.Direct3D11.DepthStencilStateDescription@,SharpDX.Direct3D11.DepthStencilState)">
            <summary>	
            <p>Create a depth-stencil state object that encapsulates depth-stencil test information for the output-merger stage.</p>	
            </summary>	
            <param name="depthStencilDescRef"><dd>  <p>Pointer to a depth-stencil state description (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilStateDescription"/></strong>).</p> </dd></param>	
            <param name="depthStencilStateOut"><dd>  <p>Address of a reference to the depth-stencil state object created (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilState"/></strong>).</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>4096 unique depth-stencil state objects can be created on a device at a time.</p><p>If an application attempts to create a depth-stencil-state interface with the same state as an existing interface, the same interface will be returned and the total number of unique depth-stencil state objects will stay the same.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateDepthStencilState']/*"/>	
            <msdn-id>ff476506</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateDepthStencilState([In] const D3D11_DEPTH_STENCIL_DESC* pDepthStencilDesc,[Out, Fast] ID3D11DepthStencilState** ppDepthStencilState)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateDepthStencilState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateRasterizerState(SharpDX.Direct3D11.RasterizerStateDescription@,SharpDX.Direct3D11.RasterizerState)">
            <summary>	
            <p>Create a rasterizer state object that tells the rasterizer stage how to behave.</p>	
            </summary>	
            <param name="rasterizerDescRef"><dd>  <p>Pointer to a rasterizer state description (see <strong><see cref="T:SharpDX.Direct3D11.RasterizerStateDescription"/></strong>).</p> </dd></param>	
            <param name="rasterizerStateOut"><dd>  <p>Address of a reference to the rasterizer state object created (see <strong><see cref="T:SharpDX.Direct3D11.RasterizerState"/></strong>).</p> </dd></param>	
            <returns><p>This method returns E_OUTOFMEMORY if there is insufficient memory to create the compute shader.  See Direct3D 11 Return Codes for other possible return values.</p></returns>	
            <remarks>	
            <p>4096 unique rasterizer state objects can be created on a device at a time.</p><p>If an application attempts to create a rasterizer-state interface with the same state as an existing interface, the same interface will be returned and the total number of unique rasterizer state objects will stay the same.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateRasterizerState']/*"/>	
            <msdn-id>ff476516</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateRasterizerState([In] const D3D11_RASTERIZER_DESC* pRasterizerDesc,[Out, Fast] ID3D11RasterizerState** ppRasterizerState)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateRasterizerState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateSamplerState(SharpDX.Direct3D11.SamplerStateDescription@,SharpDX.Direct3D11.SamplerState)">
            <summary>	
            <p>Create a sampler-state object that encapsulates sampling information for a texture.</p>	
            </summary>	
            <param name="samplerDescRef"><dd>  <p>Pointer to a sampler state description (see <strong><see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/></strong>).</p> </dd></param>	
            <param name="samplerStateOut"><dd>  <p>Address of a reference to the sampler state object created (see <strong><see cref="T:SharpDX.Direct3D11.SamplerState"/></strong>).</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>4096 unique sampler state objects can be created on a device at a time.</p><p>If an application attempts to create a sampler-state interface with the same state as an existing interface, the same interface will be returned and the total number of unique sampler state objects will stay the same.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateSamplerState']/*"/>	
            <msdn-id>ff476518</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateSamplerState([In] const D3D11_SAMPLER_DESC* pSamplerDesc,[Out, Fast] ID3D11SamplerState** ppSamplerState)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateSamplerState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateQuery(SharpDX.Direct3D11.QueryDescription,SharpDX.Direct3D11.Query)">
            <summary>	
            <p>This interface encapsulates methods for querying information from the GPU.</p>	
            </summary>	
            <param name="queryDescRef"><dd>  <p>Pointer to a query description (see <strong><see cref="T:SharpDX.Direct3D11.QueryDescription"/></strong>).</p> </dd></param>	
            <param name="queryOut"><dd>  <p>Address of a reference to the query object created (see <strong><see cref="T:SharpDX.Direct3D11.Query"/></strong>).</p> </dd></param>	
            <returns><p>This method returns E_OUTOFMEMORY if there is insufficient memory to create the query object.   See Direct3D 11 Return Codes for other possible return values.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateQuery']/*"/>	
            <msdn-id>ff476515</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateQuery([In] const D3D11_QUERY_DESC* pQueryDesc,[Out, Fast] ID3D11Query** ppQuery)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateQuery</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreatePredicate(SharpDX.Direct3D11.QueryDescription,SharpDX.Direct3D11.Predicate)">
            <summary>	
            <p>Creates a predicate.</p>	
            </summary>	
            <param name="predicateDescRef"><dd>  <p>Pointer to a query description where the type of query must be a <see cref="F:SharpDX.Direct3D11.QueryType.StreamOutputOverflowPredicate"/> or <see cref="F:SharpDX.Direct3D11.QueryType.OcclusionPredicate"/> (see <strong><see cref="T:SharpDX.Direct3D11.QueryDescription"/></strong>).</p> </dd></param>	
            <param name="predicateOut"><dd>  <p>Address of a reference to a predicate (see <strong><see cref="T:SharpDX.Direct3D11.Predicate"/></strong>).</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreatePredicate']/*"/>	
            <msdn-id>ff476514</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreatePredicate([In] const D3D11_QUERY_DESC* pPredicateDesc,[Out, Fast] ID3D11Predicate** ppPredicate)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreatePredicate</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.Counter)">
            <summary>	
            <p>Create a counter object for measuring GPU performance.</p>	
            </summary>	
            <param name="counterDescRef"><dd>  <p>Pointer to a counter description (see <strong><see cref="T:SharpDX.Direct3D11.CounterDescription"/></strong>).</p> </dd></param>	
            <param name="counterOut"><dd>  <p>Address of a reference to a counter (see <strong><see cref="T:SharpDX.Direct3D11.Counter"/></strong>).</p> </dd></param>	
            <returns><p>If this function succeeds, it will return <see cref="F:SharpDX.Result.Ok"/>. If it fails, possible return values are: S_FALSE, E_OUTOFMEMORY, <see cref="F:SharpDX.DXGI.ResultCode.Unsupported"/>, <see cref="F:SharpDX.DXGI.ResultCode.Nonexclusive"/>, or E_INVALIDARG.</p><p><see cref="F:SharpDX.DXGI.ResultCode.Unsupported"/> is returned whenever the application requests to create a well-known counter, but the current device does not support it.</p><p><see cref="F:SharpDX.DXGI.ResultCode.Nonexclusive"/> indicates that another device object is currently using the counters, so they cannot be used by this device at the moment.</p><p>E_INVALIDARG is returned whenever an out-of-range well-known or device-dependent counter is requested, or when the simulataneously active counters have been exhausted.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateCounter']/*"/>	
            <msdn-id>ff476504</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateCounter([In] const D3D11_COUNTER_DESC* pCounterDesc,[Out, Fast] ID3D11Counter** ppCounter)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateCounter</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateDeferredContext(System.Int32,SharpDX.Direct3D11.DeviceContext)">
            <summary>	
            <p>Creates a deferred context for play back of command lists.</p>	
            </summary>	
            <param name="contextFlags"><dd>  <p>Reserved for future use.  Pass 0.</p> </dd></param>	
            <param name="deferredContextOut"><dd>  <p>Upon completion of the method, the passed reference to an <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface reference is initialized.</p> </dd></param>	
            <returns><p>Returns <see cref="F:SharpDX.Result.Ok"/> if successful; otherwise, returns one of the following:</p><ul> <li>Returns <strong><see cref="F:SharpDX.DXGI.ResultCode.DeviceRemoved"/></strong> if the video card has been physically removed from the system, or a driver upgrade for the video card has occurred. If this error occurs, you should destroy and recreate the device.</li> <li>Returns <strong><see cref="F:SharpDX.DXGI.ResultCode.InvalidCall"/></strong> if the <strong>CreateDeferredContext</strong> method cannot be called from the current context. For example, if the device was created with the <strong><see cref="F:SharpDX.Direct3D11.DeviceCreationFlags.SingleThreaded"/></strong> value,  <strong>CreateDeferredContext</strong> returns <strong><see cref="F:SharpDX.DXGI.ResultCode.InvalidCall"/></strong>.</li> <li>Returns <strong>E_INVALIDARG</strong> if the <em>ContextFlags</em> parameter is invalid.</li> <li>Returns <strong>E_OUTOFMEMORY</strong> if the application has exhausted available memory.</li> </ul></returns>	
            <remarks>	
            <p>A deferred context is a thread-safe context that you can use to record graphics commands on a thread other than the main rendering thread.  Using a deferred context, you can record graphics commands into a command list that is encapsulated by the <strong><see cref="T:SharpDX.Direct3D11.CommandList"/></strong> interface.  After all scene items are recorded, you can then submit them to the main render thread for final rendering.  In this manner, you can perform rendering tasks concurrently across multiple threads and potentially improve performance in multi-core CPU scenarios.</p><p>You can create multiple deferred contexts.</p><p><strong>Note</strong>??If you use the <strong><see cref="F:SharpDX.Direct3D11.DeviceCreationFlags.SingleThreaded"/></strong> value to create the device that is represented by <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong>, the <strong>CreateDeferredContext</strong> method will fail, and you will not be able to create a deferred context.</p><p>For more information about deferred contexts, see Immediate and Deferred Rendering.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateDeferredContext']/*"/>	
            <msdn-id>ff476505</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateDeferredContext([In] unsigned int ContextFlags,[Out, Fast] ID3D11DeviceContext** ppDeferredContext)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateDeferredContext</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.OpenSharedResource(System.IntPtr,System.Guid,System.IntPtr@)">
            <summary>	
            <p>Give a device access to a shared resource created on a different device.</p>	
            </summary>	
            <param name="hResource"><dd>  <p>A resource handle. See remarks.</p> </dd></param>	
            <param name="returnedInterface"><dd>  <p>The globally unique identifier (<see cref="T:System.Guid"/>) for the resource interface. See remarks.</p> </dd></param>	
            <param name="resourceOut"><dd>  <p>Address of a reference to the resource we are gaining access to.</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>The REFIID, or <see cref="T:System.Guid"/>, of the interface to the resource can be obtained by using the __uuidof() macro. For example, __uuidof(<see cref="T:SharpDX.Direct3D11.Buffer"/>) will get the <see cref="T:System.Guid"/> of the interface to a buffer resource.</p><p>The unique handle of the resource is obtained differently depending on the type of device that originally created the resource.</p><p>To share a resource between two Direct3D 11 devices the resource must have been created with the  <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.Shared"/></strong> flag, if it was created using the <see cref="T:SharpDX.Direct3D11.Device"/> interface.  If it was created using a DXGI device interface, then the resource is always shared.</p><p>The REFIID, or <see cref="T:System.Guid"/>, of the interface to the resource can be obtained by using the __uuidof() macro.  For example, __uuidof(<see cref="T:SharpDX.Direct3D11.Buffer"/>) will get the <see cref="T:System.Guid"/> of the interface to a buffer resource.</p><p>When sharing a resource between two Direct3D 10/11 devices the unique handle of the resource can be obtained by querying the resource for the <strong><see cref="T:SharpDX.DXGI.Resource"/></strong> interface and then calling <strong>GetSharedHandle</strong>.</p><pre><code> <see cref="T:SharpDX.DXGI.Resource"/>* pOtherResource(<c>null</c>);	
            hr = pOtherDeviceResource-&gt;QueryInterface( __uuidof(<see cref="T:SharpDX.DXGI.Resource"/>), (void**)&amp;pOtherResource );	
            HANDLE sharedHandle;	
            pOtherResource-&gt;GetSharedHandle(&amp;sharedHandle); </code></pre><p>The only resources that can be shared are 2D non-mipmapped textures.</p><p>To share a resource between a Direct3D 9 device and a Direct3D 11 device the texture must have been created using  the <em>pSharedHandle</em> argument of <strong>CreateTexture</strong>.   The shared Direct3D 9 handle is then passed to OpenSharedResource in the <em>hResource</em> argument.</p><p>The following code illustrates the method calls involved.</p><pre><code> sharedHandle = <c>null</c>; // must be set to <c>null</c> to create, can use a valid handle here to open in D3D9 	
            pDevice9-&gt;CreateTexture(..., pTex2D_9, &amp;sharedHandle); 	
            ... 	
            pDevice11-&gt;OpenSharedResource(sharedHandle, __uuidof(<see cref="T:SharpDX.Direct3D11.Resource"/>), (void**)(&amp;tempResource11)); 	
            tempResource11-&gt;QueryInterface(__uuidof(<see cref="T:SharpDX.Direct3D11.Texture2D"/>), (void**)(&amp;pTex2D_11)); 	
            tempResource11-&gt;Release(); 	
            // now use pTex2D_11 with pDevice11    </code></pre><p>Textures being shared from D3D9 to D3D11 have the following restrictions.</p><ul> <li>Textures must be 2D</li> <li>Only 1 mip level is allowed</li> <li>Texture must have default usage</li> <li>Texture must be write only</li> <li>MSAA textures are not allowed</li> <li>Bind flags must have SHADER_RESOURCE and RENDER_TARGET set</li> <li>Only R10G10B10A2_UNORM, R16G16B16A16_FLOAT and R8G8B8A8_UNORM formats are allowed</li> </ul><p>If a shared texture is updated on one device <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Flush"/></strong> must be called on that device.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::OpenSharedResource']/*"/>	
            <msdn-id>ff476531</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::OpenSharedResource([In] void* hResource,[In] const GUID&amp; ReturnedInterface,[Out, Optional] void** ppResource)</unmanaged>	
            <unmanaged-short>ID3D11Device::OpenSharedResource</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckFormatSupport(SharpDX.DXGI.Format)">
            <summary>	
            <p>Get the support of a given format on the installed video device.</p>	
            </summary>	
            <param name="format"><dd>  <p>A <strong><see cref="T:SharpDX.DXGI.Format"/></strong> enumeration that describes a format for which to check for support.</p> </dd></param>	
            <returns><dd>  <p>A bitfield of <strong><see cref="T:SharpDX.Direct3D11.FormatSupport"/></strong> enumeration values describing how the specified format is supported on the installed device.  The values are ORed together.</p> </dd></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CheckFormatSupport']/*"/>	
            <msdn-id>ff476498</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CheckFormatSupport([In] DXGI_FORMAT Format,[Out] D3D11_FORMAT_SUPPORT* pFormatSupport)</unmanaged>	
            <unmanaged-short>ID3D11Device::CheckFormatSupport</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckMultisampleQualityLevels(SharpDX.DXGI.Format,System.Int32)">
            <summary>	
            <p>Get the number of quality levels available during multisampling.</p>	
            </summary>	
            <param name="format"><dd>  <p>The texture format. See <strong><see cref="T:SharpDX.DXGI.Format"/></strong>.</p> </dd></param>	
            <param name="sampleCount"><dd>  <p>The number of samples during multisampling.</p> </dd></param>	
            <returns><dd>  <p>Number of quality levels supported by the adapter. See remarks.</p> </dd></returns>	
            <remarks>	
            <p>When multisampling a texture, the number of quality levels available for an adapter is dependent on the texture format used and the number of  samples requested. The maximum number of quality levels is defined by <see cref="F:SharpDX.Direct3D11.Device.MultisampleCountMaximum"/> in D3D11.h. If this method returns 0, the format  and sample count combination is not supported for the installed adapter.</p><p>Furthermore, the definition of a quality level is up to each hardware vendor to define, however no facility is provided by Direct3D to help discover  this information.</p><p>Note that FEATURE_LEVEL_10_1 devices are required to support 4x MSAA for all render targets except R32G32B32A32 and R32G32B32. FEATURE_LEVEL_11_0 devices are required to support 4x MSAA for all render target formats, and 8x MSAA for all render target formats  except R32G32B32A32 formats.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CheckMultisampleQualityLevels']/*"/>	
            <msdn-id>ff476499</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CheckMultisampleQualityLevels([In] DXGI_FORMAT Format,[In] unsigned int SampleCount,[Out] unsigned int* pNumQualityLevels)</unmanaged>	
            <unmanaged-short>ID3D11Device::CheckMultisampleQualityLevels</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetCounterCapabilities">
            <summary>	
            <p>Get a counter's information.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CheckCounterInfo']/*"/>	
            <msdn-id>ff476496</msdn-id>	
            <unmanaged>void ID3D11Device::CheckCounterInfo([Out] D3D11_COUNTER_INFO* pCounterInfo)</unmanaged>	
            <unmanaged-short>ID3D11Device::CheckCounterInfo</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.CounterType@,System.Int32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>	
            <p>Get the type, name, units of measure, and a description of an existing counter.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>Pointer to a counter description (see <strong><see cref="T:SharpDX.Direct3D11.CounterDescription"/></strong>). Specifies which counter information is to be retrieved about.</p> </dd></param>	
            <param name="typeRef"><dd>  <p>Pointer to the data type of a counter (see <strong><see cref="T:SharpDX.Direct3D11.CounterType"/></strong>). Specifies the data type of the counter being retrieved.</p> </dd></param>	
            <param name="activeCountersRef"><dd>  <p>Pointer to the number of hardware counters that are needed for this counter type to be created. All instances of the same counter type use the same hardware counters.</p> </dd></param>	
            <param name="szName"><dd>  <p>String to be filled with a brief name for the counter. May be <strong><c>null</c></strong> if the application is not interested in the name of the counter.</p> </dd></param>	
            <param name="nameLengthRef"><dd>  <p>Length of the string returned to szName. Can be <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="szUnits"><dd>  <p>Name of the units a counter measures, provided the memory the reference points to has enough room to hold the string. Can be <strong><c>null</c></strong>. The returned string will always be in English.</p> </dd></param>	
            <param name="unitsLengthRef"><dd>  <p>Length of the string returned to szUnits. Can be <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="szDescription"><dd>  <p>A description of the counter, provided the memory the reference points to has enough room to hold the string. Can be <strong><c>null</c></strong>. The returned string will always be in English.</p> </dd></param>	
            <param name="descriptionLengthRef"><dd>  <p>Length of the string returned to szDescription. Can be <strong><c>null</c></strong>.</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>Length parameters can be <strong><c>null</c></strong>, which indicates the application is not interested in the length nor the corresponding string value. When a length parameter is non-<strong><c>null</c></strong> and the corresponding string is <strong><c>null</c></strong>, the input value of the length parameter is ignored, and the length of the corresponding string (including terminating <strong><c>null</c></strong>) will be returned through the length parameter. When length and the corresponding parameter are both non-<strong><c>null</c></strong>, the input value of length is checked to ensure there is enough room, and then the length of the string (including terminating <strong><c>null</c></strong> character) is passed out through the length parameter.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CheckCounter']/*"/>	
            <msdn-id>ff476495</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CheckCounter([In] const D3D11_COUNTER_DESC* pDesc,[Out] D3D11_COUNTER_TYPE* pType,[Out] unsigned int* pActiveCounters,[Out, Buffer, Optional] char* szName,[InOut, Optional] unsigned int* pNameLength,[Out, Buffer, Optional] char* szUnits,[InOut, Optional] unsigned int* pUnitsLength,[Out, Buffer, Optional] char* szDescription,[InOut, Optional] unsigned int* pDescriptionLength)</unmanaged>	
            <unmanaged-short>ID3D11Device::CheckCounter</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature,System.IntPtr,System.Int32)">
            <summary>	
            <p>Gets information about the features that are supported by the current graphics driver.</p>	
            </summary>	
            <param name="feature"><dd>  <p>A member of the <strong><see cref="T:SharpDX.Direct3D11.Feature"/></strong> enumerated type that describes which feature to query for support.</p> </dd></param>	
            <param name="featureSupportDataRef"><dd>  <p>Upon completion of the method, the passed structure is filled with data that describes the feature support.</p> </dd></param>	
            <param name="featureSupportDataSize"><dd>  <p>The size of the structure passed to the <em>pFeatureSupportData</em> parameter.</p> </dd></param>	
            <returns><p>Returns <see cref="F:SharpDX.Result.Ok"/> if successful; otherwise, returns E_INVALIDARG if an unsupported data type is passed to the <em>pFeatureSupportData</em> parameter  or a size mismatch is detected for the <em>FeatureSupportDataSize</em> parameter.</p></returns>	
            <remarks>	
            <p>To query for multi-threading support, pass the <strong><see cref="F:SharpDX.Direct3D11.Feature.Threading"/></strong> value to the <em>Feature</em> parameter, pass  the <strong><see cref="T:SharpDX.Direct3D11.FeatureDataThreading"/></strong> structure to the  <em>pFeatureSupportData</em> parameter, and pass the size of  the <strong><see cref="T:SharpDX.Direct3D11.FeatureDataThreading"/></strong> structure to the <em>FeatureSupportDataSize</em> parameter.</p><p>Calling CheckFeatureSupport with <em>Feature</em> set to <see cref="F:SharpDX.Direct3D11.Feature.FormatSupport"/> causes the method to return the same information that would be returned  by <strong><see cref="M:SharpDX.Direct3D11.Device.CheckFormatSupport(SharpDX.DXGI.Format)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CheckFeatureSupport']/*"/>	
            <msdn-id>ff476497</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CheckFeatureSupport([In] D3D11_FEATURE Feature,[Out, Buffer] void* pFeatureSupportData,[In] unsigned int FeatureSupportDataSize)</unmanaged>	
            <unmanaged-short>ID3D11Device::CheckFeatureSupport</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetPrivateData(System.Guid,System.Int32@,System.IntPtr)">
            <summary>	
            <p>Get application-defined data from a device.</p>	
            </summary>	
            <param name="guid"><dd>  <p>Guid associated with the data.</p> </dd></param>	
            <param name="dataSizeRef"><dd>  <p>A reference to a variable that on input contains the size, in bytes, of the buffer that <em>pData</em> points to, and on output contains the size, in bytes, of the amount of data that <strong>GetPrivateData</strong> retrieved.</p> </dd></param>	
            <param name="dataRef"><dd>  <p>A reference to a buffer that <strong>GetPrivateData</strong> fills with data from the device if <em>pDataSize</em> points to a value that specifies a buffer large enough to hold the data.</p> </dd></param>	
            <returns><p>This method returns one of the codes described in the topic Direct3D 11 Return Codes.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetPrivateData']/*"/>	
            <msdn-id>ff476530</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::GetPrivateData([In] const GUID&amp; guid,[InOut] unsigned int* pDataSize,[Out, Buffer, Optional] void* pData)</unmanaged>	
            <unmanaged-short>ID3D11Device::GetPrivateData</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.SetPrivateData(System.Guid,System.Int32,System.IntPtr)">
            <summary>	
            <p>Set data to a device and associate that data with a guid.</p>	
            </summary>	
            <param name="guid"><dd>  <p>Guid associated with the data.</p> </dd></param>	
            <param name="dataSize"><dd>  <p>Size of the data.</p> </dd></param>	
            <param name="dataRef"><dd>  <p>Pointer to the data to be stored with this device. If pData is <strong><c>null</c></strong>, DataSize must also be 0, and any data previously associated with the guid will be destroyed.</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>The data stored in the device with this method can be retrieved with <strong><see cref="M:SharpDX.Direct3D11.Device.GetPrivateData(System.Guid,System.Int32@,System.IntPtr)"/></strong>.</p><p>The data and guid set with this method will typically be application-defined.</p><p>If an application uses this method to change the device type using GUID_DeviceType, results are undefined. However, GUID_DeviceType can be used to retrieve the device type using <strong><see cref="M:SharpDX.Direct3D11.Device.GetPrivateData(System.Guid,System.Int32@,System.IntPtr)"/></strong>.</p><p>The debug layer reports memory leaks by outputting a list of object interface references along with their friendly names. The default friendly name is "&lt;unnamed&gt;". You can set the friendly name so that you can determine if the corresponding object interface reference caused the leak. To set the friendly name, use the <strong>SetPrivateData</strong> method and the <strong><see cref="F:SharpDX.Direct3D.CommonGuid.DebugObjectName"/></strong> <see cref="T:System.Guid"/> that is in D3Dcommon.h. For example, to give pContext a friendly name of <em>My name</em>, use the following code:</p><pre><code> static const char c_szName[] = "My name";	
            hr = pContext-&gt;SetPrivateData( <see cref="F:SharpDX.Direct3D.CommonGuid.DebugObjectName"/>, sizeof( c_szName ) - 1, c_szName );	
            </code></pre>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::SetPrivateData']/*"/>	
            <msdn-id>ff476533</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::SetPrivateData([In] const GUID&amp; guid,[In] unsigned int DataSize,[In, Buffer, Optional] const void* pData)</unmanaged>	
            <unmanaged-short>ID3D11Device::SetPrivateData</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.SetPrivateDataInterface(System.Guid,SharpDX.ComObject)">
            <summary>	
            <p>Associate an <see cref="T:SharpDX.ComObject"/>-derived interface with this device child and associate that interface with an application-defined guid.</p>	
            </summary>	
            <param name="guid"><dd>  <p>Guid associated with the interface.</p> </dd></param>	
            <param name="dataRef"><dd>  <p>Pointer to an <see cref="T:SharpDX.ComObject"/>-derived interface to be associated with the device child.</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::SetPrivateDataInterface']/*"/>	
            <msdn-id>ff476534</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::SetPrivateDataInterface([In] const GUID&amp; guid,[In, Optional] const IUnknown* pData)</unmanaged>	
            <unmanaged-short>ID3D11Device::SetPrivateDataInterface</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetFeatureLevel">
            <summary>	
            <p>Gets the feature level of the hardware device.</p>	
            </summary>	
            <returns><p>A member of the <strong><see cref="T:SharpDX.Direct3D.FeatureLevel"/></strong> enumerated type that describes the feature level of the hardware device.</p></returns>	
            <remarks>	
            <p> Feature levels determine the capabilities of your device.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetFeatureLevel']/*"/>	
            <msdn-id>ff476528</msdn-id>	
            <unmanaged>D3D_FEATURE_LEVEL ID3D11Device::GetFeatureLevel()</unmanaged>	
            <unmanaged-short>ID3D11Device::GetFeatureLevel</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetCreationFlags">
            <summary>	
            <p>Get the flags used during the call to create the device with <strong><see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/></strong>.</p>	
            </summary>	
            <returns><p>A bitfield containing the flags used to create the device. See <strong><see cref="T:SharpDX.Direct3D11.DeviceCreationFlags"/></strong>.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetCreationFlags']/*"/>	
            <msdn-id>ff476525</msdn-id>	
            <unmanaged>unsigned int ID3D11Device::GetCreationFlags()</unmanaged>	
            <unmanaged-short>ID3D11Device::GetCreationFlags</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetDeviceRemovedReason">
            <summary>	
            <p>Get the reason why the device was removed.</p>	
            </summary>	
            <returns><p>Possible return values include:  </p><ul> <li><see cref="F:SharpDX.DXGI.ResultCode.DeviceHung"/></li> <li><see cref="F:SharpDX.DXGI.ResultCode.DeviceRemoved"/></li> <li><see cref="F:SharpDX.DXGI.ResultCode.DeviceReset"/></li> <li><see cref="F:SharpDX.DXGI.ResultCode.DriverInternalError"/></li> <li><see cref="F:SharpDX.DXGI.ResultCode.InvalidCall"/></li> <li><see cref="F:SharpDX.Result.Ok"/></li> </ul><p>For more detail on these return codes, see DXGI_ERROR.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetDeviceRemovedReason']/*"/>	
            <msdn-id>ff476526</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::GetDeviceRemovedReason()</unmanaged>	
            <unmanaged-short>ID3D11Device::GetDeviceRemovedReason</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetImmediateContext(SharpDX.Direct3D11.DeviceContext@)">
            <summary>	
            <p>Gets an immediate context which can record command lists.</p>	
            </summary>	
            <param name="immediateContextOut"><dd>  <p>Upon completion of the method, the passed reference to an <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface reference is initialized.</p> </dd></param>	
            <remarks>	
            <p>The <strong>GetImmediateContext</strong> method returns an <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> object that represents an immediate context which is used to perform rendering that you want immediately submitted to a device. For most applications, an immediate context is the primary object that is used to draw your scene.</p><p>The <strong>GetImmediateContext</strong> method increments the reference count of the immediate context by one. Therefore, you must call <strong>Release</strong> on the returned interface reference when you are done with it to avoid a memory leak. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetImmediateContext']/*"/>	
            <msdn-id>ff476529</msdn-id>	
            <unmanaged>void ID3D11Device::GetImmediateContext([Out] ID3D11DeviceContext** ppImmediateContext)</unmanaged>	
            <unmanaged-short>ID3D11Device::GetImmediateContext</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.SetExceptionMode(System.Int32)">
            <summary>	
            <p>Get the exception-mode flags.</p>	
            </summary>	
            <param name="raiseFlags"><dd>  <p>A value that contains one or more exception flags; each flag specifies a condition which will cause an exception to be raised. The flags are listed in <strong>D3D11_RAISE_FLAG</strong>. A default value of 0 means there are no flags.</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>Set an exception-mode flag to elevate an error condition to a non-continuable exception. </p><p>Whenever an error occurs, a Direct3D device enters the DEVICEREMOVED state and if the appropriate exception flag has been set, an exception is raised. A raised exception is designed to terminate an application. Before termination, the last chance an application has to persist data is by using an UnhandledExceptionFilter (see Structured Exception Handling). In general, UnhandledExceptionFilters are leveraged to try to persist data when an application is crashing (to disk, for example). Any code that executes during an UnhandledExceptionFilter is not guaranteed to reliably execute (due to possible process corruption). Any data that the UnhandledExceptionFilter manages to persist, before the UnhandledExceptionFilter crashes again, should be treated as suspect, and therefore inspected by a new, non-corrupted process to see if it is usable.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::SetExceptionMode']/*"/>	
            <msdn-id>ff476532</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::SetExceptionMode([In] unsigned int RaiseFlags)</unmanaged>	
            <unmanaged-short>ID3D11Device::SetExceptionMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetExceptionMode">
            <summary>	
            <p>Get the exception-mode flags.</p>	
            </summary>	
            <returns><p>A value that contains one or more exception flags; each flag specifies a condition which will cause an exception to be raised. The flags are listed in <strong>D3D11_RAISE_FLAG</strong>. A default value of 0 means there are no flags.</p></returns>	
            <remarks>	
            <p>An exception-mode flag is used to elevate an error condition to a non-continuable exception. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetExceptionMode']/*"/>	
            <msdn-id>ff476527</msdn-id>	
            <unmanaged>unsigned int ID3D11Device::GetExceptionMode()</unmanaged>	
            <unmanaged-short>ID3D11Device::GetExceptionMode</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.Device.DebugName">
            <summary>
            Gets or sets the debug-name for this object.
            </summary>
            <value>
            The debug name.
            </value>
        </member>
        <member name="P:SharpDX.Direct3D11.Device.FeatureLevel">
            <summary>	
            <p>Gets the feature level of the hardware device.</p>	
            </summary>	
            <remarks>	
            <p> Feature levels determine the capabilities of your device.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetFeatureLevel']/*"/>	
            <msdn-id>ff476528</msdn-id>	
            <unmanaged>GetFeatureLevel</unmanaged>	
            <unmanaged-short>GetFeatureLevel</unmanaged-short>	
            <unmanaged>D3D_FEATURE_LEVEL ID3D11Device::GetFeatureLevel()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.Device.CreationFlags">
            <summary>	
            <p>Get the flags used during the call to create the device with <strong><see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/></strong>.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetCreationFlags']/*"/>	
            <msdn-id>ff476525</msdn-id>	
            <unmanaged>GetCreationFlags</unmanaged>	
            <unmanaged-short>GetCreationFlags</unmanaged-short>	
            <unmanaged>unsigned int ID3D11Device::GetCreationFlags()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.Device.DeviceRemovedReason">
            <summary>	
            <p>Get the reason why the device was removed.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetDeviceRemovedReason']/*"/>	
            <msdn-id>ff476526</msdn-id>	
            <unmanaged>GetDeviceRemovedReason</unmanaged>	
            <unmanaged-short>GetDeviceRemovedReason</unmanaged-short>	
            <unmanaged>HRESULT ID3D11Device::GetDeviceRemovedReason()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.Device.ImmediateContext">
            <summary>	
            <p>Gets an immediate context which can record command lists.</p>	
            </summary>	
            <remarks>	
            <p>The <strong>GetImmediateContext</strong> method returns an <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> object that represents an immediate context which is used to perform rendering that you want immediately submitted to a device. For most applications, an immediate context is the primary object that is used to draw your scene.</p><p>The <strong>GetImmediateContext</strong> method increments the reference count of the immediate context by one. Therefore, you must call <strong>Release</strong> on the returned interface reference when you are done with it to avoid a memory leak. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetImmediateContext']/*"/>	
            <msdn-id>ff476529</msdn-id>	
            <unmanaged>GetImmediateContext</unmanaged>	
            <unmanaged-short>GetImmediateContext</unmanaged-short>	
            <unmanaged>void ID3D11Device::GetImmediateContext([Out] ID3D11DeviceContext** ppImmediateContext)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.Device.ExceptionMode">
            <summary>	
            <p>Get or sets the exception-mode flags.</p>	
            </summary>	
            <remarks>	
            <p>An exception-mode flag is used to elevate an error condition to a non-continuable exception. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetExceptionMode']/*"/>	
            <msdn-id>ff476527</msdn-id>	
            <unmanaged>GetExceptionMode / SetExceptionMode</unmanaged>	
            <unmanaged-short>GetExceptionMode</unmanaged-short>	
            <unmanaged>unsigned int ID3D11Device::GetExceptionMode()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState``1(SharpDX.Direct3D11.CreateDeviceContextStateFlags,SharpDX.Direct3D.FeatureLevel[],SharpDX.Direct3D.FeatureLevel@)">
            <summary>	
            Creates a context state object that holds all Microsoft Direct3D state and some Direct3D behavior.
            </summary>	
            <typeparam name="T">The type of the emulated interface. This value specifies the behavior of the device when the context state object is active. Valid values are  <see cref="!:SharpDX.Direct3D10.Device"/>, <see cref="!:SharpDX.Direct3D10.Device1"/>, <see cref="T:SharpDX.Direct3D11.Device"/>, and <see cref="T:SharpDX.Direct3D11.Device1"/>. See Remarks.</typeparam>	
            <param name="flags"><para>A combination of <see cref="T:SharpDX.Direct3D11.CreateDeviceContextStateFlags"/> values that are combined by using a bitwise OR operation. The resulting value specifies how to create the context state object. The <see cref="!:SharpDX.Direct3D11.CreateDeviceContextStateFlags.Singlethreaded"/> flag is currently the only defined flag. If the original device was created with <see cref="F:SharpDX.Direct3D11.DeviceCreationFlags.SingleThreaded"/>, you must create all context state objects from that device with the <see cref="!:SharpDX.Direct3D11.CreateDeviceContextStateFlags.Singlethreaded"/> flag. </para> <para>The context state object that  CreateDeviceContextState creates  inherits the threading model of its associated device context. By default the context state object is rent-threaded, so that an application synchronizes access to the device context, typically by use of critical sections. In contrast, the context state object is free-threaded if you used the ID3D10Multithread interface to turn on thread protection for the device context.</para> <para>If you set the single-threaded flag for both the context state object and the device, you guarantee that you will   call the whole set of context methods and device methods only from one thread. You therefore do not need to use critical sections to synchronize access to the device context, and the runtime can avoid working with those processor-intensive critical sections.</para></param>	
            <param name="featureLevelsRef"><para>A reference to an array of <see cref="T:SharpDX.Direct3D.FeatureLevel"/> values. The array determines the order of feature levels for which creation is attempted.  To get the greatest feature level available, set pFeatureLevels to <c>null</c>,  so that CreateDeviceContextState uses the following array of feature level values:</para>  <code> { <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_1"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_1"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_2"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_1"/>,}; </code></param>	
            <param name="chosenFeatureLevelRef"><para>A reference to a variable that receives a <see cref="T:SharpDX.Direct3D.FeatureLevel"/> value from the pFeatureLevels array. This is the first array value with which CreateDeviceContextState succeeded in creating the context state object. If the call to CreateDeviceContextState fails, the variable pointed to by pChosenFeatureLevel is set to zero.</para></param>	
            <returns>A <see cref="T:SharpDX.Direct3D11.DeviceContextState"/> object that represents the state of a Direct3D device.</returns>	
            <remarks>	
            The  REFIID value of the emulated interface is a <see cref="T:System.Guid"/> obtained by use of the __uuidof operator. For example, __uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>) gets the <see cref="T:System.Guid"/> of the interface to a Microsoft Direct3D?11 device.Call the <see cref="M:SharpDX.Direct3D11.DeviceContext1.SwapDeviceContextState(SharpDX.Direct3D11.DeviceContextState,SharpDX.Direct3D11.DeviceContextState@)"/> method to activate the context state object. When the context state object is active, the device behaviors that are associated with both the context state object's feature level and its compatible interface are activated on the Direct3D device until the next call to SwapDeviceContextState.When a context state object is active, the runtime disables certain methods on the device and context interfaces. For example, a context state object that is created with __uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>) will cause the runtime to turn off most of the Microsoft Direct3D?10 device interfaces, and a context state object that is created with __uuidof(<see cref="!:SharpDX.Direct3D10.Device1"/>) or __uuidof(<see cref="!:SharpDX.Direct3D10.Device"/>) will cause the runtime to turn off most of the <see cref="T:SharpDX.Direct3D11.DeviceContext"/> methods.	
            This behavior ensures that a user of either emulated interface cannot set device state that the other emulated interface is unable to express. This restriction helps guarantee that the <see cref="!:SharpDX.Direct3D10.Device1"/> emulated interface accurately reflects the full state of the pipeline and that the emulated interface will not operate contrary to its original interface definition.For example, suppose the tessellation stage is made active through the <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface	
            when you create the device through <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> or D3D11CreateDeviceAndSwapChain,  instead of through the Direct3D?10 equivalents. Because  the Direct3D?11 context is active, a Direct3D?10 interface is inactive when you first retrieve it via QueryInterface. This means that you cannot  immediately pass a Direct3D?10 interface that you retrieved from a Direct3D?11 device to a function. You must first call SwapDeviceContextState to activate a Direct3D?10-compatible context state object.The following table shows the methods that are active and inactive for each emulated interface.Emulated interface Active device or immediate context  interfaces Inactive device or immediate context  interfaces  <para> <see cref="T:SharpDX.Direct3D11.Device"/> or</para>	
             <para> <see cref="T:SharpDX.Direct3D11.Device1"/> </para>	
              <para> <see cref="T:SharpDX.Direct3D11.Device"/> </para>	
             <para> <see cref="T:SharpDX.DXGI.Device"/> +</para>	
             <para> <see cref="T:SharpDX.DXGI.Device1"/> +</para>	
             <para> <see cref="T:SharpDX.DXGI.Device2"/> </para>	
             <para> ID3D10Multithread </para>	
              <see cref="!:SharpDX.Direct3D10.Device"/>   <para> <see cref="!:SharpDX.Direct3D10.Device1"/> or</para>	
             <para> <see cref="!:SharpDX.Direct3D10.Device"/> </para>	
              <para> <see cref="!:SharpDX.Direct3D10.Device"/> </para>	
             <para> <see cref="!:SharpDX.Direct3D10.Device1"/> </para>	
             <para> <see cref="T:SharpDX.DXGI.Device"/> +</para>	
             <para> <see cref="T:SharpDX.DXGI.Device1"/> </para>	
             <para> ID3D10Multithread </para>	
              <para> <see cref="T:SharpDX.Direct3D11.Device"/> </para>	
             <para> <see cref="T:SharpDX.Direct3D11.DeviceContext"/> (As published by the immediate context. The Direct3D?10 or Microsoft Direct3D?10.1 emulated interface has no effect on deferred contexts.)</para>?The following table shows the immediate context methods that the runtime disables when the indicated context state objects are active.Methods of <see cref="T:SharpDX.Direct3D11.DeviceContext"/> when __uuidof(<see cref="!:SharpDX.Direct3D10.Device1"/>) or __uuidof(<see cref="!:SharpDX.Direct3D10.Device"/>) is active Methods of <see cref="!:SharpDX.Direct3D10.Device"/> when __uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>) is active    <para> Begin </para>	
               <para> ClearDepthStencilView </para>	
              <para> ClearDepthStencilView </para>	
               <para> ClearRenderTargetView </para>	
              <para> ClearRenderTargetView </para>	
               <para> ClearState </para>	
              <para> ClearState </para>	
               <para> ClearUnorderedAccessViewUint </para>	
               <para> ClearUnorderedAccessViewFloat </para>	
               <para> CopyResource </para>	
              <para> CopyResource </para>	
               <para> CopyStructureCount </para>	
               <para> CopySubresourceRegion </para>	
              <para> CopySubresourceRegion </para>	
               <para> CSGetConstantBuffers </para>	
               <para> CSGetSamplers </para>	
               <para> CSGetShader </para>	
               <para> CSGetShaderResources </para>	
               <para> CSGetUnorderedAccessViews </para>	
               <para> CSSetConstantBuffers </para>	
               <para> CSSetSamplers </para>	
               <para> CSSetShader </para>	
               <para> CSSetShaderResources </para>	
               <para> CSSetUnorderedAccessViews </para>	
               <para> Dispatch </para>	
               <para> DispatchIndirect </para>	
               <para> CreateBlendState </para>	
               <para> Draw </para>	
              <para> Draw </para>	
               <para> DrawAuto </para>	
              <para> DrawAuto </para>	
               <para> DrawIndexed </para>	
              <para> DrawIndexed </para>	
               <para> DrawIndexedInstanced </para>	
              <para> DrawIndexedInstanced </para>	
               <para> DrawIndexedInstancedIndirect </para>	
               <para> DrawInstanced </para>	
              <para> DrawInstanced </para>	
               <para> DrawInstancedIndirect </para>	
               <para> DSGetConstantBuffers </para>	
               <para> DSGetSamplers </para>	
               <para> DSGetShader </para>	
               <para> DSGetShaderResources </para>	
               <para> DSSetConstantBuffers </para>	
               <para> DSSetSamplers </para>	
               <para> DSSetShader </para>	
               <para> DSSetShaderResources </para>	
               <para> End </para>	
               <para> ExecuteCommandList </para>	
               <para> FinishCommandList </para>	
               <para> Flush </para>	
              <para> Flush </para>	
               <para> GenerateMips </para>	
              <para> GenerateMips </para>	
               <para> GetData </para>	
               <para> GetPredication </para>	
              <para> GetPredication </para>	
               <para> GetResourceMinLOD </para>	
               <para> GetType </para>	
               <para> GetTextFilterSize </para>	
               <para> GSGetConstantBuffers </para>	
              <para> GSGetConstantBuffers </para>	
               <para> GSGetSamplers </para>	
              <para> GSGetSamplers </para>	
               <para> GSGetShader </para>	
              <para> GSGetShader </para>	
               <para> GSGetShaderResources </para>	
              <para> GSGetShaderResources </para>	
               <para> GSSetConstantBuffers </para>	
              <para> GSSetConstantBuffers </para>	
               <para> GSSetSamplers </para>	
              <para> GSSetSamplers </para>	
               <para> GSSetShader </para>	
              <para> GSSetShader </para>	
               <para> GSSetShaderResources </para>	
              <para> GSSetShaderResources </para>	
               <para> HSGetConstantBuffers </para>	
               <para> HSGetSamplers </para>	
               <para> HSGetShader </para>	
               <para> HSGetShaderResources </para>	
               <para> HSSetConstantBuffers </para>	
               <para> HSSetSamplers </para>	
               <para> HSSetShader </para>	
               <para> HSSetShaderResources </para>	
               <para> IAGetIndexBuffer </para>	
              <para> IAGetIndexBuffer </para>	
               <para> IAGetInputLayout </para>	
              <para> IAGetInputLayout </para>	
               <para> IAGetPrimitiveTopology </para>	
              <para> IAGetPrimitiveTopology </para>	
               <para> IAGetVertexBuffers </para>	
               <para> IASetIndexBuffer </para>	
               <para> IASetInputLayout </para>	
               <para> IASetPrimitiveTopology </para>	
               <para> IASetVertexBuffers </para>	
               <para> OMGetBlendState </para>	
              <para> OMGetBlendState </para>	
               <para> OMGetDepthStencilState </para>	
              <para> OMGetDepthStencilState </para>	
               <para> OMGetRenderTargets </para>	
              <para> OMGetRenderTargets </para>	
               <para> OMGetRenderTargetsAndUnorderedAccessViews </para>	
               <para> OMSetBlendState </para>	
              <para> OMSetBlendState </para>	
               <para> OMSetDepthStencilState </para>	
              <para> OMSetDepthStencilState </para>	
               <para> OMSetRenderTargets </para>	
              <para> OMSetRenderTargets </para>	
               <para> OMSetRenderTargetsAndUnorderedAccessViews </para>	
               <para> PSGetConstantBuffers </para>	
              <para> PSGetConstantBuffers </para>	
               <para> PSGetSamplers </para>	
              <para> PSGetSamplers </para>	
               <para> PSGetShader </para>	
              <para> PSGetShader </para>	
               <para> PSGetShaderResources </para>	
              <para> PSGetShaderResources </para>	
               <para> PSSetConstantBuffers </para>	
              <para> PSSetConstantBuffers </para>	
               <para> PSSetSamplers </para>	
              <para> PSSetSamplers </para>	
               <para> PSSetShader </para>	
              <para> PSSetShader </para>	
               <para> PSSetShaderResources </para>	
              <para> PSSetShaderResources </para>	
               <para> ResolveSubresource </para>	
              <para> ResolveSubresource </para>	
               <para> RSGetScissorRects </para>	
              <para> RSGetScissorRects </para>	
               <para> RSGetState </para>	
              <para> RSGetState </para>	
               <para> RSGetViewports </para>	
              <para> RSGetViewports </para>	
               <para> RSSetScissorRects </para>	
              <para> RSSetScissorRects </para>	
               <para> RSSetState </para>	
              <para> RSSetState </para>	
               <para> RSSetViewports </para>	
              <para> RSSetViewports </para>	
               <para> SetPredication </para>	
              <para> SetPredication </para>	
               <para> SetResourceMinLOD </para>	
               <para> SetTextFilterSize </para>	
               <para> SOGetTargets </para>	
              <para> SOGetTargets </para>	
               <para> SOSetTargets </para>	
              <para> SOSetTargets </para>	
               <para> UpdateSubresource </para>	
              <para> UpdateSubresource </para>	
               <para> VSGetConstantBuffers </para>	
              <para> VSGetConstantBuffers </para>	
               <para> VSGetSamplers </para>	
              <para> VSGetSamplers </para>	
               <para> VSGetShader </para>	
              <para> VSGetShader </para>	
               <para> VSGetShaderResources </para>	
              <para> VSGetShaderResources </para>	
               <para> VSSetConstantBuffers </para>	
              <para> VSSetConstantBuffers </para>	
               <para> VSSetSamplers </para>	
              <para> VSSetSamplers </para>	
               <para> VSSetShader </para>	
              <para> VSSetShader </para>	
               <para> VSSetShaderResources </para>	
              <para> VSSetShaderResources </para>?The following table shows the immediate context methods that the runtime does not disable when the indicated context state objects are active.Methods of <see cref="T:SharpDX.Direct3D11.DeviceContext"/> when __uuidof(<see cref="!:SharpDX.Direct3D10.Device1"/>) or __uuidof(<see cref="!:SharpDX.Direct3D10.Device"/>) is active Methods of <see cref="!:SharpDX.Direct3D10.Device"/> when __uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>) is active   <para> GetCreationFlags </para>	
               <para> GetPrivateData </para>	
               <para> GetContextFlags </para>	
               <para> Map </para>	
               <para> Unmap </para>?The following table shows the <see cref="!:SharpDX.Direct3D10.Device"/> interface methods that the runtime does not disable because they are not immediate context methods.Methods of <see cref="!:SharpDX.Direct3D10.Device"/>   <para> CheckCounter </para>	
               <para> CheckCounterInfo </para>	
               <para>Create*, like CreateQuery </para>	
               <para> GetDeviceRemovedReason </para>	
               <para> GetExceptionMode </para>	
               <para> OpenSharedResource </para>	
               <para> SetExceptionMode </para>	
               <para> SetPrivateData </para>	
               <para> SetPrivateDataInterface </para>?	
            </remarks>	
            <unmanaged>HRESULT ID3D11Device1::CreateDeviceContextState([In] D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG Flags,[In, Buffer] const D3D_FEATURE_LEVEL* pFeatureLevels,[In] unsigned int FeatureLevels,[In] unsigned int SDKVersion,[In] const GUID&amp; EmulatedInterface,[Out, Optional] D3D_FEATURE_LEVEL* pChosenFeatureLevel,[Out, Fast] ID3DDeviceContextState** ppContextState)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.OpenSharedResource1``1(System.IntPtr)">
            <summary>	
            Gives a device access to a shared resource that is referenced by name and that was created on a different device. You must have previously created the resource as shared and specified that it uses NT handles (that is, you set the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle"/> flag).
            </summary>	
            <typeparam name="T">Type of the resource</typeparam>
            <param name="resourceHandle">The resource handle.</param>	
            <returns>An instance of T</returns>	
            <remarks>	
            The behavior of OpenSharedResource1 is similar to the behavior of the <see cref="M:SharpDX.Direct3D11.Device.OpenSharedResource(System.IntPtr,System.Guid,System.IntPtr@)"/> method; each call to OpenSharedResource1 to access a resource creates a new resource object.  In other words, if you call OpenSharedResource1 twice and pass the same resource handle to hResource, you receive two resource  objects with different <see cref="T:SharpDX.ComObject"/> references.To share a resource between two devicesCreate the resource as shared and specify that it uses NT handles, by setting the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle"/> flag. Obtain the REFIID, or <see cref="T:System.Guid"/>, of the interface to the resource by using the __uuidof() macro. For example, __uuidof(<see cref="T:SharpDX.Direct3D11.Texture2D"/>) retrieves the <see cref="T:System.Guid"/> of the interface to a 2D texture. Query the resource for the <see cref="T:SharpDX.DXGI.Resource1"/> interface. Call the <see cref="M:SharpDX.DXGI.Resource1.CreateSharedHandle(System.String,SharpDX.DXGI.SharedResourceFlags,System.Nullable{SharpDX.Win32.SecurityAttributes})"/> method to obtain the unique handle to the resource.	
            </remarks>	
            <unmanaged>HRESULT ID3D11Device1::OpenSharedResource1([In] void* hResource,[In] const GUID&amp; returnedInterface,[Out] void** ppResource)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.OpenSharedResource1``1(System.String,SharpDX.DXGI.SharedResourceFlags)">
            <summary>	
            Gives a device access to a shared resource that is referenced by name and that was created on a different device. You must have previously created the resource as shared and specified that it uses NT handles (that is, you set the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle"/> flag).
            </summary>	
            <typeparam name="T">Type of the resource</typeparam>
            <param name="name">Name of the resource to open for sharing.</param>	
            <param name="desiredAccess">The requested access rights to the resource.</param>
            <returns>An instance of T.</returns>	
            <remarks>	
            The behavior of OpenSharedResourceByName is similar to the behavior of the <see cref="M:SharpDX.Direct3D11.Device1.OpenSharedResource1(System.IntPtr,System.Guid,System.IntPtr@)"/> method; each call to OpenSharedResourceByName to access a resource creates a new resource object.  In other words, if you call OpenSharedResourceByName twice and pass the same resource name to lpName, you receive two resource  objects with different <see cref="T:SharpDX.ComObject"/> references.To share a resource between two devicesCreate the resource as shared and specify that it uses NT handles, by setting the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle"/> flag. Obtain the REFIID, or <see cref="T:System.Guid"/>, of the interface to the resource by using the __uuidof() macro. For example, __uuidof(<see cref="T:SharpDX.Direct3D11.Texture2D"/>) retrieves the <see cref="T:System.Guid"/> of the interface to a 2D texture. Query the resource for the <see cref="T:SharpDX.DXGI.Resource1"/> interface. Call the <see cref="M:SharpDX.DXGI.Resource1.CreateSharedHandle(System.String,SharpDX.DXGI.SharedResourceFlags,System.Nullable{SharpDX.Win32.SecurityAttributes})"/> method to obtain the unique handle to the resource. In this <see cref="M:SharpDX.DXGI.Resource1.CreateSharedHandle(System.String,SharpDX.DXGI.SharedResourceFlags,System.Nullable{SharpDX.Win32.SecurityAttributes})"/> call, you must pass a name for the resource if you want to subsequently call OpenSharedResourceByName to access the resource by name.	
            </remarks>	
            <unmanaged>HRESULT ID3D11Device1::OpenSharedResourceByName([In] const wchar_t* lpName,[In] unsigned int dwDesiredAccess,[In] const GUID&amp; returnedInterface,[Out] void** ppResource)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Device1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.Device1">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.Device1"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.GetImmediateContext1(SharpDX.Direct3D11.DeviceContext1@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets an immediate context, which can play back command lists.</p>	
            </summary>	
            <param name="immediateContextOut"><dd> <p>Upon completion of the method, the passed reference to an <strong><see cref="T:SharpDX.Direct3D11.DeviceContext1"/></strong> interface reference is initialized.</p> </dd></param>	
            <remarks>	
            <p><strong>GetImmediateContext1</strong> returns an <strong><see cref="T:SharpDX.Direct3D11.DeviceContext1"/></strong> object that represents an immediate context. You can use this immediate context to perform rendering that you want immediately submitted to a device. For most applications, an immediate context is the primary object that is used to draw your scene.</p><p><strong>GetImmediateContext1</strong> increments the reference count of the immediate context by one. So, call <strong>Release</strong> on the returned interface reference when you are done with it to avoid a memory leak. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::GetImmediateContext1']/*"/>	
            <msdn-id>hh404589</msdn-id>	
            <unmanaged>void ID3D11Device1::GetImmediateContext1([Out] ID3D11DeviceContext1** ppImmediateContext)</unmanaged>	
            <unmanaged-short>ID3D11Device1::GetImmediateContext1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.CreateDeferredContext1(System.Int32,SharpDX.Direct3D11.DeviceContext1)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a deferred context, which can record command lists.</p>	
            </summary>	
            <param name="contextFlags"><dd> <p>Reserved for future use.  Pass 0.</p> </dd></param>	
            <param name="deferredContextOut"><dd> <p>Upon completion of the method, the passed reference to an <strong><see cref="T:SharpDX.Direct3D11.DeviceContext1"/></strong> interface reference is initialized.</p> </dd></param>	
            <returns><p>Returns <see cref="F:SharpDX.Result.Ok"/> if successful; otherwise, returns one of the following:</p><ul> <li>Returns <strong><see cref="F:SharpDX.DXGI.ResultCode.DeviceRemoved"/></strong> if the graphics adapter has been physically removed from the computer or a driver upgrade for the graphics adapter has occurred. If this error occurs, you should destroy and re-create the device.</li> <li>Returns <strong><see cref="F:SharpDX.DXGI.ResultCode.InvalidCall"/></strong> if the <strong>CreateDeferredContext1</strong> method cannot be called from the current context. For example, if the device was created with the <strong><see cref="F:SharpDX.Direct3D11.DeviceCreationFlags.SingleThreaded"/></strong> value,  <strong>CreateDeferredContext1</strong> returns <strong><see cref="F:SharpDX.DXGI.ResultCode.InvalidCall"/></strong>.</li> <li>Returns <strong>E_INVALIDARG</strong> if the <em>ContextFlags</em> parameter is invalid.</li> <li>Returns <strong>E_OUTOFMEMORY</strong> if the application has exhausted available memory.</li> </ul></returns>	
            <remarks>	
            <p>A deferred context is a thread-safe context that you can use to record graphics commands on a thread other than the main rendering thread.  By using a deferred context, you can record graphics commands into a command list that is encapsulated by the <strong><see cref="T:SharpDX.Direct3D11.CommandList"/></strong> interface.  After you record all scene items, you can then submit them to the main render thread for final rendering.  In this manner, you can perform rendering tasks concurrently across multiple threads and potentially improve performance in multi-core CPU scenarios.</p><p>You can create multiple deferred contexts.</p><p><strong>Note</strong>??If you use the <strong><see cref="F:SharpDX.Direct3D11.DeviceCreationFlags.SingleThreaded"/></strong> value to create the device that is represented by <strong><see cref="T:SharpDX.Direct3D11.Device1"/></strong>, the <strong>CreateDeferredContext1</strong> method will fail, and you will not be able to create a deferred context.</p><p>For more information about deferred contexts, see Immediate and Deferred Rendering.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::CreateDeferredContext1']/*"/>	
            <msdn-id>hh404580</msdn-id>	
            <unmanaged>HRESULT ID3D11Device1::CreateDeferredContext1([In] unsigned int ContextFlags,[Out, Fast] ID3D11DeviceContext1** ppDeferredContext)</unmanaged>	
            <unmanaged-short>ID3D11Device1::CreateDeferredContext1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.CreateBlendState1(SharpDX.Direct3D11.BlendStateDescription1@,SharpDX.Direct3D11.BlendState1)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a blend-state object that encapsulates blend state for the output-merger stage and allows the configuration of logic operations.</p>	
            </summary>	
            <param name="blendStateDescRef">No documentation.</param>	
            <param name="blendStateOut">No documentation.</param>	
            <returns><p>This method returns E_OUTOFMEMORY if there is insufficient memory to create the blend-state object.   See Direct3D 11 Return Codes for other possible return values.</p></returns>	
            <remarks>	
            <p>An app can create up to 4096 unique blend-state objects. For each object created, the runtime checks to see if a previous object  has the same state. If such a previous object exists, the runtime will return a reference to previous instance instead of creating a duplicate object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::CreateBlendState1']/*"/>	
            <msdn-id>hh404577</msdn-id>	
            <unmanaged>HRESULT ID3D11Device1::CreateBlendState1([In] const D3D11_BLEND_DESC1* pBlendStateDesc,[Out, Fast] ID3D11BlendState1** ppBlendState)</unmanaged>	
            <unmanaged-short>ID3D11Device1::CreateBlendState1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.CreateRasterizerState1(SharpDX.Direct3D11.RasterizerStateDescription1@,SharpDX.Direct3D11.RasterizerState1)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a rasterizer state object that informs the rasterizer stage how to behave and forces the sample count while UAV rendering or rasterizing.</p>	
            </summary>	
            <param name="rasterizerDescRef">No documentation.</param>	
            <param name="rasterizerStateOut">No documentation.</param>	
            <returns><p>This method returns E_OUTOFMEMORY if there is insufficient memory to create the rasterizer state object.  See Direct3D 11 Return Codes for other possible return values.</p></returns>	
            <remarks>	
            <p>An app can create up to 4096 unique rasterizer state objects. For each object created, the runtime checks to see if a previous object  has the same state. If such a previous object exists, the runtime will return a reference to previous instance instead of creating a duplicate object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::CreateRasterizerState1']/*"/>	
            <msdn-id>hh404586</msdn-id>	
            <unmanaged>HRESULT ID3D11Device1::CreateRasterizerState1([In] const D3D11_RASTERIZER_DESC1* pRasterizerDesc,[Out, Fast] ID3D11RasterizerState1** ppRasterizerState)</unmanaged>	
            <unmanaged-short>ID3D11Device1::CreateRasterizerState1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState(SharpDX.Direct3D11.CreateDeviceContextStateFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,System.Guid,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContextState)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a context state object that holds all Microsoft Direct3D state and some Direct3D behavior.</p>	
            </summary>	
            <param name="flags"><dd> <p>A combination of <strong><see cref="T:SharpDX.Direct3D11.CreateDeviceContextStateFlags"/></strong> values that are combined by using a bitwise <strong>OR</strong> operation. The resulting value specifies how to create the context state object. The <strong><see cref="F:SharpDX.Direct3D11.CreateDeviceContextStateFlags.SingleThreaded"/></strong> flag is currently the only defined flag. If the original device was created with <strong><see cref="F:SharpDX.Direct3D11.DeviceCreationFlags.SingleThreaded"/></strong>, you must create all context state objects from that device with the <strong><see cref="F:SharpDX.Direct3D11.CreateDeviceContextStateFlags.SingleThreaded"/></strong> flag. </p> <p></p> <p>If you set the single-threaded flag for both the context state object and the device, you guarantee that you will   call the whole set of context methods and device methods only from one thread. You therefore do not need to use critical sections to synchronize access to the device context, and the runtime can avoid working with those processor-intensive critical sections.</p> </dd></param>	
            <param name="featureLevelsRef"><dd> <p>A reference to an array of <strong><see cref="T:SharpDX.Direct3D.FeatureLevel"/></strong> values. The array can contain elements from the following list and determines the order of feature levels for which creation is attempted.  Unlike <strong><see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/></strong>, you can't set <em>pFeatureLevels</em> to <strong><c>null</c></strong> because  there is no default feature level array.</p>  <pre><code> { <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_1"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_1"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_2"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_1"/>,}; </code></pre>  </dd></param>	
            <param name="featureLevels"><dd> <p>The number of elements in <em>pFeatureLevels</em>. Unlike <strong><see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/></strong>, you must set <em>FeatureLevels</em> to greater than 0 because you can't set <em>pFeatureLevels</em> to <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="sDKVersion"><dd> <p>The SDK version. You must set this parameter to <strong><see cref="F:SharpDX.Direct3D11.D3D11.SdkVersion"/></strong>.</p> </dd></param>	
            <param name="emulatedInterface"><dd> <p>The globally unique identifier (<see cref="T:System.Guid"/>) for the emulated interface. This value specifies the behavior of the device when the context state object is active. Valid values are  obtained by using the <strong>__uuidof</strong> operator on the <strong>ID3D10Device</strong>, <strong>ID3D10Device1</strong>, <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong>, and <strong><see cref="T:SharpDX.Direct3D11.Device1"/></strong> interfaces. See Remarks.</p> </dd></param>	
            <param name="chosenFeatureLevelRef"><dd> <p>A reference to a variable that receives a <strong><see cref="T:SharpDX.Direct3D.FeatureLevel"/></strong> value from the <em>pFeatureLevels</em> array. This is the first array value with which <strong>CreateDeviceContextState</strong> succeeded in creating the context state object. If the call to <strong>CreateDeviceContextState</strong> fails, the variable pointed to by <em>pChosenFeatureLevel</em> is set to zero.</p> </dd></param>	
            <param name="contextStateOut"><dd> <p>The address of a reference to an <strong><see cref="T:SharpDX.Direct3D11.DeviceContextState"/></strong> object that represents the state of a Direct3D device.</p> </dd></param>	
            <returns><p>This method returns one of the Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>The  <strong>REFIID</strong> value of the emulated interface is a <see cref="T:System.Guid"/> obtained by use of the <strong>__uuidof</strong> operator. For example, <code>__uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>)</code> gets the <see cref="T:System.Guid"/> of the interface to a Microsoft Direct3D?11 device.</p><p>Call the <strong><see cref="M:SharpDX.Direct3D11.DeviceContext1.SwapDeviceContextState(SharpDX.Direct3D11.DeviceContextState,SharpDX.Direct3D11.DeviceContextState@)"/></strong> method to activate the context state object. When the context state object is active, the device behaviors that are associated with both the context state object's feature level and its compatible interface are activated on the Direct3D device until the next call to <strong>SwapDeviceContextState</strong>. </p><p>When a context state object is active, the runtime disables certain methods on the device and context interfaces. For example, a context state object that is created with <code>__uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>)</code> will cause the runtime to turn off most of the Microsoft Direct3D?10 device interfaces, and a context state object that is created with <code>__uuidof(ID3D10Device1)</code> or <code>__uuidof(ID3D10Device)</code> will cause the runtime to turn off most of the <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> methods.	
            This behavior ensures that a user of either emulated interface cannot set device state that the other emulated interface is unable to express. This restriction helps guarantee that the <strong>ID3D10Device1</strong> emulated interface accurately reflects the full state of the pipeline and that the emulated interface will not operate contrary to its original interface definition. </p><p>For example, suppose the tessellation stage is made active through the <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface	
            when you create the device through <strong><see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/></strong> or <strong>D3D11CreateDeviceAndSwapChain</strong>,  instead of through the Direct3D?10 equivalents. Because  the Direct3D?11 context is active, a Direct3D?10 interface is inactive when you first retrieve it via <strong>QueryInterface</strong>. This means that you cannot  immediately pass a Direct3D?10 interface that you retrieved from a Direct3D?11 device to a function. You must first call <strong>SwapDeviceContextState</strong> to activate a Direct3D?10-compatible context state object.	
            </p><p>The following table shows the methods that are active and inactive for each emulated interface.</p><table> <tr><th> Emulated interface </th><th>Active device or immediate context  interfaces </th><th>Inactive device or immediate context  interfaces</th></tr> <tr><td> <p> <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong> or</p> <p> <strong><see cref="T:SharpDX.Direct3D11.Device1"/></strong> </p> </td><td> <p> <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong> </p> <p> <strong><see cref="T:SharpDX.DXGI.Device"/></strong> +</p> <p> <strong><see cref="T:SharpDX.DXGI.Device1"/></strong> +</p> <p> <strong><see cref="T:SharpDX.DXGI.Device2"/></strong> </p> <p> <strong>ID3D10Multithread</strong> </p> </td><td> <strong>ID3D10Device</strong> </td></tr> <tr><td> <p> <strong>ID3D10Device1</strong> or</p> <p> <strong>ID3D10Device</strong> </p> </td><td> <p> <strong>ID3D10Device</strong> </p> <p> <strong>ID3D10Device1</strong> </p> <p> <strong><see cref="T:SharpDX.DXGI.Device"/></strong> +</p> <p> <strong><see cref="T:SharpDX.DXGI.Device1"/></strong> </p> <p> <strong>ID3D10Multithread</strong> </p> </td><td> <p> <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong> </p> <p> <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> (As published by the immediate context. The Direct3D?10 or Microsoft Direct3D?10.1 emulated interface has no effect on deferred contexts.)</p> </td></tr> </table><p>?</p><p>The following table shows the immediate context methods that the runtime disables when the indicated context state objects are active.</p><table> <tr><th> Methods of <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> when <code>__uuidof(ID3D10Device1)</code> or <code>__uuidof(ID3D10Device)</code> is active </th><th>Methods of <strong>ID3D10Device</strong> when <code>__uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>)</code> is active  </th></tr> <tr><td> <p> <strong>ClearDepthStencilView</strong> </p> </td><td> <p> <strong>ClearDepthStencilView</strong> </p> </td></tr> <tr><td> <p> <strong>ClearRenderTargetView</strong> </p> </td><td> <p> <strong>ClearRenderTargetView</strong> </p> </td></tr> <tr><td> <p> <strong>ClearState</strong> </p> </td><td> <p> <strong>ClearState</strong> </p> </td></tr> <tr><td> <p> <strong>ClearUnorderedAccessViewUint</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>ClearUnorderedAccessViewFloat</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>CopyResource</strong> </p> </td><td> <p> <strong>CopyResource</strong> </p> </td></tr> <tr><td> <p> <strong>CopyStructureCount</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>CopySubresourceRegion</strong> </p> </td><td> <p> <strong>CopySubresourceRegion</strong> </p> </td></tr> <tr><td> <p> <strong>CSGetConstantBuffers</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>CSGetSamplers</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>CSGetShader</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>CSGetShaderResources</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>CSGetUnorderedAccessViews</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>CSSetConstantBuffers</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>CSSetSamplers</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>CSSetShader</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>CSSetShaderResources</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>CSSetUnorderedAccessViews</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>Dispatch</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>DispatchIndirect</strong> </p> </td><td></td></tr> <tr><td></td><td> <p> <strong>CreateBlendState</strong> </p> </td></tr> <tr><td> <p> <strong>Draw</strong> </p> </td><td> <p> <strong>Draw</strong> </p> </td></tr> <tr><td> <p> <strong>DrawAuto</strong> </p> </td><td> <p> <strong>DrawAuto</strong> </p> </td></tr> <tr><td> <p> <strong>DrawIndexed</strong> </p> </td><td> <p> <strong>DrawIndexed</strong> </p> </td></tr> <tr><td> <p> <strong>DrawIndexedInstanced</strong> </p> </td><td> <p> <strong>DrawIndexedInstanced</strong> </p> </td></tr> <tr><td> <p> <strong>DrawIndexedInstancedIndirect</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>DrawInstanced</strong> </p> </td><td> <p> <strong>DrawInstanced</strong> </p> </td></tr> <tr><td> <p> <strong>DrawInstancedIndirect</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>DSGetConstantBuffers</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>DSGetSamplers</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>DSGetShader</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>DSGetShaderResources</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>DSSetConstantBuffers</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>DSSetSamplers</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>DSSetShader</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>DSSetShaderResources</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>ExecuteCommandList</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>FinishCommandList</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>Flush</strong> </p> </td><td> <p> <strong>Flush</strong> </p> </td></tr> <tr><td> <p> <strong>GenerateMips</strong> </p> </td><td> <p> <strong>GenerateMips</strong> </p> </td></tr> <tr><td> <p> <strong>GetPredication</strong> </p> </td><td> <p> <strong>GetPredication</strong> </p> </td></tr> <tr><td> <p> <strong>GetResourceMinLOD</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>GetType</strong> </p> </td><td></td></tr> <tr><td></td><td> <p> <strong>GetTextFilterSize</strong> </p> </td></tr> <tr><td> <p> <strong>GSGetConstantBuffers</strong> </p> </td><td> <p> <strong>GSGetConstantBuffers</strong> </p> </td></tr> <tr><td> <p> <strong>GSGetSamplers</strong> </p> </td><td> <p> <strong>GSGetSamplers</strong> </p> </td></tr> <tr><td> <p> <strong>GSGetShader</strong> </p> </td><td> <p> <strong>GSGetShader</strong> </p> </td></tr> <tr><td> <p> <strong>GSGetShaderResources</strong> </p> </td><td> <p> <strong>GSGetShaderResources</strong> </p> </td></tr> <tr><td> <p> <strong>GSSetConstantBuffers</strong> </p> </td><td> <p> <strong>GSSetConstantBuffers</strong> </p> </td></tr> <tr><td> <p> <strong>GSSetSamplers</strong> </p> </td><td> <p> <strong>GSSetSamplers</strong> </p> </td></tr> <tr><td> <p> <strong>GSSetShader</strong> </p> </td><td> <p> <strong>GSSetShader</strong> </p> </td></tr> <tr><td> <p> <strong>GSSetShaderResources</strong> </p> </td><td> <p> <strong>GSSetShaderResources</strong> </p> </td></tr> <tr><td> <p> <strong>HSGetConstantBuffers</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>HSGetSamplers</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>HSGetShader</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>HSGetShaderResources</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>HSSetConstantBuffers</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>HSSetSamplers</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>HSSetShader</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>HSSetShaderResources</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>IAGetIndexBuffer</strong> </p> </td><td> <p> <strong>IAGetIndexBuffer</strong> </p> </td></tr> <tr><td> <p> <strong>IAGetInputLayout</strong> </p> </td><td> <p> <strong>IAGetInputLayout</strong> </p> </td></tr> <tr><td> <p> <strong>IAGetPrimitiveTopology</strong> </p> </td><td> <p> <strong>IAGetPrimitiveTopology</strong> </p> </td></tr> <tr><td> <strong>IAGetVertexBuffers</strong> </td><td> <p> <strong>IAGetVertexBuffers</strong> </p> </td></tr> <tr><td> <strong>IASetIndexBuffer</strong> </td><td> <p> <strong>IASetIndexBuffer</strong> </p> </td></tr> <tr><td> <strong>IASetInputLayout</strong> </td><td> <p> <strong>IASetInputLayout</strong> </p> </td></tr> <tr><td> <strong>IASetPrimitiveTopology</strong> </td><td> <p> <strong>IASetPrimitiveTopology</strong> </p> </td></tr> <tr><td> <strong>IASetVertexBuffers</strong> </td><td> <p> <strong>IASetVertexBuffers</strong> </p> </td></tr> <tr><td> <p> <strong>OMGetBlendState</strong> </p> </td><td> <p> <strong>OMGetBlendState</strong> </p> </td></tr> <tr><td> <p> <strong>OMGetDepthStencilState</strong> </p> </td><td> <p> <strong>OMGetDepthStencilState</strong> </p> </td></tr> <tr><td> <p> <strong>OMGetRenderTargets</strong> </p> </td><td> <p> <strong>OMGetRenderTargets</strong> </p> </td></tr> <tr><td> <p> <strong>OMGetRenderTargetsAndUnorderedAccessViews</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>OMSetBlendState</strong> </p> </td><td> <p> <strong>OMSetBlendState</strong> </p> </td></tr> <tr><td> <p> <strong>OMSetDepthStencilState</strong> </p> </td><td> <p> <strong>OMSetDepthStencilState</strong> </p> </td></tr> <tr><td> <p> <strong>OMSetRenderTargets</strong> </p> </td><td> <p> <strong>OMSetRenderTargets</strong> </p> </td></tr> <tr><td> <p> <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>PSGetConstantBuffers</strong> </p> </td><td> <p> <strong>PSGetConstantBuffers</strong> </p> </td></tr> <tr><td> <p> <strong>PSGetSamplers</strong> </p> </td><td> <p> <strong>PSGetSamplers</strong> </p> </td></tr> <tr><td> <p> <strong>PSGetShader</strong> </p> </td><td> <p> <strong>PSGetShader</strong> </p> </td></tr> <tr><td> <p> <strong>PSGetShaderResources</strong> </p> </td><td> <p> <strong>PSGetShaderResources</strong> </p> </td></tr> <tr><td> <p> <strong>PSSetConstantBuffers</strong> </p> </td><td> <p> <strong>PSSetConstantBuffers</strong> </p> </td></tr> <tr><td> <p> <strong>PSSetSamplers</strong> </p> </td><td> <p> <strong>PSSetSamplers</strong> </p> </td></tr> <tr><td> <p> <strong>PSSetShader</strong> </p> </td><td> <p> <strong>PSSetShader</strong> </p> </td></tr> <tr><td> <p> <strong>PSSetShaderResources</strong> </p> </td><td> <p> <strong>PSSetShaderResources</strong> </p> </td></tr> <tr><td> <p> <strong>ResolveSubresource</strong> </p> </td><td> <p> <strong>ResolveSubresource</strong> </p> </td></tr> <tr><td> <p> <strong>RSGetScissorRects</strong> </p> </td><td> <p> <strong>RSGetScissorRects</strong> </p> </td></tr> <tr><td> <p> <strong>RSGetState</strong> </p> </td><td> <p> <strong>RSGetState</strong> </p> </td></tr> <tr><td> <p> <strong>RSGetViewports</strong> </p> </td><td> <p> <strong>RSGetViewports</strong> </p> </td></tr> <tr><td> <p> <strong>RSSetScissorRects</strong> </p> </td><td> <p> <strong>RSSetScissorRects</strong> </p> </td></tr> <tr><td> <p> <strong>RSSetState</strong> </p> </td><td> <p> <strong>RSSetState</strong> </p> </td></tr> <tr><td> <p> <strong>RSSetViewports</strong> </p> </td><td> <p> <strong>RSSetViewports</strong> </p> </td></tr> <tr><td> <p> <strong>SetPredication</strong> </p> </td><td> <p> <strong>SetPredication</strong> </p> </td></tr> <tr><td> <p> <strong>SetResourceMinLOD</strong> </p> </td><td></td></tr> <tr><td></td><td> <p> <strong>SetTextFilterSize</strong> </p> </td></tr> <tr><td> <p> <strong>SOGetTargets</strong> </p> </td><td> <p> <strong>SOGetTargets</strong> </p> </td></tr> <tr><td> <p> <strong>SOSetTargets</strong> </p> </td><td> <p> <strong>SOSetTargets</strong> </p> </td></tr> <tr><td> <p> <strong>UpdateSubresource</strong> </p> </td><td> <p> <strong>UpdateSubresource</strong> </p> </td></tr> <tr><td> <p> <strong>VSGetConstantBuffers</strong> </p> </td><td> <p> <strong>VSGetConstantBuffers</strong> </p> </td></tr> <tr><td> <p> <strong>VSGetSamplers</strong> </p> </td><td> <p> <strong>VSGetSamplers</strong> </p> </td></tr> <tr><td> <p> <strong>VSGetShader</strong> </p> </td><td> <p> <strong>VSGetShader</strong> </p> </td></tr> <tr><td> <p> <strong>VSGetShaderResources</strong> </p> </td><td> <p> <strong>VSGetShaderResources</strong> </p> </td></tr> <tr><td> <p> <strong>VSSetConstantBuffers</strong> </p> </td><td> <p> <strong>VSSetConstantBuffers</strong> </p> </td></tr> <tr><td> <p> <strong>VSSetSamplers</strong> </p> </td><td> <p> <strong>VSSetSamplers</strong> </p> </td></tr> <tr><td> <p> <strong>VSSetShader</strong> </p> </td><td> <p> <strong>VSSetShader</strong> </p> </td></tr> <tr><td> <p> <strong>VSSetShaderResources</strong> </p> </td><td> <p> <strong>VSSetShaderResources</strong> </p> </td></tr> </table><p>?</p><p>The following table shows the immediate context methods that the runtime does not disable when the indicated context state objects are active.</p><table> <tr><th> Methods of <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> when <code>__uuidof(ID3D10Device1)</code> or <code>__uuidof(ID3D10Device)</code> is active </th><th>Methods of <strong>ID3D10Device</strong> when <code>__uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>)</code> is active </th></tr> <tr><td> <p> <strong>Begin</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>End</strong> </p> </td><td></td></tr> <tr><td></td><td> <p> <strong>GetCreationFlags</strong> </p> </td></tr> <tr><td></td><td> <p> <strong>GetPrivateData</strong> </p> </td></tr> <tr><td> <p> <strong>GetContextFlags</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>GetData</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>Map</strong> </p> </td><td></td></tr> <tr><td> <p> <strong>Unmap</strong> </p> </td><td></td></tr> </table><p>?</p><p>The following table shows the <strong>ID3D10Device</strong> interface methods that the runtime does not disable because they are not immediate context methods.</p><table> <tr><th>Methods of <strong>ID3D10Device</strong> </th></tr> <tr><td> <p> <strong>CheckCounter</strong> </p> </td></tr> <tr><td> <p> <strong>CheckCounterInfo</strong> </p> </td></tr> <tr><td> <p>Create*, like <strong>CreateQuery</strong> </p> </td></tr> <tr><td> <p> <strong>GetDeviceRemovedReason</strong> </p> </td></tr> <tr><td> <p> <strong>GetExceptionMode</strong> </p> </td></tr> <tr><td> <p> <strong>OpenSharedResource</strong> </p> </td></tr> <tr><td> <p> <strong>SetExceptionMode</strong> </p> </td></tr> <tr><td> <p> <strong>SetPrivateData</strong> </p> </td></tr> <tr><td> <p> <strong>SetPrivateDataInterface</strong> </p> </td></tr> </table><p>?</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::CreateDeviceContextState']/*"/>	
            <msdn-id>hh404583</msdn-id>	
            <unmanaged>HRESULT ID3D11Device1::CreateDeviceContextState([In] D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG Flags,[In, Buffer] const D3D_FEATURE_LEVEL* pFeatureLevels,[In] unsigned int FeatureLevels,[In] unsigned int SDKVersion,[In] const GUID&amp; EmulatedInterface,[Out, Optional] D3D_FEATURE_LEVEL* pChosenFeatureLevel,[Out, Fast] ID3DDeviceContextState** ppContextState)</unmanaged>	
            <unmanaged-short>ID3D11Device1::CreateDeviceContextState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.OpenSharedResource1(System.IntPtr,System.Guid,System.IntPtr@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gives a device access to a shared resource that is referenced by a handle and that was created on a different device. You must have previously created the resource as shared and specified that it uses NT handles (that is, you set the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle"/></strong> flag).</p>	
            </summary>	
            <param name="hResource">No documentation.</param>	
            <param name="returnedInterface">No documentation.</param>	
            <param name="resourceOut">No documentation.</param>	
            <returns><p>This method returns one of the Direct3D 11 return codes. This method also returns E_ACCESSDENIED if the permissions to access the resource aren't valid.</p></returns>	
            <remarks>	
            <p>The behavior of <strong>OpenSharedResource1</strong> is similar to the behavior of the <strong><see cref="M:SharpDX.Direct3D11.Device.OpenSharedResource(System.IntPtr,System.Guid,System.IntPtr@)"/></strong> method; each call to <strong>OpenSharedResource1</strong> to access a resource creates a new resource object.  In other words, if you call <strong>OpenSharedResource1</strong> twice and pass the same resource handle to <em>hResource</em>, you receive two resource  objects with different <strong><see cref="T:SharpDX.ComObject"/></strong> references.</p><p><strong>To share a resource between two devices</strong></p><ol> <li>Create the resource as shared and specify that it uses NT handles, by setting the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle"/></strong> flag.</li> <li>Obtain the REFIID, or <see cref="T:System.Guid"/>, of the interface to the resource by using the __uuidof() macro. For example, __uuidof(<strong><see cref="T:SharpDX.Direct3D11.Texture2D"/></strong>) retrieves the <see cref="T:System.Guid"/> of the interface to a 2D texture.</li> <li>Query the resource for the <strong><see cref="T:SharpDX.DXGI.Resource1"/></strong> interface.</li> <li>Call the <strong><see cref="M:SharpDX.DXGI.Resource1.CreateSharedHandle(System.String,SharpDX.DXGI.SharedResourceFlags,System.Nullable{SharpDX.Win32.SecurityAttributes})"/></strong> method to obtain the unique handle to the resource.</li> </ol>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::OpenSharedResource1']/*"/>	
            <msdn-id>hh404592</msdn-id>	
            <unmanaged>HRESULT ID3D11Device1::OpenSharedResource1([In] void* hResource,[In] const GUID&amp; returnedInterface,[Out] void** ppResource)</unmanaged>	
            <unmanaged-short>ID3D11Device1::OpenSharedResource1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.OpenSharedResourceByName(System.String,SharpDX.DXGI.SharedResourceFlags,System.Guid,System.IntPtr@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gives a device access to a shared resource that is referenced by name and that was created on a different device. You must have previously created the resource as shared and specified that it uses NT handles (that is, you set the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle"/></strong> flag).</p>	
            </summary>	
            <param name="lpName">No documentation.</param>	
            <param name="dwDesiredAccess">No documentation.</param>	
            <param name="returnedInterface">No documentation.</param>	
            <param name="resourceOut">No documentation.</param>	
            <returns><p>This method returns one of the Direct3D 11 return codes. This method also returns E_ACCESSDENIED if the permissions to access the resource aren't valid.</p></returns>	
            <remarks>	
            <p>The behavior of <strong>OpenSharedResourceByName</strong> is similar to the behavior of the <strong><see cref="M:SharpDX.Direct3D11.Device1.OpenSharedResource1(System.IntPtr,System.Guid,System.IntPtr@)"/></strong> method; each call to <strong>OpenSharedResourceByName</strong> to access a resource creates a new resource object.  In other words, if you call <strong>OpenSharedResourceByName</strong> twice and pass the same resource name to <em>lpName</em>, you receive two resource  objects with different <strong><see cref="T:SharpDX.ComObject"/></strong> references.</p><p><strong>To share a resource between two devices</strong></p><ol> <li>Create the resource as shared and specify that it uses NT handles, by setting the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle"/></strong> flag.</li> <li>Obtain the REFIID, or <see cref="T:System.Guid"/>, of the interface to the resource by using the __uuidof() macro. For example, __uuidof(<strong><see cref="T:SharpDX.Direct3D11.Texture2D"/></strong>) retrieves the <see cref="T:System.Guid"/> of the interface to a 2D texture.</li> <li>Query the resource for the <strong><see cref="T:SharpDX.DXGI.Resource1"/></strong> interface.</li> <li>Call the <strong><see cref="M:SharpDX.DXGI.Resource1.CreateSharedHandle(System.String,SharpDX.DXGI.SharedResourceFlags,System.Nullable{SharpDX.Win32.SecurityAttributes})"/></strong> method to obtain the unique handle to the resource. In this <strong><see cref="M:SharpDX.DXGI.Resource1.CreateSharedHandle(System.String,SharpDX.DXGI.SharedResourceFlags,System.Nullable{SharpDX.Win32.SecurityAttributes})"/></strong> call, you must pass a name for the resource if you want to subsequently call <strong>OpenSharedResourceByName</strong> to access the resource by name. </li> </ol>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::OpenSharedResourceByName']/*"/>	
            <msdn-id>hh404595</msdn-id>	
            <unmanaged>HRESULT ID3D11Device1::OpenSharedResourceByName([In] const wchar_t* lpName,[In] DXGI_SHARED_RESOURCE_FLAGS dwDesiredAccess,[In] const GUID&amp; returnedInterface,[Out] void** ppResource)</unmanaged>	
            <unmanaged-short>ID3D11Device1::OpenSharedResourceByName</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.Device1.ImmediateContext1">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets an immediate context, which can play back command lists.</p>	
            </summary>	
            <remarks>	
            <p><strong>GetImmediateContext1</strong> returns an <strong><see cref="T:SharpDX.Direct3D11.DeviceContext1"/></strong> object that represents an immediate context. You can use this immediate context to perform rendering that you want immediately submitted to a device. For most applications, an immediate context is the primary object that is used to draw your scene.</p><p><strong>GetImmediateContext1</strong> increments the reference count of the immediate context by one. So, call <strong>Release</strong> on the returned interface reference when you are done with it to avoid a memory leak. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::GetImmediateContext1']/*"/>	
            <msdn-id>hh404589</msdn-id>	
            <unmanaged>GetImmediateContext1</unmanaged>	
            <unmanaged-short>GetImmediateContext1</unmanaged-short>	
            <unmanaged>void ID3D11Device1::GetImmediateContext1([Out] ID3D11DeviceContext1** ppImmediateContext)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.NamespaceDoc">
            <summary>
            The <see cref="N:SharpDX.Direct3D11"/> namespace provides a managed Direct3D11 API.
            </summary>
            <msdn-id>ff476080</msdn-id>
            <unmanaged>Direct3D11</unmanaged>	
            <unmanaged-short>Direct3D11</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RasterizerStateDescription">
            <summary>	
            <p>Describes rasterizer state.</p>	
            </summary>	
            <remarks>	
            <p>Rasterizer state defines the behavior of the rasterizer stage; to set rasterizer state, call <strong><see cref="M:SharpDX.Direct3D11.RasterizerStage.SetState(SharpDX.Direct3D11.RasterizerState)"/></strong>.</p><p>These are the default values for rasterizer state.</p><table> <tr><th>State</th><th>Default Value</th></tr> <tr><td>FillMode</td><td>Solid</td></tr> <tr><td>CullMode</td><td>Back</td></tr> <tr><td>FrontCounterClockwise</td><td><see cref="F:SharpDX.Result.False"/></td></tr> <tr><td>DepthBias</td><td>0</td></tr> <tr><td>SlopeScaledDepthBias</td><td>0.0f</td></tr> <tr><td>DepthBiasClamp</td><td>0.0f</td></tr> <tr><td>DepthClipEnable</td><td>TRUE</td></tr> <tr><td>ScissorEnable</td><td><see cref="F:SharpDX.Result.False"/></td></tr> <tr><td>MultisampleEnable</td><td><see cref="F:SharpDX.Result.False"/></td></tr> <tr><td>AntialiasedLineEnable</td><td><see cref="F:SharpDX.Result.False"/></td></tr> </table><p>?</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC']/*"/>	
            <msdn-id>ff476198</msdn-id>	
            <unmanaged>D3D11_RASTERIZER_DESC</unmanaged>	
            <unmanaged-short>D3D11_RASTERIZER_DESC</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStateDescription.Default">
            <summary>
            Returns default values for <see cref="T:SharpDX.Direct3D11.RasterizerStateDescription"/>. 
            </summary>
            <remarks>
            See MSDN documentation for default values.
            </remarks>
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.FillMode">
            <summary>	
            <dd> <p>Determines the fill mode to use when rendering (see <strong><see cref="T:SharpDX.Direct3D11.FillMode"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::FillMode']/*"/>	
            <msdn-id>ff476198</msdn-id>	
            <unmanaged>D3D11_FILL_MODE FillMode</unmanaged>	
            <unmanaged-short>D3D11_FILL_MODE FillMode</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.CullMode">
            <summary>	
            <dd> <p>Indicates triangles facing the specified direction are not drawn (see <strong><see cref="T:SharpDX.Direct3D11.CullMode"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::CullMode']/*"/>	
            <msdn-id>ff476198</msdn-id>	
            <unmanaged>D3D11_CULL_MODE CullMode</unmanaged>	
            <unmanaged-short>D3D11_CULL_MODE CullMode</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.IsFrontCounterClockwise">
            <summary>	
            <dd> <p>Determines if a triangle is front- or back-facing. If this parameter is true, then a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If this parameter is false then the opposite is true.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::FrontCounterClockwise']/*"/>	
            <msdn-id>ff476198</msdn-id>	
            <unmanaged>BOOL FrontCounterClockwise</unmanaged>	
            <unmanaged-short>BOOL FrontCounterClockwise</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.DepthBias">
            <summary>	
            <dd> <p>Depth value added to a given pixel.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::DepthBias']/*"/>	
            <msdn-id>ff476198</msdn-id>	
            <unmanaged>int DepthBias</unmanaged>	
            <unmanaged-short>int DepthBias</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.DepthBiasClamp">
            <summary>	
            <dd> <p>Maximum depth bias of a pixel.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::DepthBiasClamp']/*"/>	
            <msdn-id>ff476198</msdn-id>	
            <unmanaged>float DepthBiasClamp</unmanaged>	
            <unmanaged-short>float DepthBiasClamp</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.SlopeScaledDepthBias">
            <summary>	
            <dd> <p>Scalar on a given pixel's slope.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::SlopeScaledDepthBias']/*"/>	
            <msdn-id>ff476198</msdn-id>	
            <unmanaged>float SlopeScaledDepthBias</unmanaged>	
            <unmanaged-short>float SlopeScaledDepthBias</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.IsDepthClipEnabled">
            <summary>	
            <dd> <p>Enable clipping based on distance.</p> <p>The hardware always performs x and y clipping of rasterized coordinates. When <strong>DepthClipEnable</strong> is set to the default?TRUE, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).	
            </p> <code> 0 &lt; w	
            -w &lt;= x &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)	
            -w &lt;= y &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)	
            0 &lt;= z &lt;= w	
            </code> <p>When you set <strong>DepthClipEnable</strong> to <see cref="F:SharpDX.Result.False"/>, the hardware skips the z clipping (that is, the last step in the preceding algorithm). However, the hardware still performs the "0 &lt; w" clipping. When z clipping is disabled, improper depth ordering at the pixel level might result. However, when z clipping is disabled, stencil shadow implementations are simplified. In other words, you can avoid complex special-case handling for geometry that goes beyond the back clipping plane.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::DepthClipEnable']/*"/>	
            <msdn-id>ff476198</msdn-id>	
            <unmanaged>BOOL DepthClipEnable</unmanaged>	
            <unmanaged-short>BOOL DepthClipEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.IsScissorEnabled">
            <summary>	
            <dd> <p>Enable scissor-rectangle culling. All pixels ouside an active scissor rectangle are culled.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::ScissorEnable']/*"/>	
            <msdn-id>ff476198</msdn-id>	
            <unmanaged>BOOL ScissorEnable</unmanaged>	
            <unmanaged-short>BOOL ScissorEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.IsMultisampleEnabled">
            <summary>	
            <dd> <p>Enable multisample antialiasing.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::MultisampleEnable']/*"/>	
            <msdn-id>ff476198</msdn-id>	
            <unmanaged>BOOL MultisampleEnable</unmanaged>	
            <unmanaged-short>BOOL MultisampleEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.IsAntialiasedLineEnabled">
            <summary>	
            <dd> <p>Enable line antialiasing; only applies if doing line drawing and <em>MultisampleEnable</em> is false.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::AntialiasedLineEnable']/*"/>	
            <msdn-id>ff476198</msdn-id>	
            <unmanaged>BOOL AntialiasedLineEnable</unmanaged>	
            <unmanaged-short>BOOL AntialiasedLineEnable</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RasterizerState1">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>The rasterizer-state interface holds a description for rasterizer state that you can bind to the rasterizer stage. This rasterizer-state interface supports forced sample count.</p>	
            </summary>	
            <remarks>	
            <p>To create a rasterizer-state object, call <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateRasterizerState1(SharpDX.Direct3D11.RasterizerStateDescription1@,SharpDX.Direct3D11.RasterizerState1)"/></strong>. To bind the rasterizer-state object to the rasterizer stage, call <strong><see cref="M:SharpDX.Direct3D11.RasterizerStage.SetState(SharpDX.Direct3D11.RasterizerState)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RasterizerState1']/*"/>	
            <msdn-id>hh446828</msdn-id>	
            <unmanaged>ID3D11RasterizerState1</unmanaged>	
            <unmanaged-short>ID3D11RasterizerState1</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RasterizerState">
            <summary>	
            <p>The rasterizer-state interface holds a description for rasterizer state that you can bind to the rasterizer stage.</p>	
            </summary>	
            <remarks>	
            <p>To create a rasterizer-state object, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateRasterizerState(SharpDX.Direct3D11.RasterizerStateDescription@,SharpDX.Direct3D11.RasterizerState)"/></strong>. To bind the rasterizer-state object to the rasterizer stage, call <strong><see cref="M:SharpDX.Direct3D11.RasterizerStage.SetState(SharpDX.Direct3D11.RasterizerState)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RasterizerState']/*"/>	
            <msdn-id>ff476580</msdn-id>	
            <unmanaged>ID3D11RasterizerState</unmanaged>	
            <unmanaged-short>ID3D11RasterizerState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.RasterizerState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.RasterizerState">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.RasterizerState"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState.GetDescription(SharpDX.Direct3D11.RasterizerStateDescription@)">
            <summary>	
            <p>Gets the description for rasterizer state that you used to create the rasterizer-state object.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.RasterizerStateDescription"/></strong> structure that receives a description of the rasterizer state.</p> </dd></param>	
            <remarks>	
            <p>You use the description for rasterizer state in a call to the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateRasterizerState(SharpDX.Direct3D11.RasterizerStateDescription@,SharpDX.Direct3D11.RasterizerState)"/></strong> method to create the rasterizer-state object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RasterizerState::GetDesc']/*"/>	
            <msdn-id>ff476581</msdn-id>	
            <unmanaged>void ID3D11RasterizerState::GetDesc([Out] D3D11_RASTERIZER_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11RasterizerState::GetDesc</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.RasterizerStateDescription)">
            <summary>	
            <p>Create a rasterizer state object that tells the rasterizer stage how to behave.</p>	
            </summary>	
            <param name = "device">The device with which to associate the state object.</param>
            <param name="description">A rasterizer state description</param>	
            <remarks>	
            <p>4096 unique rasterizer state objects can be created on a device at a time.</p><p>If an application attempts to create a rasterizer-state interface with the same state as an existing interface, the same interface will be returned and the total number of unique rasterizer state objects will stay the same.</p>	
            </remarks>	
            <msdn-id>ff476516</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateRasterizerState([In] const D3D11_RASTERIZER_DESC* pRasterizerDesc,[Out, Fast] ID3D11RasterizerState** ppRasterizerState)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateRasterizerState</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerState.Description">
            <summary>	
            <p>Gets the description for rasterizer state that you used to create the rasterizer-state object.</p>	
            </summary>	
            <remarks>	
            <p>You use the description for rasterizer state in a call to the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateRasterizerState(SharpDX.Direct3D11.RasterizerStateDescription@,SharpDX.Direct3D11.RasterizerState)"/></strong> method to create the rasterizer-state object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RasterizerState::GetDesc']/*"/>	
            <msdn-id>ff476581</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11RasterizerState::GetDesc([Out] D3D11_RASTERIZER_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState1.#ctor(SharpDX.Direct3D11.Device1,SharpDX.Direct3D11.RasterizerStateDescription1)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.RasterizerState1" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState1.#ctor(SharpDX.Direct3D11.Device1,SharpDX.Direct3D11.RasterizerStateDescription1@)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.RasterizerState1" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.RasterizerState1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState1.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.RasterizerState1">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.RasterizerState1"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState1.GetDescription1(SharpDX.Direct3D11.RasterizerStateDescription1@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the description for rasterizer state that you used to create the rasterizer-state object.</p>	
            </summary>	
            <param name="descRef"><dd> <p>A reference to a <strong> <see cref="T:SharpDX.Direct3D11.RasterizerStateDescription1"/></strong> structure that receives a description of the rasterizer state. This rasterizer state can specify forced sample count.</p> </dd></param>	
            <remarks>	
            <p>You use the description for rasterizer state in a call to the <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateRasterizerState1(SharpDX.Direct3D11.RasterizerStateDescription1@,SharpDX.Direct3D11.RasterizerState1)"/></strong> method to create the rasterizer-state object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RasterizerState1::GetDesc1']/*"/>	
            <msdn-id>hh446830</msdn-id>	
            <unmanaged>void ID3D11RasterizerState1::GetDesc1([Out] D3D11_RASTERIZER_DESC1* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11RasterizerState1::GetDesc1</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerState1.Description1">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the description for rasterizer state that you used to create the rasterizer-state object.</p>	
            </summary>	
            <remarks>	
            <p>You use the description for rasterizer state in a call to the <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateRasterizerState1(SharpDX.Direct3D11.RasterizerStateDescription1@,SharpDX.Direct3D11.RasterizerState1)"/></strong> method to create the rasterizer-state object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RasterizerState1::GetDesc1']/*"/>	
            <msdn-id>hh446830</msdn-id>	
            <unmanaged>GetDesc1</unmanaged>	
            <unmanaged-short>GetDesc1</unmanaged-short>	
            <unmanaged>void ID3D11RasterizerState1::GetDesc1([Out] D3D11_RASTERIZER_DESC1* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.DeviceContext1">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the constant buffers that the vertex shader pipeline stage uses.</p>	
            </summary>	
            <remarks>	
            <p>If no buffer is bound at a slot, <em>pFirstConstant</em> and <em>pNumConstants</em> are <strong><c>null</c></strong> for that slot.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1']/*"/>	
            <msdn-id>hh446793</msdn-id>	
            <unmanaged>ID3D11DeviceContext1</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DeviceContext">
            <summary>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface represents a device context which generates rendering commands.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <msdn-id>ff476385</msdn-id>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
              Constructs a new deferred context <see cref = "T:SharpDX.Direct3D11.DeviceContext" />.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.FinishCommandList(System.Boolean)">
            <summary>
              Create a command list and record graphics commands into it.
            </summary>
            <param name = "restoreState">A flag indicating whether the immediate context state is saved (prior) and restored (after) the execution of a command list.</param>
            <returns>The created command list containing the queued rendering commands.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.IsDataAvailable(SharpDX.Direct3D11.Asynchronous)">
            <summary>
            Determines whether asynhronous query data is available.
            </summary>
            <param name="data">The data.</param>
            <returns>
              <c>true</c> if asynhronous query data is available; otherwise, <c>false</c>.
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::GetData([In] ID3D11Asynchronous* pAsync,[Out, Buffer, Optional] void* pData,[In] unsigned int DataSize,[In] D3D11_ASYNC_GETDATA_FLAG GetDataFlags)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.IsDataAvailable(SharpDX.Direct3D11.Asynchronous,SharpDX.Direct3D11.AsynchronousFlags)">
            <summary>
            Determines whether asynhronous query data is available.
            </summary>
            <param name="data">The data.</param>
            <returns>
              <c>true</c> if asynhronous query data is available; otherwise, <c>false</c>.
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::GetData([In] ID3D11Asynchronous* pAsync,[Out, Buffer, Optional] void* pData,[In] unsigned int DataSize,[In] D3D11_ASYNC_GETDATA_FLAG GetDataFlags)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetData(SharpDX.Direct3D11.Asynchronous)">
            <summary>
              Gets data from the GPU asynchronously.
            </summary>
            <param name = "data">The asynchronous data provider.</param>
            <returns>The data retrieved from the GPU.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetData``1(SharpDX.Direct3D11.Asynchronous)">
            <summary>
              Gets data from the GPU asynchronously.
            </summary>
            <param name = "data">The asynchronous data provider.</param>
            <returns>The data retrieved from the GPU.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetData``1(SharpDX.Direct3D11.Asynchronous,``0@)">
            <summary>
            Gets data from the GPU asynchronously.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The asynchronous data provider.</param>
            <param name="result">The data retrieved from the GPU.</param>
            <returns>
            True if result contains valid data, false otherwise.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetData(SharpDX.Direct3D11.Asynchronous,SharpDX.Direct3D11.AsynchronousFlags)">
            <summary>
              Gets data from the GPU asynchronously.
            </summary>
            <param name = "data">The asynchronous data provider.</param>
            <param name = "flags">Flags specifying how the command should operate.</param>
            <returns>The data retrieved from the GPU.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetData``1(SharpDX.Direct3D11.Asynchronous,SharpDX.Direct3D11.AsynchronousFlags)">
            <summary>
              Gets data from the GPU asynchronously.
            </summary>
            <param name = "data">The asynchronous data provider.</param>
            <param name = "flags">Flags specifying how the command should operate.</param>
            <returns>The data retrieved from the GPU.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetData``1(SharpDX.Direct3D11.Asynchronous,SharpDX.Direct3D11.AsynchronousFlags,``0@)">
            <summary>
            Gets data from the GPU asynchronously.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The asynchronous data provider.</param>
            <param name="flags">Flags specifying how the command should operate.</param>
            <param name="result">The data retrieved from the GPU.</param>
            <returns>
            True if result contains valid data, false otherwise.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.CopyResource(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)">
            <summary>	
            Copy the entire contents of the source resource to the destination resource using the GPU. 	
            </summary>	
            <remarks>	
            This method is unusual in that it causes the GPU to perform the copy operation (similar to a memcpy by the CPU). As a result, it has a few restrictions designed for improving performance. For instance, the source and destination resources:  Must be different resources. Must be the same type. Must have identical dimensions (including width, height, depth, and size as appropriate). Will only be copied. CopyResource does not support any stretch, color key, blend, or format conversions. Must have compatible DXGI formats, which means the formats must be identical or at least from the same type group. For example, a DXGI_FORMAT_R32G32B32_FLOAT texture can be copied to an DXGI_FORMAT_R32G32B32_UINT texture since both of these formats are in the DXGI_FORMAT_R32G32B32_TYPELESS group. Might not be currently mapped.  You cannot use an {{Immutable}} resource as a destination. You can use a   {{depth-stencil}} resource as either a source or a destination.  Resources created with multisampling capability (see <see cref="T:SharpDX.DXGI.SampleDescription"/>) can be used as source and destination only if both source and destination have identical multisampled count and quality. If source and destination differ in multisampled count and quality or if one is multisampled and the other is not multisampled the call to ID3D11DeviceContext::CopyResource fails. The method is an asynchronous call which may be added to the command-buffer queue. This attempts to remove pipeline stalls that may occur when copying data.  An application that only needs to copy a portion of the data in a resource should use <see cref="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})"/> instead. 	
            </remarks>	
            <param name="source">A reference to the source resource (see <see cref="T:SharpDX.Direct3D11.Resource"/>). </param>
            <param name="destination">A reference to the destination resource (see <see cref="T:SharpDX.Direct3D11.Resource"/>). </param>
            <unmanaged>void ID3D11DeviceContext::CopyResource([In] ID3D11Resource* pDstResource,[In] ID3D11Resource* pSrcResource)</unmanaged>
            <msdn-id>ff476392</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CopyResource([In] ID3D11Resource* pDstResource,[In] ID3D11Resource* pSrcResource)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CopyResource</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion(SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>	
            Copy a region from a source resource to a destination resource.	
            </summary>	
            <remarks>	
            The source box must be within the size of the source resource. The destination offsets, (x, y, and z) allow the source box to be offset when writing into the destination resource; however, the dimensions of the source box and the offsets must be within the size of the resource. If the resources are buffers, all coordinates are in bytes; if the resources are textures, all coordinates are in texels. {{D3D11CalcSubresource}} is a helper function for calculating subresource indexes. CopySubresourceRegion performs the copy on the GPU (similar to a memcpy by the CPU). As a consequence, the source and destination resources:  Must be different subresources (although they can be from the same resource). Must be the same type. Must have compatible DXGI formats (identical or from the same type group). For example, a DXGI_FORMAT_R32G32B32_FLOAT texture can be copied to an DXGI_FORMAT_R32G32B32_UINT texture since both of these formats are in the DXGI_FORMAT_R32G32B32_TYPELESS group. May not be currently mapped.  CopySubresourceRegion only supports copy; it does not support any stretch, color key, blend, or format conversions. An application that needs to copy an entire resource should use <see cref="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)"/> instead. CopySubresourceRegion is an asynchronous call which may be added to the command-buffer queue, this attempts to remove pipeline stalls that may occur when copying data. See performance considerations for more details. Note??If you use CopySubresourceRegion with a depth-stencil buffer or a multisampled resource, you must copy the whole subresource. In this situation, you must pass 0 to the DstX, DstY, and DstZ parameters and NULL to the pSrcBox parameter. In addition, source and destination resources, which are represented by the pSrcResource and pDstResource parameters, should have identical sample count values. Example The following code snippet copies a box (located at (120,100),(200,220)) from a source texture into a reqion (10,20),(90,140) in a destination texture. 	
            <code> D3D11_BOX sourceRegion;	
            sourceRegion.left = 120;	
            sourceRegion.right = 200;	
            sourceRegion.top = 100;	
            sourceRegion.bottom = 220;	
            sourceRegion.front = 0;	
            sourceRegion.back = 1; pd3dDeviceContext-&gt;CopySubresourceRegion( pDestTexture, 0, 10, 20, 0, pSourceTexture, 0, &amp;sourceRegion ); </code>	
            	
             Notice, that for a 2D texture, front and back are set to 0 and 1 respectively. 	
            </remarks>	
            <param name="source">A reference to the source resource (see <see cref="T:SharpDX.Direct3D11.Resource"/>). </param>
            <param name="sourceSubresource">Source subresource index. </param>
            <param name="sourceRegion">A reference to a 3D box (see <see cref="T:SharpDX.Direct3D11.ResourceRegion"/>) that defines the source subresources that can be copied. If NULL, the entire source subresource is copied. The box must fit within the source resource. </param>
            <param name="destination">A reference to the destination resource (see <see cref="T:SharpDX.Direct3D11.Resource"/>). </param>
            <param name="destinationSubResource">Destination subresource index. </param>
            <param name="dstX">The x-coordinate of the upper left corner of the destination region. </param>
            <param name="dstY">The y-coordinate of the upper left corner of the destination region. For a 1D subresource, this must be zero. </param>
            <param name="dstZ">The z-coordinate of the upper left corner of the destination region. For a 1D or 2D subresource, this must be zero. </param>
            <msdn-id>ff476394</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CopySubresourceRegion([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In] unsigned int DstX,[In] unsigned int DstY,[In] unsigned int DstZ,[In] ID3D11Resource* pSrcResource,[In] unsigned int SrcSubresource,[In, Optional] const D3D11_BOX* pSrcBox)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CopySubresourceRegion</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ResolveSubresource(SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,SharpDX.DXGI.Format)">
            <summary>	
            Copy a multisampled resource into a non-multisampled resource.	
            </summary>	
            <remarks>	
            This API is most useful when re-using the resulting rendertarget of one render pass as an input to a second render pass. The source and destination resources must be the same resource type and have the same dimensions. In addition, they must have compatible formats. There are three scenarios for this:  ScenarioRequirements Source and destination are prestructured and typedBoth the source and destination must have identical formats and that format must be specified in the Format parameter. One resource is prestructured and typed and the other is prestructured and typelessThe typed resource must have a format that is compatible with the typeless resource (i.e. the typed resource is DXGI_FORMAT_R32_FLOAT and the typeless resource is DXGI_FORMAT_R32_TYPELESS). The format of the typed resource must be specified in the Format parameter. Source and destination are prestructured and typelessBoth the source and desintation must have the same typeless format (i.e. both must have DXGI_FORMAT_R32_TYPELESS), and the Format parameter must specify a format that is compatible with the source and destination (i.e. if both are DXGI_FORMAT_R32_TYPELESS then DXGI_FORMAT_R32_FLOAT could be specified in the Format parameter). For example, given the DXGI_FORMAT_R16G16B16A16_TYPELESS format:  The source (or dest) format could be DXGI_FORMAT_R16G16B16A16_UNORM The dest (or source) format could be DXGI_FORMAT_R16G16B16A16_FLOAT    ? 	
            </remarks>	
            <param name="source">Source resource. Must be multisampled. </param>
            <param name="sourceSubresource">&gt;The source subresource of the source resource. </param>
            <param name="destination">Destination resource. Must be a created with the <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/> flag and be single-sampled. See <see cref="T:SharpDX.Direct3D11.Resource"/>. </param>
            <param name="destinationSubresource">A zero-based index, that identifies the destination subresource. Use {{D3D11CalcSubresource}} to calculate the index. </param>
            <param name="format">A <see cref="T:SharpDX.DXGI.Format"/> that indicates how the multisampled resource will be resolved to a single-sampled resource.  See remarks. </param>
            <unmanaged>void ID3D11DeviceContext::ResolveSubresource([In] ID3D11Resource* pDstResource,[In] int DstSubresource,[In] ID3D11Resource* pSrcResource,[In] int SrcSubresource,[In] DXGI_FORMAT Format)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
            Maps the data contained in a subresource to a memory pointer, and denies the GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The output stream containing the pointer.</param>
            <returns>
            The locked <see cref="T:SharpDX.DataBox"/>
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture2D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
            Maps the data contained in a subresource to a memory pointer, and denies the GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The output stream containing the pointer.</param>
            <returns>
            The locked <see cref="T:SharpDX.DataBox"/>
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture3D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
            Maps the data contained in a subresource to a memory pointer, and denies the GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The output stream containing the pointer.</param>
            <returns>
            The locked <see cref="T:SharpDX.DataBox"/>
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Buffer,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
            Maps the data contained in a subresource to a memory pointer, and denies the GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The output stream containing the pointer.</param>
            <returns>
            The locked <see cref="T:SharpDX.DataBox"/>
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,System.Int32@)">
            <summary>
            Maps the data contained in a subresource to a memory pointer, and denies the GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="mipSize">Size of the selected miplevel.</param>
            <returns>
            The locked <see cref="T:SharpDX.DataBox"/>
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
            Maps the data contained in a subresource to a memory pointer, and denies the GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="subresource">The subresource.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The output stream containing the pointer.</param>
            <returns>The locked <see cref="T:SharpDX.DataBox"/></returns>
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource``1(``0@,SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="data">A reference to the data to upload.</param>
            <param name="resource">The destination resource.</param>
            <param name="subresource">The destination subresource.</param>
            <param name="rowPitch">The row pitch.</param>
            <param name="depthPitch">The depth pitch.</param>
            <remarks>
            This method is implementing the <a href="http://blogs.msdn.com/b/chuckw/archive/2010/07/28/known-issue-direct3d-11-updatesubresource-and-deferred-contexts.aspx">workaround for defered context</a>.
            </remarks>
            <msdn-id>ff476486</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::UpdateSubresource([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In, Optional] const D3D11_BOX* pDstBox,[In] const void* pSrcData,[In] unsigned int SrcRowPitch,[In] unsigned int SrcDepthPitch)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::UpdateSubresource</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource``1(``0[],SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="data">A reference to the data to upload.</param>
            <param name="resource">The destination resource.</param>
            <param name="subresource">The destination subresource.</param>
            <param name="rowPitch">The row pitch.</param>
            <param name="depthPitch">The depth pitch.</param>
            <param name="region">A region that defines the portion of the destination subresource to copy the resource data into. Coordinates are in bytes for buffers and in texels for textures.</param>
            <msdn-id>ff476486</msdn-id>
              <unmanaged>void ID3D11DeviceContext::UpdateSubresource([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In, Optional] const D3D11_BOX* pDstBox,[In] const void* pSrcData,[In] unsigned int SrcRowPitch,[In] unsigned int SrcDepthPitch)</unmanaged>
              <unmanaged-short>ID3D11DeviceContext::UpdateSubresource</unmanaged-short>
            <remarks>This method is implementing the <a href="http://blogs.msdn.com/b/chuckw/archive/2010/07/28/known-issue-direct3d-11-updatesubresource-and-deferred-contexts.aspx">workaround for defered context</a>.</remarks>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32)">
            <summary>
              Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <param name = "source">The source data.</param>
            <param name = "resource">The destination resource.</param>
            <param name = "subresource">The destination subresource.</param>
            <remarks>
            This method is implementing the <a href="http://blogs.msdn.com/b/chuckw/archive/2010/07/28/known-issue-direct3d-11-updatesubresource-and-deferred-contexts.aspx">workaround for defered context</a>.
            </remarks>
            <unmanaged>void ID3D11DeviceContext::UpdateSubresource([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In, Optional] const D3D11_BOX* pDstBox,[In] const void* pSrcData,[In] unsigned int SrcRowPitch,[In] unsigned int SrcDepthPitch)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.ResourceRegion)">
            <summary>
              Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <param name = "source">The source data.</param>
            <param name = "resource">The destination resource.</param>
            <param name = "subresource">The destination subresource.</param>
            <param name = "region">The destination region within the resource.</param>
            <remarks>
            This method is implementing the <a href="http://blogs.msdn.com/b/chuckw/archive/2010/07/28/known-issue-direct3d-11-updatesubresource-and-deferred-contexts.aspx">workaround for defered context</a>.
            </remarks>
            <unmanaged>void ID3D11DeviceContext::UpdateSubresource([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In, Optional] const D3D11_BOX* pDstBox,[In] const void* pSrcData,[In] unsigned int SrcRowPitch,[In] unsigned int SrcDepthPitch)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresourceSafe``1(``0@,SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="data">A reference to the data to upload.</param>
            <param name="resource">The destination resource.</param>
            <param name="srcBytesPerElement">The size in bytes per pixel/block element.</param>
            <param name="subresource">The destination subresource.</param>
            <param name="rowPitch">The row pitch.</param>
            <param name="depthPitch">The depth pitch.</param>
            <param name="isCompressedResource">if set to <c>true</c> the resource is a block/compressed resource</param>
            <unmanaged>void ID3D11DeviceContext::UpdateSubresource([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In, Optional] const D3D11_BOX* pDstBox,[In] const void* pSrcData,[In] unsigned int SrcRowPitch,[In] unsigned int SrcDepthPitch)</unmanaged>
            <remarks>
            This method is implementing the <a href="http://blogs.msdn.com/b/chuckw/archive/2010/07/28/known-issue-direct3d-11-updatesubresource-and-deferred-contexts.aspx">workaround for defered context</a>.
            </remarks>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresourceSafe``1(``0[],SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="data">A reference to the data to upload.</param>
            <param name="resource">The destination resource.</param>
            <param name="srcBytesPerElement">The size in bytes per pixel/block element.</param>
            <param name="subresource">The destination subresource.</param>
            <param name="rowPitch">The row pitch.</param>
            <param name="depthPitch">The depth pitch.</param>
            <param name="isCompressedResource">if set to <c>true</c> the resource is a block/compressed resource</param>
            <remarks>
            This method is implementing the <a href="http://blogs.msdn.com/b/chuckw/archive/2010/07/28/known-issue-direct3d-11-updatesubresource-and-deferred-contexts.aspx">workaround for defered context</a>.
            </remarks>
            <unmanaged>void ID3D11DeviceContext::UpdateSubresource([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In, Optional] const D3D11_BOX* pDstBox,[In] const void* pSrcData,[In] unsigned int SrcRowPitch,[In] unsigned int SrcDepthPitch)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresourceSafe(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Boolean)">
            <summary>
              Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <param name = "source">The source data.</param>
            <param name = "resource">The destination resource.</param>
            <param name="srcBytesPerElement">The size in bytes per pixel/block element.</param>
            <param name = "subresource">The destination subresource.</param>
            <param name="isCompressedResource">if set to <c>true</c> the resource is a block/compressed resource</param>
            <remarks>
            This method is implementing the <a href="http://blogs.msdn.com/b/chuckw/archive/2010/07/28/known-issue-direct3d-11-updatesubresource-and-deferred-contexts.aspx">workaround for defered context</a>.
            </remarks>
            <unmanaged>void ID3D11DeviceContext::UpdateSubresource([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In, Optional] const D3D11_BOX* pDstBox,[In] const void* pSrcData,[In] unsigned int SrcRowPitch,[In] unsigned int SrcDepthPitch)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresourceSafe(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32,System.Int32,SharpDX.Direct3D11.ResourceRegion,System.Boolean)">
            <summary>
              Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <param name = "source">The source data.</param>
            <param name = "resource">The destination resource.</param>
            <param name="srcBytesPerElement">The size in bytes per pixel/block element.</param>
            <param name = "subresource">The destination subresource.</param>
            <param name = "region">The destination region within the resource.</param>
            <param name="isCompressedResource">if set to <c>true</c> the resource is a block/compressed resource</param>
            <remarks>
            This method is implementing the <a href="http://blogs.msdn.com/b/chuckw/archive/2010/07/28/known-issue-direct3d-11-updatesubresource-and-deferred-contexts.aspx">workaround for defered context</a>.
            </remarks>
            <unmanaged>void ID3D11DeviceContext::UpdateSubresource([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In, Optional] const D3D11_BOX* pDstBox,[In] const void* pSrcData,[In] unsigned int SrcRowPitch,[In] unsigned int SrcDepthPitch)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresourceSafe(SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.IntPtr,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Updates the subresource safe method.
            </summary>
            <param name="dstResourceRef">The DST resource ref.</param>
            <param name="dstSubresource">The DST subresource.</param>
            <param name="dstBoxRef">The DST box ref.</param>
            <param name="pSrcData">The p SRC data.</param>
            <param name="srcRowPitch">The SRC row pitch.</param>
            <param name="srcDepthPitch">The SRC depth pitch.</param>
            <param name="srcBytesPerElement">The size in bytes per pixel/block element.</param>
            <param name="isCompressedResource">if set to <c>true</c> the resource is a block/compressed resource</param>
            <returns></returns>
            <remarks>
            This method is implementing the <a href="http://blogs.msdn.com/b/chuckw/archive/2010/07/28/known-issue-direct3d-11-updatesubresource-and-deferred-contexts.aspx">workaround for defered context</a>.
            </remarks>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DeviceContext"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.DeviceContext">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.DeviceContext"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.NativePointerUpdated(System.IntPtr)">
            <summary>Update nested inner interfaces pointer</summary>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DrawIndexed(System.Int32,System.Int32,System.Int32)">
            <summary>	
            <p>Draw indexed, non-instanced primitives.</p>	
            </summary>	
            <param name="indexCount"><dd>  <p>Number of indices to draw.</p> </dd></param>	
            <param name="startIndexLocation"><dd>  <p>The location of the first index read by the GPU from the index buffer.</p> </dd></param>	
            <param name="baseVertexLocation"><dd>  <p>A value added to each index before reading a vertex from the vertex buffer.</p> </dd></param>	
            <remarks>	
            <p>A draw API submits work to the rendering pipeline.</p><p>If the sum of both indices is negative, the result of the function call is undefined.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DrawIndexed']/*"/>	
            <msdn-id>ff476409</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DrawIndexed([In] unsigned int IndexCount,[In] unsigned int StartIndexLocation,[In] int BaseVertexLocation)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DrawIndexed</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.Draw(System.Int32,System.Int32)">
            <summary>	
            <p>Draw non-indexed, non-instanced primitives.</p>	
            </summary>	
            <param name="vertexCount"><dd>  <p>Number of vertices to draw.</p> </dd></param>	
            <param name="startVertexLocation"><dd>  <p>Index of the first vertex, which is usually an offset in a vertex buffer; it could also be used as the first vertex id generated for a shader parameter marked with the <strong>SV_TargetId</strong> system-value semantic.</p> </dd></param>	
            <remarks>	
            <p>A draw API submits work to the rendering pipeline.</p><p>The vertex data for a draw call normally comes from a vertex buffer that is bound to the pipeline. However, you could also provide the vertex data from a shader that has vertex data marked with the <strong>SV_VertexId</strong> system-value semantic.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::Draw']/*"/>	
            <msdn-id>ff476407</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::Draw([In] unsigned int VertexCount,[In] unsigned int StartVertexLocation)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::Draw</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags)">
            <summary>	
            <p>Gets a reference to the data contained in a subresource, and denies the GPU access to that subresource.</p>	
            </summary>	
            <param name="resourceRef"><dd>  <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong> interface.</p> </dd></param>	
            <param name="subresource"><dd>  <p>Index number of the subresource.</p> </dd></param>	
            <param name="mapType"><dd>  <p>Specifies the CPU's read and write permissions for a resource. For possible values, see <strong><see cref="T:SharpDX.Direct3D11.MapMode"/></strong>.</p> </dd></param>	
            <param name="mapFlags"><dd>  <p> <strong>Flag</strong> that specifies what the CPU should do when the GPU is busy. This flag is optional.</p> </dd></param>	
            <returns><dd>  <p>A reference to the mapped subresource (see <strong><see cref="T:SharpDX.DataBox"/></strong>).</p> </dd></returns>	
            <remarks>	
            <p>If you call <strong>Map</strong> on a deferred context, you can only pass <strong><see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/></strong>, <strong><see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/></strong>, or both to the <em>MapType</em> parameter. Other <strong><see cref="T:SharpDX.Direct3D11.MapMode"/></strong>-typed values are not supported for a deferred context.</p><p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, can  map shader resource views (SRVs) of dynamic buffers with <strong><see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/></strong>.  The Direct3D 11 and earlier runtimes limited mapping to vertex or index buffers.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::Map']/*"/>	
            <msdn-id>ff476457</msdn-id>	
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::Map</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UnmapSubresource(SharpDX.Direct3D11.Resource,System.Int32)">
            <summary>	
            <p>Invalidate the reference to a resource and re-enable the GPU's access to that resource.</p>	
            </summary>	
            <param name="resourceRef"><dd>  <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong> interface.</p> </dd></param>	
            <param name="subresource"><dd>  <p>A subresource to be unmapped.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::Unmap']/*"/>	
            <msdn-id>ff476485</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::Unmap([In] ID3D11Resource* pResource,[In] unsigned int Subresource)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::Unmap</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DrawIndexedInstanced(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>	
            <p>Draw indexed, instanced primitives.</p>	
            </summary>	
            <param name="indexCountPerInstance"><dd>  <p>Number of indices read from the index buffer for each instance.</p> </dd></param>	
            <param name="instanceCount"><dd>  <p>Number of instances to draw.</p> </dd></param>	
            <param name="startIndexLocation"><dd>  <p>The location of the first index read by the GPU from the index buffer.</p> </dd></param>	
            <param name="baseVertexLocation"><dd>  <p>A value added to each index before reading a vertex from the vertex buffer.</p> </dd></param>	
            <param name="startInstanceLocation"><dd>  <p>A value added to each index before reading per-instance data from a vertex buffer.</p> </dd></param>	
            <remarks>	
            <p>A draw API submits work to the rendering pipeline.</p><p>Instancing may extend performance by reusing the same geometry to draw multiple objects in a scene. One example of instancing could be  to draw the same object with different positions and colors. Indexing requires multiple vertex buffers: at least one for per-vertex data  and a second buffer for per-instance data.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DrawIndexedInstanced']/*"/>	
            <msdn-id>ff476410</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DrawIndexedInstanced([In] unsigned int IndexCountPerInstance,[In] unsigned int InstanceCount,[In] unsigned int StartIndexLocation,[In] int BaseVertexLocation,[In] unsigned int StartInstanceLocation)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DrawIndexedInstanced</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DrawInstanced(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>	
            <p>Draw non-indexed, instanced primitives.</p>	
            </summary>	
            <param name="vertexCountPerInstance"><dd>  <p>Number of vertices to draw.</p> </dd></param>	
            <param name="instanceCount"><dd>  <p>Number of instances to draw.</p> </dd></param>	
            <param name="startVertexLocation"><dd>  <p>Index of the first vertex.</p> </dd></param>	
            <param name="startInstanceLocation"><dd>  <p>A value added to each index before reading per-instance data from a vertex buffer.</p> </dd></param>	
            <remarks>	
            <p>A draw API submits work to the rendering pipeline.</p><p>Instancing may extend performance by reusing the same geometry to draw multiple objects in a scene. One example of instancing could be  to draw the same object with different positions and colors.</p><p>The vertex data for an instanced draw call normally comes from a vertex buffer that is bound to the pipeline.  However, you could also provide the vertex data from a shader that has instanced data identified with a system-value semantic (SV_InstanceID).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DrawInstanced']/*"/>	
            <msdn-id>ff476412</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DrawInstanced([In] unsigned int VertexCountPerInstance,[In] unsigned int InstanceCount,[In] unsigned int StartVertexLocation,[In] unsigned int StartInstanceLocation)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DrawInstanced</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)">
            <summary>	
            <p>Mark the beginning of a series of commands.</p>	
            </summary>	
            <param name="asyncRef"><dd>  <p>A reference to an <strong><see cref="T:SharpDX.Direct3D11.Asynchronous"/></strong> interface.</p> </dd></param>	
            <remarks>	
            <p>Use <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong> to mark the ending of the series of commands.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::Begin']/*"/>	
            <msdn-id>ff476386</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::Begin([In] ID3D11Asynchronous* pAsync)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::Begin</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)">
            <summary>	
            <p>Mark the end of a series of commands.</p>	
            </summary>	
            <param name="asyncRef"><dd>  <p>A reference to an <strong><see cref="T:SharpDX.Direct3D11.Asynchronous"/></strong> interface.</p> </dd></param>	
            <remarks>	
            <p>Use <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> to mark the beginning of the series of commands.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::End']/*"/>	
            <msdn-id>ff476422</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::End([In] ID3D11Asynchronous* pAsync)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::End</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)">
            <summary>	
            <p>Get data from the graphics processing unit (GPU) asynchronously.</p>	
            </summary>	
            <param name="asyncRef"><dd>  <p>A reference to an <strong><see cref="T:SharpDX.Direct3D11.Asynchronous"/></strong> interface for the object about which <strong>GetData</strong> retrieves data.</p> </dd></param>	
            <param name="dataRef"><dd>  <p>Address of memory that will receive the data. If <strong><c>null</c></strong>, <strong>GetData</strong> will be used only to check status. The type of data output depends on the type of asynchronous interface.</p> </dd></param>	
            <param name="dataSize"><dd>  <p>Size of the data to retrieve or 0. Must be 0 when <em>pData</em> is <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="getDataFlags"><dd>  <p>Optional flags. Can be 0 or any combination of the flags enumerated by <strong><see cref="T:SharpDX.Direct3D11.AsynchronousFlags"/></strong>.</p> </dd></param>	
            <returns><p>This method returns one of the Direct3D 11 Return Codes. A return value of <see cref="F:SharpDX.Result.Ok"/> indicates that the data at <em>pData</em> is available for the calling application to access. A return value of S_FALSE indicates that the data is not yet available. If the data is not yet available, the application must call <strong>GetData</strong> until the data is available.</p></returns>	
            <remarks>	
            <p>Queries in a deferred context are limited to predicated drawing. That is, you cannot call <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> on a deferred context to get data about a query; you can only call <strong>GetData</strong> on the immediate context to get data about a query. For predicated drawing, the results of a predication-type query are used by the GPU and not returned to an application. For more information about predication and predicated drawing, see <strong>D3D11DeviceContext::SetPredication</strong>.</p><p><strong>GetData</strong> retrieves the data that the runtime collected between calls to <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>.  Certain queries only require a call to <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong> in which case the data returned by <strong>GetData</strong> is accurate up to the last call to <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>. For information about the queries that only require a call to <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong> and about the type of data that <strong>GetData</strong> retrieves for each query, see <strong><see cref="T:SharpDX.Direct3D11.QueryType"/></strong>.</p><p>If <em>DataSize</em> is 0, <strong>GetData</strong> is only used to check status.</p><p>An application gathers counter data by calling <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong>, issuing some graphics commands, calling <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>, and then calling <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> to get data about what happened in between the <strong>Begin</strong> and <strong>End</strong> calls. For information about performance counter types, see <strong><see cref="T:SharpDX.Direct3D11.CounterKind"/></strong>. The counter data is of type FLOAT32. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetData']/*"/>	
            <msdn-id>ff476428</msdn-id>	
            <unmanaged>HRESULT ID3D11DeviceContext::GetData([In] ID3D11Asynchronous* pAsync,[Out, Buffer, Optional] void* pData,[In] unsigned int DataSize,[In] D3D11_ASYNC_GETDATA_FLAG GetDataFlags)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GetData</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.SetPredication(SharpDX.Direct3D11.Predicate,SharpDX.Bool)">
            <summary>	
            <p>Set a rendering predicate.</p>	
            </summary>	
            <param name="predicateRef"><dd>  <p>Pointer to a predicate (see <strong><see cref="T:SharpDX.Direct3D11.Predicate"/></strong>). A <strong><c>null</c></strong> value indicates "no" predication; in this case, the value of PredicateValue is irrelevent but will be preserved for <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetPredication(SharpDX.Bool@)"/></strong>.</p> </dd></param>	
            <param name="predicateValue"><dd>  <p>If <strong>TRUE</strong>, rendering will be affected by when the predicate's conditions are met. If <strong><see cref="F:SharpDX.Result.False"/></strong>, rendering will be affected when the conditions are not met.</p> </dd></param>	
            <remarks>	
            <p>The predicate must be in the "issued" or "signaled" state to be used for predication. While the predicate is set for predication, calls to <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong> are invalid.</p><p>This method is used to denote that subsequent rendering and resource manipulation commands are not actually performed if the resulting Predicate data of the Predicate is equal to the PredicateValue. However, some Predicates are only hints, so they may not actually prevent operations from being performed. </p><p>The primary usefulness of Predication is to allow an application to issue graphics commands without taking the performance hit of spinning, waiting for <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> to return. So, Predication can occur while <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> returns S_FALSE. Another way to think of it: an application can also use Predication as a fallback, if it is possible that <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> returns S_FALSE. If <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> returns <see cref="F:SharpDX.Result.Ok"/>, the application can skip calling the graphics commands manually with it's own application logic.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::SetPredication']/*"/>	
            <msdn-id>ff476481</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::SetPredication([In, Optional] ID3D11Predicate* pPredicate,[In] BOOL PredicateValue)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::SetPredication</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DrawAuto">
            <summary>	
            <p>Draw geometry of an unknown size.</p>	
            </summary>	
            <remarks>	
            <p>A draw API submits work to the rendering pipeline. This API submits work of an unknown size that was processed by the input assembler, vertex shader, and stream-output stages;  the work may or may not have gone through the geometry-shader stage.</p><p>After data has been streamed out to stream-output stage buffers, those buffers can be again bound to the Input Assembler stage at input slot 0 and DrawAuto will draw them without the application needing to know the amount of data that was written to the buffers. A measurement of the amount of data written to the SO stage buffers is maintained internally when the data is streamed out. This means that the CPU does not need to fetch the measurement before re-binding the data that was streamed as input data. Although this amount is tracked internally, it is still the responsibility of applications to use input layouts to describe the format of the data in the SO stage buffers so that the layouts are available when the buffers are again bound to the input assembler.</p><p>The following diagram shows the DrawAuto process.</p><p></p><p>Calling DrawAuto does not change the state of the streaming-output buffers that were bound again as inputs.</p><p>DrawAuto only works when drawing with one input buffer bound as an input to the IA stage at slot 0. Applications must create the SO buffer resource with both binding flags, <strong><see cref="F:SharpDX.Direct3D11.BindFlags.VertexBuffer"/></strong> and <strong><see cref="F:SharpDX.Direct3D11.BindFlags.StreamOutput"/></strong>.</p><p>This API does not support indexing or instancing.</p><p>If an application needs to retrieve the size of the streaming-output buffer, it can query for statistics on streaming output by using <strong><see cref="F:SharpDX.Direct3D11.QueryType.StreamOutputStatistics"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DrawAuto']/*"/>	
            <msdn-id>ff476408</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DrawAuto()</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DrawAuto</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DrawIndexedInstancedIndirect(SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>	
            <p>Draw indexed, instanced, GPU-generated primitives.</p>	
            </summary>	
            <param name="bufferForArgsRef"><dd>  <p>A reference to an <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>, which is a buffer containing the GPU generated primitives.</p> </dd></param>	
            <param name="alignedByteOffsetForArgs"><dd>  <p>Offset in <em>pBufferForArgs</em> to the start of the GPU generated primitives.</p> </dd></param>	
            <remarks>	
            <p>When an application creates a buffer that is associated with the <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong> interface that  <em>pBufferForArgs</em> points to, the application must set the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.DrawIndirectArguments"/></strong> flag in the <strong>MiscFlags</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.BufferDescription"/></strong> structure that describes the buffer. To create the buffer, the application calls the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)"/></strong> method and in this call passes a reference to <strong><see cref="T:SharpDX.Direct3D11.BufferDescription"/></strong> in the <em>pDesc</em> parameter.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DrawIndexedInstancedIndirect']/*"/>	
            <msdn-id>ff476411</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DrawIndexedInstancedIndirect([In] ID3D11Buffer* pBufferForArgs,[In] unsigned int AlignedByteOffsetForArgs)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DrawIndexedInstancedIndirect</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DrawInstancedIndirect(SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>	
            <p>Draw instanced, GPU-generated primitives.</p>	
            </summary>	
            <param name="bufferForArgsRef"><dd>  <p>A reference to an <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>, which is a buffer containing the GPU generated primitives.</p> </dd></param>	
            <param name="alignedByteOffsetForArgs"><dd>  <p>Offset in <em>pBufferForArgs</em> to the start of the GPU generated primitives.</p> </dd></param>	
            <remarks>	
            <p>When an application creates a buffer that is associated with the <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong> interface that  <em>pBufferForArgs</em> points to, the application must set the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.DrawIndirectArguments"/></strong> flag in the <strong>MiscFlags</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.BufferDescription"/></strong> structure that describes the buffer. To create the buffer, the application calls the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)"/></strong> method and in this call passes a reference to <strong><see cref="T:SharpDX.Direct3D11.BufferDescription"/></strong> in the <em>pDesc</em> parameter.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DrawInstancedIndirect']/*"/>	
            <msdn-id>ff476413</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DrawInstancedIndirect([In] ID3D11Buffer* pBufferForArgs,[In] unsigned int AlignedByteOffsetForArgs)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DrawInstancedIndirect</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.Dispatch(System.Int32,System.Int32,System.Int32)">
            <summary>	
            <p>Execute a command list from a thread group.</p>	
            </summary>	
            <param name="threadGroupCountX"><dd>  <p>The number of groups dispatched in the x direction. <em>ThreadGroupCountX</em> must be less than <see cref="F:SharpDX.Direct3D11.ComputeShaderStage.DispatchMaximumThreadGroupsPerDimension"/> (65535).</p> </dd></param>	
            <param name="threadGroupCountY"><dd>  <p>The number of groups dispatched in the y direction. <em>ThreadGroupCountY</em> must be less than <see cref="F:SharpDX.Direct3D11.ComputeShaderStage.DispatchMaximumThreadGroupsPerDimension"/> (65535).</p> </dd></param>	
            <param name="threadGroupCountZ"><dd>  <p>The number of groups dispatched in the z direction.  <em>ThreadGroupCountZ</em> must be less than <see cref="F:SharpDX.Direct3D11.ComputeShaderStage.DispatchMaximumThreadGroupsPerDimension"/> (65535).  In feature level 10 the value for <em>ThreadGroupCountZ</em> must be 1.</p> </dd></param>	
            <remarks>	
            <p>You call the <strong>Dispatch</strong> method to execute commands in a compute shader. A compute shader can be run on many threads in parallel, within a thread group. Index a particular thread, within a thread group using a 3D vector  given by (x,y,z).</p><p>In the following illustration, assume a thread group with 50 threads where the size of the group is given by (5,5,2). A single thread is identified from a  thread group with 50 threads in it, using the vector (4,1,1).</p><p></p><p>The following illustration shows the relationship between the parameters passed to <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Dispatch(System.Int32,System.Int32,System.Int32)"/></strong>, Dispatch(5,3,2), the values specified in the numthreads attribute, numthreads(10,8,3), and values that will passed to the compute shader for the thread-related system values 	
            (SV_GroupIndex,SV_DispatchThreadID,SV_GroupThreadID,SV_GroupID).</p><p></p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::Dispatch']/*"/>	
            <msdn-id>ff476405</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::Dispatch([In] unsigned int ThreadGroupCountX,[In] unsigned int ThreadGroupCountY,[In] unsigned int ThreadGroupCountZ)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::Dispatch</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DispatchIndirect(SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>	
            <p>Execute a command list over one or more thread groups.</p>	
            </summary>	
            <param name="bufferForArgsRef"><dd>  <p>A reference to an <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>, which must be loaded with data that matches the argument list for <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Dispatch(System.Int32,System.Int32,System.Int32)"/></strong>.</p> </dd></param>	
            <param name="alignedByteOffsetForArgs"><dd>  <p>A byte-aligned offset between the start of the buffer and the arguments.</p> </dd></param>	
            <remarks>	
            <p>You call the <strong>DispatchIndirect</strong> method to execute commands in a compute shader.</p><p>When an application creates a buffer that is associated with the <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong> interface that  <em>pBufferForArgs</em> points to, the application must set the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.DrawIndirectArguments"/></strong> flag in the <strong>MiscFlags</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.BufferDescription"/></strong> structure that describes the buffer. To create the buffer, the application calls the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)"/></strong> method and in this call passes a reference to <strong><see cref="T:SharpDX.Direct3D11.BufferDescription"/></strong> in the <em>pDesc</em> parameter.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DispatchIndirect']/*"/>	
            <msdn-id>ff476406</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DispatchIndirect([In] ID3D11Buffer* pBufferForArgs,[In] unsigned int AlignedByteOffsetForArgs)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DispatchIndirect</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})">
            <summary>	
            <p>Copy a region from a source resource to a destination resource.</p>	
            </summary>	
            <param name="dstResourceRef"><dd>  <p>A reference to the destination resource (see <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong>).</p> </dd></param>	
            <param name="dstSubresource"><dd>  <p>Destination subresource index.</p> </dd></param>	
            <param name="dstX"><dd>  <p>The x-coordinate of the upper left corner of the destination region.</p> </dd></param>	
            <param name="dstY"><dd>  <p>The y-coordinate of the upper left corner of the destination region. For a 1D subresource, this must be zero.</p> </dd></param>	
            <param name="dstZ"><dd>  <p>The z-coordinate of the upper left corner of the destination region. For a 1D or 2D subresource, this must be zero.</p> </dd></param>	
            <param name="srcResourceRef"><dd>  <p>A reference to the source resource (see <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong>).</p> </dd></param>	
            <param name="srcSubresource"><dd>  <p>Source subresource index.</p> </dd></param>	
            <param name="srcBoxRef"><dd>  <p>A reference to a 3D box (see <strong><see cref="T:SharpDX.Direct3D11.ResourceRegion"/></strong>) that defines the source subresources that can be copied. If <strong><c>null</c></strong>, the entire source subresource is copied. The box must fit within the source resource.</p> </dd></param>	
            <remarks>	
            <p>The source box must be within the size of the source resource. The destination offsets, (x, y, and z) allow the source box to be offset when writing into the destination resource; however, the dimensions of the source box and the offsets must be within the size of the resource.</p><p>If the resources are buffers, all coordinates are in bytes; if the resources are textures, all coordinates are in texels. <strong>D3D11CalcSubresource</strong> is a helper function for calculating subresource indexes.</p><p><strong>CopySubresourceRegion</strong> performs the copy on the GPU (similar to a memcpy by the CPU). As a consequence, the source and destination resources:</p><ul> <li>Must be different subresources (although they can be from the same resource).</li> <li>Must be the same type.</li> <li>Must have compatible DXGI formats (identical or from the same type group). For example, a <see cref="F:SharpDX.DXGI.Format.R32G32B32_Float"/> texture can be copied to an <see cref="F:SharpDX.DXGI.Format.R32G32B32_UInt"/> texture since both of these formats are in the <see cref="F:SharpDX.DXGI.Format.R32G32B32_Typeless"/> group.</li> <li>May not be currently mapped.</li> </ul><p><strong>CopySubresourceRegion</strong> only supports copy; it does not support any stretch, color key, blend, or format conversions. An application that needs to copy an entire resource should use <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)"/></strong> instead.</p><p><strong>CopySubresourceRegion</strong> is an asynchronous call, which may be added to the command-buffer queue, this attempts to remove pipeline stalls that may occur when copying data. For more information about pipeline stalls, see performance considerations.</p><p><strong>Note</strong>??If you use <strong>CopySubresourceRegion</strong> with a depth-stencil buffer or a multisampled resource, you must copy the whole subresource. In this situation, you must pass 0 to the <em>DstX</em>, <em>DstY</em>, and <em>DstZ</em> parameters and <strong><c>null</c></strong> to the <em>pSrcBox</em> parameter. In addition, source and destination resources, which are represented by the <em>pSrcResource</em> and <em>pDstResource</em> parameters, should have identical sample count values.</p>Example<p>The following code snippet copies a box (located at (120,100),(200,220)) from a source texture into a reqion (10,20),(90,140) in a destination texture.</p><pre><code> <see cref="T:SharpDX.Direct3D11.ResourceRegion"/> sourceRegion;	
            sourceRegion.left = 120;	
            sourceRegion.right = 200;	
            sourceRegion.top = 100;	
            sourceRegion.bottom = 220;	
            sourceRegion.front = 0;	
            sourceRegion.back = 1; pd3dDeviceContext-&gt;CopySubresourceRegion( pDestTexture, 0, 10, 20, 0, pSourceTexture, 0, &amp;sourceRegion );	
            </code></pre><p>Notice, that for a 2D texture, front and back are set to 0 and 1 respectively.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CopySubresourceRegion']/*"/>	
            <msdn-id>ff476394</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CopySubresourceRegion([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In] unsigned int DstX,[In] unsigned int DstY,[In] unsigned int DstZ,[In] ID3D11Resource* pSrcResource,[In] unsigned int SrcSubresource,[In, Optional] const D3D11_BOX* pSrcBox)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CopySubresourceRegion</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)">
            <summary>	
            <p>Copy the entire contents of the source resource to the destination resource using the GPU. </p>	
            </summary>	
            <param name="dstResourceRef"><dd>  <p>A reference to the destination resource (see <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong>).</p> </dd></param>	
            <param name="srcResourceRef"><dd>  <p>A reference to the source resource (see <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong>).</p> </dd></param>	
            <remarks>	
            <p>This method is unusual in that it causes the GPU to perform the copy operation (similar to a memcpy by the CPU). As a result, it has a few restrictions designed for improving performance. For instance, the source and destination resources:</p><ul> <li>Must be different resources.</li> <li>Must be the same type.</li> <li>Must have identical dimensions (including width, height, depth, and size as appropriate).</li> <li>Will only be copied. CopyResource does not support any stretch, color key, blend, or format conversions.</li> <li>Must have compatible DXGI formats, which means the formats must be identical or at least from the same type group. For example, a <see cref="F:SharpDX.DXGI.Format.R32G32B32_Float"/> texture can be copied to an <see cref="F:SharpDX.DXGI.Format.R32G32B32_UInt"/> texture since both of these formats are in the <see cref="F:SharpDX.DXGI.Format.R32G32B32_Typeless"/> group.</li> <li>Might not be currently mapped.</li> </ul><p>You cannot use an <strong>Immutable</strong> resource as a destination. You can use a   <strong>depth-stencil</strong> resource as either a source or a destination.  Resources created with multisampling capability (see <strong><see cref="T:SharpDX.DXGI.SampleDescription"/></strong>) can be used as source and destination only if both source and destination have identical multisampled count and quality. If source and destination differ in multisampled count and quality or if one is multisampled and the other is not multisampled the call to <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)"/></strong> fails.</p><p>The method is an asynchronous call which may be added to the command-buffer queue. This attempts to remove pipeline stalls that may occur when copying data. </p><p>An application that only needs to copy a portion of the data in a resource should use <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})"/></strong> instead.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CopyResource']/*"/>	
            <msdn-id>ff476392</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CopyResource([In] ID3D11Resource* pDstResource,[In] ID3D11Resource* pSrcResource)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CopyResource</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.IntPtr,System.Int32,System.Int32)">
            <summary>	
            <p>The CPU copies data from memory to a subresource created in non-mappable memory.</p>	
            </summary>	
            <param name="dstResourceRef"><dd>  <p>A reference to the destination resource (see <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong>).</p> </dd></param>	
            <param name="dstSubresource"><dd>  <p>A zero-based index, that identifies the destination subresource. See <strong>D3D11CalcSubresource</strong> for more details.</p> </dd></param>	
            <param name="dstBoxRef"><dd>  <p>A reference to a box that defines the portion of the destination subresource to copy the resource data into. Coordinates are in bytes for buffers and in texels for textures. If <strong><c>null</c></strong>, the data is written to the destination subresource with no offset. The dimensions of the source must fit the destination (see <strong><see cref="T:SharpDX.Direct3D11.ResourceRegion"/></strong>).</p> </dd></param>	
            <param name="srcDataRef"><dd>  <p>A reference to the source data in memory.</p> </dd></param>	
            <param name="srcRowPitch"><dd>  <p>The size of one row of the source data.</p> </dd></param>	
            <param name="srcDepthPitch"><dd>  <p>The size of one depth slice of source data.</p> </dd></param>	
            <remarks>	
            <p>For a shader-constant buffer; set <em>pDstBox</em> to <strong><c>null</c></strong>. It is not possible to use this method to partially update a shader-constant buffer.</p><p>A resource cannot be used as a destination if:</p><ul> <li>the resource is created with <strong>immutable</strong> or <strong>dynamic</strong> usage.</li> <li>the resource is created as a depth-stencil resource.</li> <li>the resource is created with multisampling capability (see <strong><see cref="T:SharpDX.DXGI.SampleDescription"/></strong>).</li> </ul><p>When <strong>UpdateSubresource</strong> returns, the application is free to change or even free the data pointed to by <em>pSrcData</em> because the method has already copied/snapped away the original contents.</p><p>The performance of <strong>UpdateSubresource</strong> depends on whether or not there is contention for the destination resource. For example, contention for a vertex buffer resource occurs when the application executes a <strong>Draw</strong> call and later calls <strong>UpdateSubresource</strong> on the same vertex buffer before the <strong>Draw</strong> call is actually executed by the GPU.</p><ul> <li>When there is contention for the resource, <strong>UpdateSubresource</strong> will perform 2 copies of the source data. First, the data is copied by the CPU to a temporary storage space accessible by the command buffer. This copy happens before the method returns.  A second copy is then performed by the GPU to copy the source data into non-mappable memory. This second copy happens asynchronously because it is executed by GPU when the command buffer is flushed.</li> <li>When there is no resource contention, the behavior of <strong>UpdateSubresource</strong> is dependent on which is faster (from the CPU's perspective): copying the data to the command buffer and then having a second copy execute when the command buffer is flushed, or having the CPU copy the data to the final resource location. This is dependent on the architecture of the underlying system.</li> </ul><p>To better understand the source row pitch and source depth pitch parameters, the following illustration shows a 3D volume texture.</p><p></p><p>Each block in this visual represents an element of data, and the size of each element is dependent on the resource's format. For example, if the resource format is <see cref="F:SharpDX.DXGI.Format.R32G32B32A32_Float"/>, the size of each element would be 128 bits, or 16 bytes. This 3D volume texture has a width of two, a height of three, and a depth of four.</p><p>To calculate the source row pitch and source depth pitch for a given resource, use the following formulas:</p><ul> <li>Source Row Pitch = [size of one element in bytes] * [number of elements in one row]</li> <li>Source Depth Pitch = [Source Row Pitch] * [number of rows (height)]</li> </ul><p>In the case of this example 3D volume texture where the size of each element is 16 bytes, the formulas are as follows:</p><ul> <li>Source Row Pitch = 16 * 2 = 32</li> <li>Source Depth Pitch = 16 * 2 * 3 = 96</li> </ul><p>The following illustration shows the resource as it is laid out in memory.</p><p></p><p>For example, the following code snippet shows how to specify a destination region in a 2D texture. Assume the destination texture is 512x512 and the operation will copy the data pointed to by <em>pData</em> to  [(120,100)..(200,220)] in the destination texture. Also assume that <em>rowPitch</em> has been initialized with the proper value (as explained above). <strong>front</strong> and <strong>back</strong> are set to 0 and 1 respectively, because by having <strong>front</strong> equal to <strong>back</strong>, the box is technically empty.</p><pre><code> <see cref="T:SharpDX.Direct3D11.ResourceRegion"/> destRegion;	
            destRegion.left = 120;	
            destRegion.right = 200;	
            destRegion.top = 100;	
            destRegion.bottom = 220;	
            destRegion.front = 0;	
            destRegion.back = 1; pd3dDeviceContext-&gt;UpdateSubresource( pDestTexture, 0, &amp;destRegion, pData, rowPitch, 0 );	
            </code></pre><p>The 1D case is similar. The following snippet shows how to specify a destination region in a 1D texture. Use the same assumptions as above, except that the texture is 512 in length.</p><pre><code> <see cref="T:SharpDX.Direct3D11.ResourceRegion"/> destRegion;	
            destRegion.left = 120	
            destRegion.right = 200;	
            destRegion.top = 0;	
            destRegion.bottom = 1;	
            destRegion.front = 0;	
            destRegion.back = 1; pd3dDeviceContext-&gt;UpdateSubresource( pDestTexture, 0, &amp;destRegion, pData, rowPitch, 0 );	
            </code></pre>Calling UpdateSubresource on a Deferred Context<p>If your application calls <strong>UpdateSubresource</strong> on a deferred context with a destination box?to which <em>pDstBox</em> points?that has a non-(0,0,0) offset, and if the driver does not support command lists, <strong>UpdateSubresource</strong> inappropriately applies that destination-box offset to the <em>pSrcData</em> parameter. To work around this behavior, use the following code:</p><pre><code> <see cref="T:SharpDX.Result"/> UpdateSubresource_Workaround( <see cref="T:SharpDX.Direct3D11.Device"/> *pDevice, <see cref="T:SharpDX.Direct3D11.DeviceContext"/> *pDeviceContext, <see cref="T:SharpDX.Direct3D11.Resource"/> *pDstResource, UINT dstSubresource, const <see cref="T:SharpDX.Direct3D11.ResourceRegion"/> *pDstBox, const void *pSrcData, UINT srcBytesPerElement, UINT srcRowPitch, UINT srcDepthPitch, bool* pDidWorkAround )	
            { <see cref="T:SharpDX.Result"/> hr = <see cref="F:SharpDX.Result.Ok"/>; bool needWorkaround = false; <see cref="T:SharpDX.Direct3D11.DeviceContextType"/> contextType = pDeviceContext-&gt;GetType(); if( pDstBox &amp;&amp; (<see cref="F:SharpDX.Direct3D11.DeviceContextType.Deferred"/> == contextType) ) { <see cref="T:SharpDX.Direct3D11.FeatureDataThreading"/> threadingCaps = { <see cref="F:SharpDX.Result.False"/>, <see cref="F:SharpDX.Result.False"/> }; hr = pDevice-&gt;CheckFeatureSupport( <see cref="F:SharpDX.Direct3D11.Feature.Threading"/>, &amp;threadingCaps, sizeof(threadingCaps) ); if( SUCCEEDED(hr) ) { if( !threadingCaps.DriverCommandLists ) { needWorkaround = true; } } } const void* pAdjustedSrcData = pSrcData; if( needWorkaround ) { <see cref="T:SharpDX.Direct3D11.ResourceRegion"/> alignedBox = *pDstBox; // convert from pixels to blocks if( m_bBC ) { alignedBox.left     /= 4; alignedBox.right    /= 4; alignedBox.top      /= 4; alignedBox.bottom   /= 4; } pAdjustedSrcData = ((const BYTE*)pSrcData) - (alignedBox.front * srcDepthPitch) - (alignedBox.top * srcRowPitch) - (alignedBox.left * srcBytesPerElement); } pDeviceContext-&gt;UpdateSubresource( pDstResource, dstSubresource, pDstBox, pAdjustedSrcData, srcRowPitch, srcDepthPitch ); if( pDidWorkAround ) { *pDidWorkAround = needWorkaround; } return hr;	
            }	
            </code></pre>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::UpdateSubresource']/*"/>	
            <msdn-id>ff476486</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::UpdateSubresource([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In, Optional] const D3D11_BOX* pDstBox,[In] const void* pSrcData,[In] unsigned int SrcRowPitch,[In] unsigned int SrcDepthPitch)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::UpdateSubresource</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.CopyStructureCount(SharpDX.Direct3D11.Buffer,System.Int32,SharpDX.Direct3D11.UnorderedAccessView)">
            <summary>	
            <p>Copies data from a buffer holding variable length data.</p>	
            </summary>	
            <param name="dstBufferRef"><dd>  <p>Pointer to <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>.  This can be any buffer resource that other copy commands,  such as <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)"/></strong> or <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})"/></strong>, are able to write to.</p> </dd></param>	
            <param name="dstAlignedByteOffset"><dd>  <p>Offset from the start of <em>pDstBuffer</em> to write 32-bit UINT structure (vertex) count from <em>pSrcView</em>.</p> </dd></param>	
            <param name="srcViewRef"><dd>  <p>Pointer to an <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/></strong> of a Structured Buffer resource created with either  <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/></strong> or <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/></strong> specified  when the UAV was created.   These types of resources have hidden counters tracking "how many" records have  been written.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CopyStructureCount']/*"/>	
            <msdn-id>ff476393</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CopyStructureCount([In] ID3D11Buffer* pDstBuffer,[In] unsigned int DstAlignedByteOffset,[In] ID3D11UnorderedAccessView* pSrcView)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CopyStructureCount</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ClearRenderTargetView(SharpDX.Direct3D11.RenderTargetView,SharpDX.Color4)">
            <summary>	
            <p>Set all the elements in a render target to one value.</p>	
            </summary>	
            <param name="renderTargetViewRef"><dd>  <p>Pointer to the rendertarget.</p> </dd></param>	
            <param name="colorRGBA"><dd>  <p>A 4-component array that represents the color to fill the render target with.</p> </dd></param>	
            <remarks>	
            <p>Applications that wish to clear a render target to a specific integer value bit pattern should render a screen-aligned quad instead of using this method.  The reason for this is because this method accepts as input a floating point value, which may not have the same bit pattern as the original integer.</p><table> <tr><td> <p>Differences between Direct3D 9 and Direct3D 11/10:</p> <p>Unlike Direct3D 9, the full extent of the resource view is always cleared. Viewport and scissor settings are not applied.</p> </td></tr> </table><p>?</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ClearRenderTargetView']/*"/>	
            <msdn-id>ff476388</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::ClearRenderTargetView([In] ID3D11RenderTargetView* pRenderTargetView,[In] const SHARPDX_COLOR4* ColorRGBA)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::ClearRenderTargetView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ClearUnorderedAccessView(SharpDX.Direct3D11.UnorderedAccessView,SharpDX.Int4)">
            <summary>	
            <p>Clears an unordered access resource with bit-precise values.</p>	
            </summary>	
            <param name="unorderedAccessViewRef">No documentation.</param>	
            <param name="values">No documentation.</param>	
            <remarks>	
            <p>This API copies the lower ni bits from each array element i to the corresponding channel, where ni is the number of bits in  the ith channel of the resource format (for example, R8G8B8_FLOAT has 8 bits for the first 3 channels). This works on any UAV with no format conversion.  For a raw or structured buffer view, only the first array element value is used.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ClearUnorderedAccessViewUint']/*"/>	
            <msdn-id>ff476391</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::ClearUnorderedAccessViewUint([In] ID3D11UnorderedAccessView* pUnorderedAccessView,[In] const SHARPDX_INT4* Values)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::ClearUnorderedAccessViewUint</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ClearUnorderedAccessView(SharpDX.Direct3D11.UnorderedAccessView,SharpDX.Vector4)">
            <summary>	
            <p>Clears an unordered access resource with a float value.</p>	
            </summary>	
            <param name="unorderedAccessViewRef">No documentation.</param>	
            <param name="values">No documentation.</param>	
            <remarks>	
            <p>This API works on FLOAT, UNORM, and SNORM unordered access views (UAVs), with format conversion from FLOAT to *NORM where appropriate. On other UAVs, the operation is invalid and the call will not reach the driver.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ClearUnorderedAccessViewFloat']/*"/>	
            <msdn-id>ff476390</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::ClearUnorderedAccessViewFloat([In] ID3D11UnorderedAccessView* pUnorderedAccessView,[In] const SHARPDX_VECTOR4* Values)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::ClearUnorderedAccessViewFloat</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ClearDepthStencilView(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.DepthStencilClearFlags,System.Single,System.Byte)">
            <summary>	
            <p>Clears the depth-stencil resource.</p>	
            </summary>	
            <param name="depthStencilViewRef"><dd>  <p>Pointer to the depth stencil to be cleared.</p> </dd></param>	
            <param name="clearFlags"><dd>  <p>Identify the type of data to clear (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilClearFlags"/></strong>).</p> </dd></param>	
            <param name="depth"><dd>  <p>Clear the depth buffer with this value. This value will be clamped between 0 and 1.</p> </dd></param>	
            <param name="stencil"><dd>  <p>Clear the stencil buffer with this value.</p> </dd></param>	
            <remarks>	
            <table> <tr><td> <p>Differences between Direct3D 9 and Direct3D 11/10:</p> <p>Unlike Direct3D 9, the full extent of the resource view is always cleared. Viewport and scissor settings are not applied.</p> </td></tr> </table><p>?</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ClearDepthStencilView']/*"/>	
            <msdn-id>ff476387</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::ClearDepthStencilView([In] ID3D11DepthStencilView* pDepthStencilView,[In] D3D11_CLEAR_FLAG ClearFlags,[In] float Depth,[In] unsigned char Stencil)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::ClearDepthStencilView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GenerateMips(SharpDX.Direct3D11.ShaderResourceView)">
            <summary>	
            <p>Generate mipmaps for the given shader resource.</p>	
            </summary>	
            <param name="shaderResourceViewRef"><dd>  <p>Pointer to an <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceView"/></strong> interface that represents the shader resource.</p> </dd></param>	
            <remarks>	
            <p>GenerateMips may be called on any shader-resource view in order to generate the lower mipmap levels. GenerateMips uses the largest mipmap level of the view to recursively generate the lower levels of the mip, stopping with the smallest level specified by the view. If the base resource was not created with <strong><see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/></strong> and <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GenerateMipMaps"/></strong>, this call has no effect.</p><p>All video adapters support generating mipmaps if you are using any of the following formats:</p><pre><code> <see cref="F:SharpDX.DXGI.Format.A8_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R10G10B10A2_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R11G11B10_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R16_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R16_SNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R16_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R16G16_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R16G16_SNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R16G16_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R16G16B16A16_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R16G16B16A16_SNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R16G16B16A16_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R32_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R32G32_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R32G32B32A32_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R8_SNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R8_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R8G8_SNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R8G8_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R8G8B8A8_SNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UNorm_SRgb"/>	
            </code></pre><p>Some video adapters support generating mipmaps if you are using this format:</p><pre><code> <see cref="F:SharpDX.DXGI.Format.R32G32B32_Float"/>	
            </code></pre><p>For all other unsupported formats, this method will silently fail.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GenerateMips']/*"/>	
            <msdn-id>ff476426</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::GenerateMips([In] ID3D11ShaderResourceView* pShaderResourceView)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GenerateMips</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.SetMinimumLod(SharpDX.Direct3D11.Resource,System.Single)">
            <summary>	
            <p>Sets the minimum level-of-detail (LOD) for a resource.</p>	
            </summary>	
            <param name="resourceRef"><dd>  <p>A reference to an <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong> that represents the resource.</p> </dd></param>	
            <param name="minLOD"><dd>  <p>The level-of-detail, which ranges between 0 and the maximum number of mipmap levels of the resource. For example, the maximum number of mipmap levels of a 1D texture is specified in the  <strong>MipLevels</strong> member of the  <strong><see cref="T:SharpDX.Direct3D11.Texture1DDescription"/></strong> structure.</p> </dd></param>	
            <remarks>	
            <p>To use a resource with <strong>SetResourceMinLOD</strong>, you must set the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.ResourceClamp"/></strong> flag when you create that resource.</p><p>For Direct3D 10 and Direct3D 10.1, when sampling from a texture resource in a shader, the sampler can define a minimum LOD clamp to force sampling from less detailed mip levels.  For Direct3D 11, this functionality is extended from the sampler to the entire resource. Therefore, the application can specify the highest-resolution mip level of a resource that is available for access. This restricts the set of mip levels that are required to be resident in GPU memory, thereby saving memory.</p><p>The set of mip levels resident per-resource in GPU memory can be specified by the user.</p><p>Minimum LOD affects all of the resident mip levels. Therefore, only the resident mip levels can be updated and read from.</p><p>All methods that access texture resources must adhere to minimum LOD clamps.</p><p>Empty-set accesses are handled as out-of-bounds cases.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::SetResourceMinLOD']/*"/>	
            <msdn-id>ff476482</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::SetResourceMinLOD([In] ID3D11Resource* pResource,[In] float MinLOD)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::SetResourceMinLOD</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetMinimumLod(SharpDX.Direct3D11.Resource)">
            <summary>	
            <p>Gets the minimum level-of-detail (LOD).</p>	
            </summary>	
            <param name="resourceRef"><dd>  <p>A reference to an <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong> which represents the resource.</p> </dd></param>	
            <returns><p>Returns the minimum LOD.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetResourceMinLOD']/*"/>	
            <msdn-id>ff476430</msdn-id>	
            <unmanaged>float ID3D11DeviceContext::GetResourceMinLOD([In] ID3D11Resource* pResource)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GetResourceMinLOD</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ResolveSubresource_(SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,SharpDX.DXGI.Format)">
            <summary>	
            <p>Copy a multisampled resource into a non-multisampled resource.</p>	
            </summary>	
            <param name="dstResourceRef"><dd>  <p>Destination resource. Must be a created with the <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/></strong> flag and be single-sampled. See <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong>.</p> </dd></param>	
            <param name="dstSubresource"><dd>  <p>A zero-based index, that identifies the destination subresource. Use <strong>D3D11CalcSubresource</strong> to calculate the index.</p> </dd></param>	
            <param name="srcResourceRef"><dd>  <p>Source resource. Must be multisampled.</p> </dd></param>	
            <param name="srcSubresource"><dd>  <p>&gt;The source subresource of the source resource.</p> </dd></param>	
            <param name="format"><dd>  <p>A <strong><see cref="T:SharpDX.DXGI.Format"/></strong> that indicates how the multisampled resource will be resolved to a single-sampled resource.  See remarks.</p> </dd></param>	
            <remarks>	
            <p>This API is most useful when re-using the resulting rendertarget of one render pass as an input to a second render pass.</p><p>The source and destination resources must be the same resource type and have the same dimensions. In addition, they must have compatible formats. There are three scenarios for this:</p><table> <tr><th>Scenario</th><th>Requirements</th></tr> <tr><td>Source and destination are prestructured and typed</td><td>Both the source and destination must have identical formats and that format must be specified in the Format parameter.</td></tr> <tr><td>One resource is prestructured and typed and the other is prestructured and typeless</td><td>The typed resource must have a format that is compatible with the typeless resource (i.e. the typed resource is <see cref="F:SharpDX.DXGI.Format.R32_Float"/> and the typeless resource is <see cref="F:SharpDX.DXGI.Format.R32_Typeless"/>). The format of the typed resource must be specified in the Format parameter.</td></tr> <tr><td>Source and destination are prestructured and typeless</td><td>Both the source and desintation must have the same typeless format (i.e. both must have <see cref="F:SharpDX.DXGI.Format.R32_Typeless"/>), and the Format parameter must specify a format that is compatible with the source and destination (i.e. if both are <see cref="F:SharpDX.DXGI.Format.R32_Typeless"/> then <see cref="F:SharpDX.DXGI.Format.R32_Float"/> could be specified in the Format parameter). <p>For example, given the <see cref="F:SharpDX.DXGI.Format.R16G16B16A16_Typeless"/> format:</p> <ul> <li>The source (or dest) format could be <see cref="F:SharpDX.DXGI.Format.R16G16B16A16_UNorm"/></li> <li>The dest (or source) format could be <see cref="F:SharpDX.DXGI.Format.R16G16B16A16_Float"/></li> </ul> </td></tr> </table><p>?</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ResolveSubresource']/*"/>	
            <msdn-id>ff476474</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::ResolveSubresource([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In] ID3D11Resource* pSrcResource,[In] unsigned int SrcSubresource,[In] DXGI_FORMAT Format)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::ResolveSubresource</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ExecuteCommandList(SharpDX.Direct3D11.CommandList,SharpDX.Bool)">
            <summary>	
            <p>Queues commands from a command list onto a device.</p>	
            </summary>	
            <param name="commandListRef"><dd>  <p>A reference to an <strong><see cref="T:SharpDX.Direct3D11.CommandList"/></strong> interface that encapsulates a command list.</p> </dd></param>	
            <param name="restoreContextState"><dd>  <p>A Boolean flag that determines whether the immediate context state is saved prior to and restored after the execution of a command list. Use <strong>TRUE</strong> to indicate that the runtime needs to save and restore the state. Use <strong><see cref="F:SharpDX.Result.False"/></strong> to indicate that no state shall be saved or restored, which causes the immediate context to  return to its default state after the command list executes. Applications should typically use <strong><see cref="F:SharpDX.Result.False"/></strong> unless they will restore the state to be nearly equivalent to the state that the runtime would restore if <strong>TRUE</strong> were passed. When applications use <strong><see cref="F:SharpDX.Result.False"/></strong>, they can avoid unnecessary and inefficient state transitions.</p> </dd></param>	
            <remarks>	
            <p>Use this method to play back a command list that was recorded by a deferred context on any thread.</p><p>This method performs some runtime validation related to queries. Queries that are begun in a device context cannot be manipulated indirectly by executing a command list (that is, Begin or End was invoked against the same query by the deferred context which generated the command list). If such a condition occurs, the ExecuteCommandList method does not execute the command list. However, the state of the device context is still maintained, as would be expected (<strong><see cref="M:SharpDX.Direct3D11.DeviceContext.ClearState"/></strong> is performed, unless the application indicates to preserve the device context state).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ExecuteCommandList']/*"/>	
            <msdn-id>ff476423</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::ExecuteCommandList([In] ID3D11CommandList* pCommandList,[In] BOOL RestoreContextState)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::ExecuteCommandList</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetPredication(SharpDX.Bool@)">
            <summary>	
            <p>Get the rendering predicate state.</p>	
            </summary>	
            <param name="predicateValueRef"><dd>  <p>Address of a boolean to fill with the predicate comparison value. <strong><see cref="F:SharpDX.Result.False"/></strong> upon device creation.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetPredication']/*"/>	
            <msdn-id>ff476429</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::GetPredication([Out, Optional] ID3D11Predicate** ppPredicate,[Out, Optional] BOOL* pPredicateValue)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GetPredication</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ClearState">
            <summary>	
            <p>Restore all default settings.</p>	
            </summary>	
            <remarks>	
            <p>This method resets any device context to the default settings. This sets all input/output resource slots, shaders, input layouts, predications, scissor rectangles, depth-stencil state, rasterizer state, blend state, sampler state, and viewports to <strong><c>null</c></strong>. The primitive topology is set to UNDEFINED.</p><p>For a scenario where you would like to clear a list of commands recorded so far, call <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.FinishCommandListInternal(SharpDX.Bool,SharpDX.Direct3D11.CommandList@)"/></strong> and throw away the resulting <strong><see cref="T:SharpDX.Direct3D11.CommandList"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ClearState']/*"/>	
            <msdn-id>ff476389</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::ClearState()</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::ClearState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.Flush">
            <summary>	
            <p>Sends queued-up commands in the command buffer to the graphics processing unit (GPU).</p>	
            </summary>	
            <remarks>	
            <p>Most applications don't need to call this method. If an application calls this method when not necessary, it incurs a performance penalty.  Each call to <strong>Flush</strong> incurs a significant amount of overhead.</p><p>When Microsoft Direct3D state-setting, present, or draw commands are called by an application, those commands are queued into an internal command buffer.  <strong>Flush</strong> sends those commands to the GPU for processing. Typically, the Direct3D runtime sends these commands to the GPU automatically whenever the runtime determines that  they need to be sent, such as when the command buffer is full or when an application maps a resource. <strong>Flush</strong> sends the commands manually.</p><p>We recommend that you use <strong>Flush</strong> when the CPU waits for an arbitrary amount of time (such as when  you call the <strong>Sleep</strong> function).</p><p>Because <strong>Flush</strong> operates asynchronously,  it can return either before or after the GPU finishes executing the queued graphics commands. However, the graphics commands eventually always complete. You can call the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateQuery(SharpDX.Direct3D11.QueryDescription,SharpDX.Direct3D11.Query)"/></strong> method with the <strong><see cref="F:SharpDX.Direct3D11.QueryType.Event"/></strong> value to create an event query; you can then use that event query in a call to the <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> method to determine when the GPU is finished processing the graphics commands.	
            </p><p>Microsoft Direct3D?11 defers the destruction of objects. Therefore, an application can't rely upon objects immediately being destroyed. By calling <strong>Flush</strong>, you destroy any  objects whose destruction was deferred.  If an application requires synchronous destruction of an object, we recommend that the application release all its references, call <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.ClearState"/></strong>, and then call <strong>Flush</strong>.</p>Deferred Destruction Issues with Flip Presentation Swap Chains<p>Direct3D?11 defers the destruction of objects like views and resources until it can efficiently destroy them. This deferred destruction can cause problems with flip presentation model swap chains. Flip presentation model swap chains have the <strong><see cref="F:SharpDX.DXGI.SwapEffect.FlipSequential"/></strong> flag set. When you create a flip presentation model swap chain, you can associate only one swap chain at a time with an <strong><see cref="T:System.IntPtr"/></strong>, <strong>IWindow</strong>, or composition surface. If an application attempts to destroy a flip presentation model swap chain and replace it with another swap chain, the original swap chain is not destroyed when the application immediately frees all of the original swap chain's references.</p><p>Most applications typically use the <strong><see cref="M:SharpDX.DXGI.SwapChain.ResizeBuffers(System.Int32,System.Int32,System.Int32,SharpDX.DXGI.Format,SharpDX.DXGI.SwapChainFlags)"/></strong> method for the majority of scenarios where they replace new swap chain buffers for old swap chain buffers. However, if an application must actually destroy an old swap chain and create a new swap chain, the application must force the destruction of all objects that the application freed. To force the destruction, call <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.ClearState"/></strong> (or otherwise ensure no views are bound to pipeline state), and then call <strong>Flush</strong> on the immediate context. You must force destruction before you call <strong><see cref="M:SharpDX.DXGI.Factory2.CreateSwapChainForHwnd(SharpDX.ComObject,System.IntPtr,SharpDX.DXGI.SwapChainDescription1@,System.Nullable{SharpDX.DXGI.SwapChainFullScreenDescription},SharpDX.DXGI.Output)"/></strong>, <strong>IDXGIFactory2::CreateSwapChainForImmersiveWindow</strong>, or <strong>IDXGIFactory2::CreateSwapChainForCompositionSurface</strong> again to create a new swap chain.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::Flush']/*"/>	
            <msdn-id>ff476425</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::Flush()</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::Flush</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetTypeInfo">
            <summary>	
            <p>Gets the type of device context.</p>	
            </summary>	
            <returns><p>A member of <strong><see cref="T:SharpDX.Direct3D11.DeviceContextType"/></strong> that indicates the type of device context.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetType']/*"/>	
            <msdn-id>ff476431</msdn-id>	
            <unmanaged>D3D11_DEVICE_CONTEXT_TYPE ID3D11DeviceContext::GetType()</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GetType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetContextFlags">
            <summary>	
            <p>Gets the initialization flags associated with the current deferred context.</p>	
            </summary>	
            <returns>No documentation.</returns>	
            <remarks>	
            <p>The GetContextFlags method gets the flags that were supplied to the <em>ContextFlags</em> parameter of <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDeferredContext(System.Int32,SharpDX.Direct3D11.DeviceContext)"/></strong>; however, the context flag is reserved for future use.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetContextFlags']/*"/>	
            <msdn-id>ff476427</msdn-id>	
            <unmanaged>unsigned int ID3D11DeviceContext::GetContextFlags()</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GetContextFlags</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.FinishCommandListInternal(SharpDX.Bool,SharpDX.Direct3D11.CommandList@)">
            <summary>	
            <p>Create a command list and record graphics commands into it.</p>	
            </summary>	
            <param name="restoreDeferredContextState"><dd>  <p>A Boolean flag that determines whether the runtime saves deferred context state before it executes  <strong>FinishCommandList</strong> and restores it afterwards. Use <strong>TRUE</strong> to indicate that the runtime needs to save and restore the state. Use <strong><see cref="F:SharpDX.Result.False"/></strong> to indicate that the runtime will not save or restore any state. In this case, the deferred context will  return to its default state after the call to  <strong>FinishCommandList</strong> completes. For information about default state, see <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.ClearState"/></strong>. Typically, use <strong><see cref="F:SharpDX.Result.False"/></strong> unless you restore the state to be nearly equivalent to the state that the runtime would restore if you passed <strong>TRUE</strong>. When you use <strong><see cref="F:SharpDX.Result.False"/></strong>, you can avoid unnecessary and inefficient state transitions.</p> <p><strong>Note</strong>??This parameter does not affect the command list that the current call to <strong>FinishCommandList</strong> returns. However, this parameter affects the command list of the next call to <strong>FinishCommandList</strong> on the same deferred context.</p> </dd></param>	
            <param name="commandListOut"><dd>  <p>Upon completion of the method, the passed reference to an <strong><see cref="T:SharpDX.Direct3D11.CommandList"/></strong> interface reference is initialized with the recorded command list information.</p> </dd></param>	
            <returns><p>Returns <see cref="F:SharpDX.Result.Ok"/> if successful; otherwise, returns one of the following:</p><ul> <li>Returns <see cref="F:SharpDX.DXGI.ResultCode.DeviceRemoved"/> if the video card has been physically removed from the system, or a driver upgrade for the video card has occurred. If this error occurs, you should destroy and recreate the device.</li> <li>Returns <see cref="F:SharpDX.DXGI.ResultCode.InvalidCall"/> if <strong>FinishCommandList</strong> cannot be called from the current context. See remarks.</li> <li>Returns E_OUTOFMEMORY if the application has exhausted available memory.</li> </ul></returns>	
            <remarks>	
            <p>Create a command list from a deferred context and record commands into it by calling <strong>FinishCommandList</strong>. Play back a command list with an immediate context by calling <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.ExecuteCommandList(SharpDX.Direct3D11.CommandList,SharpDX.Bool)"/></strong>.</p><p>Immediate context state is cleared before and after a command list is executed. A command list has no concept of inheritance. Each call to <strong>FinishCommandList</strong> will record only the state set since any previous call to  <strong>FinishCommandList</strong>.</p><p>For example, the state of a device context is its render state or pipeline state. To retrieve device context state, an application can call  <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> or  <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetPredication(SharpDX.Bool@)"/></strong>.</p><p>For more information about how to use <strong>FinishCommandList</strong>, see How to: Record a Command List.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::FinishCommandList']/*"/>	
            <msdn-id>ff476424</msdn-id>	
            <unmanaged>HRESULT ID3D11DeviceContext::FinishCommandList([In] BOOL RestoreDeferredContextState,[Out, Optional] ID3D11CommandList** ppCommandList)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::FinishCommandList</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.VertexShader">
            <summary>Inner interface giving access to VertexShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.PixelShader">
            <summary>Inner interface giving access to PixelShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.InputAssembler">
            <summary>Inner interface giving access to InputAssemblerStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.GeometryShader">
            <summary>Inner interface giving access to GeometryShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.OutputMerger">
            <summary>Inner interface giving access to OutputMergerStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.StreamOutput">
            <summary>Inner interface giving access to StreamOutputStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.Rasterizer">
            <summary>Inner interface giving access to RasterizerStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.HullShader">
            <summary>Inner interface giving access to HullShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.DomainShader">
            <summary>Inner interface giving access to DomainShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.ComputeShader">
            <summary>Inner interface giving access to ComputeShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.TypeInfo">
            <summary>	
            <p>Gets the type of device context.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetType']/*"/>	
            <msdn-id>ff476431</msdn-id>	
            <unmanaged>GetType</unmanaged>	
            <unmanaged-short>GetType</unmanaged-short>	
            <unmanaged>D3D11_DEVICE_CONTEXT_TYPE ID3D11DeviceContext::GetType()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.ContextFlags">
            <summary>	
            <p>Gets the initialization flags associated with the current deferred context.</p>	
            </summary>	
            <remarks>	
            <p>The GetContextFlags method gets the flags that were supplied to the <em>ContextFlags</em> parameter of <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDeferredContext(System.Int32,SharpDX.Direct3D11.DeviceContext)"/></strong>; however, the context flag is reserved for future use.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetContextFlags']/*"/>	
            <msdn-id>ff476427</msdn-id>	
            <unmanaged>GetContextFlags</unmanaged>	
            <unmanaged-short>GetContextFlags</unmanaged-short>	
            <unmanaged>unsigned int ID3D11DeviceContext::GetContextFlags()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.#ctor(SharpDX.Direct3D11.Device1)">
            <summary>
            Initializes a new deferred context instance of <see cref="T:SharpDX.Direct3D11.DeviceContext1"/> class.
            </summary>
            <param name="device"></param>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DeviceContext1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.DeviceContext1">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.DeviceContext1"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.CopySubresourceRegion1(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.Int32)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Copies a region from a source resource to a destination resource.</p>	
            </summary>	
            <param name="dstResourceRef"><dd>  <p>A reference to the destination resource.</p> </dd></param>	
            <param name="dstSubresource"><dd>  <p>Destination subresource index.</p> </dd></param>	
            <param name="dstX"><dd>  <p>The x-coordinate of the upper-left corner of the destination region.</p> </dd></param>	
            <param name="dstY"><dd>  <p>The y-coordinate of the upper-left corner of the destination region. For a 1D subresource, this must be zero.</p> </dd></param>	
            <param name="dstZ"><dd>  <p>The z-coordinate of the upper-left corner of the destination region. For a 1D or 2D subresource, this must be zero.</p> </dd></param>	
            <param name="srcResourceRef"><dd>  <p>A reference to the source resource.</p> </dd></param>	
            <param name="srcSubresource"><dd>  <p>Source subresource index.</p> </dd></param>	
            <param name="srcBoxRef"><dd>  <p>A reference to a 3D box that defines the source subresources that can be copied. If <strong><c>null</c></strong>, the entire source subresource is copied. The box must fit within the source resource.</p> </dd></param>	
            <param name="copyFlags"><dd>  <p>A <strong><see cref="T:SharpDX.Direct3D11.CopyFlags"/></strong>-typed value that specifies how to perform the copy operation. If you specify zero for no copy option, <strong>CopySubresourceRegion1</strong> behaves like <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})"/></strong>. For existing display drivers that can't process these flags, the runtime doesn't use them. </p> </dd></param>	
            <remarks>	
            <p>The source and destination resources can be identical, and the source and destination regions can overlap each other.  For existing display drivers that don?t support overlapping, the runtime drops the call (that is, the runtime doesn't call the corresponding device driver interface (DDI)).	
            This overlapping support enables additional scroll functionality in a call to <strong><see cref="M:SharpDX.DXGI.SwapChain.Present(System.Int32,SharpDX.DXGI.PresentFlags)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::CopySubresourceRegion1']/*"/>	
            <msdn-id>hh404604</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::CopySubresourceRegion1([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In] unsigned int DstX,[In] unsigned int DstY,[In] unsigned int DstZ,[In] ID3D11Resource* pSrcResource,[In] unsigned int SrcSubresource,[In, Optional] const D3D11_BOX* pSrcBox,[In] unsigned int CopyFlags)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::CopySubresourceRegion1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.UpdateSubresource1(SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>The CPU copies data from memory to a subresource created in non-mappable memory.</p>	
            </summary>	
            <param name="dstResourceRef"><dd>  <p>A reference to the destination resource.</p> </dd></param>	
            <param name="dstSubresource"><dd>  <p>A zero-based index that identifies the destination subresource. See <strong>D3D11CalcSubresource</strong> for more details.</p> </dd></param>	
            <param name="dstBoxRef"><dd>  <p>A reference to a box that defines the portion of the destination subresource to copy the resource data into. Coordinates are in bytes for buffers and in texels for textures. If <strong><c>null</c></strong>, the data is written to the destination subresource with no offset. The dimensions of the source must fit the destination.</p> </dd></param>	
            <param name="srcDataRef"><dd>  <p>A reference to the source data in memory.</p> </dd></param>	
            <param name="srcRowPitch"><dd>  <p>The size of one row of the source data.</p> </dd></param>	
            <param name="srcDepthPitch"><dd>  <p>The size of one depth slice of source data.</p> </dd></param>	
            <param name="copyFlags"><dd>  <p>A <strong><see cref="T:SharpDX.Direct3D11.CopyFlags"/></strong>-typed value that specifies how to perform the update operation. If you specify zero for no update option, <strong>UpdateSubresource1</strong> behaves like <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32)"/></strong>. For existing display drivers that can't process these flags, the runtime doesn't use them.</p> </dd></param>	
            <remarks>	
            <p>If you call <strong>UpdateSubresource1</strong> to update a constant buffer, pass any region, and the driver has not been implemented to Windows?8 Consumer Preview, the runtime drops the call (except feature level 9.1, 9.2, and 9.3 where the runtime emulates support).  The runtime also drops the call if you update a constant buffer with a partial region whose extent is not aligned to 16-byte granularity (16 bytes being a full constant). When the runtime drops the call, the runtime doesn't call the corresponding device driver interface (DDI).</p><p>When you record a call to <strong>UpdateSubresource</strong> with an offset <em>pDstBox</em> in a software command list, the offset in <em>pDstBox</em> is incorrectly applied to <em>pSrcData</em> when you play back the command list.  The new-for-Windows?8<strong>UpdateSubresource1</strong> fixes this issue. In a call to <strong>UpdateSubresource1</strong>, <em>pDstBox</em> does not affect <em>pSrcData</em>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::UpdateSubresource1']/*"/>	
            <msdn-id>hh446790</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::UpdateSubresource1([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In, Optional] const D3D11_BOX* pDstBox,[In] const void* pSrcData,[In] unsigned int SrcRowPitch,[In] unsigned int SrcDepthPitch,[In] unsigned int CopyFlags)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::UpdateSubresource1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.DiscardResource(SharpDX.Direct3D11.Resource)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Discards a resource from the device context.</p>	
            </summary>	
            <param name="resourceRef"><dd>  <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong> interface for the resource to discard. The resource must have been created with usage <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/></strong> or <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/></strong>, otherwise the runtime drops the call to <strong>DiscardResource</strong>; if the debug layer is enabled, the runtime returns an error message.</p> </dd></param>	
            <remarks>	
            <p><strong>DiscardResource</strong> informs the graphics processing unit (GPU) that the existing content in the resource that <em>pResource</em> points to is no longer needed.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::DiscardResource']/*"/>	
            <msdn-id>hh404613</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::DiscardResource([In] ID3D11Resource* pResource)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::DiscardResource</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.DiscardView(SharpDX.Direct3D11.ResourceView)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Discards a resource view from the device context.</p>	
            </summary>	
            <param name="resourceViewRef"><dd>  <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.ResourceView"/></strong> interface for the resource view to discard. The resource that underlies the view must have been created with usage <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/></strong> or <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/></strong>, otherwise the runtime drops the call to <strong>DiscardView</strong>; if the debug layer is enabled, the runtime returns an error message.</p> </dd></param>	
            <remarks>	
            <p><strong>DiscardView</strong> informs the graphics processing unit (GPU) that the existing content in the resource view that <em>pResourceView</em> points to is no longer needed.  The view can be an SRV, RTV, UAV, or DSV.  <strong>DiscardView</strong> is a variation on the <strong>DiscardResource</strong> method.  <strong>DiscardView</strong> allows you to discard a subset of a resource that is in a view (such as a single miplevel).  More importantly, <strong>DiscardView</strong> provides a convenience because often views are what are being bound and unbound at the pipeline.  Some pipeline bindings do not have views, such as stream output.  In that situation, <strong>DiscardResource</strong> can do the job for any resource.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::DiscardView']/*"/>	
            <msdn-id>hh404616</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::DiscardView([In] ID3D11View* pResourceView)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::DiscardView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.VSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the constant buffers that the vertex shader pipeline stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd>  <p>Array of constant buffers being given to the device.</p> </dd></param>	
            <param name="firstConstantRef"><dd>  <p>A reference to an array that holds the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</p> </dd></param>	
            <param name="numConstantsRef"><dd>  <p>A reference to an array that holds the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array.</p> </dd></param>	
            <remarks>	
            <p>The runtime drops the call to <strong>VSSetConstantBuffers1</strong> if the number of constants to which <em>pNumConstants</em> points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the <em>pFirstConstant</em> and <em>pFirstConstant</em> + <em>pNumConstants</em> arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of <em>pFirstConstant</em>, value in an element of <em>pFirstConstant</em> + value in an element of <em>pNumConstants</em>]. The runtime also drops the call to <strong>VSSetConstantBuffers1</strong> on existing drivers that do not support this offsetting.</p><p>The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.</p><p>From the shader?s point of view, element [0] in the constant buffers array is the constant at <em>pFirstConstant</em>.</p><p>Out of bounds access to the constant buffers from the shader to the range that is defined by <em>pFirstConstant</em> and <em>pNumConstants</em> returns 0. </p><p>If <em>pFirstConstant</em> and <em>pNumConstants</em> arrays are <strong><c>null</c></strong>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the <strong>VSSetConstantBuffers</strong> method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.</p><p>If either <em>pFirstConstant</em> or <em>pNumConstants</em> is <strong><c>null</c></strong>, the other parameter must also be <strong><c>null</c></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::VSSetConstantBuffers1']/*"/>	
            <msdn-id>hh446795</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::VSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::VSSetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.VSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the constant buffers that the vertex shader pipeline stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd>  <p>Array of constant buffers being given to the device.</p> </dd></param>	
            <param name="firstConstantRef"><dd>  <p>A reference to an array that holds the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</p> </dd></param>	
            <param name="numConstantsRef"><dd>  <p>A reference to an array that holds the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array.</p> </dd></param>	
            <remarks>	
            <p>The runtime drops the call to <strong>VSSetConstantBuffers1</strong> if the number of constants to which <em>pNumConstants</em> points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the <em>pFirstConstant</em> and <em>pFirstConstant</em> + <em>pNumConstants</em> arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of <em>pFirstConstant</em>, value in an element of <em>pFirstConstant</em> + value in an element of <em>pNumConstants</em>]. The runtime also drops the call to <strong>VSSetConstantBuffers1</strong> on existing drivers that do not support this offsetting.</p><p>The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.</p><p>From the shader?s point of view, element [0] in the constant buffers array is the constant at <em>pFirstConstant</em>.</p><p>Out of bounds access to the constant buffers from the shader to the range that is defined by <em>pFirstConstant</em> and <em>pNumConstants</em> returns 0. </p><p>If <em>pFirstConstant</em> and <em>pNumConstants</em> arrays are <strong><c>null</c></strong>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the <strong>VSSetConstantBuffers</strong> method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.</p><p>If either <em>pFirstConstant</em> or <em>pNumConstants</em> is <strong><c>null</c></strong>, the other parameter must also be <strong><c>null</c></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::VSSetConstantBuffers1']/*"/>	
            <msdn-id>hh446795</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::VSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::VSSetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.HSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the constant buffers that the hull-shader stage of the pipeline uses.</p>	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numBuffers">No documentation.</param>	
            <param name="constantBuffersOut">No documentation.</param>	
            <param name="firstConstantRef">No documentation.</param>	
            <param name="numConstantsRef">No documentation.</param>	
            <remarks>	
            <p>The runtime drops the call to <strong>HSSetConstantBuffers1</strong> if the numbers of constants to which <em>pNumConstants</em> points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the <em>pFirstConstant</em> and <em>pFirstConstant</em> + <em>pNumConstants</em> arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of <em>pFirstConstant</em>, value in an element of <em>pFirstConstant</em> + value in an element of <em>pNumConstants</em>]. The runtime also drops the call to <strong>HSSetConstantBuffers1</strong> on existing drivers that do not support this offsetting.</p><p>The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.</p><p>From the shader?s point of view, element [0] in the constant buffers array is the constant at <em>pFirstConstant</em>.</p><p>Out of bounds access to the constant buffers from the shader to the range that is defined by <em>pFirstConstant</em> and <em>pNumConstants</em> returns 0. </p><p>If the <em>pFirstConstant</em> and <em>pNumConstants</em> arrays are <strong><c>null</c></strong>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the <strong>HSSetConstantBuffers</strong> method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.</p><p>If either <em>pFirstConstant</em> or <em>pNumConstants</em> is <strong><c>null</c></strong>, the other parameter must also be <strong><c>null</c></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::HSSetConstantBuffers1']/*"/>	
            <msdn-id>hh404642</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::HSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::HSSetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.HSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the constant buffers that the hull-shader stage of the pipeline uses.</p>	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numBuffers">No documentation.</param>	
            <param name="constantBuffersOut">No documentation.</param>	
            <param name="firstConstantRef">No documentation.</param>	
            <param name="numConstantsRef">No documentation.</param>	
            <remarks>	
            <p>The runtime drops the call to <strong>HSSetConstantBuffers1</strong> if the numbers of constants to which <em>pNumConstants</em> points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the <em>pFirstConstant</em> and <em>pFirstConstant</em> + <em>pNumConstants</em> arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of <em>pFirstConstant</em>, value in an element of <em>pFirstConstant</em> + value in an element of <em>pNumConstants</em>]. The runtime also drops the call to <strong>HSSetConstantBuffers1</strong> on existing drivers that do not support this offsetting.</p><p>The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.</p><p>From the shader?s point of view, element [0] in the constant buffers array is the constant at <em>pFirstConstant</em>.</p><p>Out of bounds access to the constant buffers from the shader to the range that is defined by <em>pFirstConstant</em> and <em>pNumConstants</em> returns 0. </p><p>If the <em>pFirstConstant</em> and <em>pNumConstants</em> arrays are <strong><c>null</c></strong>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the <strong>HSSetConstantBuffers</strong> method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.</p><p>If either <em>pFirstConstant</em> or <em>pNumConstants</em> is <strong><c>null</c></strong>, the other parameter must also be <strong><c>null</c></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::HSSetConstantBuffers1']/*"/>	
            <msdn-id>hh404642</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::HSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::HSSetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.DSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the constant buffers that the domain-shader stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd> <p>Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd> <p>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd> <p>Array of constant buffers being given to the device.</p> </dd></param>	
            <param name="firstConstantRef"><dd> <p>A reference to an array that holds the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</p> </dd></param>	
            <param name="numConstantsRef"><dd> <p>A reference to an array that holds the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array.</p> </dd></param>	
            <remarks>	
            <p>The runtime drops the call to <strong>DSSetConstantBuffers1</strong> if the number of constants to which <em>pNumConstants</em> points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the <em>pFirstConstant</em> and <em>pFirstConstant</em> + <em>pNumConstants</em> arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of <em>pFirstConstant</em>, value in an element of <em>pFirstConstant</em> + value in an element of <em>pNumConstants</em>]. The runtime also drops the call to <strong>DSSetConstantBuffers1</strong> on existing drivers that do not support this offsetting.</p><p>The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.</p><p>From the shader?s point of view, element [0] in the constant buffers array is the constant at <em>pFirstConstant</em>.</p><p>Out of bounds access to the constant buffers from the shader to the range that is defined by <em>pFirstConstant</em> and <em>pNumConstants</em> returns 0. </p><p>If <em>pFirstConstant</em> and <em>pNumConstants</em> arrays are <strong><c>null</c></strong>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the <strong>DSSetConstantBuffers</strong> method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.</p><p>If either <em>pFirstConstant</em> or <em>pNumConstants</em> is <strong><c>null</c></strong>, the other parameter must also be <strong><c>null</c></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::DSSetConstantBuffers1']/*"/>	
            <msdn-id>hh404632</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::DSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::DSSetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.DSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the constant buffers that the domain-shader stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd> <p>Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd> <p>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd> <p>Array of constant buffers being given to the device.</p> </dd></param>	
            <param name="firstConstantRef"><dd> <p>A reference to an array that holds the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</p> </dd></param>	
            <param name="numConstantsRef"><dd> <p>A reference to an array that holds the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array.</p> </dd></param>	
            <remarks>	
            <p>The runtime drops the call to <strong>DSSetConstantBuffers1</strong> if the number of constants to which <em>pNumConstants</em> points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the <em>pFirstConstant</em> and <em>pFirstConstant</em> + <em>pNumConstants</em> arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of <em>pFirstConstant</em>, value in an element of <em>pFirstConstant</em> + value in an element of <em>pNumConstants</em>]. The runtime also drops the call to <strong>DSSetConstantBuffers1</strong> on existing drivers that do not support this offsetting.</p><p>The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.</p><p>From the shader?s point of view, element [0] in the constant buffers array is the constant at <em>pFirstConstant</em>.</p><p>Out of bounds access to the constant buffers from the shader to the range that is defined by <em>pFirstConstant</em> and <em>pNumConstants</em> returns 0. </p><p>If <em>pFirstConstant</em> and <em>pNumConstants</em> arrays are <strong><c>null</c></strong>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the <strong>DSSetConstantBuffers</strong> method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.</p><p>If either <em>pFirstConstant</em> or <em>pNumConstants</em> is <strong><c>null</c></strong>, the other parameter must also be <strong><c>null</c></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::DSSetConstantBuffers1']/*"/>	
            <msdn-id>hh404632</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::DSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::DSSetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.GSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the constant buffers that the geometry shader pipeline stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd> <p>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd> <p>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd> <p>Array of constant buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) being given to the device.</p> </dd></param>	
            <param name="firstConstantRef"><dd> <p>A reference to an array that holds the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</p> </dd></param>	
            <param name="numConstantsRef"><dd> <p>A reference to an array that holds the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array.</p> </dd></param>	
            <remarks>	
            <p>The runtime drops the call to <strong>GSSetConstantBuffers1</strong> if the numbers of constants to which <em>pNumConstants</em> points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the <em>pFirstConstant</em> and <em>pFirstConstant</em> + <em>pNumConstants</em> arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of <em>pFirstConstant</em>, value in an element of <em>pFirstConstant</em> + value in an element of <em>pNumConstants</em>]. The runtime also drops the call to <strong>GSSetConstantBuffers1</strong> on existing drivers that do not support this offsetting.</p><p>The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.</p><p>From the shader?s point of view, element [0] in the constant buffers array is the constant at <em>pFirstConstant</em>.</p><p>Out of bounds access to the constant buffers from the shader to the range that is defined by <em>pFirstConstant</em> and <em>pNumConstants</em> returns 0. </p><p>If <em>pFirstConstant</em> and <em>pNumConstants</em> arrays are <strong><c>null</c></strong>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the <strong>GSSetConstantBuffers</strong> method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.</p><p>If either <em>pFirstConstant</em> or <em>pNumConstants</em> is <strong><c>null</c></strong>, the other parameter must also be <strong><c>null</c></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::GSSetConstantBuffers1']/*"/>	
            <msdn-id>hh404638</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::GSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::GSSetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.GSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the constant buffers that the geometry shader pipeline stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd> <p>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd> <p>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd> <p>Array of constant buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) being given to the device.</p> </dd></param>	
            <param name="firstConstantRef"><dd> <p>A reference to an array that holds the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</p> </dd></param>	
            <param name="numConstantsRef"><dd> <p>A reference to an array that holds the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array.</p> </dd></param>	
            <remarks>	
            <p>The runtime drops the call to <strong>GSSetConstantBuffers1</strong> if the numbers of constants to which <em>pNumConstants</em> points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the <em>pFirstConstant</em> and <em>pFirstConstant</em> + <em>pNumConstants</em> arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of <em>pFirstConstant</em>, value in an element of <em>pFirstConstant</em> + value in an element of <em>pNumConstants</em>]. The runtime also drops the call to <strong>GSSetConstantBuffers1</strong> on existing drivers that do not support this offsetting.</p><p>The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.</p><p>From the shader?s point of view, element [0] in the constant buffers array is the constant at <em>pFirstConstant</em>.</p><p>Out of bounds access to the constant buffers from the shader to the range that is defined by <em>pFirstConstant</em> and <em>pNumConstants</em> returns 0. </p><p>If <em>pFirstConstant</em> and <em>pNumConstants</em> arrays are <strong><c>null</c></strong>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the <strong>GSSetConstantBuffers</strong> method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.</p><p>If either <em>pFirstConstant</em> or <em>pNumConstants</em> is <strong><c>null</c></strong>, the other parameter must also be <strong><c>null</c></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::GSSetConstantBuffers1']/*"/>	
            <msdn-id>hh404638</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::GSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::GSSetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.PSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the constant buffers that the pixel shader pipeline stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd> <p>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd> <p>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd> <p>Array of constant buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) being given to the device.</p> </dd></param>	
            <param name="firstConstantRef"><dd> <p>A reference to an array that holds the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</p> </dd></param>	
            <param name="numConstantsRef"><dd> <p>A reference to an array that holds the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array.</p> </dd></param>	
            <remarks>	
            <p>The runtime drops the call to <strong>PSSetConstantBuffers1</strong> if the numbers of constants to which <em>pNumConstants</em> points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the <em>pFirstConstant</em> and <em>pFirstConstant</em> + <em>pNumConstants</em> arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of <em>pFirstConstant</em>, value in an element of <em>pFirstConstant</em> + value in an element of <em>pNumConstants</em>]. The runtime also drops the call to <strong>PSSetConstantBuffers1</strong> on existing drivers that do not support this offsetting.</p><p>The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.</p><p>From the shader?s point of view, element [0] in the constant buffers array is the constant at <em>pFirstConstant</em>.</p><p>Out of bounds access to the constant buffers from the shader to the range that is defined by <em>pFirstConstant</em> and <em>pNumConstants</em> returns 0. </p><p>If <em>pFirstConstant</em> and <em>pNumConstants</em> arrays are <strong><c>null</c></strong>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the <strong>PSSetConstantBuffers</strong> method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.</p><p>If either <em>pFirstConstant</em> or <em>pNumConstants</em> is <strong><c>null</c></strong>, the other parameter must also be <strong><c>null</c></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::PSSetConstantBuffers1']/*"/>	
            <msdn-id>hh404649</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::PSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::PSSetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.PSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the constant buffers that the pixel shader pipeline stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd> <p>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd> <p>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd> <p>Array of constant buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) being given to the device.</p> </dd></param>	
            <param name="firstConstantRef"><dd> <p>A reference to an array that holds the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</p> </dd></param>	
            <param name="numConstantsRef"><dd> <p>A reference to an array that holds the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array.</p> </dd></param>	
            <remarks>	
            <p>The runtime drops the call to <strong>PSSetConstantBuffers1</strong> if the numbers of constants to which <em>pNumConstants</em> points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the <em>pFirstConstant</em> and <em>pFirstConstant</em> + <em>pNumConstants</em> arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of <em>pFirstConstant</em>, value in an element of <em>pFirstConstant</em> + value in an element of <em>pNumConstants</em>]. The runtime also drops the call to <strong>PSSetConstantBuffers1</strong> on existing drivers that do not support this offsetting.</p><p>The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.</p><p>From the shader?s point of view, element [0] in the constant buffers array is the constant at <em>pFirstConstant</em>.</p><p>Out of bounds access to the constant buffers from the shader to the range that is defined by <em>pFirstConstant</em> and <em>pNumConstants</em> returns 0. </p><p>If <em>pFirstConstant</em> and <em>pNumConstants</em> arrays are <strong><c>null</c></strong>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the <strong>PSSetConstantBuffers</strong> method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.</p><p>If either <em>pFirstConstant</em> or <em>pNumConstants</em> is <strong><c>null</c></strong>, the other parameter must also be <strong><c>null</c></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::PSSetConstantBuffers1']/*"/>	
            <msdn-id>hh404649</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::PSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::PSSetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.CSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the constant buffers that the compute-shader stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd> <p>Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd> <p>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd> <p>Array of constant buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) being given to the device.</p> </dd></param>	
            <param name="firstConstantRef"><dd> <p>A reference to an array that holds the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</p> </dd></param>	
            <param name="numConstantsRef"><dd> <p>A reference to an array that holds the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array.</p> </dd></param>	
            <remarks>	
            <p>The runtime drops the call to <strong>CSSetConstantBuffers1</strong> if the number of constants to which <em>pNumConstants</em> points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the <em>pFirstConstant</em> and <em>pFirstConstant</em> + <em>pNumConstants</em> arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of <em>pFirstConstant</em>, value in an element of <em>pFirstConstant</em> + value in an element of <em>pNumConstants</em>]. The runtime also drops the call to <strong>CSSetConstantBuffers1</strong> on existing drivers that do not support this offsetting.</p><p>The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.</p><p>From the shader?s point of view, element [0] in the constant buffers array is the constant at <em>pFirstConstant</em>.</p><p>Out of bounds access to the constant buffers from the shader to the range that is defined by <em>pFirstConstant</em> and <em>pNumConstants</em> returns 0. </p><p>If <em>pFirstConstant</em> and <em>pNumConstants</em> arrays are <strong><c>null</c></strong>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the <strong>CSSetConstantBuffers</strong> method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.</p><p>If either <em>pFirstConstant</em> or <em>pNumConstants</em> is <strong><c>null</c></strong>, the other parameter must also be <strong><c>null</c></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::CSSetConstantBuffers1']/*"/>	
            <msdn-id>hh404610</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::CSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::CSSetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.CSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the constant buffers that the compute-shader stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd> <p>Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd> <p>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd> <p>Array of constant buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) being given to the device.</p> </dd></param>	
            <param name="firstConstantRef"><dd> <p>A reference to an array that holds the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</p> </dd></param>	
            <param name="numConstantsRef"><dd> <p>A reference to an array that holds the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array.</p> </dd></param>	
            <remarks>	
            <p>The runtime drops the call to <strong>CSSetConstantBuffers1</strong> if the number of constants to which <em>pNumConstants</em> points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the <em>pFirstConstant</em> and <em>pFirstConstant</em> + <em>pNumConstants</em> arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of <em>pFirstConstant</em>, value in an element of <em>pFirstConstant</em> + value in an element of <em>pNumConstants</em>]. The runtime also drops the call to <strong>CSSetConstantBuffers1</strong> on existing drivers that do not support this offsetting.</p><p>The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.</p><p>From the shader?s point of view, element [0] in the constant buffers array is the constant at <em>pFirstConstant</em>.</p><p>Out of bounds access to the constant buffers from the shader to the range that is defined by <em>pFirstConstant</em> and <em>pNumConstants</em> returns 0. </p><p>If <em>pFirstConstant</em> and <em>pNumConstants</em> arrays are <strong><c>null</c></strong>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the <strong>CSSetConstantBuffers</strong> method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.</p><p>If either <em>pFirstConstant</em> or <em>pNumConstants</em> is <strong><c>null</c></strong>, the other parameter must also be <strong><c>null</c></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::CSSetConstantBuffers1']/*"/>	
            <msdn-id>hh404610</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::CSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::CSSetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.VSGetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the constant buffers that the vertex shader pipeline stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd> <p>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd> <p>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd> <p>Array of constant buffer interface references to be returned by the method.</p> </dd></param>	
            <param name="firstConstantRef"><dd> <p>A reference to an array that receives the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets <em>pFirstConstant</em> to <strong><c>null</c></strong> if the buffers do not have offsets.</p> </dd></param>	
            <param name="numConstantsRef"><dd> <p>A reference to an array that receives the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array. The runtime sets <em>pNumConstants</em> to <strong><c>null</c></strong> if it doesn't specify the numbers of constants in each buffer.</p> </dd></param>	
            <remarks>	
            <p>If no buffer is bound at a slot, <em>pFirstConstant</em> and <em>pNumConstants</em> are <strong><c>null</c></strong> for that slot.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::VSGetConstantBuffers1']/*"/>	
            <msdn-id>hh446793</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::VSGetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers,[Out, Buffer, Optional] unsigned int* pFirstConstant,[Out, Buffer, Optional] unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::VSGetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.HSGetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the constant buffers that the hull-shader stage uses.</p>	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numBuffers">No documentation.</param>	
            <param name="constantBuffersOut">No documentation.</param>	
            <param name="firstConstantRef">No documentation.</param>	
            <param name="numConstantsRef">No documentation.</param>	
            <remarks>	
            <p>If no buffer is bound at a slot, <em>pFirstConstant</em> and <em>pNumConstants</em> are <strong><c>null</c></strong> for that slot.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::HSGetConstantBuffers1']/*"/>	
            <msdn-id>hh404641</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::HSGetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers,[Out, Buffer, Optional] unsigned int* pFirstConstant,[Out, Buffer, Optional] unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::HSGetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.DSGetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the constant buffers that the domain-shader stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd> <p>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd> <p>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd> <p>Array of constant buffer interface references to be returned by the method.</p> </dd></param>	
            <param name="firstConstantRef"><dd> <p>A reference to an array that receives the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets <em>pFirstConstant</em> to <strong><c>null</c></strong> if the buffers do not have offsets.</p> </dd></param>	
            <param name="numConstantsRef"><dd> <p>A reference to an array that receives the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array. The runtime sets <em>pNumConstants</em> to <strong><c>null</c></strong> if it doesn't specify the numbers of constants in each buffer.</p> </dd></param>	
            <remarks>	
            <p>If no buffer is bound at a slot, <em>pFirstConstant</em> and <em>pNumConstants</em> are <strong><c>null</c></strong> for that slot.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::DSGetConstantBuffers1']/*"/>	
            <msdn-id>hh404630</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::DSGetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers,[Out, Buffer, Optional] unsigned int* pFirstConstant,[Out, Buffer, Optional] unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::DSGetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.GSGetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the constant buffers that the geometry shader pipeline stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd> <p>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd> <p>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd> <p>Array of constant buffer interface references to be returned by the method.</p> </dd></param>	
            <param name="firstConstantRef"><dd> <p>A reference to an array that receives the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets <em>pFirstConstant</em> to <strong><c>null</c></strong> if the buffers do not have offsets.</p> </dd></param>	
            <param name="numConstantsRef"><dd> <p>A reference to an array that receives the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array. The runtime sets <em>pNumConstants</em> to <strong><c>null</c></strong> if it doesn't specify the numbers of constants in each buffer.</p> </dd></param>	
            <remarks>	
            <p>If no buffer is bound at a slot, <em>pFirstConstant</em> and <em>pNumConstants</em> are <strong><c>null</c></strong> for that slot.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::GSGetConstantBuffers1']/*"/>	
            <msdn-id>hh404635</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::GSGetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers,[Out, Buffer, Optional] unsigned int* pFirstConstant,[Out, Buffer, Optional] unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::GSGetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.PSGetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the constant buffers that the pixel shader pipeline stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd> <p>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd> <p>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd> <p>Array of constant buffer interface references to be returned by the method.</p> </dd></param>	
            <param name="firstConstantRef"><dd> <p>A reference to an array that receives the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets <em>pFirstConstant</em> to <strong><c>null</c></strong> if the buffers do not have offsets.</p> </dd></param>	
            <param name="numConstantsRef"><dd> <p>A reference to an array that receives the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array. The runtime sets <em>pNumConstants</em> to <strong><c>null</c></strong> if it doesn't specify the numbers of constants in each buffer.</p> </dd></param>	
            <remarks>	
            <p>If no buffer is bound at a slot, <em>pFirstConstant</em> and <em>pNumConstants</em> are <strong><c>null</c></strong> for that slot.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::PSGetConstantBuffers1']/*"/>	
            <msdn-id>hh404645</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::PSGetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers,[Out, Buffer, Optional] unsigned int* pFirstConstant,[Out, Buffer, Optional] unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::PSGetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.CSGetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the constant buffers that the compute-shader stage uses.</p>	
            </summary>	
            <param name="startSlot"><dd> <p>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd> <p>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd> <p>Array of constant buffer interface references to be returned by the method.</p> </dd></param>	
            <param name="firstConstantRef"><dd> <p>A reference to an array that receives the offsets into the buffers that  <em>ppConstantBuffers</em> specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets <em>pFirstConstant</em> to <strong><c>null</c></strong> if the buffers do not have offsets.</p> </dd></param>	
            <param name="numConstantsRef"><dd> <p>A reference to an array that receives the numbers of constants in the buffers that  <em>ppConstantBuffers</em> specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the <em>pFirstConstant</em> array. The runtime sets <em>pNumConstants</em> to <strong><c>null</c></strong> if it doesn't specify the numbers of constants in each buffer.</p> </dd></param>	
            <remarks>	
            <p>If no buffer is bound at a slot, <em>pFirstConstant</em> and <em>pNumConstants</em> are <strong><c>null</c></strong> for that slot.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::CSGetConstantBuffers1']/*"/>	
            <msdn-id>hh404607</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::CSGetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers,[Out, Buffer, Optional] unsigned int* pFirstConstant,[Out, Buffer, Optional] unsigned int* pNumConstants)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::CSGetConstantBuffers1</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.SwapDeviceContextState(SharpDX.Direct3D11.DeviceContextState,SharpDX.Direct3D11.DeviceContextState@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Activates the given context state object and changes the current device behavior to Direct3D?11, Direct3D?10.1, or Direct3D?10.</p>	
            </summary>	
            <param name="stateRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.DeviceContextState"/></strong> interface for the context state object that was previously created through the <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState(SharpDX.Direct3D11.CreateDeviceContextStateFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,System.Guid,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContextState)"/></strong> method. If <strong>SwapDeviceContextState</strong> is called with <em>pState</em> set to <strong><c>null</c></strong>, the call has no effect.</p> </dd></param>	
            <param name="previousStateOut"><dd> <p>A reference to a variable that receives a reference to the <strong><see cref="T:SharpDX.Direct3D11.DeviceContextState"/></strong> interface for the previously-activated context state object.</p> </dd></param>	
            <remarks>	
            <p><strong>SwapDeviceContextState</strong> changes device behavior. This device behavior depends on the emulated interface that you passed to the <em>EmulatedInterface</em> parameter of the  <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState(SharpDX.Direct3D11.CreateDeviceContextStateFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,System.Guid,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContextState)"/></strong> method when you created the context state object. </p><p><strong>SwapDeviceContextState</strong> is not supported on a deferred context.</p><p><strong>SwapDeviceContextState</strong> disables the incompatible device interfaces <strong>ID3D10Device</strong>, <strong>ID3D10Device1</strong>, <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong>, and <strong><see cref="T:SharpDX.Direct3D11.Device1"/></strong>. When a context state object is active, the runtime disables certain methods on the device and context interfaces. A context state object that is created with <code>__uuidof(<see cref="T:SharpDX.Direct3D11.Device1"/>)</code> or <code>__uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>)</code> turns off most of the Direct3D?10 device interfaces. A context state object that is created with <code>__uuidof(ID3D10Device1)</code> or <code>__uuidof(ID3D10Device)</code> turns off most of the <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> methods.	
            For more information about this behavior, see <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState(SharpDX.Direct3D11.CreateDeviceContextStateFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,System.Guid,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContextState)"/></strong>.</p><p><strong>SwapDeviceContextState</strong> activates the context state object specified by <em>pState</em>. This means that the device behaviors that are associated with the context state object's feature level and compatible interface are activated on the Direct3D device until the next call to <strong>SwapDeviceContextState</strong>. In addition, any state that was saved when this context state object was last active is now reactivated, so that the previous state is replaced.</p><p><strong>SwapDeviceContextState</strong> sets <em>ppPreviousState</em> to the most recently activated context state object. The object allows the caller to save and then later restore the previous device state. This behavior is useful in a plug-in architecture such as Direct2D that shares a Direct3D device with its plug-ins. A Direct2D interface can use context state objects to save and restore the application's state.</p><p>If the caller did not previously call the <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState(SharpDX.Direct3D11.CreateDeviceContextStateFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,System.Guid,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContextState)"/></strong> method to create a previous context state object, <strong>SwapDeviceContextState</strong> sets <em>ppPreviousState</em> to the default context state object. In either case, usage of <strong>SwapDeviceContextState</strong> is the same.</p><p>The feature level that is specified by the application, and that is chosen by the context state object from the acceptable list that the application supplies to <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState(SharpDX.Direct3D11.CreateDeviceContextStateFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,System.Guid,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContextState)"/></strong>, controls the feature level of the immediate context whenever the context state object is active. Because the Direct3D?11 device is free-threaded, the device methods cannot query the current immediate context feature level. Instead, the device runs at a feature level that is the maximum of all previously created context state objects' feature levels. This means that the device's feature level can increase dynamically.</p><p>The feature level of the context state object controls the functionality available from the immediate context. However, to maintain the free-threaded contract of the Direct3D?11 device methods?the resource-creation methods in particular?the upper-bound feature level of all created context state objects controls the set of resources that the device creates.</p><p>Because the context state object interface is published by the immediate context, the interface requires the same threading model as the immediate context. Specifically, <strong>SwapDeviceContextState</strong> is single-threaded with respect to the other immediate context methods and with respect to the equivalent methods of <strong>ID3D10Device</strong>.</p><p>Crucially, because only one of the Direct3D?10 or Direct3D?11 ref-count behaviors can be available at a time, one of the Direct3D?10 and Direct3D?11 interfaces must break its ref-count contract. To avoid this situation, the activation of a context state object turns off the incompatible version interface. Also, if you call a method of an incompatible version interface, the call silently fails if the method has  return type <strong>void</strong>, returns an <strong><see cref="T:SharpDX.Result"/></strong> value of <strong>E_INVALIDARG</strong>, or sets any out parameter to <strong><c>null</c></strong>.</p><p>When you switch from Direct3D?11 mode to either Direct3D?10 mode or Direct3D?10.1 mode, the binding behavior of the device changes. Specifically, the final release of a resource induces unbind in Direct3D?10 mode or Direct3D?10.1 mode. During final release an application releases all of the resource's references, including indirect references such as the linkage from view to resource, and the linkage from context state object to any of the context state object's bound resources. Any bound resource to which the application has no reference is unbound and destroyed, in order to maintain the Direct3D?10 behavior.</p><p><strong>SwapDeviceContextState</strong> does not affect any state that <strong><see cref="T:SharpDX.Direct3D11.VideoContext"/></strong> sets. </p><p>Command lists that are generated by deferred contexts do not hold a reference to context state objects and are not affected by future updates to context state objects.</p><p>No asynchronous objects are affected by <strong>SwapDeviceContextState</strong>. For example, if a query is active before a call to <strong>SwapDeviceContextState</strong>, it is still active after the call.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::SwapDeviceContextState']/*"/>	
            <msdn-id>hh446787</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::SwapDeviceContextState([In] ID3DDeviceContextState* pState,[Out, Optional] ID3DDeviceContextState** ppPreviousState)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::SwapDeviceContextState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.ClearView(SharpDX.Direct3D11.ResourceView,System.Single,SharpDX.Rectangle[],System.Int32)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets all the elements in a resource view to one value.</p>	
            </summary>	
            <param name="viewRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.ResourceView"/></strong> interface that represents the resource view to clear.</p> </dd></param>	
            <param name="color"><dd> <p>A 4-component array that represents the color to use to clear the resource view.</p> </dd></param>	
            <param name="rectRef"><dd> <p>An array of <strong>D3D11_RECT</strong> structures for the rectangles in the resource view to clear. If <strong><c>null</c></strong>, <strong>ClearView</strong> clears the entire surface.</p> </dd></param>	
            <param name="numRects"><dd> <p>Number of rectangles in the array that the  <em>pRect</em> parameter specifies.</p> </dd></param>	
            <remarks>	
            <p><strong>ClearView</strong> works only on render-target views (RTVs), unordered-access views (UAVs), or any video view of a <strong>Texture2D</strong> surface. The runtime drops invalid calls. Empty rectangles in the <em>pRect</em> array are a no-op. A rectangle is empty if the top value equals the bottom value or the left value equals the right value.</p><p><strong>ClearView</strong> doesn?t support 3D textures.</p><p><strong>ClearView</strong> applies the same color value to all array slices in a view; all rectangles in the <em>pRect</em> array correspond to each array slice.  The <em>pRect</em> array of rectangles is a set of areas to clear on a single surface.  If the view is an array, <strong>ClearView</strong> clears all the rectangles on each array slice individually.</p><p>When you apply rectangles to buffers, set the top value to 0 and the bottom value to 1 and set the left value and right value to describe the extent within the buffer. When the top value equals the bottom value or the left value equals the right value, the rectangle is empty and a no-op is achieved.</p><p>The driver converts and clamps color values to the destination format as appropriate per Direct3D conversion rules.  For example, if the format of the view is <strong><see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UNorm"/></strong>, the driver clamps inputs to 0.0f to 1.0f (+INF -&gt; 1.0f (0XFF)/NaN -&gt; 0.0f).</p><p>If the format is integer, such as <strong><see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UInt"/></strong>, the runtime interprets inputs as integral floats. Therefore, 235.0f maps to 235 (rounds to zero, out of range/INF values clamp to target range, and NaN to 0).</p><p>Here are the color mappings:</p><ul> <li>Color[0]: R (or Y for video)</li> <li>Color[1]: G (or U/Cb for video)</li> <li>Color[2]: B (or V/Cr for video)</li> <li>Color[3]: A</li> </ul><p>For video views with YUV or YCbBr formats, <strong>ClearView</strong> doesn't convert color values. In situations where the format name doesn?t indicate _UNORM,  _UINT, and so on, <strong>ClearView</strong> assumes _UINT. Therefore, 235.0f maps to 235 (rounds to zero, out of range/INF values clamp to target range, and NaN to 0).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::ClearView']/*"/>	
            <msdn-id>hh404601</msdn-id>	
            <unmanaged>void ID3D11DeviceContext1::ClearView([In] ID3D11View* pView,[In] const float* Color,[In, Buffer, Optional] const RECT* pRect,[In] unsigned int NumRects)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::ClearView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.DiscardView1(SharpDX.Direct3D11.ResourceView,SharpDX.Rectangle[],System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceViewRef">No documentation.</param>	
            <param name="rectsRef">No documentation.</param>	
            <param name="numRects">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::DiscardView1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::DiscardView1([In] ID3D11View* pResourceView,[In, Buffer, Optional] const RECT* pRects,[In] unsigned int NumRects)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext1::DiscardView1</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Counter">
            <summary>	
            <p>This interface encapsulates methods for measuring GPU performance.</p>	
            </summary>	
            <remarks>	
            <p>A counter can be created with <strong><see cref="M:SharpDX.Direct3D11.Device.CreateCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.Counter)"/></strong>.</p><p>This is a derived class of <strong><see cref="T:SharpDX.Direct3D11.Asynchronous"/></strong>.</p><p>Counter data is gathered by issuing an <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> command, issuing some graphics commands, issuing an <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong> command, and then calling <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> to get data about what happened in between the Begin and End calls. The data returned by GetData will be different depending on the type of counter. The call to End causes the data returned by GetData to be accurate up until the last call to End.</p><p>Counters are best suited for profiling.</p><p>For a list of the types of performance counters, see <strong><see cref="T:SharpDX.Direct3D11.CounterKind"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Counter']/*"/>	
            <msdn-id>ff476364</msdn-id>	
            <unmanaged>ID3D11Counter</unmanaged>	
            <unmanaged-short>ID3D11Counter</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Asynchronous">
            <summary>	
            <p>This interface encapsulates methods for retrieving data from the GPU asynchronously.</p>	
            </summary>	
            <remarks>	
            <p>There are three types of asynchronous interfaces, all of which inherit this interface:</p><ul> <li> <strong><see cref="T:SharpDX.Direct3D11.Query"/></strong> - Queries information from the GPU.</li> <li> <strong><see cref="T:SharpDX.Direct3D11.Predicate"/></strong> - Determines whether a piece of geometry should be processed or not depending on the results of a previous draw call.</li> <li> <strong><see cref="T:SharpDX.Direct3D11.Counter"/></strong> - Measures GPU performance.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Asynchronous']/*"/>	
            <msdn-id>ff476347</msdn-id>	
            <unmanaged>ID3D11Asynchronous</unmanaged>	
            <unmanaged-short>ID3D11Asynchronous</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Asynchronous.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Asynchronous"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Asynchronous.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.Asynchronous">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.Asynchronous"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Asynchronous.GetDataSize">
            <summary>	
            <p>Get the size of the data (in bytes) that is output when calling <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong>.</p>	
            </summary>	
            <returns><p>Size of the data (in bytes) that is output when calling GetData.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Asynchronous::GetDataSize']/*"/>	
            <msdn-id>ff476348</msdn-id>	
            <unmanaged>unsigned int ID3D11Asynchronous::GetDataSize()</unmanaged>	
            <unmanaged-short>ID3D11Asynchronous::GetDataSize</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.Asynchronous.DataSize">
            <summary>	
            <p>Get the size of the data (in bytes) that is output when calling <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong>.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Asynchronous::GetDataSize']/*"/>	
            <msdn-id>ff476348</msdn-id>	
            <unmanaged>GetDataSize</unmanaged>	
            <unmanaged-short>GetDataSize</unmanaged-short>	
            <unmanaged>unsigned int ID3D11Asynchronous::GetDataSize()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Counter.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.CounterDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.Counter" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The counter description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Counter.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Counter"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Counter.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.Counter">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.Counter"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Counter.GetDescription(SharpDX.Direct3D11.CounterDescription@)">
            <summary>	
            <p>Get a counter description.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>Pointer to a counter description (see <strong><see cref="T:SharpDX.Direct3D11.CounterDescription"/></strong>).</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Counter::GetDesc']/*"/>	
            <msdn-id>ff476365</msdn-id>	
            <unmanaged>void ID3D11Counter::GetDesc([Out] D3D11_COUNTER_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11Counter::GetDesc</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.Counter.Description">
            <summary>	
            <p>Get a counter description.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Counter::GetDesc']/*"/>	
            <msdn-id>ff476365</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11Counter::GetDesc([Out] D3D11_COUNTER_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.CounterMetadata">
            <summary>
            Counter metadata that contains the type, name, units of measure, and a description of an existing counter.
            </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.CounterMetadata.Type">
            <summary>
            Gets the data type of a counter (see <see cref="T:SharpDX.Direct3D11.CounterType"/>).
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.CounterMetadata.HardwareCounterCount">
            <summary>
            Gets the number of hardware counters that are needed for this counter type to be created. All instances of the same counter type use the same hardware counters.
            </summary>
            <value>The hardware counter count.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.CounterMetadata.Name">
            <summary>
            Gets a brief name for the counter.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.CounterMetadata.Units">
            <summary>
            Gets the units a counter measures.
            </summary>
            <value>The units.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.CounterMetadata.Description">
            <summary>
            Gets a description of the counter.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilState">
            <summary>	
            <p>The depth-stencil-state interface holds a description for depth-stencil state that you can bind to the output-merger stage.</p>	
            </summary>	
            <remarks>	
            <p>To create a depth-stencil-state object, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilState(SharpDX.Direct3D11.DepthStencilStateDescription@,SharpDX.Direct3D11.DepthStencilState)"/></strong>. To bind the depth-stencil-state object to the output-merger stage, call <strong><see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetDepthStencilState(SharpDX.Direct3D11.DepthStencilState,System.Int32)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DepthStencilState']/*"/>	
            <msdn-id>ff476375</msdn-id>	
            <unmanaged>ID3D11DepthStencilState</unmanaged>	
            <unmanaged-short>ID3D11DepthStencilState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilState.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.DepthStencilStateDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.DepthStencilState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
            <msdn-id>ff476506</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateDepthStencilState([In] const D3D11_DEPTH_STENCIL_DESC* pDepthStencilDesc,[Out, Fast] ID3D11DepthStencilState** ppDepthStencilState)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateDepthStencilState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DepthStencilState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilState.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.DepthStencilState">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.DepthStencilState"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilState.GetDescription(SharpDX.Direct3D11.DepthStencilStateDescription@)">
            <summary>	
            <p>Gets the description for depth-stencil state that you used to create the depth-stencil-state object.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.DepthStencilStateDescription"/></strong> structure that receives a description of the depth-stencil state.</p> </dd></param>	
            <remarks>	
            <p>You use the description for depth-stencil state in a call to the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilState(SharpDX.Direct3D11.DepthStencilStateDescription@,SharpDX.Direct3D11.DepthStencilState)"/></strong> method to create the depth-stencil-state object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DepthStencilState::GetDesc']/*"/>	
            <msdn-id>ff476376</msdn-id>	
            <unmanaged>void ID3D11DepthStencilState::GetDesc([Out] D3D11_DEPTH_STENCIL_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11DepthStencilState::GetDesc</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.DepthStencilState.Description">
            <summary>	
            <p>Gets the description for depth-stencil state that you used to create the depth-stencil-state object.</p>	
            </summary>	
            <remarks>	
            <p>You use the description for depth-stencil state in a call to the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilState(SharpDX.Direct3D11.DepthStencilStateDescription@,SharpDX.Direct3D11.DepthStencilState)"/></strong> method to create the depth-stencil-state object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DepthStencilState::GetDesc']/*"/>	
            <msdn-id>ff476376</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11DepthStencilState::GetDesc([Out] D3D11_DEPTH_STENCIL_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilView">
            <summary>	
            <p>A depth-stencil-view interface accesses a texture resource during depth-stencil testing.</p>	
            </summary>	
            <remarks>	
            <p>To create a depth-stencil view, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.DepthStencilViewDescription},SharpDX.Direct3D11.DepthStencilView)"/></strong>.</p><p>To bind a depth-stencil view to the pipeline, call <strong><see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargets(System.Int32,System.IntPtr,SharpDX.Direct3D11.DepthStencilView)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DepthStencilView']/*"/>	
            <msdn-id>ff476377</msdn-id>	
            <unmanaged>ID3D11DepthStencilView</unmanaged>	
            <unmanaged-short>ID3D11DepthStencilView</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ResourceView">
            <summary>	
            <p>A view interface specifies the parts of a resource the pipeline can access during rendering.</p>	
            </summary>	
            <remarks>	
            <p>A view interface is the base interface for all views. There are four types of views; a depth-stencil view, a render-target view, a shader-resource view, and an unordered-access view.</p><ul> <li>To create a render-target view, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateRenderTargetView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.RenderTargetViewDescription},SharpDX.Direct3D11.RenderTargetView)"/></strong>.</li> <li>To create a depth-stencil view, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.DepthStencilViewDescription},SharpDX.Direct3D11.DepthStencilView)"/></strong>.</li> <li>To create a shader-resource view, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>.</li> <li>To create an unordered-access view, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateUnorderedAccessView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.UnorderedAccessViewDescription},SharpDX.Direct3D11.UnorderedAccessView)"/></strong>.</li> </ul><p>All resources must be bound to the pipeline before they can be accessed.</p><ul> <li>To bind a render-target view or a depth-stencil view, call <strong><see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargets(System.Int32,System.IntPtr,SharpDX.Direct3D11.DepthStencilView)"/></strong>.</li> <li>To bind a shader resource, call <strong><see cref="M:SharpDX.Direct3D11.VertexShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/></strong>.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11View']/*"/>	
            <msdn-id>ff476642</msdn-id>	
            <unmanaged>ID3D11View</unmanaged>	
            <unmanaged-short>ID3D11View</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ResourceView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ResourceView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.ResourceView.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.ResourceView">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.ResourceView"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.ResourceView.GetResource(System.IntPtr@)">
            <summary>	
            <p>Get the resource that is accessed through this view.</p>	
            </summary>	
            <param name="resourceOut"><dd>  <p>Address of a reference to the resource that is accessed through this view. (See <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong>.)</p> </dd></param>	
            <remarks>	
            <p>This function increments the reference count of the resource by one, so it is necessary to call <strong>Release</strong> on the returned reference when the application is done with it. Destroying (or losing) the returned reference before <strong>Release</strong> is called will result in a memory leak.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11View::GetResource']/*"/>	
            <msdn-id>ff476643</msdn-id>	
            <unmanaged>void ID3D11View::GetResource([Out] void** ppResource)</unmanaged>	
            <unmanaged-short>ID3D11View::GetResource</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ResourceView.ResourceAs``1">
            <summary>	
            <p>Get the resource that is accessed through this view.</p>	
            </summary>	
            <remarks>	
            <p>This function increments the reference count of the resource by one, so it is necessary to call <strong>Dispose</strong> on the returned reference when the application is done with it. Destroying (or losing) the returned reference before <strong>Release</strong> is called will result in a memory leak.</p>	
            </remarks>	
            <msdn-id>ff476643</msdn-id>	
            <unmanaged>GetResource</unmanaged>	
            <unmanaged-short>GetResource</unmanaged-short>	
            <unmanaged>void ID3D11View::GetResource([Out] ID3D11Resource** ppResource)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.ResourceView.Resource">
            <summary>	
            <p>Get the resource that is accessed through this view.</p>	
            </summary>	
            <remarks>	
            <p>This function increments the reference count of the resource by one, so it is necessary to call <strong>Release</strong> on the returned reference when the application is done with it. Destroying (or losing) the returned reference before <strong>Release</strong> is called will result in a memory leak.</p>	
            </remarks>	
            <msdn-id>ff476643</msdn-id>	
            <unmanaged>GetResource</unmanaged>	
            <unmanaged-short>GetResource</unmanaged-short>	
            <unmanaged>void ID3D11View::GetResource([Out] ID3D11Resource** ppResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.DepthStencilView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.DepthStencilView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">DepthStencil</see> flag.</param>
            <unmanaged>ID3D11Device::CreateDepthStencilView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.DepthStencilViewDescription)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.DepthStencilView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.DepthStencilView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">DepthStencil</see> flag.</param>
            <param name = "description">A structure describing the <see cref = "T:SharpDX.Direct3D11.DepthStencilView" /> to be created.</param>
            <unmanaged>ID3D11Device::CreateDepthStencilView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DepthStencilView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilView.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.DepthStencilView">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilView.GetDescription(SharpDX.Direct3D11.DepthStencilViewDescription@)">
            <summary>	
            <p>Get the depth-stencil view.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>Pointer to a depth-stencil-view description (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/></strong>).</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DepthStencilView::GetDesc']/*"/>	
            <msdn-id>ff476378</msdn-id>	
            <unmanaged>void ID3D11DepthStencilView::GetDesc([Out] D3D11_DEPTH_STENCIL_VIEW_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11DepthStencilView::GetDesc</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.DepthStencilView.Description">
            <summary>	
            <p>Get the depth-stencil view.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DepthStencilView::GetDesc']/*"/>	
            <msdn-id>ff476378</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11DepthStencilView::GetDesc([Out] D3D11_DEPTH_STENCIL_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.StreamOutputStage">
            <summary>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface represents a device context which generates rendering commands.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <msdn-id>ff476385</msdn-id>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputStage.SetTargets(SharpDX.Direct3D11.StreamOutputBufferBinding[])">
            <summary>	
            Set the target output {{buffers}} for the {{StreamOutput}} stage, which enables/disables the pipeline to stream-out data.	
            </summary>	
            <remarks>	
            Call ID3D10Device::SOSetTargets (before any draw calls) to stream data out; call SOSetTargets with NULL to stop streaming data out. For an example, see Exercise 01 from the GDC 2007 workshop, which sets the stream output rendertargets before calling draw methods in the RenderInstanceToStream function. An offset of -1 will cause the stream output buffer to be appended, continuing after the last location written to the buffer in a previous stream output pass. Calling this method using a buffer that is currently bound for writing will effectively bind NULL instead because a buffer cannot be bound as both an input and an output at the same time. The {{DeviceDebug Layer}} will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime. The method will not hold a reference to the interfaces passed in. For that reason, applications should be careful not to release an interface currently in use by the device. 	
            </remarks>	
            <param name="bufferBindings">an array of output buffers (see <see cref="T:SharpDX.Direct3D11.StreamOutputBufferBinding"/>) to bind to the device. The buffers must have been created with the <see cref="F:SharpDX.Direct3D11.BindFlags.StreamOutput"/> flag. </param>
            <unmanaged>void SOSetTargets([In] int NumBuffers,[In, Buffer, Optional] const ID3D10Buffer** ppSOTargets,[In, Buffer, Optional] const int* pOffsets)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputStage.GetTargets(System.Int32)">
            <summary>	
            Get the target output {{buffers}} for the {{StreamOutput}} stage of the pipeline.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="numBuffers">Number of buffers to get. A maximum of four output buffers can be retrieved. </param>
            <returns>an array of output buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) to bind to the device.</returns>
            <unmanaged>void SOGetTargets([In] int NumBuffers,[Out, Buffer, Optional] ID3D10Buffer** ppSOTargets,[Out, Buffer, Optional] int* pOffsets)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.StreamOutputStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputStage.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.StreamOutputStage">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.StreamOutputStage"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputStage.SetTargets(System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[])">
            <summary>	
            <p>Set the target output buffers for the stream-output stage of the pipeline.</p>	
            </summary>	
            <param name="numBuffers"><dd>  <p>The number of buffer to bind to the device. A maximum of four output buffers can be set. If less than four are defined by the call, the remaining buffer slots are set to <strong><c>null</c></strong>. See Remarks.</p> </dd></param>	
            <param name="sOTargetsOut"><dd>  <p>The array of output buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) to bind to the device. The buffers must have been created with the <strong><see cref="F:SharpDX.Direct3D11.BindFlags.StreamOutput"/></strong> flag.</p> </dd></param>	
            <param name="offsetsRef"><dd>  <p>Array of offsets to the output buffers from <em>ppSOTargets</em>, one offset for each buffer. The offset values must be in bytes.</p> </dd></param>	
            <remarks>	
            <p>An offset of -1 will cause the stream output buffer to be appended, continuing after the last location written to the buffer in a previous stream output pass.</p><p>Calling this method using a buffer that is currently bound for writing will effectively bind <strong><c>null</c></strong> instead because a buffer cannot be bound as both an input and an output at the same time.</p><p>The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::SOSetTargets']/*"/>	
            <msdn-id>ff476484</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::SOSetTargets([In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppSOTargets,[In, Buffer, Optional] const unsigned int* pOffsets)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::SOSetTargets</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputStage.SetTargets(System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[])">
            <summary>	
            <p>Set the target output buffers for the stream-output stage of the pipeline.</p>	
            </summary>	
            <param name="numBuffers"><dd>  <p>The number of buffer to bind to the device. A maximum of four output buffers can be set. If less than four are defined by the call, the remaining buffer slots are set to <strong><c>null</c></strong>. See Remarks.</p> </dd></param>	
            <param name="sOTargetsOut"><dd>  <p>The array of output buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) to bind to the device. The buffers must have been created with the <strong><see cref="F:SharpDX.Direct3D11.BindFlags.StreamOutput"/></strong> flag.</p> </dd></param>	
            <param name="offsetsRef"><dd>  <p>Array of offsets to the output buffers from <em>ppSOTargets</em>, one offset for each buffer. The offset values must be in bytes.</p> </dd></param>	
            <remarks>	
            <p>An offset of -1 will cause the stream output buffer to be appended, continuing after the last location written to the buffer in a previous stream output pass.</p><p>Calling this method using a buffer that is currently bound for writing will effectively bind <strong><c>null</c></strong> instead because a buffer cannot be bound as both an input and an output at the same time.</p><p>The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::SOSetTargets']/*"/>	
            <msdn-id>ff476484</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::SOSetTargets([In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppSOTargets,[In, Buffer, Optional] const unsigned int* pOffsets)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::SOSetTargets</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputStage.GetTargets(System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            <p>Get the target output buffers for the stream-output stage of the pipeline.</p>	
            </summary>	
            <param name="numBuffers"><dd>  <p>Number of buffers to get.</p> </dd></param>	
            <param name="sOTargetsOut"><dd>  <p>An array of output buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) to be retrieved from the device.</p> </dd></param>	
            <remarks>	
            <p>A maximum of four output buffers can be retrieved.</p><p>The offsets to the output buffers pointed to in the returned <em>ppSOTargets</em> array may be assumed to be -1 (append), as defined for use in <strong><see cref="M:SharpDX.Direct3D11.StreamOutputStage.SetTargets(SharpDX.Direct3D11.StreamOutputBufferBinding[])"/></strong>.</p><p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::SOGetTargets']/*"/>	
            <msdn-id>ff476483</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::SOGetTargets([In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppSOTargets)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::SOGetTargets</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.CommonShaderStage">
            <summary>
            Common Shader class. Provides a common set of methods for a Shader Stage.
            TODO: check if usage of abstract is not introducing an unacceptable overhead...
            </summary>
            <typeparam name="T">Type of the shader</typeparam>
            <summary>	
            Functions	
            </summary>	
            <!-- Failed to insert some or all of included XML --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.Direct3D11.CommonShaderStage']/*"/>	
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ImmediateConstantBufferRegisterComponents">
            <summary>Constant ImmediateConstantBufferRegisterComponents.</summary>
            <unmanaged>D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.SamplerRegisterComponents">
            <summary>Constant SamplerRegisterComponents.</summary>
            <unmanaged>D3D11_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.SamplerRegisterCount">
            <summary>Constant SamplerRegisterCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_SAMPLER_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferRegisterReadPorts">
            <summary>Constant ConstantBufferRegisterReadPorts.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceRegisterCount">
            <summary>Constant InputResourceRegisterCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TempRegisterCount">
            <summary>Constant TempRegisterCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEMP_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceRegisterReadPorts">
            <summary>Constant InputResourceRegisterReadPorts.</summary>
            <unmanaged>D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TempRegisterComponents">
            <summary>Constant TempRegisterComponents.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.FlowcontrolNestingLimit">
            <summary>Constant FlowcontrolNestingLimit.</summary>
            <unmanaged>D3D11_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TempRegisterComponentBitCount">
            <summary>Constant TempRegisterComponentBitCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceRegisterComponents">
            <summary>Constant InputResourceRegisterComponents.</summary>
            <unmanaged>D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.SamplerRegisterReadsPerInst">
            <summary>Constant SamplerRegisterReadsPerInst.</summary>
            <unmanaged>D3D11_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TextureCoordRangeReductionMaximum">
            <summary>Constant TextureCoordRangeReductionMaximum.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.SamplerRegisterReadPorts">
            <summary>Constant SamplerRegisterReadPorts.</summary>
            <unmanaged>D3D11_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TextureElOffsetMaximumNegative">
            <summary>Constant TextureElOffsetMaximumNegative.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount">
            <summary>Constant InputResourceSlotCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ImmediateConstantBufferRegisterReadsPerInst">
            <summary>Constant ImmediateConstantBufferRegisterReadsPerInst.</summary>
            <unmanaged>D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ImmediateConstantBufferRegisterCount">
            <summary>Constant ImmediateConstantBufferRegisterCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferRegisterCount">
            <summary>Constant ConstantBufferRegisterCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferRegisterReadsPerInst">
            <summary>Constant ConstantBufferRegisterReadsPerInst.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TextureElOffsetMaximumPositive">
            <summary>Constant TextureElOffsetMaximumPositive.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TempRegisterReadPorts">
            <summary>Constant TempRegisterReadPorts.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEMP_REGISTER_READ_PORTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TextureCoordRangeReductionMinimum">
            <summary>Constant TextureCoordRangeReductionMinimum.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferComponentBitCount">
            <summary>Constant ConstantBufferComponentBitCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TempRegisterReadsPerInst">
            <summary>Constant TempRegisterReadsPerInst.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEMP_REGISTER_READS_PER_INST</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ImmediateValueComponentBitCount">
            <summary>Constant ImmediateValueComponentBitCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferHwSlotCount">
            <summary>Constant ConstantBufferHwSlotCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.SubRoutineNestingLimit">
            <summary>Constant SubRoutineNestingLimit.</summary>
            <unmanaged>D3D11_COMMONSHADER_SUBROUTINE_NESTING_LIMIT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount">
            <summary>Constant SamplerSlotCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferRegisterComponents">
            <summary>Constant ConstantBufferRegisterComponents.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ImmediateConstantBufferRegisterReadPorts">
            <summary>Constant ImmediateConstantBufferRegisterReadPorts.</summary>
            <unmanaged>D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferPartialUpdateExtentsByteAlignment">
            <summary>Constant ConstantBufferPartialUpdateExtentsByteAlignment.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceRegisterReadsPerInst">
            <summary>Constant InputResourceRegisterReadsPerInst.</summary>
            <unmanaged>D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount">
            <summary>Constant ConstantBufferApiSlotCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferComponents">
            <summary>Constant ConstantBufferComponents.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.CommonShaderStage`1"/> class.
            </summary>
            <param name="pointer">The pointer.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.GetConstantBuffers(System.Int32,System.Int32)">
            <summary>
              Gets the constant buffers used by the shader stage.
            </summary>
            <param name = "startSlot">Index into the device's zero-based array from which to begin retrieving constant buffers.</param>
            <param name = "count">Number of buffers to retrieve.</param>
            <returns>An array of constant buffers.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.GetSamplers(System.Int32,System.Int32)">
            <summary>
              Gets the sampler states used by the shader stage.
            </summary>
            <param name = "startSlot">Index into the device's zero-based array from which to begin retrieving samplers.</param>
            <param name = "count">Number of samplers to retrieve.</param>
            <returns>An array of sampler states.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.GetShaderResources(System.Int32,System.Int32)">
            <summary>
              Gets the shader resources used by the shader stage.
            </summary>
            <param name = "startSlot">Index into the device's zero-based array from which to begin retrieving shader resources.</param>
            <param name = "count">Number of resources to retrieve.</param>
            <returns>An array of shader resources.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetConstantBuffer(System.Int32,SharpDX.Direct3D11.Buffer)">
            <summary>
              Sets a single constant buffer to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the constant buffer.</param>
            <param name = "constantBuffer">constant buffer to set</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetConstantBuffers(System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>
              Sets an array of constant buffers to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the array of constant buffers.</param>
            <param name = "constantBuffers">An array of constant buffer to set</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetConstantBuffers(System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer})">
            <summary>
              Sets an array of constant buffers to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the array of constant buffers.</param>
            <param name = "constantBuffers">An array of constant buffer to set</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetSampler(System.Int32,SharpDX.Direct3D11.SamplerState)">
            <summary>
              Sets a single sampler to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the sampler.</param>
            <param name = "sampler">sampler state to set</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetSamplers(System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>
              Sets an array of samplers to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the array of sampler states.</param>
            <param name = "samplers">An array of sampler state to set</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetSamplers(System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.SamplerState})">
            <summary>
              Sets an array of samplesr to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which  to set the array of sampler states.</param>
            <param name = "samplers">An array of sampler state to set</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetShaderResource(System.Int32,SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
              Sets a single shader resource to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the resource.</param>
            <param name = "resourceView">Resource view to attach</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetShaderResources(System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>
              Bind an array of shader resources to the shader stage.
            </summary>
            <remarks>
              If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with NULL.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name="shaderResourceViews">Array of {{shader resource view}} interfaces to set to the device.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetShaderResources(System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.ShaderResourceView})">
            <summary>
              Bind an array of shader resources to the shader stage.
            </summary>
            <remarks>
              If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with NULL.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name="shaderResourceViews">Array of {{shader resource view}} interfaces to set to the device.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>
              Get the shader resources.
            </summary>
            <remarks>
              Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.
            </remarks>
            <param name = "startSlot">Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name = "numViews">The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
            <param name = "shaderResourceViewsRef">Array of {{shader resource view}} interfaces to be returned by the device.</param>
            <unmanaged>void PSGetShaderResources([In] UINT StartSlot,[In] UINT NumViews,[Out, Buffer] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>
              Get an array of sampler states from the shader pipeline stage.
            </summary>
            <remarks>
              Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.
            </remarks>
            <param name="startSlot">Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
            <param name="numSamplers">Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
            <param name="samplersRef">Arry of sampler-state interface pointers (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>) to be returned by the device.</param>
            <unmanaged>void PSGetSamplers([In] UINT StartSlot,[In] UINT NumSamplers,[Out, Buffer] ID3D11SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>
              Get the constant buffers used by the shader pipeline stage.
            </summary>
            <remarks>
              Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
            <param name="numBuffers">Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
            <param name="constantBuffersRef">Array of constant buffer interface pointers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) to be returned by the method.</param>
            <unmanaged>void PSGetConstantBuffers([In] UINT StartSlot,[In] UINT NumBuffers,[Out, Buffer] ID3D11Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>
              Bind an array of shader resources to the shader stage.
            </summary>
            <remarks>
              If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with NULL.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name="numViews">Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
            <param name="shaderResourceViews">Array of {{shader resource view}} interfaces to set to the device.</param>
            <unmanaged>void PSSetShaderResources([In] UINT StartSlot,[In] UINT NumViews,[In, Buffer] const ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetShaderResources(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.ShaderResourceView})">
            <summary>
              Bind an array of shader resources to the shader stage.
            </summary>
            <remarks>
              If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with NULL.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name="numViews">Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
            <param name="shaderResourceViewsRef">Array of {{shader resource view}} interfaces to set to the device.</param>
            <unmanaged>void PSSetShaderResources([In] UINT StartSlot,[In] UINT NumViews,[In, Buffer] const ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>
              Bind an array of shader resources to the shader stage.
            </summary>
            <remarks>
              If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with NULL.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name="numViews">Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
            <param name="shaderResourceViewsRef">Array of {{shader resource view}} interfaces to set to the device.</param>
            <unmanaged>void PSSetShaderResources([In] UINT StartSlot,[In] UINT NumViews,[In, Buffer] const ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>
              Set an array of sampler states to the shader pipeline stage.
            </summary>
            <remarks>
              Any sampler may be set to NULL; this invokes the default state, which is defined to be the following.StateDefault ValueFilterD3D11_FILTER_MIN_MAG_MIP_LINEARAddressUD3D11_TEXTURE_ADDRESS_CLAMPAddressVD3D11_TEXTURE_ADDRESS_CLAMPAddressWD3D11_TEXTURE_ADDRESS_CLAMPMipLODBias0MaxAnisotropy1ComparisonFuncD3D11_COMPARISON_NEVERBorderColor[0]1.0fBorderColor[1]1.0fBorderColor[2]1.0fBorderColor[3]1.0fMinLOD-FLT_MAXMaxLODFLT_MAX  The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
            <param name="numSamplers">Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
            <param name="samplers">Pointer to an array of sampler-state interfaces (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>). See Remarks.</param>
            <unmanaged>void PSSetSamplers([In] UINT StartSlot,[In] UINT NumSamplers,[In, Buffer] const ID3D11SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetSamplers(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.SamplerState})">
            <summary>
              Set an array of sampler states to the shader pipeline stage.
            </summary>
            <remarks>
              Any sampler may be set to NULL; this invokes the default state, which is defined to be the following.StateDefault ValueFilterD3D11_FILTER_MIN_MAG_MIP_LINEARAddressUD3D11_TEXTURE_ADDRESS_CLAMPAddressVD3D11_TEXTURE_ADDRESS_CLAMPAddressWD3D11_TEXTURE_ADDRESS_CLAMPMipLODBias0MaxAnisotropy1ComparisonFuncD3D11_COMPARISON_NEVERBorderColor[0]1.0fBorderColor[1]1.0fBorderColor[2]1.0fBorderColor[3]1.0fMinLOD-FLT_MAXMaxLODFLT_MAX  The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
            <param name="numSamplers">Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
            <param name="samplers">Pointer to an array of sampler-state interfaces (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>). See Remarks.</param>
            <unmanaged>void PSSetSamplers([In] UINT StartSlot,[In] UINT NumSamplers,[In, Buffer] const ID3D11SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>
              Set the constant buffers used by the shader pipeline stage.
            </summary>
            <remarks>
              The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
            <param name="numBuffers">Number of buffers to set (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
            <param name="constantBuffers">Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</param>
            <unmanaged>void PSSetConstantBuffers([In] UINT StartSlot,[In] UINT NumBuffers,[In, Buffer] const ID3D11Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetConstantBuffers(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer})">
            <summary>
              Set the constant buffers used by the shader pipeline stage.
            </summary>
            <remarks>
              The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
            <param name="numBuffers">Number of buffers to set (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
            <param name="constantBuffers">Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</param>
            <unmanaged>void PSSetConstantBuffers([In] UINT StartSlot,[In] UINT NumBuffers,[In, Buffer] const ID3D11Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.CommonShaderStage`1">
            <summary>
            Common Shader class. Provides a common set of methods for a Shader Stage.
            TODO: check if usage of abstract is not introducing an unacceptable overhead...
            </summary>
            <typeparam name = "T">Type of the shader</typeparam>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage`1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.CommonShaderStage`1"/> class.
            </summary>
            <param name="pointer">The pointer.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage`1.Get">
            <summary>
              Gets the shader currently assigned to the device.
            </summary>
            <returns>The shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage`1.Get(SharpDX.Direct3D11.ClassInstance[])">
            <summary>
              Gets the shader currently assigned to the device.
            </summary>
            <param name = "classInstances">An array that will be used to contain any class instances currently active.</param>
            <returns>The shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage`1.Set(`0)">
            <summary>
              Assigns a compute shader to the device.
            </summary>
            <param name = "shader">The shader to assign to the device. Assign null to disable the compute shader.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage`1.Set(`0,SharpDX.Direct3D11.ClassInstance[])">
            <summary>
              Assigns a compute shader to the device.
            </summary>
            <param name = "shader">The shader to assign to the device. Assign <c>null</c> to disable the compute shader.</param>
            <param name = "classInstances">An array of class-instance interfaces. Each interface used by a shader must have a corresponding class instance or the shader will get disabled.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage`1.Set(`0,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance})">
            <summary>
              Assigns a compute shader to the device.
            </summary>
            <param name = "shader">The shader to assign to the device. Assign <c>null</c> to disable the compute shader.</param>
            <param name = "classInstances">An array of class-instance interfaces. Each interface used by a shader must have a corresponding class instance or the shader will get disabled.</param>
        </member>
        <member name="T:SharpDX.Direct3D11.ComputeShaderStage">
            <summary>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface represents a device context which generates rendering commands.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <msdn-id>ff476385</msdn-id>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.UnorderedAccessViewSlotCount">
            <summary>Constant UnorderedAccessViewSlotCount.</summary>
            <unmanaged>D3D11_PS_CS_UAV_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadGroupSharedMemoryResourceRegisterReadPorts">
            <summary>Constant ThreadGroupSharedMemoryResourceRegisterReadPorts.</summary>
            <unmanaged>D3D11_CS_TGSM_RESOURCE_REGISTER_READ_PORTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.DispatchMaximumThreadGroupsPerDimension">
            <summary>Constant DispatchMaximumThreadGroupsPerDimension.</summary>
            <unmanaged>D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadidingroupRegisterComponents">
            <summary>Constant ThreadidingroupRegisterComponents.</summary>
            <unmanaged>D3D11_CS_THREADIDINGROUP_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadGroupMaximumThreadsPerGroup">
            <summary>Constant ThreadGroupMaximumThreadsPerGroup.</summary>
            <unmanaged>D3D11_CS_THREAD_GROUP_MAX_THREADS_PER_GROUP</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadgroupidRegisterComponents">
            <summary>Constant ThreadgroupidRegisterComponents.</summary>
            <unmanaged>D3D11_CS_THREADGROUPID_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadgroupidRegisterCount">
            <summary>Constant ThreadgroupidRegisterCount.</summary>
            <unmanaged>D3D11_CS_THREADGROUPID_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadGroupSharedMemoryRegisterCount">
            <summary>Constant ThreadGroupSharedMemoryRegisterCount.</summary>
            <unmanaged>D3D11_CS_TGSM_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadGroupMaximumY">
            <summary>Constant ThreadGroupMaximumY.</summary>
            <unmanaged>D3D11_CS_THREAD_GROUP_MAX_Y</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadLocalTempRegisterPool">
            <summary>Constant ThreadLocalTempRegisterPool.</summary>
            <unmanaged>D3D11_CS_THREAD_LOCAL_TEMP_REGISTER_POOL</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadidingroupRegisterCount">
            <summary>Constant ThreadidingroupRegisterCount.</summary>
            <unmanaged>D3D11_CS_THREADIDINGROUP_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadidingroupflattenedRegisterCount">
            <summary>Constant ThreadidingroupflattenedRegisterCount.</summary>
            <unmanaged>D3D11_CS_THREADIDINGROUPFLATTENED_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadGroupMaximumX">
            <summary>Constant ThreadGroupMaximumX.</summary>
            <unmanaged>D3D11_CS_THREAD_GROUP_MAX_X</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadGroupMinimumZ">
            <summary>Constant ThreadGroupMinimumZ.</summary>
            <unmanaged>D3D11_CS_THREAD_GROUP_MIN_Z</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadGroupSharedMemoryRegisterReadsPerInst">
            <summary>Constant ThreadGroupSharedMemoryRegisterReadsPerInst.</summary>
            <unmanaged>D3D11_CS_TGSM_REGISTER_READS_PER_INST</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadGroupMaximumZ">
            <summary>Constant ThreadGroupMaximumZ.</summary>
            <unmanaged>D3D11_CS_THREAD_GROUP_MAX_Z</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadidRegisterComponents">
            <summary>Constant ThreadidRegisterComponents.</summary>
            <unmanaged>D3D11_CS_THREADID_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadidRegisterCount">
            <summary>Constant ThreadidRegisterCount.</summary>
            <unmanaged>D3D11_CS_THREADID_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadGroupSharedMemoryResourceRegisterComponents">
            <summary>Constant ThreadGroupSharedMemoryResourceRegisterComponents.</summary>
            <unmanaged>D3D11_CS_TGSM_RESOURCE_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadGroupMinimumY">
            <summary>Constant ThreadGroupMinimumY.</summary>
            <unmanaged>D3D11_CS_THREAD_GROUP_MIN_Y</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadidingroupflattenedRegisterComponents">
            <summary>Constant ThreadidingroupflattenedRegisterComponents.</summary>
            <unmanaged>D3D11_CS_THREADIDINGROUPFLATTENED_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderStage.ThreadGroupMinimumX">
            <summary>Constant ThreadGroupMinimumX.</summary>
            <unmanaged>D3D11_CS_THREAD_GROUP_MIN_X</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.GetUnorderedAccessViews(System.Int32,System.Int32)">
            <summary>	
            Gets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to return (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1). </param>
            <param name="count">Number of views to get (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - StartSlot). </param>
            <unmanaged>void CSGetUnorderedAccessViews([In] int StartSlot,[In] int NumUAVs,[Out, Buffer] ID3D11UnorderedAccessView** ppUnorderedAccessViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetUnorderedAccessView(System.Int32,SharpDX.Direct3D11.UnorderedAccessView)">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to begin setting. </param>
            <param name="unorderedAccessView">A reference to an <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method. </param>
            <unmanaged>void CSSetUnorderedAccessViews([In] int StartSlot,[In] int NumUAVs,[In, Buffer] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer] const int* pUAVInitialCounts)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetUnorderedAccessView(System.Int32,SharpDX.Direct3D11.UnorderedAccessView,System.Int32)">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to begin setting. </param>
            <param name="unorderedAccessView">A reference to an <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method. </param>
            <param name="uavInitialCount">An Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept.   Any other values set the hidden counter for that Appendable/Consumeable UAV. uAVInitialCount is only relevant for UAVs which have the <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags"/> flag,  otherwise the argument is ignored. </param>
            <unmanaged>void CSSetUnorderedAccessViews([In] int StartSlot,[In] int NumUAVs,[In, Buffer] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer] const int* pUAVInitialCounts)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetUnorderedAccessViews(System.Int32,SharpDX.Direct3D11.UnorderedAccessView[])">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to begin setting. </param>
            <param name="unorderedAccessViews">A reference to an array of <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method. </param>
            <unmanaged>void CSSetUnorderedAccessViews([In] int StartSlot,[In] int NumUAVs,[In, Buffer] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer] const int* pUAVInitialCounts)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetUnorderedAccessViews(System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[])">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to begin setting. </param>
            <param name="unorderedAccessViews">A reference to an array of <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method. </param>
            <param name="uavInitialCounts">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept.   Any other values set the hidden counter for that Appendable/Consumeable UAV.  pUAVInitialCounts is only relevant for UAVs which have the <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags"/> flag,  otherwise the argument is ignored. </param>
            <unmanaged>void CSSetUnorderedAccessViews([In] int StartSlot,[In] int NumUAVs,[In, Buffer] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer] const int* pUAVInitialCounts)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ComputeShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.ComputeShaderStage">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.ComputeShaderStage"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Bind an array of shader resources to the compute-shader stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</p> </dd></param>	
            <param name="numViews"><dd>  <p>Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="shaderResourceViewsOut"><dd>  <p>Array of <strong>shader resource view</strong> interfaces to set to the device.</p> </dd></param>	
            <remarks>	
            <p>If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <strong><c>null</c></strong>.</p><p>For information about creating shader-resource views, see <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSSetShaderResources']/*"/>	
            <msdn-id>ff476403</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CSSetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[In, Buffer, Optional] const void** ppShaderResourceViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CSSetShaderResources</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetUnorderedAccessViews(System.Int32,System.Int32,System.IntPtr,System.Int32[])">
            <summary>	
            <p>Sets an array of views for an unordered resource.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index of the first element in the zero-based array to begin setting  (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - 1). D3D11_1_UAV_SLOT_COUNT is defined as 64.</p> </dd></param>	
            <param name="numUAVs"><dd>  <p>Number of views to set (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - <em>StartSlot</em>).</p> </dd></param>	
            <param name="unorderedAccessViewsOut"><dd>  <p>A reference to an array of <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/></strong> references to be set by the method.</p> </dd></param>	
            <param name="uAVInitialCountsRef"><dd>  <p>An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter  for that appendable and consumable UAV. <em>pUAVInitialCounts</em> is only relevant for UAVs that were created with either  <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/></strong> or <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/></strong> specified  when the UAV was created; otherwise, the argument is ignored.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSSetUnorderedAccessViews']/*"/>	
            <msdn-id>ff476404</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CSSetUnorderedAccessViews([In] unsigned int StartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const void** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CSSetUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetShader(SharpDX.Direct3D11.ComputeShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)">
            <summary>	
            <p>Set a compute shader to the device.</p>	
            </summary>	
            <param name="computeShaderRef"><dd>  <p>Pointer to a compute shader (see <strong><see cref="T:SharpDX.Direct3D11.ComputeShader"/></strong>). Passing in <strong><c>null</c></strong> disables the shader for this pipeline stage.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>A reference to an array of class-instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <strong><c>null</c></strong> if the shader does not use any interfaces.</p> </dd></param>	
            <param name="numClassInstances"><dd>  <p>The number of class-instance interfaces in the array.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The maximum number of instances a shader can have is 256.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSSetShader']/*"/>	
            <msdn-id>ff476402</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CSSetShader([In, Optional] ID3D11ComputeShader* pComputeShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CSSetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetShader(SharpDX.Direct3D11.ComputeShader,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance},System.Int32)">
            <summary>	
            <p>Set a compute shader to the device.</p>	
            </summary>	
            <param name="computeShaderRef"><dd>  <p>Pointer to a compute shader (see <strong><see cref="T:SharpDX.Direct3D11.ComputeShader"/></strong>). Passing in <strong><c>null</c></strong> disables the shader for this pipeline stage.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>A reference to an array of class-instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <strong><c>null</c></strong> if the shader does not use any interfaces.</p> </dd></param>	
            <param name="numClassInstances"><dd>  <p>The number of class-instance interfaces in the array.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The maximum number of instances a shader can have is 256.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSSetShader']/*"/>	
            <msdn-id>ff476402</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CSSetShader([In, Optional] ID3D11ComputeShader* pComputeShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CSSetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Set an array of sampler states to the compute-shader stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting samplers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</p> </dd></param>	
            <param name="numSamplers"><dd>  <p>Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="samplersOut"><dd>  <p>Pointer to an array of sampler-state interfaces (see <strong><see cref="T:SharpDX.Direct3D11.SamplerState"/></strong>). See Remarks.</p> </dd></param>	
            <remarks>	
            <p>Any sampler may be set to <strong><c>null</c></strong>; this invokes the default state, which is defined to be the following.</p><pre><code> //Default sampler state:	
            <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/> SamplerDesc;	
            SamplerDesc.Filter = <see cref="F:SharpDX.Direct3D11.Filter.MinMagMipLinear"/>;	
            SamplerDesc.AddressU = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressV = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressW = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.MipLODBias = 0;	
            SamplerDesc.MaxAnisotropy = 1;	
            SamplerDesc.ComparisonFunc = <see cref="F:SharpDX.Direct3D11.Comparison.Never"/>;	
            SamplerDesc.BorderColor[0] = 1.0f;	
            SamplerDesc.BorderColor[1] = 1.0f;	
            SamplerDesc.BorderColor[2] = 1.0f;	
            SamplerDesc.BorderColor[3] = 1.0f;	
            SamplerDesc.MinLOD = -FLT_MAX;	
            SamplerDesc.MaxLOD = FLT_MAX; </code></pre><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSSetSamplers']/*"/>	
            <msdn-id>ff476401</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CSSetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[In, Buffer, Optional] const void** ppSamplers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CSSetSamplers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetConstantBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Sets the constant buffers used by the compute-shader stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <strong><see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/></strong> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>Number of buffers to set (ranges from 0 to <strong><see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/></strong> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd>  <p>Array of constant buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) being given to the device.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, can bind a larger number of <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.  </p><p>If the application wants the shader to access other parts of the buffer, it must call the <strong>CSSetConstantBuffers1</strong> method instead. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSSetConstantBuffers']/*"/>	
            <msdn-id>ff476400</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CSSetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void** ppConstantBuffers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CSSetConstantBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>	
            <p>Get the compute-shader resources.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</p> </dd></param>	
            <param name="numViews"><dd>  <p>The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="shaderResourceViewsOut"><dd>  <p>Array of <strong>shader resource view</strong> interfaces to be returned by the device.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSGetShaderResources']/*"/>	
            <msdn-id>ff476398</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CSGetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CSGetShaderResources</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.GetUnorderedAccessViews(System.Int32,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[])">
            <summary>	
            <p>Gets an array of views for an unordered resource.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index of the first element in the zero-based array to return (ranges from 0 to <see cref="F:SharpDX.Direct3D11.ComputeShaderStage.UnorderedAccessViewSlotCount"/> - 1).</p> </dd></param>	
            <param name="numUAVs"><dd>  <p>Number of views to get (ranges from 0 to <see cref="F:SharpDX.Direct3D11.ComputeShaderStage.UnorderedAccessViewSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="unorderedAccessViewsOut"><dd>  <p>A reference to an array of interface references (see <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/></strong>) to get.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSGetUnorderedAccessViews']/*"/>	
            <msdn-id>ff476399</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CSGetUnorderedAccessViews([In] unsigned int StartSlot,[In] unsigned int NumUAVs,[Out, Buffer, Optional] ID3D11UnorderedAccessView** ppUnorderedAccessViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CSGetUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.GetShader(SharpDX.Direct3D11.ComputeShader@,SharpDX.Direct3D11.ClassInstance[],System.Int32@)">
            <summary>	
            <p>Get the compute shader currently set on the device.</p>	
            </summary>	
            <param name="computeShaderOut"><dd>  <p>Address of a reference to a Compute shader (see <strong><see cref="T:SharpDX.Direct3D11.ComputeShader"/></strong>) to be returned by the method.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>Pointer to an array of class instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>).</p> </dd></param>	
            <param name="numClassInstancesRef"><dd>  <p>The number of class-instance elements in the array.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSGetShader']/*"/>	
            <msdn-id>ff476397</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CSGetShader([Out] ID3D11ComputeShader** ppComputeShader,[Out, Buffer, Optional] ID3D11ClassInstance** ppClassInstances,[InOut] unsigned int* pNumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CSGetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>	
            <p>Get an array of sampler state interfaces from the compute-shader stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into a zero-based array to begin getting samplers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</p> </dd></param>	
            <param name="numSamplers"><dd>  <p>Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="samplersOut"><dd>  <p>Pointer to an array of sampler-state interfaces (see <strong><see cref="T:SharpDX.Direct3D11.SamplerState"/></strong>).</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSGetSamplers']/*"/>	
            <msdn-id>ff476396</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CSGetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[Out, Buffer, Optional] ID3D11SamplerState** ppSamplers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CSGetSamplers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            <p>Get the constant buffers used by the compute-shader stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="constantBuffersOut"><dd>  <p>Array of constant buffer interface references (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) to be returned by the method.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSGetConstantBuffers']/*"/>	
            <msdn-id>ff476395</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::CSGetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::CSGetConstantBuffers</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.InputAssemblerStage">
            <summary>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface represents a device context which generates rendering commands.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <msdn-id>ff476385</msdn-id>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.IndexInputResourceSlotCount">
            <summary>Constant IndexInputResourceSlotCount.</summary>
            <unmanaged>D3D11_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.VertexIdBitCount">
            <summary>Constant VertexIdBitCount.</summary>
            <unmanaged>D3D11_IA_VERTEX_ID_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.IntegerArithmeticBitCount">
            <summary>Constant IntegerArithmeticBitCount.</summary>
            <unmanaged>D3D11_IA_INTEGER_ARITHMETIC_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount">
            <summary>Constant VertexInputResourceSlotCount.</summary>
            <unmanaged>D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.DefaultIndexBufferOffsetInBytes">
            <summary>Constant DefaultIndexBufferOffsetInBytes.</summary>
            <unmanaged>D3D11_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.DefaultPrimitiveTopology">
            <summary>Constant DefaultPrimitiveTopology.</summary>
            <unmanaged>D3D11_IA_DEFAULT_PRIMITIVE_TOPOLOGY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.DefaultVertexBufferOffsetInBytes">
            <summary>Constant DefaultVertexBufferOffsetInBytes.</summary>
            <unmanaged>D3D11_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.InstanceIdBitCount">
            <summary>Constant InstanceIdBitCount.</summary>
            <unmanaged>D3D11_IA_INSTANCE_ID_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputStructureElementsComponents">
            <summary>Constant VertexInputStructureElementsComponents.</summary>
            <unmanaged>D3D11_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputStructureElementCount">
            <summary>Constant VertexInputStructureElementCount.</summary>
            <unmanaged>D3D11_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.PatchMaximumControlPointCount">
            <summary>Constant PatchMaximumControlPointCount.</summary>
            <unmanaged>D3D11_IA_PATCH_MAX_CONTROL_POINT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.PrimitiveIdBitCount">
            <summary>Constant PrimitiveIdBitCount.</summary>
            <unmanaged>D3D11_IA_PRIMITIVE_ID_BIT_COUNT</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetVertexBuffers(System.Int32,SharpDX.Direct3D11.VertexBufferBinding)">
            <summary>
            <p>Bind a single vertex buffer to the input-assembler stage.</p>	
            </summary>	
            <param name="slot"><dd>  <p>The first input slot for binding. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input slots (ranges from 0 to <see cref="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount"/> - 1) are available; the maximum number of input slots depends on the feature level.</p> </dd></param>	
            <param name="vertexBufferBinding"><dd>  <p>A <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>. The vertex buffer must have been created with the <strong><see cref="F:SharpDX.Direct3D11.BindFlags.VertexBuffer"/></strong> flag.</p> </dd></param>        /// <remarks>	
            <p>For information about creating vertex buffers, see Create a Vertex Buffer.</p><p>Calling this method using a buffer that is currently bound for writing (i.e. bound to the stream output pipeline stage) will effectively bind <strong><c>null</c></strong> instead because a buffer cannot be bound as both an input and an output at the same time.</p><p>The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <msdn-id>ff476456</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::IASetVertexBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer] const void* ppVertexBuffers,[In, Buffer] const void* pStrides,[In, Buffer] const void* pOffsets)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::IASetVertexBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetVertexBuffers(System.Int32,SharpDX.Direct3D11.VertexBufferBinding[])">
            <summary>
            <p>Bind an array of vertex buffers to the input-assembler stage.</p>	
            </summary>	
            <param name="firstSlot"><dd>  <p>The first input slot for binding. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input slots (ranges from 0 to <see cref="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount"/> - 1) are available; the maximum number of input slots depends on the feature level.</p> </dd></param>	
            <param name="vertexBufferBindings"><dd>  <p>A reference to an array of <see cref="T:SharpDX.Direct3D11.VertexBufferBinding"/>. The vertex buffers must have been created with the <strong><see cref="F:SharpDX.Direct3D11.BindFlags.VertexBuffer"/></strong> flag.</p> </dd></param>        /// <remarks>	
            <p>For information about creating vertex buffers, see Create a Vertex Buffer.</p><p>Calling this method using a buffer that is currently bound for writing (i.e. bound to the stream output pipeline stage) will effectively bind <strong><c>null</c></strong> instead because a buffer cannot be bound as both an input and an output at the same time.</p><p>The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <msdn-id>ff476456</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::IASetVertexBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer] const void* ppVertexBuffers,[In, Buffer] const void* pStrides,[In, Buffer] const void* pOffsets)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::IASetVertexBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetVertexBuffers(System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>
            <p>Bind an array of vertex buffers to the input-assembler stage.</p>	
            </summary>	
            <param name="slot"><dd>  <p>The first input slot for binding. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input slots (ranges from 0 to <see cref="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount"/> - 1) are available; the maximum number of input slots depends on the feature level.</p> </dd></param>	
            <param name="vertexBuffers"><dd>  <p>A reference to an array of vertex buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>). The vertex buffers must have been created with the <strong><see cref="F:SharpDX.Direct3D11.BindFlags.VertexBuffer"/></strong> flag.</p> </dd></param>	
            <param name="stridesRef"><dd>  <p>Pointer to an array of stride values; one stride value for each buffer in the vertex-buffer array. Each stride is the size (in bytes) of the elements that are to be used from that vertex buffer.</p> </dd></param>	
            <param name="offsetsRef"><dd>  <p>Pointer to an array of offset values; one offset value for each buffer in the vertex-buffer array. Each offset is the number of bytes between the first element of a vertex buffer and the first element that will be used.</p> </dd></param>	
            <remarks>	
            <p>For information about creating vertex buffers, see Create a Vertex Buffer.</p><p>Calling this method using a buffer that is currently bound for writing (i.e. bound to the stream output pipeline stage) will effectively bind <strong><c>null</c></strong> instead because a buffer cannot be bound as both an input and an output at the same time.</p><p>The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <msdn-id>ff476456</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::IASetVertexBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer] const void* ppVertexBuffers,[In, Buffer] const void* pStrides,[In, Buffer] const void* pOffsets)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::IASetVertexBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.InputAssemblerStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.InputAssemblerStage">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.InputAssemblerStage"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetInputLayout(SharpDX.Direct3D11.InputLayout)">
            <summary>	
            <p>Bind an input-layout object to the input-assembler stage.</p>	
            </summary>	
            <param name="inputLayoutRef"><dd>  <p>A reference to the input-layout object (see <strong><see cref="T:SharpDX.Direct3D11.InputLayout"/></strong>), which describes the input buffers that will be read by the IA stage.</p> </dd></param>	
            <remarks>	
            <p>Input-layout objects describe how vertex buffer data is streamed into the IA pipeline stage. To create an input-layout object, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateInputLayout(SharpDX.Direct3D11.InputElement[],System.Int32,System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.InputLayout)"/></strong>.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IASetInputLayout']/*"/>	
            <msdn-id>ff476454</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::IASetInputLayout([In, Optional] ID3D11InputLayout* pInputLayout)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::IASetInputLayout</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetVertexBuffers(System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>	
            <p>Bind an array of vertex buffers to the input-assembler stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>The first input slot for binding. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input slots (ranges from 0 to <see cref="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount"/> - 1) are available; the maximum number of input slots depends on the feature level.</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>The number of vertex buffers in the array. The number of buffers (plus the starting slot) cannot exceed the total number of IA-stage input slots (ranges from 0 to <see cref="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="vertexBuffersOut"><dd>  <p>A reference to an array of vertex buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>). The vertex buffers must have been created with the <strong><see cref="F:SharpDX.Direct3D11.BindFlags.VertexBuffer"/></strong> flag.</p> </dd></param>	
            <param name="stridesRef"><dd>  <p>Pointer to an array of stride values; one stride value for each buffer in the vertex-buffer array. Each stride is the size (in bytes) of the elements that are to be used from that vertex buffer.</p> </dd></param>	
            <param name="offsetsRef"><dd>  <p>Pointer to an array of offset values; one offset value for each buffer in the vertex-buffer array. Each offset is the number of bytes between the first element of a vertex buffer and the first element that will be used.</p> </dd></param>	
            <remarks>	
            <p>For information about creating vertex buffers, see Create a Vertex Buffer.</p><p>Calling this method using a buffer that is currently bound for writing (i.e. bound to the stream output pipeline stage) will effectively bind <strong><c>null</c></strong> instead because a buffer cannot be bound as both an input and an output at the same time.</p><p>The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IASetVertexBuffers']/*"/>	
            <msdn-id>ff476456</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::IASetVertexBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void* ppVertexBuffers,[In, Buffer, Optional] const void* pStrides,[In, Buffer, Optional] const void* pOffsets)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::IASetVertexBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetIndexBuffer(SharpDX.Direct3D11.Buffer,SharpDX.DXGI.Format,System.Int32)">
            <summary>	
            <p>Bind an index buffer to the input-assembler stage.</p>	
            </summary>	
            <param name="indexBufferRef"><dd>  <p>A reference to an <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong> object, that contains indices. The index buffer must have been created with  the <strong><see cref="F:SharpDX.Direct3D11.BindFlags.IndexBuffer"/></strong> flag.</p> </dd></param>	
            <param name="format"><dd>  <p>A <strong><see cref="T:SharpDX.DXGI.Format"/></strong> that specifies the format of the data in the index buffer. The only formats allowed for index  buffer data are 16-bit (<see cref="F:SharpDX.DXGI.Format.R16_UInt"/>) and 32-bit (<see cref="F:SharpDX.DXGI.Format.R32_UInt"/>) integers.</p> </dd></param>	
            <param name="offset"><dd>  <p>Offset (in bytes) from the start of the index buffer to the first index to use.</p> </dd></param>	
            <remarks>	
            <p>For information about creating index buffers, see How to: Create an Index Buffer.</p><p>Calling this method using a buffer that is currently bound for writing (i.e. bound to the stream output pipeline stage) will effectively bind  <strong><c>null</c></strong> instead because a buffer cannot be bound as both an input and an output at the same time.</p><p>The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will  not prevent invalid data from being used by the runtime.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IASetIndexBuffer']/*"/>	
            <msdn-id>ff476453</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::IASetIndexBuffer([In, Optional] ID3D11Buffer* pIndexBuffer,[In] DXGI_FORMAT Format,[In] unsigned int Offset)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::IASetIndexBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetPrimitiveTopology(SharpDX.Direct3D.PrimitiveTopology)">
            <summary>	
            <p>Bind information about the primitive type, and data order that describes input data for the input assembler stage.</p>	
            </summary>	
            <param name="topology"><dd>  <p>The type of primitive and ordering of the primitive data (see <strong>D3D11_PRIMITIVE_TOPOLOGY</strong>).</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IASetPrimitiveTopology']/*"/>	
            <msdn-id>ff476455</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::IASetPrimitiveTopology([In] D3D_PRIMITIVE_TOPOLOGY Topology)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::IASetPrimitiveTopology</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.GetInputLayout(SharpDX.Direct3D11.InputLayout@)">
            <summary>	
            <p>Get a reference to the input-layout object that is bound to the input-assembler stage.</p>	
            </summary>	
            <param name="inputLayoutOut"><dd>  <p>A reference to the input-layout object (see <strong><see cref="T:SharpDX.Direct3D11.InputLayout"/></strong>), which describes the input buffers that will be read by the IA stage.</p> </dd></param>	
            <remarks>	
            <p>For information about creating an input-layout object, see Creating the Input-Layout Object.</p><p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IAGetInputLayout']/*"/>	
            <msdn-id>ff476450</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::IAGetInputLayout([Out] ID3D11InputLayout** ppInputLayout)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::IAGetInputLayout</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.GetVertexBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            <p>Get the vertex buffers bound to the input-assembler stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>The input slot of the first vertex buffer to get. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input slots (ranges from 0 to <see cref="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount"/> - 1) are available; the maximum number of input slots depends on the feature level.</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>The number of vertex buffers to get starting at the offset. The number of buffers (plus the starting slot) cannot exceed the total number of IA-stage input slots.</p> </dd></param>	
            <param name="vertexBuffersOut"><dd>  <p>A reference to an array of vertex buffers returned by the method (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>).</p> </dd></param>	
            <param name="stridesRef"><dd>  <p>Pointer to an array of stride values returned by the method; one stride value for each buffer in the vertex-buffer array. Each stride value is the size (in bytes) of the elements that are to be used from that vertex buffer.</p> </dd></param>	
            <param name="offsetsRef"><dd>  <p>Pointer to an array of offset values returned by the method; one offset value for each buffer in the vertex-buffer array. Each offset is the number of bytes between the first element of a vertex buffer and the first element that will be used.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IAGetVertexBuffers']/*"/>	
            <msdn-id>ff476452</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::IAGetVertexBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppVertexBuffers,[Out, Buffer, Optional] unsigned int* pStrides,[Out, Buffer, Optional] unsigned int* pOffsets)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::IAGetVertexBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.GetIndexBuffer(SharpDX.Direct3D11.Buffer@,SharpDX.DXGI.Format@,System.Int32@)">
            <summary>	
            <p>Get a reference to the index buffer that is bound to the input-assembler stage.</p>	
            </summary>	
            <param name="indexBufferRef"><dd>  <p>A reference to an index buffer returned by the method (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>).</p> </dd></param>	
            <param name="format"><dd>  <p>Specifies format of the data in the index buffer (see <strong><see cref="T:SharpDX.DXGI.Format"/></strong>). These formats provide the size and type of  the data in the buffer. The only formats allowed for index buffer data are 16-bit (<see cref="F:SharpDX.DXGI.Format.R16_UInt"/>) and 32-bit (<see cref="F:SharpDX.DXGI.Format.R32_UInt"/>)  integers.</p> </dd></param>	
            <param name="offset"><dd>  <p>Offset (in bytes) from the start of the index buffer, to the first index to use.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces  when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IAGetIndexBuffer']/*"/>	
            <msdn-id>ff476449</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::IAGetIndexBuffer([Out, Optional] ID3D11Buffer** pIndexBuffer,[Out, Optional] DXGI_FORMAT* Format,[Out, Optional] unsigned int* Offset)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::IAGetIndexBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.GetPrimitiveTopology(SharpDX.Direct3D.PrimitiveTopology@)">
            <summary>	
            <p>Get information about the primitive type, and data order that describes input data for the input assembler stage.</p>	
            </summary>	
            <param name="topologyRef"><dd>  <p>A reference to the type of primitive, and ordering of the primitive data (see <strong>D3D11_PRIMITIVE_TOPOLOGY</strong>).</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IAGetPrimitiveTopology']/*"/>	
            <msdn-id>ff476451</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::IAGetPrimitiveTopology([Out] D3D_PRIMITIVE_TOPOLOGY* pTopology)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::IAGetPrimitiveTopology</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.InputAssemblerStage.InputLayout">
            <summary>	
            <p>Get or sets a reference to the input-layout object that is bound to the input-assembler stage.</p>	
            </summary>	
            <remarks>	
            <p>For information about creating an input-layout object, see Creating the Input-Layout Object.</p><p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IAGetInputLayout']/*"/>	
            <msdn-id>ff476450</msdn-id>	
            <unmanaged>IAGetInputLayout / IASetInputLayout</unmanaged>	
            <unmanaged-short>IAGetInputLayout</unmanaged-short>	
            <unmanaged>void ID3D11DeviceContext::IAGetInputLayout([Out] ID3D11InputLayout** ppInputLayout)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.InputAssemblerStage.PrimitiveTopology">
            <summary>	
            <p>Get or sets information about the primitive type, and data order that describes input data for the input assembler stage.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IAGetPrimitiveTopology']/*"/>	
            <msdn-id>ff476451</msdn-id>	
            <unmanaged>IAGetPrimitiveTopology / IASetPrimitiveTopology</unmanaged>	
            <unmanaged-short>IAGetPrimitiveTopology</unmanaged-short>	
            <unmanaged>void ID3D11DeviceContext::IAGetPrimitiveTopology([Out] D3D_PRIMITIVE_TOPOLOGY* pTopology)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.OutputMergerStage">
            <summary>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface represents a device context which generates rendering commands.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <msdn-id>ff476385</msdn-id>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetRenderTargets(SharpDX.Direct3D11.DepthStencilView@)">
            <summary>	
            Get references to the render targets that are available to the {{output-merger stage}}.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <returns>a depth-stencil view (see <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>) to be filled with the depth-stencil information from the device.</returns>
            <unmanaged>void OMGetRenderTargets([In] int NumViews,[Out, Buffer, Optional] ID3D10RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D10DepthStencilView** ppDepthStencilView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetRenderTargets(System.Int32)">
            <summary>	
            Get references to the render targets that are available to the {{output-merger stage}}.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="numViews">Number of render targets to retrieve. </param>
            <returns>an array of render targets views (see <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>) to be filled with the render targets from the device.</returns>
            <unmanaged>void OMGetRenderTargets([In] int NumViews,[Out, Buffer, Optional] ID3D10RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D10DepthStencilView** ppDepthStencilView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetRenderTargets(System.Int32,SharpDX.Direct3D11.DepthStencilView@)">
            <summary>	
            Get references to the render targets and the depth-stencil buffer that are available to the {{output-merger stage}}.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="numViews">Number of render targets to retrieve. </param>
            <param name="depthStencilViewRef">Pointer to a depth-stencil view (see <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>) to be filled with the depth-stencil information from the device.</param>
            <returns>an array of render targets views (see <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>) to be filled with the render targets from the device.</returns>
            <unmanaged>void OMGetRenderTargets([In] int NumViews,[Out, Buffer, Optional] ID3D10RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D10DepthStencilView** ppDepthStencilView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetBlendState(SharpDX.Color4@,System.Int32@)">
            <summary>	
            Get the {{blend state}} of the output-merger stage.	
            </summary>	
            <remarks>	
            The reference count of the returned interface will be incremented by one when the blend state is retrieved. Applications must release returned reference(s) when they are no longer needed, or else there will be a memory leak. 	
            </remarks>	
            <param name="blendFactor">Array of blend factors, one for each RGBA component. </param>
            <param name="sampleMaskRef">Pointer to a {{sample mask}}. </param>
            <returns>a reference to a blend-state interface (see <see cref="T:SharpDX.Direct3D11.BlendState"/>).</returns>
            <unmanaged>void OMGetBlendState([Out, Optional] ID3D10BlendState** ppBlendState,[Out, Optional] float BlendFactor[4],[Out, Optional] int* pSampleMask)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetDepthStencilState(System.Int32@)">
            <summary>	
            Gets the {{depth-stencil}} state of the output-merger stage.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="stencilRefRef">Pointer to the stencil reference value used in the {{depth-stencil}} test. </param>
            <returns>a reference to a depth-stencil state interface (see <see cref="T:SharpDX.Direct3D11.DepthStencilState"/>) to be filled with information from the device.</returns>
            <unmanaged>void OMGetDepthStencilState([Out, Optional] ID3D10DepthStencilState** ppDepthStencilState,[Out, Optional] int* pStencilRef)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetUnorderedAccessViews(System.Int32,System.Int32)">
            <summary>	
            Gets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to return (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1). </param>
            <param name="count">Number of views to get (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - StartSlot). </param>
            <unmanaged>void OMGetRenderTargetsAndUnorderedAccessViews([In] int NumRTVs,[Out, Buffer, Optional] ID3D11RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D11DepthStencilView** ppDepthStencilView,[In] int UAVStartSlot,[In] int NumUAVs,[Out, Buffer, Optional] ID3D11UnorderedAccessView** ppUnorderedAccessViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.ResetTargets">
            <summary>
              Unbinds all depth-stencil buffer and render targets from the output-merger stage.
            </summary>
            <msdn-id>ff476464</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In] const void** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargets</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.RenderTargetView[])">
            <summary>	
            <p>Bind one or more render targets atomically and the depth-stencil buffer to the output-merger stage.</p>	
            </summary>	
            <param name = "renderTargetViews">A set of render target views to bind.</param>
            <remarks>	
            <p>The maximum number of active render targets a device can have active at any given time is set by a #define in D3D11.h called  D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT. It is invalid to try to set the same subresource to multiple render target slots.  Any render targets not defined by this call are set to <strong><c>null</c></strong>.</p><p>If any subresources are also currently bound for reading in a different stage or writing (perhaps in a different part of the pipeline),  those bind points will be set to <strong><c>null</c></strong>, in order to prevent the same subresource from being read and written simultaneously in a single rendering operation.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>If the render-target views were created from an array resource type, then all of the render-target views must have the same array size.   This restriction also applies to the depth-stencil view, its array size must match that of the render-target views being bound.</p><p>The pixel shader must be able to simultaneously render to at least eight separate render targets. All of these render targets must access the same type of resource: Buffer, Texture1D, Texture1DArray, Texture2D, Texture2DArray, Texture3D, or TextureCube. All render targets must have the same size in all dimensions (width and height, and depth for 3D or array size for *Array types). If render targets use multisample anti-aliasing, all bound render targets and depth buffer must be the same form of multisample resource (that is, the sample counts must be the same). Each render target can have a different data format. These render target formats are not required to have identical bit-per-element counts.</p><p>Any combination of the eight slots for render targets can have a render target set or not set.</p><p>The same resource view cannot be bound to multiple render target slots simultaneously. However, you can set multiple non-overlapping resource views of a single resource as simultaneous multiple render targets.</p>	
            </remarks>	
            <msdn-id>ff476464</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In] const void** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargets</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.RenderTargetView)">
            <summary>	
              Binds a single render target to the output-merger stage.
            </summary>	
            <param name = "renderTargetView">A view of the render target to bind.</param>
            <remarks>	
            <p>The maximum number of active render targets a device can have active at any given time is set by a #define in D3D11.h called  D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT. It is invalid to try to set the same subresource to multiple render target slots.  Any render targets not defined by this call are set to <strong><c>null</c></strong>.</p><p>If any subresources are also currently bound for reading in a different stage or writing (perhaps in a different part of the pipeline),  those bind points will be set to <strong><c>null</c></strong>, in order to prevent the same subresource from being read and written simultaneously in a single rendering operation.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>If the render-target views were created from an array resource type, then all of the render-target views must have the same array size.   This restriction also applies to the depth-stencil view, its array size must match that of the render-target views being bound.</p><p>The pixel shader must be able to simultaneously render to at least eight separate render targets. All of these render targets must access the same type of resource: Buffer, Texture1D, Texture1DArray, Texture2D, Texture2DArray, Texture3D, or TextureCube. All render targets must have the same size in all dimensions (width and height, and depth for 3D or array size for *Array types). If render targets use multisample anti-aliasing, all bound render targets and depth buffer must be the same form of multisample resource (that is, the sample counts must be the same). Each render target can have a different data format. These render target formats are not required to have identical bit-per-element counts.</p><p>Any combination of the eight slots for render targets can have a render target set or not set.</p><p>The same resource view cannot be bound to multiple render target slots simultaneously. However, you can set multiple non-overlapping resource views of a single resource as simultaneous multiple render targets.</p>	
            </remarks>	
            <msdn-id>ff476464</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In] const void** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargets</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.RenderTargetView[])">
            <summary>
              Binds a depth-stencil buffer and a set of render targets to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
            <remarks>	
            <p>The maximum number of active render targets a device can have active at any given time is set by a #define in D3D11.h called  D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT. It is invalid to try to set the same subresource to multiple render target slots.  Any render targets not defined by this call are set to <strong><c>null</c></strong>.</p><p>If any subresources are also currently bound for reading in a different stage or writing (perhaps in a different part of the pipeline),  those bind points will be set to <strong><c>null</c></strong>, in order to prevent the same subresource from being read and written simultaneously in a single rendering operation.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>If the render-target views were created from an array resource type, then all of the render-target views must have the same array size.   This restriction also applies to the depth-stencil view, its array size must match that of the render-target views being bound.</p><p>The pixel shader must be able to simultaneously render to at least eight separate render targets. All of these render targets must access the same type of resource: Buffer, Texture1D, Texture1DArray, Texture2D, Texture2DArray, Texture3D, or TextureCube. All render targets must have the same size in all dimensions (width and height, and depth for 3D or array size for *Array types). If render targets use multisample anti-aliasing, all bound render targets and depth buffer must be the same form of multisample resource (that is, the sample counts must be the same). Each render target can have a different data format. These render target formats are not required to have identical bit-per-element counts.</p><p>Any combination of the eight slots for render targets can have a render target set or not set.</p><p>The same resource view cannot be bound to multiple render target slots simultaneously. However, you can set multiple non-overlapping resource views of a single resource as simultaneous multiple render targets.</p>	
            </remarks>	
            <msdn-id>ff476464</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In] const void** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargets</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.RenderTargetView)">
            <summary>
              Binds a depth-stencil buffer and a single render target to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "renderTargetView">A view of the render target to bind.</param>
            <remarks>	
            <p>The maximum number of active render targets a device can have active at any given time is set by a #define in D3D11.h called  D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT. It is invalid to try to set the same subresource to multiple render target slots.  Any render targets not defined by this call are set to <strong><c>null</c></strong>.</p><p>If any subresources are also currently bound for reading in a different stage or writing (perhaps in a different part of the pipeline),  those bind points will be set to <strong><c>null</c></strong>, in order to prevent the same subresource from being read and written simultaneously in a single rendering operation.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>If the render-target views were created from an array resource type, then all of the render-target views must have the same array size.   This restriction also applies to the depth-stencil view, its array size must match that of the render-target views being bound.</p><p>The pixel shader must be able to simultaneously render to at least eight separate render targets. All of these render targets must access the same type of resource: Buffer, Texture1D, Texture1DArray, Texture2D, Texture2DArray, Texture3D, or TextureCube. All render targets must have the same size in all dimensions (width and height, and depth for 3D or array size for *Array types). If render targets use multisample anti-aliasing, all bound render targets and depth buffer must be the same form of multisample resource (that is, the sample counts must be the same). Each render target can have a different data format. These render target formats are not required to have identical bit-per-element counts.</p><p>Any combination of the eight slots for render targets can have a render target set or not set.</p><p>The same resource view cannot be bound to multiple render target slots simultaneously. However, you can set multiple non-overlapping resource views of a single resource as simultaneous multiple render targets.</p>	
            </remarks>	
            <msdn-id>ff476464</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In] const void** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargets</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,SharpDX.ComArray{SharpDX.Direct3D11.RenderTargetView})">
            <summary>
              Binds a depth-stencil buffer and a set of render targets to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
            <remarks>	
            <p>The maximum number of active render targets a device can have active at any given time is set by a #define in D3D11.h called  D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT. It is invalid to try to set the same subresource to multiple render target slots.  Any render targets not defined by this call are set to <strong><c>null</c></strong>.</p><p>If any subresources are also currently bound for reading in a different stage or writing (perhaps in a different part of the pipeline),  those bind points will be set to <strong><c>null</c></strong>, in order to prevent the same subresource from being read and written simultaneously in a single rendering operation.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>If the render-target views were created from an array resource type, then all of the render-target views must have the same array size.   This restriction also applies to the depth-stencil view, its array size must match that of the render-target views being bound.</p><p>The pixel shader must be able to simultaneously render to at least eight separate render targets. All of these render targets must access the same type of resource: Buffer, Texture1D, Texture1DArray, Texture2D, Texture2DArray, Texture3D, or TextureCube. All render targets must have the same size in all dimensions (width and height, and depth for 3D or array size for *Array types). If render targets use multisample anti-aliasing, all bound render targets and depth buffer must be the same form of multisample resource (that is, the sample counts must be the same). Each render target can have a different data format. These render target formats are not required to have identical bit-per-element counts.</p><p>Any combination of the eight slots for render targets can have a render target set or not set.</p><p>The same resource view cannot be bound to multiple render target slots simultaneously. However, you can set multiple non-overlapping resource views of a single resource as simultaneous multiple render targets.</p>	
            </remarks>	
            <msdn-id>ff476464</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In] const void** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargets</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.ComArray{SharpDX.Direct3D11.RenderTargetView})">
            <summary>
              Binds a set of render targets to the output-merger stage and clear the depth stencil view.
            </summary>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
            <remarks>	
            <p>The maximum number of active render targets a device can have active at any given time is set by a #define in D3D11.h called  D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT. It is invalid to try to set the same subresource to multiple render target slots.  Any render targets not defined by this call are set to <strong><c>null</c></strong>.</p><p>If any subresources are also currently bound for reading in a different stage or writing (perhaps in a different part of the pipeline),  those bind points will be set to <strong><c>null</c></strong>, in order to prevent the same subresource from being read and written simultaneously in a single rendering operation.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>If the render-target views were created from an array resource type, then all of the render-target views must have the same array size.   This restriction also applies to the depth-stencil view, its array size must match that of the render-target views being bound.</p><p>The pixel shader must be able to simultaneously render to at least eight separate render targets. All of these render targets must access the same type of resource: Buffer, Texture1D, Texture1DArray, Texture2D, Texture2DArray, Texture3D, or TextureCube. All render targets must have the same size in all dimensions (width and height, and depth for 3D or array size for *Array types). If render targets use multisample anti-aliasing, all bound render targets and depth buffer must be the same form of multisample resource (that is, the sample counts must be the same). Each render target can have a different data format. These render target formats are not required to have identical bit-per-element counts.</p><p>Any combination of the eight slots for render targets can have a render target set or not set.</p><p>The same resource view cannot be bound to multiple render target slots simultaneously. However, you can set multiple non-overlapping resource views of a single resource as simultaneous multiple render targets.</p>	
            </remarks>	
            <msdn-id>ff476464</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In] const void** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargets</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.RenderTargetView,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[])">
            <summary>
              Binds a set of unordered access views and a single render target to the output-merger stage.
            </summary>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetView">A view of the render target to bind.</param>
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],SharpDX.Direct3D11.RenderTargetView[])">
            <summary>
              Binds a set of unordered access views and a set of render targets to the output-merger stage.
            </summary>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.RenderTargetView,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[])">
            <summary>
              Binds a depth-stencil buffer, a set of unordered access views, and a single render target to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetView">A view of the render target to bind.</param>
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],SharpDX.Direct3D11.RenderTargetView[])">
            <summary>
              Binds a depth-stencil buffer, a set of unordered access views, and a set of render targets to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.RenderTargetView,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[])">
            <summary>
              Binds a set of unordered access views and a single render target to the output-merger stage.
            </summary>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetView">A view of the render target to bind.</param>
            <param name = "initialLengths">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for that Appendable/Consumeable UAV.</param>
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[],SharpDX.Direct3D11.RenderTargetView[])">
            <summary>
              Binds a set of unordered access views and a set of render targets to the output-merger stage.
            </summary>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
            <param name = "initialLengths">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for that Appendable/Consumeable UAV.</param>
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.RenderTargetView,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[])">
            <summary>
              Binds a depth-stencil buffer, a set of unordered access views, and a single render target to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetView">A view of the render target to bind.</param>
            <param name = "initialLengths">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for that Appendable/Consumeable UAV.</param>
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[],SharpDX.Direct3D11.RenderTargetView[])">
            <summary>
              Binds a depth-stencil buffer, a set of unordered access views, and a set of render targets to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
            <param name = "initialLengths">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for that Appendable/Consumeable UAV.</param>
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargets(System.Int32,SharpDX.Direct3D11.RenderTargetView[],SharpDX.Direct3D11.DepthStencilView)">
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetUnorderedAccessView(System.Int32,SharpDX.Direct3D11.UnorderedAccessView)">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to begin setting. </param>
            <param name="unorderedAccessView">A reference to an <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method. </param>
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetUnorderedAccessView(System.Int32,SharpDX.Direct3D11.UnorderedAccessView,System.Int32)">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to begin setting. </param>
            <param name="unorderedAccessView">A reference to an <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method. </param>
            <param name="uavInitialCount">An Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept.   Any other values set the hidden counter for that Appendable/Consumeable UAV. uAVInitialCount is only relevant for UAVs which have the <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags"/> flag,  otherwise the argument is ignored. </param>
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetUnorderedAccessViews(System.Int32,SharpDX.Direct3D11.UnorderedAccessView[])">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to begin setting. </param>
            <param name="unorderedAccessViews">A reference to an array of <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method. </param>
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetUnorderedAccessViews(System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[])">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to begin setting. </param>
            <param name="unorderedAccessViews">A reference to an array of <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method. </param>
            <param name="uavInitialCounts">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept.   Any other values set the hidden counter for that Appendable/Consumeable UAV.  pUAVInitialCounts is only relevant for UAVs which have the <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags"/> flag,  otherwise the argument is ignored. </param>
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargetsAndUnorderedAccessViews(System.Int32,SharpDX.Direct3D11.RenderTargetView[],SharpDX.Direct3D11.DepthStencilView,System.Int32,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[])">
            <summary>	
            <p>Binds resources to the output-merger stage.</p>	
            </summary>	
            <param name="numRTVs"><dd>  <p>Number of render-target views (<em>ppRenderTargetViews</em>) and depth-stencil view (<em>ppDepthStencilView</em>)  to bind. If you set <em>NumViews</em> to D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL (0xffffffff), this method does not modify the currently bound render-target views (RTVs) and also does not modify depth-stencil view (DSV).</p> </dd></param>	
            <param name="renderTargetViewsOut"><dd>  <p>Pointer to an array of <strong><see cref="T:SharpDX.Direct3D11.RenderTargetView"/></strong>s, which represent render-target views. Specify <strong><c>null</c></strong> to set none.</p> </dd></param>	
            <param name="depthStencilViewRef"><dd>  <p>Pointer to a <strong><see cref="T:SharpDX.Direct3D11.DepthStencilView"/></strong>, which represents a depth-stencil view. Specify <strong><c>null</c></strong> to set none.</p> </dd></param>	
            <param name="uAVStartSlot"><dd>  <p>Index into a zero-based array to begin setting unordered-access views (ranges from 0 to <see cref="F:SharpDX.Direct3D11.ComputeShaderStage.UnorderedAccessViewSlotCount"/> - 1).</p> <p> For the Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - 1. D3D11_1_UAV_SLOT_COUNT is defined as 64.</p> <p>For pixel shaders, <em>UAVStartSlot</em> should be equal to the number of render-target views being bound. </p> </dd></param>	
            <param name="numUAVs"><dd>  <p>Number of unordered-access views (UAVs) in <em>ppUnorderedAccessView</em>. If you set <em>NumUAVs</em> to D3D11_KEEP_UNORDERED_ACCESS_VIEWS (0xffffffff), this method does not modify the currently bound unordered-access views.</p> <p>For the Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - <em>UAVStartSlot</em>.</p> </dd></param>	
            <param name="unorderedAccessViewsOut"><dd>  <p>Pointer to an array of <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/></strong>s, which represent unordered-access views.</p> </dd></param>	
            <param name="uAVInitialCountsRef"><dd>  <p>An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter  for that appendable and consumable UAV. <em>pUAVInitialCounts</em> is  relevant only for UAVs that were created with either  <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/></strong> or <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/></strong> specified  when the UAV was created; otherwise, the argument is ignored.</p> </dd></param>	
            <remarks>	
            <p>For pixel shaders, the render targets and unordered-access views share the same resource slots when being written out. This means that UAVs must be  given an offset so that they are placed in the slots after the render target views that are being bound. </p><p><strong>Note</strong>??RTVs, DSV, and UAVs cannot be set independently; they all need to be set at the same time.</p><p>Two RTVs conflict if they share a subresource (and therefore share the same resource).</p><p>Two UAVs conflict if they share a subresource (and therefore share the same resource).</p><p>An RTV conflicts with a UAV if they share a subresource or share a bind point.</p><p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> operates properly in the following situations:</p><ol> <li> <p><em>NumViews</em> != D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL and <em>NumUAVs</em> != D3D11_KEEP_UNORDERED_ACCESS_VIEWS</p> <p>The following conditions must be true for <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> to succeed and for the runtime to pass the bind information to the driver:</p> <ul> <li><em>NumViews</em> &lt;= 8</li> <li><em>UAVStartSlot</em> &gt;= <em>NumViews</em></li> <li><em>UAVStartSlot</em> + <em>NumUAVs</em> &lt;= 8</li> <li>There must be no conflicts in the set of all <em>ppRenderTargetViews</em> and <em>ppUnorderedAccessView</em>.</li> <li><em>ppDepthStencilView</em> must match the render-target views. For more information about resource views, see Introduction to a Resource in Direct3D 11.</li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> performs the following tasks:</p> <ul> <li>Unbinds all currently bound conflicting resources (stream-output target resources (SOTargets), compute shader (CS) UAVs, shader-resource views (SRVs)).</li> <li>Binds <em>ppRenderTargetViews</em>, <em>ppDepthStencilView</em>, and <em>ppUnorderedAccessView</em>.</li> </ul> </li> <li> <p><em>NumViews</em> == D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL </p> <p>In this situation, <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> binds only UAVs. </p> <p>The following conditions must be true for <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> to succeed and for the runtime to pass the bind information to the driver:</p> <ul> <li><em>UAVStartSlot</em> + <em>NumUAVs</em> &lt;= 8</li> <li>There must be no conflicts in <em>ppUnorderedAccessView</em>.</li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> unbinds the following items:</p> <ul> <li>All RTVs in slots &gt;= <em>UAVStartSlot</em></li> <li>All RTVs that conflict with any UAVs in <em>ppUnorderedAccessView</em></li> <li>All currently bound resources (SOTargets, CS UAVs, SRVs) that conflict with <em>ppUnorderedAccessView</em></li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> binds <em>ppUnorderedAccessView</em>.</p> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> ignores <em>ppDepthStencilView</em>, and the current depth-stencil view remains bound.</p> </li> <li> <p><em>NumUAVs</em> == D3D11_KEEP_UNORDERED_ACCESS_VIEWS</p> <p>In this situation, <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> binds only RTVs and DSV. </p> <p>The following conditions must be true for <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> to succeed and for the runtime to pass the bind information to the driver:</p> <ul> <li><em>NumViews</em> &lt;= 8</li> <li>There must be no conflicts in <em>ppRenderTargetViews</em>.</li> <li><em>ppDepthStencilView</em> must match the render-target views. For more information about resource views, see Introduction to a Resource in Direct3D 11.</li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> unbinds the following items:</p> <ul> <li>All UAVs in slots &lt; <em>NumViews</em></li> <li>All UAVs that conflict with any RTVs in <em>ppRenderTargetViews</em></li> <li>All currently bound resources (SOTargets, CS UAVs, SRVs) that conflict with <em>ppRenderTargetViews</em></li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> binds <em>ppRenderTargetViews</em> and <em>ppDepthStencilView</em>.</p> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> ignores <em>UAVStartSlot</em>.</p> </li> </ol>	
            </remarks>	
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargetsAndUnorderedAccessViews(System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.RenderTargetView},SharpDX.Direct3D11.DepthStencilView,System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.UnorderedAccessView},System.Int32[])">
            <summary>	
            <p>Binds resources to the output-merger stage.</p>	
            </summary>	
            <param name="numRTVs"><dd>  <p>Number of render-target views (<em>ppRenderTargetViews</em>) and depth-stencil view (<em>ppDepthStencilView</em>)  to bind. If you set <em>NumViews</em> to D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL (0xffffffff), this method does not modify the currently bound render-target views (RTVs) and also does not modify depth-stencil view (DSV).</p> </dd></param>	
            <param name="renderTargetViewsOut"><dd>  <p>Pointer to an array of <strong><see cref="T:SharpDX.Direct3D11.RenderTargetView"/></strong>s, which represent render-target views. Specify <strong><c>null</c></strong> to set none.</p> </dd></param>	
            <param name="depthStencilViewRef"><dd>  <p>Pointer to a <strong><see cref="T:SharpDX.Direct3D11.DepthStencilView"/></strong>, which represents a depth-stencil view. Specify <strong><c>null</c></strong> to set none.</p> </dd></param>	
            <param name="uAVStartSlot"><dd>  <p>Index into a zero-based array to begin setting unordered-access views (ranges from 0 to <see cref="F:SharpDX.Direct3D11.ComputeShaderStage.UnorderedAccessViewSlotCount"/> - 1).</p> <p> For the Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - 1. D3D11_1_UAV_SLOT_COUNT is defined as 64.</p> <p>For pixel shaders, <em>UAVStartSlot</em> should be equal to the number of render-target views being bound. </p> </dd></param>	
            <param name="numUAVs"><dd>  <p>Number of unordered-access views (UAVs) in <em>ppUnorderedAccessView</em>. If you set <em>NumUAVs</em> to D3D11_KEEP_UNORDERED_ACCESS_VIEWS (0xffffffff), this method does not modify the currently bound unordered-access views.</p> <p>For the Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - <em>UAVStartSlot</em>.</p> </dd></param>	
            <param name="unorderedAccessViewsOut"><dd>  <p>Pointer to an array of <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/></strong>s, which represent unordered-access views.</p> </dd></param>	
            <param name="uAVInitialCountsRef"><dd>  <p>An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter  for that appendable and consumable UAV. <em>pUAVInitialCounts</em> is  relevant only for UAVs that were created with either  <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/></strong> or <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/></strong> specified  when the UAV was created; otherwise, the argument is ignored.</p> </dd></param>	
            <remarks>	
            <p>For pixel shaders, the render targets and unordered-access views share the same resource slots when being written out. This means that UAVs must be  given an offset so that they are placed in the slots after the render target views that are being bound. </p><p><strong>Note</strong>??RTVs, DSV, and UAVs cannot be set independently; they all need to be set at the same time.</p><p>Two RTVs conflict if they share a subresource (and therefore share the same resource).</p><p>Two UAVs conflict if they share a subresource (and therefore share the same resource).</p><p>An RTV conflicts with a UAV if they share a subresource or share a bind point.</p><p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> operates properly in the following situations:</p><ol> <li> <p><em>NumViews</em> != D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL and <em>NumUAVs</em> != D3D11_KEEP_UNORDERED_ACCESS_VIEWS</p> <p>The following conditions must be true for <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> to succeed and for the runtime to pass the bind information to the driver:</p> <ul> <li><em>NumViews</em> &lt;= 8</li> <li><em>UAVStartSlot</em> &gt;= <em>NumViews</em></li> <li><em>UAVStartSlot</em> + <em>NumUAVs</em> &lt;= 8</li> <li>There must be no conflicts in the set of all <em>ppRenderTargetViews</em> and <em>ppUnorderedAccessView</em>.</li> <li><em>ppDepthStencilView</em> must match the render-target views. For more information about resource views, see Introduction to a Resource in Direct3D 11.</li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> performs the following tasks:</p> <ul> <li>Unbinds all currently bound conflicting resources (stream-output target resources (SOTargets), compute shader (CS) UAVs, shader-resource views (SRVs)).</li> <li>Binds <em>ppRenderTargetViews</em>, <em>ppDepthStencilView</em>, and <em>ppUnorderedAccessView</em>.</li> </ul> </li> <li> <p><em>NumViews</em> == D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL </p> <p>In this situation, <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> binds only UAVs. </p> <p>The following conditions must be true for <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> to succeed and for the runtime to pass the bind information to the driver:</p> <ul> <li><em>UAVStartSlot</em> + <em>NumUAVs</em> &lt;= 8</li> <li>There must be no conflicts in <em>ppUnorderedAccessView</em>.</li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> unbinds the following items:</p> <ul> <li>All RTVs in slots &gt;= <em>UAVStartSlot</em></li> <li>All RTVs that conflict with any UAVs in <em>ppUnorderedAccessView</em></li> <li>All currently bound resources (SOTargets, CS UAVs, SRVs) that conflict with <em>ppUnorderedAccessView</em></li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> binds <em>ppUnorderedAccessView</em>.</p> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> ignores <em>ppDepthStencilView</em>, and the current depth-stencil view remains bound.</p> </li> <li> <p><em>NumUAVs</em> == D3D11_KEEP_UNORDERED_ACCESS_VIEWS</p> <p>In this situation, <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> binds only RTVs and DSV. </p> <p>The following conditions must be true for <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> to succeed and for the runtime to pass the bind information to the driver:</p> <ul> <li><em>NumViews</em> &lt;= 8</li> <li>There must be no conflicts in <em>ppRenderTargetViews</em>.</li> <li><em>ppDepthStencilView</em> must match the render-target views. For more information about resource views, see Introduction to a Resource in Direct3D 11.</li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> unbinds the following items:</p> <ul> <li>All UAVs in slots &lt; <em>NumViews</em></li> <li>All UAVs that conflict with any RTVs in <em>ppRenderTargetViews</em></li> <li>All currently bound resources (SOTargets, CS UAVs, SRVs) that conflict with <em>ppRenderTargetViews</em></li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> binds <em>ppRenderTargetViews</em> and <em>ppDepthStencilView</em>.</p> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> ignores <em>UAVStartSlot</em>.</p> </li> </ol>	
            </remarks>	
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetBlendState(SharpDX.Direct3D11.BlendState,System.Nullable{SharpDX.Color4},System.UInt32)">
            <summary>	
            Set the blend state of the output-merger stage.	
            </summary>	
            <param name="blendStateRef"><para>Pointer to a blend-state interface (see <see cref="T:SharpDX.Direct3D11.BlendState"/>). Passing in <c>null</c> implies a default blend state. See remarks for further details.</para></param>	
            <param name="blendFactor"><para>Array of blend factors, one for each RGBA component. This requires a blend state object that specifies the <see cref="F:SharpDX.Direct3D11.BlendOption.BlendFactor"/> option.</para></param>	
            <param name="sampleMask"><para>32-bit sample coverage. The default value is 0xffffffff. See remarks.</para></param>	
            <remarks>	
            Blend state is used by the output-merger stage to determine how to blend together two pixel values. The two values are commonly the current pixel value and the pixel value already in the output render target. Use the blend operation to control where the two pixel values come from and how they are mathematically combined.To create a blend-state interface, call <see cref="M:SharpDX.Direct3D11.Device.CreateBlendState(SharpDX.Direct3D11.BlendStateDescription@,SharpDX.Direct3D11.BlendState)"/>.Passing in <c>null</c> for the blend-state interface indicates to the runtime to set a default blending state.  The following table indicates the default blending parameters.StateDefault Value AlphaToCoverageEnableFALSE BlendEnableFALSE[8] SrcBlendD3D11_BLEND_ONE DstBlendD3D11_BLEND_ZERO BlendOpD3D11_BLEND_OP_ADD SrcBlendAlphaD3D11_BLEND_ONE DstBlendAlphaD3D11_BLEND_ZERO BlendOpAlphaD3D11_BLEND_OP_ADD RenderTargetWriteMask[8]<see cref="F:SharpDX.Direct3D11.ColorWriteMaskFlags.All"/>[8]?A sample mask determines which samples get updated in all the active render targets. The mapping of bits in a sample mask to samples in a multisample render target is the responsibility of an individual application. A sample mask is always applied; it is independent of whether multisampling is enabled, and does not depend on whether an application uses multisample render targets.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <unmanaged>void ID3D11DeviceContext::OMSetBlendState([In, Optional] ID3D11BlendState* pBlendState,[In, Optional] const SHARPDX_COLOR4* BlendFactor,[In] unsigned int SampleMask)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.OutputMergerStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.OutputMergerStage">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.OutputMergerStage"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargets(System.Int32,System.IntPtr,SharpDX.Direct3D11.DepthStencilView)">
            <summary>	
            <p>Bind one or more render targets atomically and the depth-stencil buffer to the output-merger stage.</p>	
            </summary>	
            <param name="numViews"><dd>  <p>Number of render targets to bind (ranges between 0 and D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT).</p> </dd></param>	
            <param name="renderTargetViewsOut"><dd>  <p>Pointer to an array of render targets (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetView"/></strong>) to bind to the device.  If this parameter is <strong><c>null</c></strong>, no render targets are bound. See Remarks.</p> </dd></param>	
            <param name="depthStencilViewRef"><dd>  <p>Pointer to a depth-stencil view (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilView"/></strong>) to bind to the device.  If this parameter is <strong><c>null</c></strong>, the depth-stencil state is not bound.</p> </dd></param>	
            <remarks>	
            <p>The maximum number of active render targets a device can have active at any given time is set by a #define in D3D11.h called  D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT. It is invalid to try to set the same subresource to multiple render target slots.  Any render targets not defined by this call are set to <strong><c>null</c></strong>.</p><p>If any subresources are also currently bound for reading in a different stage or writing (perhaps in a different part of the pipeline),  those bind points will be set to <strong><c>null</c></strong>, in order to prevent the same subresource from being read and written simultaneously in a single rendering operation.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>If the render-target views were created from an array resource type, then all of the render-target views must have the same array size.   This restriction also applies to the depth-stencil view, its array size must match that of the render-target views being bound.</p><p>The pixel shader must be able to simultaneously render to at least eight separate render targets. All of these render targets must access the same type of resource: Buffer, Texture1D, Texture1DArray, Texture2D, Texture2DArray, Texture3D, or TextureCube. All render targets must have the same size in all dimensions (width and height, and depth for 3D or array size for *Array types). If render targets use multisample anti-aliasing, all bound render targets and depth buffer must be the same form of multisample resource (that is, the sample counts must be the same). Each render target can have a different data format. These render target formats are not required to have identical bit-per-element counts.</p><p>Any combination of the eight slots for render targets can have a render target set or not set.</p><p>The same resource view cannot be bound to multiple render target slots simultaneously. However, you can set multiple non-overlapping resource views of a single resource as simultaneous multiple render targets.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMSetRenderTargets']/*"/>	
            <msdn-id>ff476464</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In] const void** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargets</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargetsAndUnorderedAccessViews(System.Int32,System.IntPtr,SharpDX.Direct3D11.DepthStencilView,System.Int32,System.Int32,System.IntPtr,System.Int32[])">
            <summary>	
            <p>Binds resources to the output-merger stage.</p>	
            </summary>	
            <param name="numRTVs"><dd>  <p>Number of render-target views (<em>ppRenderTargetViews</em>) and depth-stencil view (<em>ppDepthStencilView</em>)  to bind. If you set <em>NumViews</em> to D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL (0xffffffff), this method does not modify the currently bound render-target views (RTVs) and also does not modify depth-stencil view (DSV).</p> </dd></param>	
            <param name="renderTargetViewsOut"><dd>  <p>Pointer to an array of <strong><see cref="T:SharpDX.Direct3D11.RenderTargetView"/></strong>s, which represent render-target views. Specify <strong><c>null</c></strong> to set none.</p> </dd></param>	
            <param name="depthStencilViewRef"><dd>  <p>Pointer to a <strong><see cref="T:SharpDX.Direct3D11.DepthStencilView"/></strong>, which represents a depth-stencil view. Specify <strong><c>null</c></strong> to set none.</p> </dd></param>	
            <param name="uAVStartSlot"><dd>  <p>Index into a zero-based array to begin setting unordered-access views (ranges from 0 to <see cref="F:SharpDX.Direct3D11.ComputeShaderStage.UnorderedAccessViewSlotCount"/> - 1).</p> <p> For the Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - 1. D3D11_1_UAV_SLOT_COUNT is defined as 64.</p> <p>For pixel shaders, <em>UAVStartSlot</em> should be equal to the number of render-target views being bound. </p> </dd></param>	
            <param name="numUAVs"><dd>  <p>Number of unordered-access views (UAVs) in <em>ppUnorderedAccessView</em>. If you set <em>NumUAVs</em> to D3D11_KEEP_UNORDERED_ACCESS_VIEWS (0xffffffff), this method does not modify the currently bound unordered-access views.</p> <p>For the Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - <em>UAVStartSlot</em>.</p> </dd></param>	
            <param name="unorderedAccessViewsOut"><dd>  <p>Pointer to an array of <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/></strong>s, which represent unordered-access views.</p> </dd></param>	
            <param name="uAVInitialCountsRef"><dd>  <p>An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter  for that appendable and consumable UAV. <em>pUAVInitialCounts</em> is  relevant only for UAVs that were created with either  <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/></strong> or <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/></strong> specified  when the UAV was created; otherwise, the argument is ignored.</p> </dd></param>	
            <remarks>	
            <p>For pixel shaders, the render targets and unordered-access views share the same resource slots when being written out. This means that UAVs must be  given an offset so that they are placed in the slots after the render target views that are being bound. </p><p><strong>Note</strong>??RTVs, DSV, and UAVs cannot be set independently; they all need to be set at the same time.</p><p>Two RTVs conflict if they share a subresource (and therefore share the same resource).</p><p>Two UAVs conflict if they share a subresource (and therefore share the same resource).</p><p>An RTV conflicts with a UAV if they share a subresource or share a bind point.</p><p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> operates properly in the following situations:</p><ol> <li> <p><em>NumViews</em> != D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL and <em>NumUAVs</em> != D3D11_KEEP_UNORDERED_ACCESS_VIEWS</p> <p>The following conditions must be true for <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> to succeed and for the runtime to pass the bind information to the driver:</p> <ul> <li><em>NumViews</em> &lt;= 8</li> <li><em>UAVStartSlot</em> &gt;= <em>NumViews</em></li> <li><em>UAVStartSlot</em> + <em>NumUAVs</em> &lt;= 8</li> <li>There must be no conflicts in the set of all <em>ppRenderTargetViews</em> and <em>ppUnorderedAccessView</em>.</li> <li><em>ppDepthStencilView</em> must match the render-target views. For more information about resource views, see Introduction to a Resource in Direct3D 11.</li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> performs the following tasks:</p> <ul> <li>Unbinds all currently bound conflicting resources (stream-output target resources (SOTargets), compute shader (CS) UAVs, shader-resource views (SRVs)).</li> <li>Binds <em>ppRenderTargetViews</em>, <em>ppDepthStencilView</em>, and <em>ppUnorderedAccessView</em>.</li> </ul> </li> <li> <p><em>NumViews</em> == D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL </p> <p>In this situation, <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> binds only UAVs. </p> <p>The following conditions must be true for <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> to succeed and for the runtime to pass the bind information to the driver:</p> <ul> <li><em>UAVStartSlot</em> + <em>NumUAVs</em> &lt;= 8</li> <li>There must be no conflicts in <em>ppUnorderedAccessView</em>.</li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> unbinds the following items:</p> <ul> <li>All RTVs in slots &gt;= <em>UAVStartSlot</em></li> <li>All RTVs that conflict with any UAVs in <em>ppUnorderedAccessView</em></li> <li>All currently bound resources (SOTargets, CS UAVs, SRVs) that conflict with <em>ppUnorderedAccessView</em></li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> binds <em>ppUnorderedAccessView</em>.</p> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> ignores <em>ppDepthStencilView</em>, and the current depth-stencil view remains bound.</p> </li> <li> <p><em>NumUAVs</em> == D3D11_KEEP_UNORDERED_ACCESS_VIEWS</p> <p>In this situation, <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> binds only RTVs and DSV. </p> <p>The following conditions must be true for <strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> to succeed and for the runtime to pass the bind information to the driver:</p> <ul> <li><em>NumViews</em> &lt;= 8</li> <li>There must be no conflicts in <em>ppRenderTargetViews</em>.</li> <li><em>ppDepthStencilView</em> must match the render-target views. For more information about resource views, see Introduction to a Resource in Direct3D 11.</li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> unbinds the following items:</p> <ul> <li>All UAVs in slots &lt; <em>NumViews</em></li> <li>All UAVs that conflict with any RTVs in <em>ppRenderTargetViews</em></li> <li>All currently bound resources (SOTargets, CS UAVs, SRVs) that conflict with <em>ppRenderTargetViews</em></li> </ul> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> binds <em>ppRenderTargetViews</em> and <em>ppDepthStencilView</em>.</p> <p><strong>OMSetRenderTargetsAndUnorderedAccessViews</strong> ignores <em>UAVStartSlot</em>.</p> </li> </ol>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews']/*"/>	
            <msdn-id>ff476465</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const void** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const void** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetBlendState(SharpDX.Direct3D11.BlendState,System.Nullable{SharpDX.Color4},System.Int32)">
            <summary>	
            <p>Set the blend state of the output-merger stage.</p>	
            </summary>	
            <param name="blendStateRef"><dd>  <p>Pointer to a blend-state interface (see <strong><see cref="T:SharpDX.Direct3D11.BlendState"/></strong>). Passing in <strong><c>null</c></strong> implies a default blend state. See remarks for further details.</p> </dd></param>	
            <param name="blendFactor"><dd>  <p>Array of blend factors, one for each RGBA component. This requires a blend state object that specifies the <strong><see cref="F:SharpDX.Direct3D11.BlendOption.BlendFactor"/></strong> option.</p> </dd></param>	
            <param name="sampleMask"><dd>  <p>32-bit sample coverage. The default value is 0xffffffff. See remarks.</p> </dd></param>	
            <remarks>	
            <p>Blend state is used by the output-merger stage to determine how to blend together two pixel values. The two values are commonly the current pixel value and the pixel value already in the output render target. Use the <strong>blend operation</strong> to control where the two pixel values come from and how they are mathematically combined.</p><p>To create a blend-state interface, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateBlendState(SharpDX.Direct3D11.BlendStateDescription@,SharpDX.Direct3D11.BlendState)"/></strong>.</p><p>Passing in <strong><c>null</c></strong> for the blend-state interface indicates to the runtime to set a default blending state.  The following table indicates the default blending parameters.</p><table> <tr><th>State</th><th>Default Value</th></tr> <tr><td>AlphaToCoverageEnable</td><td><strong><see cref="F:SharpDX.Result.False"/></strong></td></tr> <tr><td>BlendEnable</td><td><strong><see cref="F:SharpDX.Result.False"/></strong>[8]</td></tr> <tr><td>SrcBlend</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.One"/></td></tr> <tr><td>DstBlend</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.Zero"/></td></tr> <tr><td>BlendOp</td><td><see cref="F:SharpDX.Direct3D11.BlendOperation.Add"/></td></tr> <tr><td>SrcBlendAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.One"/></td></tr> <tr><td>DstBlendAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.Zero"/></td></tr> <tr><td>BlendOpAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOperation.Add"/></td></tr> <tr><td>RenderTargetWriteMask[8]</td><td><see cref="F:SharpDX.Direct3D11.ColorWriteMaskFlags.All"/>[8]</td></tr> </table><p>?</p><p>A sample mask determines which samples get updated in all the active render targets. The mapping of bits in a sample mask to samples in a multisample render target is the responsibility of an individual application. A sample mask is always applied; it is independent of whether multisampling is enabled, and does not depend on whether an application uses multisample render targets.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMSetBlendState']/*"/>	
            <msdn-id>ff476462</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetBlendState([In, Optional] ID3D11BlendState* pBlendState,[In, Optional] const SHARPDX_COLOR4* BlendFactor,[In] unsigned int SampleMask)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetBlendState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetDepthStencilState(SharpDX.Direct3D11.DepthStencilState,System.Int32)">
            <summary>	
            <p>Sets the depth-stencil state of the output-merger stage.</p>	
            </summary>	
            <param name="depthStencilStateRef"><dd>  <p>Pointer to a depth-stencil state interface (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilState"/></strong>) to bind to the device. Set this to <strong><c>null</c></strong> to use the default state listed in <strong><see cref="T:SharpDX.Direct3D11.DepthStencilStateDescription"/></strong>.</p> </dd></param>	
            <param name="stencilRef"><dd>  <p>Reference value to perform against when doing a depth-stencil test. See remarks.</p> </dd></param>	
            <remarks>	
            <p>To create a depth-stencil state interface, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilState(SharpDX.Direct3D11.DepthStencilStateDescription@,SharpDX.Direct3D11.DepthStencilState)"/></strong>.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMSetDepthStencilState']/*"/>	
            <msdn-id>ff476463</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMSetDepthStencilState([In, Optional] ID3D11DepthStencilState* pDepthStencilState,[In] unsigned int StencilRef)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMSetDepthStencilState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetRenderTargets(System.Int32,SharpDX.Direct3D11.RenderTargetView[],SharpDX.Direct3D11.DepthStencilView@)">
            <summary>	
            <p>Get references to the resources bound to the output-merger stage.</p>	
            </summary>	
            <param name="numViews"><dd>  <p>Number of render targets to retrieve.</p> </dd></param>	
            <param name="renderTargetViewsOut"><dd>  <p>Pointer to an array of <strong><see cref="T:SharpDX.Direct3D11.RenderTargetView"/></strong>s which represent render target views. Specify <strong><c>null</c></strong> for this parameter when retrieval of a render target is not needed. </p> </dd></param>	
            <param name="depthStencilViewOut"><dd>  <p>Pointer to a <strong><see cref="T:SharpDX.Direct3D11.DepthStencilView"/></strong>, which represents a depth-stencil view. Specify <strong><c>null</c></strong> for this parameter when retrieval of the depth-stencil view is not needed.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMGetRenderTargets']/*"/>	
            <msdn-id>ff476460</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMGetRenderTargets([In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D11DepthStencilView** ppDepthStencilView)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMGetRenderTargets</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetRenderTargetsAndUnorderedAccessViews(System.Int32,SharpDX.Direct3D11.RenderTargetView[],SharpDX.Direct3D11.DepthStencilView@,System.Int32,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[])">
            <summary>	
            <p>Get references to the resources bound to the output-merger stage.</p>	
            </summary>	
            <param name="numRTVs"><dd>  <p>The number of render-target views to retrieve.</p> </dd></param>	
            <param name="renderTargetViewsOut"><dd>  <p>Pointer to an array of <strong><see cref="T:SharpDX.Direct3D11.RenderTargetView"/></strong>s, which represent render-target views. Specify <strong><c>null</c></strong> for this parameter when retrieval of render-target views is not required. </p> </dd></param>	
            <param name="depthStencilViewOut"><dd>  <p>Pointer to a <strong><see cref="T:SharpDX.Direct3D11.DepthStencilView"/></strong>, which represents a depth-stencil view. Specify <strong><c>null</c></strong> for this parameter when retrieval of the depth-stencil view is not required.</p> </dd></param>	
            <param name="uAVStartSlot"><dd>  <p>Index into a zero-based array to begin retrieving unordered-access views (ranges from 0 to <see cref="F:SharpDX.Direct3D11.ComputeShaderStage.UnorderedAccessViewSlotCount"/> - 1). For pixel shaders <em>UAVStartSlot</em> should be equal to the number of render-target views that are bound. </p> </dd></param>	
            <param name="numUAVs"><dd>  <p>Number of unordered-access views to return in <em>ppUnorderedAccessViews</em>. This number ranges from 0 to <see cref="F:SharpDX.Direct3D11.ComputeShaderStage.UnorderedAccessViewSlotCount"/> - <em>UAVStartSlot</em>.</p> </dd></param>	
            <param name="unorderedAccessViewsOut"><dd>  <p>Pointer to an array of <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/></strong>s, which represent unordered-access views that are retrieved. Specify <strong><c>null</c></strong> for this parameter when retrieval of unordered-access views is not required. </p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call <strong>IUnknown::Release</strong> on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMGetRenderTargetsAndUnorderedAccessViews']/*"/>	
            <msdn-id>ff476461</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMGetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[Out, Buffer, Optional] ID3D11RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D11DepthStencilView** ppDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[Out, Buffer, Optional] ID3D11UnorderedAccessView** ppUnorderedAccessViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMGetRenderTargetsAndUnorderedAccessViews</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetBlendState(SharpDX.Direct3D11.BlendState@,SharpDX.Color4@,System.Int32@)">
            <summary>	
            <p>Get the blend state of the output-merger stage.</p>	
            </summary>	
            <param name="blendStateOut"><dd>  <p>Address of a reference to a blend-state interface (see <strong><see cref="T:SharpDX.Direct3D11.BlendState"/></strong>).</p> </dd></param>	
            <param name="blendFactor"><dd>  <p>Array of blend factors, one for each RGBA component.</p> </dd></param>	
            <param name="sampleMaskRef"><dd>  <p>Pointer to a <strong>sample mask</strong>.</p> </dd></param>	
            <remarks>	
            <p>The reference count of the returned interface will be incremented by one when the blend state is retrieved. Applications must release returned reference(s) when they are no longer needed, or else there will be a memory leak.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMGetBlendState']/*"/>	
            <msdn-id>ff476458</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMGetBlendState([Out, Optional] ID3D11BlendState** ppBlendState,[Out, Optional] SHARPDX_COLOR4* BlendFactor,[Out, Optional] unsigned int* pSampleMask)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMGetBlendState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetDepthStencilState(SharpDX.Direct3D11.DepthStencilState@,System.Int32@)">
            <summary>	
            <p>Gets the depth-stencil state of the output-merger stage.</p>	
            </summary>	
            <param name="depthStencilStateOut"><dd>  <p>Address of a reference to a depth-stencil state interface (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilState"/></strong>) to be filled with information from the device.</p> </dd></param>	
            <param name="stencilRefRef"><dd>  <p>Pointer to the stencil reference value used in the depth-stencil test.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMGetDepthStencilState']/*"/>	
            <msdn-id>ff476459</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::OMGetDepthStencilState([Out, Optional] ID3D11DepthStencilState** ppDepthStencilState,[Out, Optional] unsigned int* pStencilRef)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::OMGetDepthStencilState</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.OutputMergerStage.BlendFactor">
            <summary>
            Gets or sets the blend factor.
            </summary>
            <value>The blend factor.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.OutputMergerStage.BlendSampleMask">
            <summary>
            Gets or sets the blend sample mask.
            </summary>
            <value>The blend sample mask.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.OutputMergerStage.BlendState">
            <summary>
            Gets or sets the state of the blend.
            </summary>
            <value>The state of the blend.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.OutputMergerStage.DepthStencilReference">
            <summary>
            Gets or sets the depth stencil reference.
            </summary>
            <value>The depth stencil reference.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.OutputMergerStage.DepthStencilState">
            <summary>
            Gets or sets the state of the depth stencil.
            </summary>
            <value>The state of the depth stencil.</value>
        </member>
        <member name="T:SharpDX.Direct3D11.RasterizerStage">
            <summary>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface represents a device context which generates rendering commands.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <msdn-id>ff476385</msdn-id>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetViewports">
            <summary>	
            Get the array of {{viewports}} bound  to the {{rasterizer stage}} 	
            </summary>	
            <returns>An array of viewports (see <see cref="T:SharpDX.ViewportF"/>).</returns>
            <unmanaged>void RSGetViewports([InOut] int* NumViewports,[Out, Buffer, Optional] D3D10_VIEWPORT* pViewports)</unmanaged>
            <msdn-id>ff476477</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSGetViewports([InOut] unsigned int* pNumViewports,[Out, Buffer, Optional] D3D11_VIEWPORT* pViewports)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSGetViewports</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetViewports(SharpDX.ViewportF[])">
            <summary>	
            Get the array of {{viewports}} bound  to the {{rasterizer stage}} 	
            </summary>	
            <returns>An array of viewports (see <see cref="T:SharpDX.ViewportF"/>).</returns>
            <unmanaged>void RSGetViewports([InOut] int* NumViewports,[Out, Buffer, Optional] D3D10_VIEWPORT* pViewports)</unmanaged>
            <msdn-id>ff476477</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSGetViewports([InOut] unsigned int* pNumViewports,[Out, Buffer, Optional] D3D11_VIEWPORT* pViewports)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSGetViewports</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetScissorRectangles">
            <summary>	
            Get the array of {{scissor rectangles}} bound to the {{rasterizer stage}}.	
            </summary>	
            <returns>An array of scissor rectangles (see <see cref="T:SharpDX.Rectangle"/>).</returns>
            <unmanaged>void RSGetScissorRects([InOut] int* NumRects,[Out, Buffer, Optional] D3D10_RECT* pRects)</unmanaged>
            <msdn-id>ff476475</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSGetScissorRects([InOut] unsigned int* pNumRects,[Out, Buffer, Optional] RECT* pRects)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSGetScissorRects</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetScissorRectangles(SharpDX.Rectangle[])">
            <summary>	
            Get the array of {{scissor rectangles}} bound to the {{rasterizer stage}}.	
            </summary>	
            <returns>An array of scissor rectangles (see <see cref="T:SharpDX.Rectangle"/>).</returns>
            <unmanaged>void RSGetScissorRects([InOut] int* NumRects,[Out, Buffer, Optional] D3D10_RECT* pRects)</unmanaged>
            <msdn-id>ff476475</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSGetScissorRects([InOut] unsigned int* pNumRects,[Out, Buffer, Optional] RECT* pRects)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSGetScissorRects</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetScissorRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Binds a single scissor rectangle to the rasterizer stage.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
            <remarks>	
            <p>All scissor rects must be set atomically as one operation. Any scissor rects not defined by the call are disabled.</p><p>The scissor rectangles will only be used if ScissorEnable is set to true in the rasterizer state (see <strong><see cref="T:SharpDX.Direct3D11.RasterizerStateDescription"/></strong>).</p><p>Which scissor rectangle to use is determined by the SV_ViewportArrayIndex semantic output by a geometry shader (see shader semantic syntax). If a geometry shader does not make use of the SV_ViewportArrayIndex semantic then Direct3D will use the first scissor rectangle in the array.</p><p>Each scissor rectangle in the array corresponds to a viewport in an array of viewports (see <strong><see cref="M:SharpDX.Direct3D11.RasterizerStage.SetViewports(SharpDX.ViewportF)"/></strong>).</p>	
            </remarks>	
            <msdn-id>ff476478</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSSetScissorRects([In] unsigned int NumRects,[In, Buffer, Optional] const void* pRects)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSSetScissorRects</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetScissorRectangles(SharpDX.Rectangle[])">
            <summary>
              Binds a set of scissor rectangles to the rasterizer stage.
            </summary>
            <param name="scissorRectangles">The set of scissor rectangles to bind.</param>
            <remarks>	
            <p>All scissor rects must be set atomically as one operation. Any scissor rects not defined by the call are disabled.</p><p>The scissor rectangles will only be used if ScissorEnable is set to true in the rasterizer state (see <strong><see cref="T:SharpDX.Direct3D11.RasterizerStateDescription"/></strong>).</p><p>Which scissor rectangle to use is determined by the SV_ViewportArrayIndex semantic output by a geometry shader (see shader semantic syntax). If a geometry shader does not make use of the SV_ViewportArrayIndex semantic then Direct3D will use the first scissor rectangle in the array.</p><p>Each scissor rectangle in the array corresponds to a viewport in an array of viewports (see <strong><see cref="M:SharpDX.Direct3D11.RasterizerStage.SetViewports(SharpDX.ViewportF)"/></strong>).</p>	
            </remarks>	
            <msdn-id>ff476478</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSSetScissorRects([In] unsigned int NumRects,[In, Buffer, Optional] const void* pRects)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSSetScissorRects</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetViewport(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Binds a single viewport to the rasterizer stage.
            </summary>
            <param name="x">The x coord of the viewport.</param>
            <param name="y">The x coord of the viewport.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="minZ">The min Z.</param>
            <param name="maxZ">The max Z.</param>
            <remarks>	
            <p></p><p>All viewports must be set atomically as one operation. Any viewports not defined by the call are disabled.</p><p>Which viewport to use is determined by the SV_ViewportArrayIndex semantic output by a geometry shader; if a geometry shader does not specify the semantic, Direct3D will use the first viewport in the array.</p>	
            </remarks>	
            <msdn-id>ff476480</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSSetViewports([In] unsigned int NumViewports,[In, Buffer, Optional] const void* pViewports)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSSetViewports</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetViewports(SharpDX.ViewportF)">
            <summary>
            Binds a single viewport to the rasterizer stage.
            </summary>
            <param name="viewport">The viewport.</param>
            <remarks>	
            <p></p><p>All viewports must be set atomically as one operation. Any viewports not defined by the call are disabled.</p><p>Which viewport to use is determined by the SV_ViewportArrayIndex semantic output by a geometry shader; if a geometry shader does not specify the semantic, Direct3D will use the first viewport in the array.</p>	
            </remarks>	
            <msdn-id>ff476480</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSSetViewports([In] unsigned int NumViewports,[In, Buffer, Optional] const void* pViewports)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSSetViewports</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetViewports(SharpDX.ViewportF[])">
            <summary>
              Binds a set of viewports to the rasterizer stage.
            </summary>
            <param name = "viewports">The set of viewports to bind.</param>
            <remarks>	
            <p></p><p>All viewports must be set atomically as one operation. Any viewports not defined by the call are disabled.</p><p>Which viewport to use is determined by the SV_ViewportArrayIndex semantic output by a geometry shader; if a geometry shader does not specify the semantic, Direct3D will use the first viewport in the array.</p>	
            </remarks>	
            <msdn-id>ff476480</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSSetViewports([In] unsigned int NumViewports,[In, Buffer, Optional] const void* pViewports)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSSetViewports</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.RasterizerStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.RasterizerStage">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.RasterizerStage"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetState(SharpDX.Direct3D11.RasterizerState)">
            <summary>	
            <p>Set the <strong>rasterizer state</strong> for the rasterizer stage of the pipeline.</p>	
            </summary>	
            <param name="rasterizerStateRef">No documentation.</param>	
            <remarks>	
            <p>To create a rasterizer state interface, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateRasterizerState(SharpDX.Direct3D11.RasterizerStateDescription@,SharpDX.Direct3D11.RasterizerState)"/></strong>.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSSetState']/*"/>	
            <msdn-id>ff476479</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSSetState([In, Optional] ID3D11RasterizerState* pRasterizerState)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSSetState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetViewports(System.Int32,System.IntPtr)">
            <summary>	
            <p>Bind an array of viewports to the rasterizer stage of the pipeline.</p>	
            </summary>	
            <param name="numViewports"><dd>  <p>Number of viewports to bind.</p> </dd></param>	
            <param name="viewportsRef"><dd>  <p>An array of <strong><see cref="T:SharpDX.ViewportF"/></strong> structures to bind to the device. See the structure page for details about how the viewport size is dependent on the device feature level which has changed between Direct3D 11 and Direct3D 10.</p> </dd></param>	
            <remarks>	
            <p></p><p>All viewports must be set atomically as one operation. Any viewports not defined by the call are disabled.</p><p>Which viewport to use is determined by the SV_ViewportArrayIndex semantic output by a geometry shader; if a geometry shader does not specify the semantic, Direct3D will use the first viewport in the array.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSSetViewports']/*"/>	
            <msdn-id>ff476480</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSSetViewports([In] unsigned int NumViewports,[In, Buffer, Optional] const void* pViewports)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSSetViewports</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetScissorRects(System.Int32,System.IntPtr)">
            <summary>	
            <p>Bind an array of scissor rectangles to the rasterizer stage.</p>	
            </summary>	
            <param name="numRects"><dd>  <p>Number of scissor rectangles to bind.</p> </dd></param>	
            <param name="rectsRef"><dd>  <p>An array of scissor rectangles (see <strong>D3D11_RECT</strong>).</p> </dd></param>	
            <remarks>	
            <p>All scissor rects must be set atomically as one operation. Any scissor rects not defined by the call are disabled.</p><p>The scissor rectangles will only be used if ScissorEnable is set to true in the rasterizer state (see <strong><see cref="T:SharpDX.Direct3D11.RasterizerStateDescription"/></strong>).</p><p>Which scissor rectangle to use is determined by the SV_ViewportArrayIndex semantic output by a geometry shader (see shader semantic syntax). If a geometry shader does not make use of the SV_ViewportArrayIndex semantic then Direct3D will use the first scissor rectangle in the array.</p><p>Each scissor rectangle in the array corresponds to a viewport in an array of viewports (see <strong><see cref="M:SharpDX.Direct3D11.RasterizerStage.SetViewports(SharpDX.ViewportF)"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSSetScissorRects']/*"/>	
            <msdn-id>ff476478</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSSetScissorRects([In] unsigned int NumRects,[In, Buffer, Optional] const void* pRects)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSSetScissorRects</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetState(SharpDX.Direct3D11.RasterizerState@)">
            <summary>	
            <p>Get the <strong>rasterizer state</strong> from the rasterizer stage of the pipeline.</p>	
            </summary>	
            <param name="rasterizerStateOut">No documentation.</param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSGetState']/*"/>	
            <msdn-id>ff476476</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSGetState([Out] ID3D11RasterizerState** ppRasterizerState)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSGetState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetViewports(System.Int32@,SharpDX.ViewportF[])">
            <summary>	
            <p>Get the array of viewports bound to the rasterizer stage</p>	
            </summary>	
            <param name="numViewportsRef"><dd>  <p>The input specifies the number of viewports (ranges from 0 to D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  in <em>pViewports</em>, the output contains the actual number of viewports returned.   If <em>pViewports</em> is <strong><c>null</c></strong>, this will be filled with the number of viewports currently bound.</p> </dd></param>	
            <param name="viewportsRef"><dd>  <p>An array of <strong><see cref="T:SharpDX.ViewportF"/></strong> structures that are bound to the device. If the number of viewports (in pNumViewports) is  greater than the actual number of viewports currently bound, then unused members of the array will contain 0.  See the structure page for details about how the viewport size is dependent on the device feature level which has changed between Direct3D 11  and Direct3D 10.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSGetViewports']/*"/>	
            <msdn-id>ff476477</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSGetViewports([InOut] unsigned int* pNumViewports,[Out, Buffer, Optional] D3D11_VIEWPORT* pViewports)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSGetViewports</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetScissorRects(System.Int32@,SharpDX.Rectangle[])">
            <summary>	
            <p>Get the array of scissor rectangles bound to the rasterizer stage.</p>	
            </summary>	
            <param name="numRectsRef"><dd>  <p>The number of scissor rectangles (ranges between 0 and D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) bound; set <em>pRects</em> to <strong><c>null</c></strong> to use <em>pNumRects</em> to see how many rectangles would be returned.</p> </dd></param>	
            <param name="rectsRef"><dd>  <p>An array of scissor rectangles (see <strong>D3D11_RECT</strong>). If NumRects is greater than the number of scissor rects currently bound, then unused members of the array will contain 0.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSGetScissorRects']/*"/>	
            <msdn-id>ff476475</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::RSGetScissorRects([InOut] unsigned int* pNumRects,[Out, Buffer, Optional] RECT* pRects)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::RSGetScissorRects</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerStage.State">
            <summary>	
            <p>Get or sets the <strong>rasterizer state</strong> from the rasterizer stage of the pipeline.</p>	
            </summary>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSGetState']/*"/>	
            <msdn-id>ff476476</msdn-id>	
            <unmanaged>RSGetState / RSSetState</unmanaged>	
            <unmanaged-short>RSGetState</unmanaged-short>	
            <unmanaged>void ID3D11DeviceContext::RSGetState([Out] ID3D11RasterizerState** ppRasterizerState)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.DomainShader">
            <summary>	
            <p>A domain-shader interface manages an executable program (a domain shader) that controls the domain-shader stage.</p>	
            </summary>	
            <remarks>	
            <p>The domain-shader interface has no methods; use HLSL to implement your shader functionality. All shaders are implemented from a common set of features referred to as the common-shader core..</p><p>To create a domain-shader interface, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDomainShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.DomainShader)"/></strong>. Before using a domain shader you must bind it to the device by calling <strong><see cref="M:SharpDX.Direct3D11.DomainShaderStage.SetShader(SharpDX.Direct3D11.DomainShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)"/></strong>.</p><p>This interface is defined in D3D11.h.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DomainShader']/*"/>	
            <msdn-id>ff476535</msdn-id>	
            <unmanaged>ID3D11DomainShader</unmanaged>	
            <unmanaged-short>ID3D11DomainShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShader.#ctor(SharpDX.Direct3D11.Device,System.Byte[],SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.DomainShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DomainShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShader.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.DomainShader">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.DomainShader"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:SharpDX.Direct3D11.AsynchronousFlags">
            <summary>	
            <p>Optional flags that control the behavior of <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong>.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_ASYNC_GETDATA_FLAG']/*"/>	
            <msdn-id>ff476084</msdn-id>	
            <unmanaged>D3D11_ASYNC_GETDATA_FLAG</unmanaged>	
            <unmanaged-short>D3D11_ASYNC_GETDATA_FLAG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AsynchronousFlags.DoNotFlush">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_ASYNC_GETDATA_DONOTFLUSH']/*"/>	
            <unmanaged>D3D11_ASYNC_GETDATA_DONOTFLUSH</unmanaged>	
            <unmanaged-short>D3D11_ASYNC_GETDATA_DONOTFLUSH</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AsynchronousFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedChannelType">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies the type of Microsoft Direct3D authenticated channel. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CHANNEL_TYPE']/*"/>	
            <msdn-id>hh447599</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CHANNEL_TYPE</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CHANNEL_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedChannelType.D3D11">
            <summary>	
            <dd> <p>Direct3D?11 channel. This channel provides communication with the Direct3D runtime. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CHANNEL_D3D11']/*"/>	
            <msdn-id>hh447599</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CHANNEL_D3D11</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CHANNEL_D3D11</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedChannelType.DriverSoftware">
            <summary>	
            <dd> <p>Software driver channel. This channel provides communication with a driver that implements content protection mechanisms in software.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CHANNEL_DRIVER_SOFTWARE']/*"/>	
            <msdn-id>hh447599</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CHANNEL_DRIVER_SOFTWARE</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CHANNEL_DRIVER_SOFTWARE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedChannelType.DriverHardware">
            <summary>	
            <dd> <p>Hardware driver channel. This channel provides communication with a driver that implements content protection mechanisms in the GPU hardware. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CHANNEL_DRIVER_HARDWARE']/*"/>	
            <msdn-id>hh447599</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CHANNEL_DRIVER_HARDWARE</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CHANNEL_DRIVER_HARDWARE</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Specifies the type of process that is identified in the <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessOutput"/></strong> structure.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE']/*"/>	
            <msdn-id>hh447606</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType.ProcessidtypeUnknown">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_PROCESSIDTYPE_UNKNOWN']/*"/>	
            <unmanaged>D3D11_PROCESSIDTYPE_UNKNOWN</unmanaged>	
            <unmanaged-short>D3D11_PROCESSIDTYPE_UNKNOWN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType.ProcessidtypeDwm">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_PROCESSIDTYPE_DWM']/*"/>	
            <unmanaged>D3D11_PROCESSIDTYPE_DWM</unmanaged>	
            <unmanaged-short>D3D11_PROCESSIDTYPE_DWM</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType.ProcessidtypeHandle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_PROCESSIDTYPE_HANDLE']/*"/>	
            <unmanaged>D3D11_PROCESSIDTYPE_HANDLE</unmanaged>	
            <unmanaged-short>D3D11_PROCESSIDTYPE_HANDLE</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.BindFlags">
            <summary>	
            <p>Identifies how to bind a resource to the pipeline.</p>	
            </summary>	
            <remarks>	
            <p>In general, binding flags can be combined using a logical OR (except the constant-buffer flag); however, you should use a single flag to allow the device to optimize the resource usage.</p><p>This enumeration is used by a:</p><ul> <li> <strong>Buffer description</strong> when creating a buffer.</li> <li>Texture description when creating a texture (see <strong><see cref="T:SharpDX.Direct3D11.Texture1DDescription"/></strong> or <strong><see cref="T:SharpDX.Direct3D11.Texture2DDescription"/></strong> or <strong><see cref="T:SharpDX.Direct3D11.Texture3DDescription"/></strong>).</li> </ul><p>A shader-resource buffer is NOT a constant buffer; rather, it is a texture or buffer resource that is bound to a shader, that contains texture or buffer data (it is not limited to a single element type in the buffer). A shader-resource buffer is created with the <see cref="F:SharpDX.Direct3D11.BindFlags.ShaderResource"/> flag and is bound to the pipeline using one of these APIs: <strong><see cref="M:SharpDX.Direct3D11.GeometryShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/></strong>, <strong><see cref="M:SharpDX.Direct3D11.PixelShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/></strong>, or <strong><see cref="M:SharpDX.Direct3D11.VertexShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/></strong>. Furthermore, a shader-resource buffer cannot use the <strong><see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/></strong> flag.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_FLAG']/*"/>	
            <msdn-id>ff476085</msdn-id>	
            <unmanaged>D3D11_BIND_FLAG</unmanaged>	
            <unmanaged-short>D3D11_BIND_FLAG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.VertexBuffer">
            <summary>	
            <dd> <p>Bind a buffer as a vertex buffer to the input-assembler stage.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_VERTEX_BUFFER']/*"/>	
            <msdn-id>ff476085</msdn-id>	
            <unmanaged>D3D11_BIND_VERTEX_BUFFER</unmanaged>	
            <unmanaged-short>D3D11_BIND_VERTEX_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.IndexBuffer">
            <summary>	
            <dd> <p>Bind a buffer as an index buffer to the input-assembler stage.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_INDEX_BUFFER']/*"/>	
            <msdn-id>ff476085</msdn-id>	
            <unmanaged>D3D11_BIND_INDEX_BUFFER</unmanaged>	
            <unmanaged-short>D3D11_BIND_INDEX_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.ConstantBuffer">
            <summary>	
            <dd> <p>Bind a buffer as a constant buffer to a shader stage; this flag may NOT be combined with any other bind flag.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_CONSTANT_BUFFER']/*"/>	
            <msdn-id>ff476085</msdn-id>	
            <unmanaged>D3D11_BIND_CONSTANT_BUFFER</unmanaged>	
            <unmanaged-short>D3D11_BIND_CONSTANT_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.ShaderResource">
            <summary>	
            <dd> <p>Bind a buffer or texture to a shader stage; this flag cannot be used with the <strong><see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/></strong> flag.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_SHADER_RESOURCE']/*"/>	
            <msdn-id>ff476085</msdn-id>	
            <unmanaged>D3D11_BIND_SHADER_RESOURCE</unmanaged>	
            <unmanaged-short>D3D11_BIND_SHADER_RESOURCE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.StreamOutput">
            <summary>	
            <dd> <p>Bind an output buffer for the stream-output stage.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_STREAM_OUTPUT']/*"/>	
            <msdn-id>ff476085</msdn-id>	
            <unmanaged>D3D11_BIND_STREAM_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_BIND_STREAM_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.RenderTarget">
            <summary>	
            <dd> <p>Bind a texture as a render target for the output-merger stage.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_RENDER_TARGET']/*"/>	
            <msdn-id>ff476085</msdn-id>	
            <unmanaged>D3D11_BIND_RENDER_TARGET</unmanaged>	
            <unmanaged-short>D3D11_BIND_RENDER_TARGET</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.DepthStencil">
            <summary>	
            <dd> <p>Bind a texture as a depth-stencil target for the output-merger stage.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_DEPTH_STENCIL']/*"/>	
            <msdn-id>ff476085</msdn-id>	
            <unmanaged>D3D11_BIND_DEPTH_STENCIL</unmanaged>	
            <unmanaged-short>D3D11_BIND_DEPTH_STENCIL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.UnorderedAccess">
            <summary>	
            <dd> <p>Bind an unordered access resource.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_UNORDERED_ACCESS']/*"/>	
            <msdn-id>ff476085</msdn-id>	
            <unmanaged>D3D11_BIND_UNORDERED_ACCESS</unmanaged>	
            <unmanaged-short>D3D11_BIND_UNORDERED_ACCESS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.Decoder">
            <summary>	
            <dd> <p>Set this flag to indicate that a  2D texture is used to receive output from the decoder API. The common way to create resources for a decoder output is by calling the  <strong><see cref="M:SharpDX.Direct3D11.Device.CreateTexture2D(SharpDX.Direct3D11.Texture2DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture2D)"/></strong> method to create an array of 2D  textures. However, you cannot use texture arrays that are created with this flag in calls to <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>.</p> <strong>Direct 3D 11:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_DECODER']/*"/>	
            <msdn-id>ff476085</msdn-id>	
            <unmanaged>D3D11_BIND_DECODER</unmanaged>	
            <unmanaged-short>D3D11_BIND_DECODER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.VideoEncoder">
            <summary>	
            <dd> <p>Set this flag to indicate that a  2D texture is used to receive input from the video encoder API. The common way to create resources for a video encoder is by calling the  <strong><see cref="M:SharpDX.Direct3D11.Device.CreateTexture2D(SharpDX.Direct3D11.Texture2DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture2D)"/></strong> method to create an array of 2D  textures. However, you cannot use texture arrays that are created with this flag in calls to <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>.</p> <strong>Direct 3D 11:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_VIDEO_ENCODER']/*"/>	
            <msdn-id>ff476085</msdn-id>	
            <unmanaged>D3D11_BIND_VIDEO_ENCODER</unmanaged>	
            <unmanaged-short>D3D11_BIND_VIDEO_ENCODER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.BlendOperation">
            <summary>	
            <p>RGB or alpha blending operation.</p>	
            </summary>	
            <remarks>	
            <p>The runtime implements RGB blending and alpha blending separately. Therefore, blend state requires separate blend operations for RGB data and alpha data. These blend operations are specified in a <strong>blend description</strong>. The two sources?Source 1, called SrcBlend and SrcBlendAlpha, and Source 2, called DestBlend and DestBlendAlpha?are shown in the blending block diagram.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_OP']/*"/>	
            <msdn-id>ff476088</msdn-id>	
            <unmanaged>D3D11_BLEND_OP</unmanaged>	
            <unmanaged-short>D3D11_BLEND_OP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOperation.Add">
            <summary>	
            <dd> <p>Add source 1 and source 2.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_OP_ADD']/*"/>	
            <msdn-id>ff476088</msdn-id>	
            <unmanaged>D3D11_BLEND_OP_ADD</unmanaged>	
            <unmanaged-short>D3D11_BLEND_OP_ADD</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOperation.Subtract">
            <summary>	
            <dd> <p>Subtract source 1 from source 2.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_OP_SUBTRACT']/*"/>	
            <msdn-id>ff476088</msdn-id>	
            <unmanaged>D3D11_BLEND_OP_SUBTRACT</unmanaged>	
            <unmanaged-short>D3D11_BLEND_OP_SUBTRACT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOperation.ReverseSubtract">
            <summary>	
            <dd> <p>Subtract source 2 from source 1.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_OP_REV_SUBTRACT']/*"/>	
            <msdn-id>ff476088</msdn-id>	
            <unmanaged>D3D11_BLEND_OP_REV_SUBTRACT</unmanaged>	
            <unmanaged-short>D3D11_BLEND_OP_REV_SUBTRACT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOperation.Minimum">
            <summary>	
            <dd> <p>Find the minimum of source 1 and source 2.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_OP_MIN']/*"/>	
            <msdn-id>ff476088</msdn-id>	
            <unmanaged>D3D11_BLEND_OP_MIN</unmanaged>	
            <unmanaged-short>D3D11_BLEND_OP_MIN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOperation.Maximum">
            <summary>	
            <dd> <p>Find the maximum of source 1 and source 2.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_OP_MAX']/*"/>	
            <msdn-id>ff476088</msdn-id>	
            <unmanaged>D3D11_BLEND_OP_MAX</unmanaged>	
            <unmanaged-short>D3D11_BLEND_OP_MAX</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.BlendOption">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Blend options. A blend option identifies the data source and an optional pre-blend operation.</p>	
            </summary>	
            <remarks>	
            <p>Blend operations are specified in a <strong>blend description</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND</unmanaged>	
            <unmanaged-short>D3D11_BLEND</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.Zero">
            <summary>	
            <dd> <p>The data source is the color black (0, 0, 0, 0). No pre-blend operation.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_ZERO']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_ZERO</unmanaged>	
            <unmanaged-short>D3D11_BLEND_ZERO</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.One">
            <summary>	
            <dd> <p>The data source is the color white (1, 1, 1, 1). No pre-blend operation.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_ONE']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_ONE</unmanaged>	
            <unmanaged-short>D3D11_BLEND_ONE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.SourceColor">
            <summary>	
            <dd> <p>The data source is color data (RGB) from a pixel shader. No pre-blend operation.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_SRC_COLOR']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_SRC_COLOR</unmanaged>	
            <unmanaged-short>D3D11_BLEND_SRC_COLOR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseSourceColor">
            <summary>	
            <dd> <p>The data source is color data (RGB) from a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_SRC_COLOR']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_INV_SRC_COLOR</unmanaged>	
            <unmanaged-short>D3D11_BLEND_INV_SRC_COLOR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.SourceAlpha">
            <summary>	
            <dd> <p>The data source is alpha data (A) from a pixel shader. No pre-blend operation.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_SRC_ALPHA']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_SRC_ALPHA</unmanaged>	
            <unmanaged-short>D3D11_BLEND_SRC_ALPHA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseSourceAlpha">
            <summary>	
            <dd> <p>The data source is alpha data (A) from a pixel shader. The pre-blend operation inverts the data, generating 1 - A.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_SRC_ALPHA']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_INV_SRC_ALPHA</unmanaged>	
            <unmanaged-short>D3D11_BLEND_INV_SRC_ALPHA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.DestinationAlpha">
            <summary>	
            <dd> <p>The data source is alpha data from a rendertarget. No pre-blend operation.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DEST_ALPHA']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_DEST_ALPHA</unmanaged>	
            <unmanaged-short>D3D11_BLEND_DEST_ALPHA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseDestinationAlpha">
            <summary>	
            <dd> <p>The data source is alpha data from a rendertarget. The pre-blend operation inverts the data, generating 1 - A.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_DEST_ALPHA']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_INV_DEST_ALPHA</unmanaged>	
            <unmanaged-short>D3D11_BLEND_INV_DEST_ALPHA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.DestinationColor">
            <summary>	
            <dd> <p>The data source is color data from a rendertarget. No pre-blend operation.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DEST_COLOR']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_DEST_COLOR</unmanaged>	
            <unmanaged-short>D3D11_BLEND_DEST_COLOR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseDestinationColor">
            <summary>	
            <dd> <p>The data source is color data from a rendertarget. The pre-blend operation inverts the data, generating 1 - RGB.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_DEST_COLOR']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_INV_DEST_COLOR</unmanaged>	
            <unmanaged-short>D3D11_BLEND_INV_DEST_COLOR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.SourceAlphaSaturate">
            <summary>	
            <dd> <p>The data source is alpha data from a pixel shader. The pre-blend operation clamps the data to 1 or less. 	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_SRC_ALPHA_SAT']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_SRC_ALPHA_SAT</unmanaged>	
            <unmanaged-short>D3D11_BLEND_SRC_ALPHA_SAT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.BlendFactor">
            <summary>	
            <dd> <p>The data source is the blend factor set with <strong><see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetBlendState(SharpDX.Direct3D11.BlendState,System.Nullable{SharpDX.Color4},System.UInt32)"/></strong>. No pre-blend operation.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_BLEND_FACTOR']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_BLEND_FACTOR</unmanaged>	
            <unmanaged-short>D3D11_BLEND_BLEND_FACTOR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseBlendFactor">
            <summary>	
            <dd> <p>The data source is the blend factor set with <strong><see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetBlendState(SharpDX.Direct3D11.BlendState,System.Nullable{SharpDX.Color4},System.UInt32)"/></strong>. The pre-blend operation inverts the blend factor, generating 1 - blend_factor.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_BLEND_FACTOR']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_INV_BLEND_FACTOR</unmanaged>	
            <unmanaged-short>D3D11_BLEND_INV_BLEND_FACTOR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.SecondarySourceColor">
            <summary>	
            <dd> <p>The data sources are both color data output by a pixel shader. There is no pre-blend operation. This options supports dual-source color blending.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_SRC1_COLOR']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_SRC1_COLOR</unmanaged>	
            <unmanaged-short>D3D11_BLEND_SRC1_COLOR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseSecondarySourceColor">
            <summary>	
            <dd> <p>The data sources are both color data output by a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB. This options supports dual-source color blending.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_SRC1_COLOR']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_INV_SRC1_COLOR</unmanaged>	
            <unmanaged-short>D3D11_BLEND_INV_SRC1_COLOR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.SecondarySourceAlpha">
            <summary>	
            <dd> <p>The data sources are alpha data output by a pixel shader. There is no pre-blend operation. This options supports dual-source color blending.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_SRC1_ALPHA']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_SRC1_ALPHA</unmanaged>	
            <unmanaged-short>D3D11_BLEND_SRC1_ALPHA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseSecondarySourceAlpha">
            <summary>	
            <dd> <p>The data sources are alpha data output by a pixel shader. The pre-blend operation inverts the data, generating 1 - A. This options supports dual-source color blending.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_SRC1_ALPHA']/*"/>	
            <msdn-id>ff476086</msdn-id>	
            <unmanaged>D3D11_BLEND_INV_SRC1_ALPHA</unmanaged>	
            <unmanaged-short>D3D11_BLEND_INV_SRC1_ALPHA</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.BusType">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Specifies the type of I/O bus that is used by the graphics adapter.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_TYPE']/*"/>	
            <msdn-id>hh447628</msdn-id>	
            <unmanaged>D3D11_BUS_TYPE</unmanaged>	
            <unmanaged-short>D3D11_BUS_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.TypeOther">
            <summary>	
            <dd> <p>Indicates a type of bus other than the types listed here.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_TYPE_OTHER']/*"/>	
            <msdn-id>hh447628</msdn-id>	
            <unmanaged>D3D11_BUS_TYPE_OTHER</unmanaged>	
            <unmanaged-short>D3D11_BUS_TYPE_OTHER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.TypePci">
            <summary>	
            <dd> <p>PCI bus.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_TYPE_PCI']/*"/>	
            <msdn-id>hh447628</msdn-id>	
            <unmanaged>D3D11_BUS_TYPE_PCI</unmanaged>	
            <unmanaged-short>D3D11_BUS_TYPE_PCI</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.TypePcix">
            <summary>	
            <dd> <p>PCI-X bus.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_TYPE_PCIX']/*"/>	
            <msdn-id>hh447628</msdn-id>	
            <unmanaged>D3D11_BUS_TYPE_PCIX</unmanaged>	
            <unmanaged-short>D3D11_BUS_TYPE_PCIX</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.TypePciexpress">
            <summary>	
            <dd> <p>PCI Express bus.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_TYPE_PCIEXPRESS']/*"/>	
            <msdn-id>hh447628</msdn-id>	
            <unmanaged>D3D11_BUS_TYPE_PCIEXPRESS</unmanaged>	
            <unmanaged-short>D3D11_BUS_TYPE_PCIEXPRESS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.TypeAgp">
            <summary>	
            <dd> <p>Accelerated Graphics Port (AGP) bus.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_TYPE_AGP']/*"/>	
            <msdn-id>hh447628</msdn-id>	
            <unmanaged>D3D11_BUS_TYPE_AGP</unmanaged>	
            <unmanaged-short>D3D11_BUS_TYPE_AGP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.ImplModifierInsideOfChipset">
            <summary>	
            <dd> <p>The implementation for the graphics adapter is in a motherboard chipset's north bridge. This flag implies that data never goes over an expansion bus (such as PCI or AGP) when it is transferred from main memory to the graphics adapter.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_IMPL_MODIFIER_INSIDE_OF_CHIPSET']/*"/>	
            <msdn-id>hh447628</msdn-id>	
            <unmanaged>D3D11_BUS_IMPL_MODIFIER_INSIDE_OF_CHIPSET</unmanaged>	
            <unmanaged-short>D3D11_BUS_IMPL_MODIFIER_INSIDE_OF_CHIPSET</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.ImplModifierTracksOnMotherBoardToChip">
            <summary>	
            <dd> <p>Indicates that the graphics adapter is connected to a motherboard chipset's north bridge by tracks on the motherboard, and all of the graphics adapter's chips are soldered to the motherboard. This flag implies that data never goes over an expansion bus (such as PCI or AGP) when it is transferred from main memory to the graphics adapter.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP']/*"/>	
            <msdn-id>hh447628</msdn-id>	
            <unmanaged>D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP</unmanaged>	
            <unmanaged-short>D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.ImplModifierTracksOnMotherBoardToSocket">
            <summary>	
            <dd> <p>The graphics adapter is connected to a motherboard chipset's north bridge by tracks on the motherboard, and all of the graphics adapter's chips are connected through sockets to the motherboard.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET']/*"/>	
            <msdn-id>hh447628</msdn-id>	
            <unmanaged>D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET</unmanaged>	
            <unmanaged-short>D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.ImplModifierDaughterBoardConnector">
            <summary>	
            <dd> <p>The graphics adapter is connected to the motherboard through a daughterboard connector.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR']/*"/>	
            <msdn-id>hh447628</msdn-id>	
            <unmanaged>D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR</unmanaged>	
            <unmanaged-short>D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.ImplModifierDaughterBoardConnectorInsideOfNuae">
            <summary>	
            <dd> <p>The graphics adapter is connected to the motherboard through a daughterboard connector, and the graphics adapter is inside an enclosure that is not user accessible.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE']/*"/>	
            <msdn-id>hh447628</msdn-id>	
            <unmanaged>D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE</unmanaged>	
            <unmanaged-short>D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.ImplModifierNonStandard">
            <summary>	
            <dd> <p>One of the <strong>D3D11_BUS_IMPL_MODIFIER_Xxx</strong> flags is set.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_IMPL_MODIFIER_NON_STANDARD']/*"/>	
            <msdn-id>hh447628</msdn-id>	
            <unmanaged>D3D11_BUS_IMPL_MODIFIER_NON_STANDARD</unmanaged>	
            <unmanaged-short>D3D11_BUS_IMPL_MODIFIER_NON_STANDARD</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ColorWriteMaskFlags">
            <summary>	
            <p>Identify which components of each pixel of a render target are writable during blending.</p>	
            </summary>	
            <remarks>	
            <p>These flags can be combined with a bitwise OR.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COLOR_WRITE_ENABLE']/*"/>	
            <msdn-id>ff476100</msdn-id>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE</unmanaged>	
            <unmanaged-short>D3D11_COLOR_WRITE_ENABLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ColorWriteMaskFlags.Red">
            <summary>	
            <dd> <p>Allow data to be stored in the red component.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COLOR_WRITE_ENABLE_RED']/*"/>	
            <msdn-id>ff476100</msdn-id>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE_RED</unmanaged>	
            <unmanaged-short>D3D11_COLOR_WRITE_ENABLE_RED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ColorWriteMaskFlags.Green">
            <summary>	
            <dd> <p>Allow data to be stored in the green component.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COLOR_WRITE_ENABLE_GREEN']/*"/>	
            <msdn-id>ff476100</msdn-id>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE_GREEN</unmanaged>	
            <unmanaged-short>D3D11_COLOR_WRITE_ENABLE_GREEN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ColorWriteMaskFlags.Blue">
            <summary>	
            <dd> <p>Allow data to be stored in the blue component.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COLOR_WRITE_ENABLE_BLUE']/*"/>	
            <msdn-id>ff476100</msdn-id>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE_BLUE</unmanaged>	
            <unmanaged-short>D3D11_COLOR_WRITE_ENABLE_BLUE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ColorWriteMaskFlags.Alpha">
            <summary>	
            <dd> <p>Allow data to be stored in the alpha component.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COLOR_WRITE_ENABLE_ALPHA']/*"/>	
            <msdn-id>ff476100</msdn-id>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE_ALPHA</unmanaged>	
            <unmanaged-short>D3D11_COLOR_WRITE_ENABLE_ALPHA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ColorWriteMaskFlags.All">
            <summary>	
            <dd> <p>Allow data to be stored in all components.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COLOR_WRITE_ENABLE_ALL']/*"/>	
            <msdn-id>ff476100</msdn-id>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE_ALL</unmanaged>	
            <unmanaged-short>D3D11_COLOR_WRITE_ENABLE_ALL</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Comparison">
            <summary>	
            <p>Comparison options.</p>	
            </summary>	
            <remarks>	
            <p>A comparison option determines whether how the runtime compares source (new) data against destination (existing) data before storing the new data. The comparison option is declared in a description before an object is created. The API allows you to set a comparison option for a depth-stencil buffer (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilStateDescription"/></strong>), depth-stencil operations (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilOperationDescription"/></strong>), or sampler state (see <strong><see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_FUNC']/*"/>	
            <msdn-id>ff476101</msdn-id>	
            <unmanaged>D3D11_COMPARISON_FUNC</unmanaged>	
            <unmanaged-short>D3D11_COMPARISON_FUNC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.Never">
            <summary>	
            <dd> <p>Never pass the comparison.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_NEVER']/*"/>	
            <msdn-id>ff476101</msdn-id>	
            <unmanaged>D3D11_COMPARISON_NEVER</unmanaged>	
            <unmanaged-short>D3D11_COMPARISON_NEVER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.Less">
            <summary>	
            <dd> <p>If the source data is less than the destination data, the comparison passes.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_LESS']/*"/>	
            <msdn-id>ff476101</msdn-id>	
            <unmanaged>D3D11_COMPARISON_LESS</unmanaged>	
            <unmanaged-short>D3D11_COMPARISON_LESS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.Equal">
            <summary>	
            <dd> <p>If the source data is equal to the destination data, the comparison passes.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_EQUAL']/*"/>	
            <msdn-id>ff476101</msdn-id>	
            <unmanaged>D3D11_COMPARISON_EQUAL</unmanaged>	
            <unmanaged-short>D3D11_COMPARISON_EQUAL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.LessEqual">
            <summary>	
            <dd> <p>If the source data is less than or equal to the destination data, the comparison passes.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_LESS_EQUAL']/*"/>	
            <msdn-id>ff476101</msdn-id>	
            <unmanaged>D3D11_COMPARISON_LESS_EQUAL</unmanaged>	
            <unmanaged-short>D3D11_COMPARISON_LESS_EQUAL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.Greater">
            <summary>	
            <dd> <p>If the source data is greater than the destination data, the comparison passes.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_GREATER']/*"/>	
            <msdn-id>ff476101</msdn-id>	
            <unmanaged>D3D11_COMPARISON_GREATER</unmanaged>	
            <unmanaged-short>D3D11_COMPARISON_GREATER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.NotEqual">
            <summary>	
            <dd> <p>If the source data is not equal to the destination data, the comparison passes.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_NOT_EQUAL']/*"/>	
            <msdn-id>ff476101</msdn-id>	
            <unmanaged>D3D11_COMPARISON_NOT_EQUAL</unmanaged>	
            <unmanaged-short>D3D11_COMPARISON_NOT_EQUAL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.GreaterEqual">
            <summary>	
            <dd> <p>If the source data is greater than or equal to the destination data, the comparison passes.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_GREATER_EQUAL']/*"/>	
            <msdn-id>ff476101</msdn-id>	
            <unmanaged>D3D11_COMPARISON_GREATER_EQUAL</unmanaged>	
            <unmanaged-short>D3D11_COMPARISON_GREATER_EQUAL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.Always">
            <summary>	
            <dd> <p>Always pass the comparison.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_ALWAYS']/*"/>	
            <msdn-id>ff476101</msdn-id>	
            <unmanaged>D3D11_COMPARISON_ALWAYS</unmanaged>	
            <unmanaged-short>D3D11_COMPARISON_ALWAYS</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ComputeShaderFormatSupport">
            <summary>	
            <p>Unordered resource support options for a compute shader resource (see <strong><see cref="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)"/></strong>).</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2']/*"/>	
            <msdn-id>ff476135</msdn-id>	
            <unmanaged>D3D11_FORMAT_SUPPORT2</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT2</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.AtomicAdd">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_ADD']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_ADD</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_ADD</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.AtomicBitwiseOperations">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.AtomicCompareStoreOrCompareExchange">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.AtomicExchange">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.AtomicSignedMinimumOrMaximum">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.AtomicUnsignedMinimumOrMaximum">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.TypedLoad">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_TYPED_LOAD']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_TYPED_LOAD</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_TYPED_LOAD</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.TypedStore">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_TYPED_STORE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_TYPED_STORE</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_TYPED_STORE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.OutputMergerLogicOperation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ContentProtectionCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains flags that describe content-protection capabilities.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS']/*"/>	
            <msdn-id>hh447629</msdn-id>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS</unmanaged>	
            <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.Software">
            <summary>	
            <dd> <p>The encryption is implemented in software by the driver.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_SOFTWARE']/*"/>	
            <msdn-id>hh447629</msdn-id>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_SOFTWARE</unmanaged>	
            <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_SOFTWARE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.Hardware">
            <summary>	
            <dd> <p>The encryption is implemented in hardware by the GPU.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_HARDWARE']/*"/>	
            <msdn-id>hh447629</msdn-id>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE</unmanaged>	
            <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.ProtectionAlwaysOn">
            <summary>	
            <dd> <p>Content protection is always applied to a protected surface, regardless of whether the application explicitly enables protection.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_PROTECTION_ALWAYS_ON']/*"/>	
            <msdn-id>hh447629</msdn-id>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_PROTECTION_ALWAYS_ON</unmanaged>	
            <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_PROTECTION_ALWAYS_ON</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.PartialDecryption">
            <summary>	
            <dd> <p>The driver can use partially encrypted buffers. If this capability is not present, the entire buffer must be either encrypted or clear.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_PARTIAL_DECRYPTION']/*"/>	
            <msdn-id>hh447629</msdn-id>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_PARTIAL_DECRYPTION</unmanaged>	
            <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_PARTIAL_DECRYPTION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.ContentKey">
            <summary>	
            <dd> <p>The driver can encrypt data using a separate content key that is encrypted using the session key.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_CONTENT_KEY']/*"/>	
            <msdn-id>hh447629</msdn-id>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_CONTENT_KEY</unmanaged>	
            <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_CONTENT_KEY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.FreshenSessionKey">
            <summary>	
            <dd> <p>The driver can refresh the session key without renegotiating the key.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_FRESHEN_SESSION_KEY']/*"/>	
            <msdn-id>hh447629</msdn-id>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_FRESHEN_SESSION_KEY</unmanaged>	
            <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_FRESHEN_SESSION_KEY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.EncryptedReadBack">
            <summary>	
            <dd> <p>The driver can read back encrypted data from a protected surface. For more information, see <strong><see cref="M:SharpDX.Direct3D11.VideoContext.EncryptionBlt(SharpDX.Direct3D11.CryptoSession,SharpDX.Direct3D11.Texture2D,SharpDX.Direct3D11.Texture2D,System.Int32,System.IntPtr)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK']/*"/>	
            <msdn-id>hh447629</msdn-id>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK</unmanaged>	
            <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.EncryptedReadBackKey">
            <summary>	
            <dd> <p>The driver requires a separate key to read encrypted data from a protected surface.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK_KEY']/*"/>	
            <msdn-id>hh447629</msdn-id>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK_KEY</unmanaged>	
            <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK_KEY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.SequentialCtrIv">
            <summary>	
            <dd> <p>If the encryption type is <strong>D3DCRYPTOTYPE_AES128_CTR</strong>, the application must use a sequential count in the <strong><see cref="T:SharpDX.Direct3D11.AesCtrIv"/></strong> structure. For more information, see the remarks for <strong><see cref="T:SharpDX.Direct3D11.AesCtrIv"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_SEQUENTIAL_CTR_IV']/*"/>	
            <msdn-id>hh447629</msdn-id>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_SEQUENTIAL_CTR_IV</unmanaged>	
            <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_SEQUENTIAL_CTR_IV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.EncryptSlicedataOnly">
            <summary>	
            <dd> <p>The driver supports encrypted slice data, but does not not support any other encrypted data in the DXVA 2 compressed buffer.  The caller should not encrypt any data within the buffer other than the slice data.</p> <p><strong>Note</strong>??The driver should only report this flag for the specific DXVA profiles that have this limitation.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_ENCRYPT_SLICEDATA_ONLY']/*"/>	
            <msdn-id>hh447629</msdn-id>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPT_SLICEDATA_ONLY</unmanaged>	
            <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPT_SLICEDATA_ONLY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.DecryptionBlit">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_DECRYPTION_BLT']/*"/>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_DECRYPTION_BLT</unmanaged>	
            <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_DECRYPTION_BLT</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.CopyFlags">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p><strong>Note</strong>??This enumeration is supported by the Direct3D 11.1 runtime, which is available on Windows?8 Consumer Preview and later operating systems.</p><p>Specifies how to handle the existing contents of a resource during a copy or update operation of a region within that resource.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COPY_FLAGS']/*"/>	
            <msdn-id>hh404451</msdn-id>	
            <unmanaged>D3D11_COPY_FLAGS</unmanaged>	
            <unmanaged-short>D3D11_COPY_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CopyFlags.NoOverwrite">
            <summary>	
            <dd> <p>The existing contents of the resource cannot be overwritten.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COPY_NO_OVERWRITE']/*"/>	
            <msdn-id>hh404451</msdn-id>	
            <unmanaged>D3D11_COPY_NO_OVERWRITE</unmanaged>	
            <unmanaged-short>D3D11_COPY_NO_OVERWRITE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CopyFlags.Discard">
            <summary>	
            <dd> <p>The existing contents of the resource are undefined and can be discarded.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COPY_DISCARD']/*"/>	
            <msdn-id>hh404451</msdn-id>	
            <unmanaged>D3D11_COPY_DISCARD</unmanaged>	
            <unmanaged-short>D3D11_COPY_DISCARD</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CopyFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.CounterKind">
            <summary>	
            <p>Describes a counter.</p>	
            </summary>	
            <remarks>	
            <p>This structure is used by <strong><see cref="M:SharpDX.Direct3D11.Counter.GetDescription(SharpDX.Direct3D11.CounterDescription@)"/></strong>, <strong><see cref="M:SharpDX.Direct3D11.Device.CheckCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.CounterType@,System.Int32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.Device.CreateCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.Counter)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER']/*"/>	
            <msdn-id>ff476103</msdn-id>	
            <unmanaged>D3D11_COUNTER</unmanaged>	
            <unmanaged-short>D3D11_COUNTER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterKind.DeviceDependent0">
            <summary>	
            <dd> <p>Type of counter (see <strong><see cref="T:SharpDX.Direct3D11.CounterKind"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_DEVICE_DEPENDENT_0']/*"/>	
            <msdn-id>ff476103</msdn-id>	
            <unmanaged>D3D11_COUNTER_DEVICE_DEPENDENT_0</unmanaged>	
            <unmanaged-short>D3D11_COUNTER_DEVICE_DEPENDENT_0</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.CounterType">
            <summary>	
            <p>Data type of a performance counter.</p>	
            </summary>	
            <remarks>	
            <p>These flags are an output parameter in <strong><see cref="M:SharpDX.Direct3D11.Device.CheckCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.CounterType@,System.Int32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_TYPE']/*"/>	
            <msdn-id>ff476105</msdn-id>	
            <unmanaged>D3D11_COUNTER_TYPE</unmanaged>	
            <unmanaged-short>D3D11_COUNTER_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterType.Float32">
            <summary>	
            <dd> <p>32-bit floating point.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_TYPE_FLOAT32']/*"/>	
            <msdn-id>ff476105</msdn-id>	
            <unmanaged>D3D11_COUNTER_TYPE_FLOAT32</unmanaged>	
            <unmanaged-short>D3D11_COUNTER_TYPE_FLOAT32</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterType.UInt16">
            <summary>	
            <dd> <p>16-bit unsigned integer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_TYPE_UINT16']/*"/>	
            <msdn-id>ff476105</msdn-id>	
            <unmanaged>D3D11_COUNTER_TYPE_UINT16</unmanaged>	
            <unmanaged-short>D3D11_COUNTER_TYPE_UINT16</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterType.UInt32">
            <summary>	
            <dd> <p>32-bit unsigned integer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_TYPE_UINT32']/*"/>	
            <msdn-id>ff476105</msdn-id>	
            <unmanaged>D3D11_COUNTER_TYPE_UINT32</unmanaged>	
            <unmanaged-short>D3D11_COUNTER_TYPE_UINT32</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterType.UInt64">
            <summary>	
            <dd> <p>64-bit unsigned integer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_TYPE_UINT64']/*"/>	
            <msdn-id>ff476105</msdn-id>	
            <unmanaged>D3D11_COUNTER_TYPE_UINT64</unmanaged>	
            <unmanaged-short>D3D11_COUNTER_TYPE_UINT64</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.CpuAccessFlags">
            <summary>	
            <p>Specifies the types of CPU access allowed for a resource.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used in <strong><see cref="T:SharpDX.Direct3D11.BufferDescription"/></strong>, <strong><see cref="T:SharpDX.Direct3D11.Texture1DDescription"/></strong>, <strong><see cref="T:SharpDX.Direct3D11.Texture2DDescription"/></strong>, <strong><see cref="T:SharpDX.Direct3D11.Texture3DDescription"/></strong>. </p><p>Applications may combine one or more of these flags with a logical OR. When possible, create resources with no CPU access flags, as this enables better resource optimiztion.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CPU_ACCESS_FLAG']/*"/>	
            <msdn-id>ff476106</msdn-id>	
            <unmanaged>D3D11_CPU_ACCESS_FLAG</unmanaged>	
            <unmanaged-short>D3D11_CPU_ACCESS_FLAG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CpuAccessFlags.Write">
            <summary>	
            <dd> <p>The resource is to be mappable so that the CPU can change its contents. Resources created with this flag cannot be set as outputs of the pipeline and must be created with either dynamic or staging usage (see <strong><see cref="T:SharpDX.Direct3D11.ResourceUsage"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CPU_ACCESS_WRITE']/*"/>	
            <msdn-id>ff476106</msdn-id>	
            <unmanaged>D3D11_CPU_ACCESS_WRITE</unmanaged>	
            <unmanaged-short>D3D11_CPU_ACCESS_WRITE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CpuAccessFlags.Read">
            <summary>	
            <dd> <p>The resource is to be mappable so that the CPU can read its contents. Resources created with this flag cannot be set as either inputs or outputs to the pipeline and must be created with staging usage (see <strong><see cref="T:SharpDX.Direct3D11.ResourceUsage"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CPU_ACCESS_READ']/*"/>	
            <msdn-id>ff476106</msdn-id>	
            <unmanaged>D3D11_CPU_ACCESS_READ</unmanaged>	
            <unmanaged-short>D3D11_CPU_ACCESS_READ</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CpuAccessFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.CreateDeviceContextStateFlags">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Describes flags that are used to create a device context state object (<strong><see cref="T:SharpDX.Direct3D11.DeviceContextState"/></strong>) with the <strong><see cref="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState(SharpDX.Direct3D11.CreateDeviceContextStateFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,System.Guid,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContextState)"/></strong> method.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG']/*"/>	
            <msdn-id>hh404432</msdn-id>	
            <unmanaged>D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG</unmanaged>	
            <unmanaged-short>D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CreateDeviceContextStateFlags.SingleThreaded">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_1_CREATE_DEVICE_CONTEXT_STATE_SINGLETHREADED']/*"/>	
            <unmanaged>D3D11_1_CREATE_DEVICE_CONTEXT_STATE_SINGLETHREADED</unmanaged>	
            <unmanaged-short>D3D11_1_CREATE_DEVICE_CONTEXT_STATE_SINGLETHREADED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CreateDeviceContextStateFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.CullMode">
            <summary>	
            <p>Indicates triangles facing a particular direction are not drawn.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is part of a rasterizer-state object description (see <strong><see cref="T:SharpDX.Direct3D11.RasterizerStateDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CULL_MODE']/*"/>	
            <msdn-id>ff476108</msdn-id>	
            <unmanaged>D3D11_CULL_MODE</unmanaged>	
            <unmanaged-short>D3D11_CULL_MODE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CullMode.None">
            <summary>	
            <dd> <p>Always draw all triangles.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CULL_NONE']/*"/>	
            <msdn-id>ff476108</msdn-id>	
            <unmanaged>D3D11_CULL_NONE</unmanaged>	
            <unmanaged-short>D3D11_CULL_NONE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CullMode.Front">
            <summary>	
            <dd> <p>Do not draw triangles that are front-facing.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CULL_FRONT']/*"/>	
            <msdn-id>ff476108</msdn-id>	
            <unmanaged>D3D11_CULL_FRONT</unmanaged>	
            <unmanaged-short>D3D11_CULL_FRONT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CullMode.Back">
            <summary>	
            <dd> <p>Do not draw triangles that are back-facing.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CULL_BACK']/*"/>	
            <msdn-id>ff476108</msdn-id>	
            <unmanaged>D3D11_CULL_BACK</unmanaged>	
            <unmanaged-short>D3D11_CULL_BACK</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DebugFeatureFlags">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEBUG_FEATURE_FLAGS']/*"/>	
            <unmanaged>D3D11_DEBUG_FEATURE_FLAGS</unmanaged>	
            <unmanaged-short>D3D11_DEBUG_FEATURE_FLAGS</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilClearFlags">
            <summary>	
            <p>Specifies the parts of the depth stencil to clear.</p>	
            </summary>	
            <remarks>	
            <p>These flags are used when calling <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.ClearDepthStencilView(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.DepthStencilClearFlags,System.Single,System.Byte)"/></strong>; the flags can be combined with a bitwise OR.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLEAR_FLAG']/*"/>	
            <msdn-id>ff476099</msdn-id>	
            <unmanaged>D3D11_CLEAR_FLAG</unmanaged>	
            <unmanaged-short>D3D11_CLEAR_FLAG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilClearFlags.Depth">
            <summary>	
            <dd> <p>Clear the depth buffer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLEAR_DEPTH']/*"/>	
            <msdn-id>ff476099</msdn-id>	
            <unmanaged>D3D11_CLEAR_DEPTH</unmanaged>	
            <unmanaged-short>D3D11_CLEAR_DEPTH</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilClearFlags.Stencil">
            <summary>	
            <dd> <p>Clear the stencil buffer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLEAR_STENCIL']/*"/>	
            <msdn-id>ff476099</msdn-id>	
            <unmanaged>D3D11_CLEAR_STENCIL</unmanaged>	
            <unmanaged-short>D3D11_CLEAR_STENCIL</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDimension">
            <summary>	
            <p>Specifies how to access a resource used in a depth-stencil view.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used in <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/></strong> to create a depth-stencil view.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION']/*"/>	
            <msdn-id>ff476115</msdn-id>	
            <unmanaged>D3D11_DSV_DIMENSION</unmanaged>	
            <unmanaged-short>D3D11_DSV_DIMENSION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Unknown">
            <summary>	
            <dd> <p><em><see cref="F:SharpDX.Direct3D11.DepthStencilViewDimension.Unknown"/></em> is not a valid value for <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/></strong> and is not used.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_UNKNOWN']/*"/>	
            <msdn-id>ff476115</msdn-id>	
            <unmanaged>D3D11_DSV_DIMENSION_UNKNOWN</unmanaged>	
            <unmanaged-short>D3D11_DSV_DIMENSION_UNKNOWN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Texture1D">
            <summary>	
            <dd> <p>The resource will be accessed as a 1D texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_TEXTURE1D']/*"/>	
            <msdn-id>ff476115</msdn-id>	
            <unmanaged>D3D11_DSV_DIMENSION_TEXTURE1D</unmanaged>	
            <unmanaged-short>D3D11_DSV_DIMENSION_TEXTURE1D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Texture1DArray">
            <summary>	
            <dd> <p>The resource will be accessed as an array of 1D textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_TEXTURE1DARRAY']/*"/>	
            <msdn-id>ff476115</msdn-id>	
            <unmanaged>D3D11_DSV_DIMENSION_TEXTURE1DARRAY</unmanaged>	
            <unmanaged-short>D3D11_DSV_DIMENSION_TEXTURE1DARRAY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Texture2D">
            <summary>	
            <dd> <p>The resource will be accessed as a 2D texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_TEXTURE2D']/*"/>	
            <msdn-id>ff476115</msdn-id>	
            <unmanaged>D3D11_DSV_DIMENSION_TEXTURE2D</unmanaged>	
            <unmanaged-short>D3D11_DSV_DIMENSION_TEXTURE2D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Texture2DArray">
            <summary>	
            <dd> <p>The resource will be accessed as an array of 2D textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_TEXTURE2DARRAY']/*"/>	
            <msdn-id>ff476115</msdn-id>	
            <unmanaged>D3D11_DSV_DIMENSION_TEXTURE2DARRAY</unmanaged>	
            <unmanaged-short>D3D11_DSV_DIMENSION_TEXTURE2DARRAY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Texture2DMultisampled">
            <summary>	
            <dd> <p>The resource will be accessed as a 2D texture with multisampling.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_TEXTURE2DMS']/*"/>	
            <msdn-id>ff476115</msdn-id>	
            <unmanaged>D3D11_DSV_DIMENSION_TEXTURE2DMS</unmanaged>	
            <unmanaged-short>D3D11_DSV_DIMENSION_TEXTURE2DMS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Texture2DMultisampledArray">
            <summary>	
            <dd> <p>The resource will be accessed as an array of 2D textures with multisampling.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY']/*"/>	
            <msdn-id>ff476115</msdn-id>	
            <unmanaged>D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY</unmanaged>	
            <unmanaged-short>D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewFlags">
            <summary>	
            <p>Depth-stencil view options.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used by <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/></strong>.</p><p>Limiting a depth-stencil buffer to read-only access allows more than one depth-stencil view to be bound to the pipeline simultaneously, since it is not possible to have a read/write conflicts between separate views.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_FLAG']/*"/>	
            <msdn-id>ff476116</msdn-id>	
            <unmanaged>D3D11_DSV_FLAG</unmanaged>	
            <unmanaged-short>D3D11_DSV_FLAG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewFlags.ReadOnlyDepth">
            <summary>	
            <dd> <p>Indicates that depth values are read only.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_READ_ONLY_DEPTH']/*"/>	
            <msdn-id>ff476116</msdn-id>	
            <unmanaged>D3D11_DSV_READ_ONLY_DEPTH</unmanaged>	
            <unmanaged-short>D3D11_DSV_READ_ONLY_DEPTH</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewFlags.ReadOnlyStencil">
            <summary>	
            <dd> <p>Indicates that stencil values are read only.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_READ_ONLY_STENCIL']/*"/>	
            <msdn-id>ff476116</msdn-id>	
            <unmanaged>D3D11_DSV_READ_ONLY_STENCIL</unmanaged>	
            <unmanaged-short>D3D11_DSV_READ_ONLY_STENCIL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthWriteMask">
            <summary>	
            <p>Identify the portion of a depth-stencil buffer for writing depth data.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_WRITE_MASK']/*"/>	
            <msdn-id>ff476113</msdn-id>	
            <unmanaged>D3D11_DEPTH_WRITE_MASK</unmanaged>	
            <unmanaged-short>D3D11_DEPTH_WRITE_MASK</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthWriteMask.Zero">
            <summary>	
            <dd> <p>Turn off writes to the depth-stencil buffer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_WRITE_MASK_ZERO']/*"/>	
            <msdn-id>ff476113</msdn-id>	
            <unmanaged>D3D11_DEPTH_WRITE_MASK_ZERO</unmanaged>	
            <unmanaged-short>D3D11_DEPTH_WRITE_MASK_ZERO</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthWriteMask.All">
            <summary>	
            <dd> <p>Turn on writes to the depth-stencil buffer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_WRITE_MASK_ALL']/*"/>	
            <msdn-id>ff476113</msdn-id>	
            <unmanaged>D3D11_DEPTH_WRITE_MASK_ALL</unmanaged>	
            <unmanaged-short>D3D11_DEPTH_WRITE_MASK_ALL</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DeviceContextType">
            <summary>	
            <p>Device context options.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used by <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetTypeInfo"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEVICE_CONTEXT_TYPE']/*"/>	
            <msdn-id>ff476114</msdn-id>	
            <unmanaged>D3D11_DEVICE_CONTEXT_TYPE</unmanaged>	
            <unmanaged-short>D3D11_DEVICE_CONTEXT_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceContextType.Immediate">
            <summary>	
            <dd> <p>The device context is an immediate context.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEVICE_CONTEXT_IMMEDIATE']/*"/>	
            <msdn-id>ff476114</msdn-id>	
            <unmanaged>D3D11_DEVICE_CONTEXT_IMMEDIATE</unmanaged>	
            <unmanaged-short>D3D11_DEVICE_CONTEXT_IMMEDIATE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceContextType.Deferred">
            <summary>	
            <dd> <p>The device context is a deferred context.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEVICE_CONTEXT_DEFERRED']/*"/>	
            <msdn-id>ff476114</msdn-id>	
            <unmanaged>D3D11_DEVICE_CONTEXT_DEFERRED</unmanaged>	
            <unmanaged-short>D3D11_DEVICE_CONTEXT_DEFERRED</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DeviceCreationFlags">
            <summary>	
            <p>Describes parameters that are used to create a device.</p>	
            </summary>	
            <remarks>	
            <p>Device creation flags are used by <strong><see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/></strong> and <strong>D3D11CreateDeviceAndSwapChain</strong>.</p><p>An application might dynamically create (and destroy) threads to improve performance especially on a machine with multiple CPU cores. There may be cases, however, when an application needs to prevent extra threads from being created. This can happen when you want to simplify debugging, profile code or develop a tool for instance. For these cases, use <strong><see cref="F:SharpDX.Direct3D11.DeviceCreationFlags.PreventThreadingOptimizations"/></strong> to request that the runtime and video driver not create any additional threads that might interfere with the application.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_FLAG']/*"/>	
            <msdn-id>ff476107</msdn-id>	
            <unmanaged>D3D11_CREATE_DEVICE_FLAG</unmanaged>	
            <unmanaged-short>D3D11_CREATE_DEVICE_FLAG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.SingleThreaded">
            <summary>	
            <dd> <p>You should use this flag if your application will only call methods of Direct3D?11 interfaces from a single thread. By default, the <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong> object is  thread-safe.  By using this flag, you can increase performance. However, if you use this flag and your application calls methods of Direct3D?11 interfaces from multiple threads, undefined behavior might result.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_SINGLETHREADED']/*"/>	
            <msdn-id>ff476107</msdn-id>	
            <unmanaged>D3D11_CREATE_DEVICE_SINGLETHREADED</unmanaged>	
            <unmanaged-short>D3D11_CREATE_DEVICE_SINGLETHREADED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.Debug">
            <summary>	
            <dd> <p>Creates a device that supports the debug layer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_DEBUG']/*"/>	
            <msdn-id>ff476107</msdn-id>	
            <unmanaged>D3D11_CREATE_DEVICE_DEBUG</unmanaged>	
            <unmanaged-short>D3D11_CREATE_DEVICE_DEBUG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.SwitchToRef">
            <summary>	
            <dd> <p><strong>Note</strong>??This flag is not supported in Direct3D?11.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_SWITCH_TO_REF']/*"/>	
            <msdn-id>ff476107</msdn-id>	
            <unmanaged>D3D11_CREATE_DEVICE_SWITCH_TO_REF</unmanaged>	
            <unmanaged-short>D3D11_CREATE_DEVICE_SWITCH_TO_REF</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.PreventThreadingOptimizations">
            <summary>	
            <dd> <p>Prevents multiple threads from being created. When this flag is used with a Windows Advanced Rasterization Platform (WARP) device, no additional threads will be created by WARP  and all rasterization will occur on the calling thread. This flag is not recommended for general use. See remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS']/*"/>	
            <msdn-id>ff476107</msdn-id>	
            <unmanaged>D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS</unmanaged>	
            <unmanaged-short>D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.BgraSupport">
            <summary>	
            <dd> <p>Required for Direct2D interoperability with Direct3D resources.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_BGRA_SUPPORT']/*"/>	
            <msdn-id>ff476107</msdn-id>	
            <unmanaged>D3D11_CREATE_DEVICE_BGRA_SUPPORT</unmanaged>	
            <unmanaged-short>D3D11_CREATE_DEVICE_BGRA_SUPPORT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.Debuggable">
            <summary>	
            <dd> <p>TBD</p> <strong>Direct 3D 11:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_DEBUGGABLE']/*"/>	
            <msdn-id>ff476107</msdn-id>	
            <unmanaged>D3D11_CREATE_DEVICE_DEBUGGABLE</unmanaged>	
            <unmanaged-short>D3D11_CREATE_DEVICE_DEBUGGABLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.PreventAlteringLayerSettingsFromRegistry">
            <summary>	
            <dd> <p>TBD</p> <strong>Direct 3D 11:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_PREVENT_ALTERING_LAYER_SETTINGS_FROM_REGISTRY']/*"/>	
            <msdn-id>ff476107</msdn-id>	
            <unmanaged>D3D11_CREATE_DEVICE_PREVENT_ALTERING_LAYER_SETTINGS_FROM_REGISTRY</unmanaged>	
            <unmanaged-short>D3D11_CREATE_DEVICE_PREVENT_ALTERING_LAYER_SETTINGS_FROM_REGISTRY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.DisableGpuTimeout">
            <summary>	
            <dd> <p>TBD</p> <strong>Direct 3D 11:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_DISABLE_GPU_TIMEOUT']/*"/>	
            <msdn-id>ff476107</msdn-id>	
            <unmanaged>D3D11_CREATE_DEVICE_DISABLE_GPU_TIMEOUT</unmanaged>	
            <unmanaged-short>D3D11_CREATE_DEVICE_DISABLE_GPU_TIMEOUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.VideoSupport">
            <summary>	
            <dd> <p>Forces the creation of the Direct3D device to fail if the display driver is not implemented to the WDDM for Windows Developer Preview (WDDM 1.2). When the display driver is not implemented to WDDM 1.2, only a Direct3D device that is created with feature level 9.1, 9.2, or 9.3 supports video; therefore, if this flag is set, the runtime creates the Direct3D device only for feature level 9.1, 9.2, or 9.3. We recommend not to specify this flag for applications that want to favor Direct3D capability over video. If feature level 10 and higher is available, the runtime will use that feature level regardless of video support.</p> <p>If this flag is set, device creation on the Basic Render Device (BRD) will succeed regardless of the BRD's missing support for video decode. This is because the Media Foundation video stack operates in software mode on BRD. In this situation, if you force the video stack to create the Direct3D device twice (create the device once with this flag, next discover BRD, then again create the device without the flag), you actually degrade performance.</p> <p>If you attempt to create a Direct3D device with driver type <strong><see cref="F:SharpDX.Direct3D.DriverType.Null"/></strong>, <strong><see cref="F:SharpDX.Direct3D.DriverType.Reference"/></strong>, or <strong><see cref="F:SharpDX.Direct3D.DriverType.Software"/></strong>, device creation fails at any feature level because none of the associated drivers provide video capability. If you attempt to create a Direct3D device with driver type <strong><see cref="F:SharpDX.Direct3D.DriverType.Warp"/></strong>, device creation succeeds to allow software fallback for video.</p> <strong>Direct 3D 11:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_VIDEO_SUPPORT']/*"/>	
            <msdn-id>ff476107</msdn-id>	
            <unmanaged>D3D11_CREATE_DEVICE_VIDEO_SUPPORT</unmanaged>	
            <unmanaged-short>D3D11_CREATE_DEVICE_VIDEO_SUPPORT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Feature">
            <summary>	
            <p>Direct3D 11 feature options.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used when querying a driver about support for these features by calling <strong><see cref="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)"/></strong>.   Each value in this enumeration has a corresponding data structure that is required to be passed to the <em>pFeatureSupportData</em> parameter  of <strong><see cref="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)"/></strong>.</p><p>The following table shows the structures associated with each enumerant.</p><table> <tr><th>Enumerant</th><th>Associated Structure</th></tr> <tr><td><see cref="F:SharpDX.Direct3D11.Feature.Threading"/></td><td> <strong><see cref="T:SharpDX.Direct3D11.FeatureDataThreading"/></strong> </td></tr> <tr><td><see cref="F:SharpDX.Direct3D11.Feature.ShaderDoubles"/></td><td> <strong><see cref="T:SharpDX.Direct3D11.FeatureDataDoubles"/></strong> </td></tr> <tr><td><see cref="F:SharpDX.Direct3D11.Feature.FormatSupport"/></td><td> <strong><see cref="T:SharpDX.Direct3D11.FeatureDataFormatSupport"/></strong> </td></tr> <tr><td><see cref="F:SharpDX.Direct3D11.Feature.ComputeShaders"/></td><td> <strong><see cref="T:SharpDX.Direct3D11.FeatureDataFormatSupport2"/></strong> </td></tr> <tr><td><see cref="F:SharpDX.Direct3D11.Feature.D3D10XHardwareOptions"/></td><td> <strong><see cref="T:SharpDX.Direct3D11.FeatureDataD3D10XHardwareOptions"/></strong> </td></tr> <tr><td><see cref="F:SharpDX.Direct3D11.Feature.D3D11Options"/></td><td> <strong><see cref="T:SharpDX.Direct3D11.FeatureDataD3D11Options"/></strong> </td></tr> <tr><td><see cref="F:SharpDX.Direct3D11.Feature.ArchitectureInformation"/></td><td> <strong><see cref="T:SharpDX.Direct3D11.FeatureDataArchitectureInformation"/></strong> </td></tr> <tr><td><see cref="F:SharpDX.Direct3D11.Feature.D3D9Options"/></td><td> <strong><see cref="T:SharpDX.Direct3D11.FeatureDataD3D9Options"/></strong> </td></tr> <tr><td><see cref="F:SharpDX.Direct3D11.Feature.ShaderMinimumPrecisionSupport"/></td><td> <strong><see cref="T:SharpDX.Direct3D11.FeatureDataShaderMinimumPrecisionSupport"/></strong> </td></tr> </table><p>?</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE']/*"/>	
            <msdn-id>ff476124</msdn-id>	
            <unmanaged>D3D11_FEATURE</unmanaged>	
            <unmanaged-short>D3D11_FEATURE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.Threading">
            <summary>	
            <dd> <p>The driver supports multithreading.  To see an example of testing a driver for multithread support, see How To: Check for Driver Support.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_THREADING']/*"/>	
            <msdn-id>ff476124</msdn-id>	
            <unmanaged>D3D11_FEATURE_THREADING</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_THREADING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.ShaderDoubles">
            <summary>	
            <dd> <p>Supports the use of the double-precision shaders in HLSL.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DOUBLES']/*"/>	
            <msdn-id>ff476124</msdn-id>	
            <unmanaged>D3D11_FEATURE_DOUBLES</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_DOUBLES</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.FormatSupport">
            <summary>	
            <dd> <p>Supports the formats in <strong><see cref="T:SharpDX.Direct3D11.FormatSupport"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_FORMAT_SUPPORT']/*"/>	
            <msdn-id>ff476124</msdn-id>	
            <unmanaged>D3D11_FEATURE_FORMAT_SUPPORT</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_FORMAT_SUPPORT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.ComputeShaders">
            <summary>	
            <dd> <p>Supports the formats in <strong><see cref="T:SharpDX.Direct3D11.ComputeShaderFormatSupport"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_FORMAT_SUPPORT2']/*"/>	
            <msdn-id>ff476124</msdn-id>	
            <unmanaged>D3D11_FEATURE_FORMAT_SUPPORT2</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_FORMAT_SUPPORT2</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.D3D10XHardwareOptions">
            <summary>	
            <dd> <p>Supports compute shaders and raw and structured buffers.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS']/*"/>	
            <msdn-id>ff476124</msdn-id>	
            <unmanaged>D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.D3D11Options">
            <summary>	
            <dd> <p>Supports Direct3D 11.1 feature options.</p> <strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_D3D11_OPTIONS']/*"/>	
            <msdn-id>ff476124</msdn-id>	
            <unmanaged>D3D11_FEATURE_D3D11_OPTIONS</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_D3D11_OPTIONS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.ArchitectureInformation">
            <summary>	
            <dd> <p>Supports specific adapter architecture.</p> <strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_ARCHITECTURE_INFO']/*"/>	
            <msdn-id>ff476124</msdn-id>	
            <unmanaged>D3D11_FEATURE_ARCHITECTURE_INFO</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_ARCHITECTURE_INFO</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.D3D9Options">
            <summary>	
            <dd> <p>Supports Direct3D?9 feature options.</p> <strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_D3D9_OPTIONS']/*"/>	
            <msdn-id>ff476124</msdn-id>	
            <unmanaged>D3D11_FEATURE_D3D9_OPTIONS</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_D3D9_OPTIONS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.ShaderMinimumPrecisionSupport">
            <summary>	
            <dd> <p>Supports minimum precision of shaders.</p> <strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_SHADER_MIN_PRECISION_SUPPORT']/*"/>	
            <msdn-id>ff476124</msdn-id>	
            <unmanaged>D3D11_FEATURE_SHADER_MIN_PRECISION_SUPPORT</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_SHADER_MIN_PRECISION_SUPPORT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.D3D9ShadowSupport">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_D3D9_SHADOW_SUPPORT']/*"/>	
            <unmanaged>D3D11_FEATURE_D3D9_SHADOW_SUPPORT</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_D3D9_SHADOW_SUPPORT</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.FillMode">
            <summary>	
            <p>Determines the fill mode to use when rendering triangles.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is part of a rasterizer-state object description (see <strong><see cref="T:SharpDX.Direct3D11.RasterizerStateDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILL_MODE']/*"/>	
            <msdn-id>ff476131</msdn-id>	
            <unmanaged>D3D11_FILL_MODE</unmanaged>	
            <unmanaged-short>D3D11_FILL_MODE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FillMode.Wireframe">
            <summary>	
            <dd> <p>Draw lines connecting the vertices. Adjacent vertices are not drawn.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILL_WIREFRAME']/*"/>	
            <msdn-id>ff476131</msdn-id>	
            <unmanaged>D3D11_FILL_WIREFRAME</unmanaged>	
            <unmanaged-short>D3D11_FILL_WIREFRAME</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FillMode.Solid">
            <summary>	
            <dd> <p>Fill the triangles formed by the vertices. Adjacent vertices are not drawn.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILL_SOLID']/*"/>	
            <msdn-id>ff476131</msdn-id>	
            <unmanaged>D3D11_FILL_SOLID</unmanaged>	
            <unmanaged-short>D3D11_FILL_SOLID</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Filter">
            <summary>	
            <p>Types of magnification or minification sampler filters.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER']/*"/>	
            <msdn-id>ff476133</msdn-id>	
            <unmanaged>D3D11_FILTER</unmanaged>	
            <unmanaged-short>D3D11_FILTER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinMagMipPoint">
            <summary>	
            <dd> <p>Point filtering used as a texture magnification or minification filter. The texel with coordinates nearest to the desired pixel value is used. The texture filter to be used between mipmap levels is nearest-point mipmap filtering. The rasterizer uses the color from the texel of the nearest mipmap texture. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_MAG_MIP_POINT']/*"/>	
            <msdn-id>ff476133</msdn-id>	
            <unmanaged>D3D11_FILTER_MIN_MAG_MIP_POINT</unmanaged>	
            <unmanaged-short>D3D11_FILTER_MIN_MAG_MIP_POINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinMagPointMipLinear">
            <summary>	
            <dd> <p>Bilinear interpolation filtering used as a texture magnification or minification filter. A weighted average of a 2 x 2 area of texels surrounding the desired pixel is used. The texture filter to use between mipmap levels is trilinear mipmap interpolation. The rasterizer linearly interpolates pixel color, using the texels of the two nearest mipmap textures. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR']/*"/>	
            <msdn-id>ff476133</msdn-id>	
            <unmanaged>D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR</unmanaged>	
            <unmanaged-short>D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinPointMagLinearMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged>	
            <unmanaged-short>D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinPointMagMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR</unmanaged>	
            <unmanaged-short>D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinLinearMagMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT</unmanaged>	
            <unmanaged-short>D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinLinearMagPointMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged>	
            <unmanaged-short>D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinMagLinearMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT</unmanaged>	
            <unmanaged-short>D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinMagMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_MAG_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_MAG_MIP_LINEAR</unmanaged>	
            <unmanaged-short>D3D11_FILTER_MIN_MAG_MIP_LINEAR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_ANISOTROPIC']/*"/>	
            <unmanaged>D3D11_FILTER_ANISOTROPIC</unmanaged>	
            <unmanaged-short>D3D11_FILTER_ANISOTROPIC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinMagMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT</unmanaged>	
            <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinMagPointMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR</unmanaged>	
            <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinPointMagLinearMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged>	
            <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinPointMagMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR</unmanaged>	
            <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinLinearMagMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT</unmanaged>	
            <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinLinearMagPointMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged>	
            <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinMagLinearMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT</unmanaged>	
            <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinMagMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR</unmanaged>	
            <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonAnisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_ANISOTROPIC']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_ANISOTROPIC</unmanaged>	
            <unmanaged-short>D3D11_FILTER_COMPARISON_ANISOTROPIC</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.FilterType">
            <summary>	
            <p>Types of magnification or minification sampler filters.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_TYPE']/*"/>	
            <msdn-id>ff476133</msdn-id>	
            <unmanaged>D3D11_FILTER_TYPE</unmanaged>	
            <unmanaged-short>D3D11_FILTER_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FilterType.Point">
            <summary>	
            <dd> <p>Point filtering used as a texture magnification or minification filter. The texel with coordinates nearest to the desired pixel value is used. The texture filter to be used between mipmap levels is nearest-point mipmap filtering. The rasterizer uses the color from the texel of the nearest mipmap texture. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_TYPE_POINT']/*"/>	
            <msdn-id>ff476133</msdn-id>	
            <unmanaged>D3D11_FILTER_TYPE_POINT</unmanaged>	
            <unmanaged-short>D3D11_FILTER_TYPE_POINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FilterType.Linear">
            <summary>	
            <dd> <p>Bilinear interpolation filtering used as a texture magnification or minification filter. A weighted average of a 2 x 2 area of texels surrounding the desired pixel is used. The texture filter to use between mipmap levels is trilinear mipmap interpolation. The rasterizer linearly interpolates pixel color, using the texels of the two nearest mipmap textures. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_TYPE_LINEAR']/*"/>	
            <msdn-id>ff476133</msdn-id>	
            <unmanaged>D3D11_FILTER_TYPE_LINEAR</unmanaged>	
            <unmanaged-short>D3D11_FILTER_TYPE_LINEAR</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.FormatSupport">
            <summary>	
            <p>Which resources are supported for a given format and given device (see <strong><see cref="M:SharpDX.Direct3D11.Device.CheckFormatSupport(SharpDX.DXGI.Format)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)"/></strong>).</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT']/*"/>	
            <msdn-id>ff476134</msdn-id>	
            <unmanaged>D3D11_FORMAT_SUPPORT</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Buffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_BUFFER']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_BUFFER</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.InputAssemblyVertexBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_IA_VERTEX_BUFFER']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_IA_VERTEX_BUFFER</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_IA_VERTEX_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.InputAssemblyIndexBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_IA_INDEX_BUFFER']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_IA_INDEX_BUFFER</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_IA_INDEX_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.StreamOutputBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SO_BUFFER']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SO_BUFFER</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_SO_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Texture1D">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_TEXTURE1D']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_TEXTURE1D</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_TEXTURE1D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_TEXTURE2D']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_TEXTURE2D</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_TEXTURE2D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Texture3D">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_TEXTURE3D']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_TEXTURE3D</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_TEXTURE3D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.TextureCube">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_TEXTURECUBE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_TEXTURECUBE</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_TEXTURECUBE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.ShaderLoad">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SHADER_LOAD']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_LOAD</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_SHADER_LOAD</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.ShaderSample">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SHADER_SAMPLE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.ShaderSampleComparison">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.ShaderSampleMonoText">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Mip">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_MIP']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_MIP</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_MIP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.MipAutogen">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_MIP_AUTOGEN']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_MIP_AUTOGEN</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_MIP_AUTOGEN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.RenderTarget">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_RENDER_TARGET']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_RENDER_TARGET</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_RENDER_TARGET</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Blendable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_BLENDABLE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_BLENDABLE</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_BLENDABLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.DepthStencil">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_DEPTH_STENCIL']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_DEPTH_STENCIL</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_DEPTH_STENCIL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.CpuLockable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_CPU_LOCKABLE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_CPU_LOCKABLE</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_CPU_LOCKABLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.MultisampleResolve">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Display">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_DISPLAY']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_DISPLAY</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_DISPLAY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.CastWithinBitLayout">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.MultisampleRenderTarget">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.MultisampleLoad">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_MULTISAMPLE_LOAD']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_MULTISAMPLE_LOAD</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_MULTISAMPLE_LOAD</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.ShaderGather">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SHADER_GATHER']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_GATHER</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_SHADER_GATHER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.BackBufferCast">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_BACK_BUFFER_CAST']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_BACK_BUFFER_CAST</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_BACK_BUFFER_CAST</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.TypedUnorderedAccessView">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_TYPED_UNORDERED_ACCESS_VIEW']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_TYPED_UNORDERED_ACCESS_VIEW</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_TYPED_UNORDERED_ACCESS_VIEW</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.ShaderGatherComparison">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SHADER_GATHER_COMPARISON']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_GATHER_COMPARISON</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_SHADER_GATHER_COMPARISON</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.DecoderOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_DECODER_OUTPUT']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_DECODER_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_DECODER_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.VideoProcessorOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_OUTPUT']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.VideoProcessorInput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_INPUT']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_INPUT</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.VideoEncoder">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_VIDEO_ENCODER']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_VIDEO_ENCODER</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT_VIDEO_ENCODER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.InputClassification">
            <summary>	
            <p>Type of data contained in an input slot.</p>	
            </summary>	
            <remarks>	
            <p>Use these values to specify the type of data for a particular input element (see <strong><see cref="T:SharpDX.Direct3D11.InputElement"/></strong>) of an input-layout object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_CLASSIFICATION']/*"/>	
            <msdn-id>ff476179</msdn-id>	
            <unmanaged>D3D11_INPUT_CLASSIFICATION</unmanaged>	
            <unmanaged-short>D3D11_INPUT_CLASSIFICATION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputClassification.PerVertexData">
            <summary>	
            <dd> <p>Input data is per-vertex data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_PER_VERTEX_DATA']/*"/>	
            <msdn-id>ff476179</msdn-id>	
            <unmanaged>D3D11_INPUT_PER_VERTEX_DATA</unmanaged>	
            <unmanaged-short>D3D11_INPUT_PER_VERTEX_DATA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputClassification.PerInstanceData">
            <summary>	
            <dd> <p>Input data is per-instance data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_PER_INSTANCE_DATA']/*"/>	
            <msdn-id>ff476179</msdn-id>	
            <unmanaged>D3D11_INPUT_PER_INSTANCE_DATA</unmanaged>	
            <unmanaged-short>D3D11_INPUT_PER_INSTANCE_DATA</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.LogicOperation">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p><strong>Note</strong>??This enumeration is supported by the Direct3D 11.1 runtime, which is available on Windows?8 Consumer Preview and later operating systems.</p><p>Specifies logical operations to configure for a render target.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Clear">
            <summary>	
            <dd> <p>Clears the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_CLEAR']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_CLEAR</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_CLEAR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Set">
            <summary>	
            <dd> <p>Sets the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_SET']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_SET</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_SET</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Copy">
            <summary>	
            <dd> <p>Copys the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_COPY']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_COPY</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_COPY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.CopyInverted">
            <summary>	
            <dd> <p>Performs an inverted-copy of the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_COPY_INVERTED']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_COPY_INVERTED</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_COPY_INVERTED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Noop">
            <summary>	
            <dd> <p>No operation is performed on the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_NOOP']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_NOOP</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_NOOP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Invert">
            <summary>	
            <dd> <p>Inverts the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_INVERT']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_INVERT</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_INVERT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.And">
            <summary>	
            <dd> <p>Performs a logical AND operation on the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_AND']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_AND</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_AND</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Nand">
            <summary>	
            <dd> <p>Performs a logical NAND operation on the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_NAND']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_NAND</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_NAND</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Or">
            <summary>	
            <dd> <p>Performs a logical OR operation on the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_OR']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_OR</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_OR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Nor">
            <summary>	
            <dd> <p>Performs a logical NOR operation on the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_NOR']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_NOR</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_NOR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Xor">
            <summary>	
            <dd> <p>Performs a logical XOR operation on the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_XOR']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_XOR</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_XOR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Equiv">
            <summary>	
            <dd> <p>Performs a logical equal operation on the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_EQUIV']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_EQUIV</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_EQUIV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.AndReverse">
            <summary>	
            <dd> <p>Performs a logical AND and reverse operation on the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_AND_REVERSE']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_AND_REVERSE</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_AND_REVERSE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.AndInverted">
            <summary>	
            <dd> <p>Performs a logical AND and invert operation on the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_AND_INVERTED']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_AND_INVERTED</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_AND_INVERTED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.OrReverse">
            <summary>	
            <dd> <p>Performs a logical OR and reverse operation on the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_OR_REVERSE']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_OR_REVERSE</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_OR_REVERSE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.OrInverted">
            <summary>	
            <dd> <p>Performs a logical OR and invert operation on the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_OR_INVERTED']/*"/>	
            <msdn-id>hh404484</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP_OR_INVERTED</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP_OR_INVERTED</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.MapFlags">
            <summary>	
            <p>Specifies how the CPU should respond when an application calls the <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/></strong> method on a resource that is being used by the GPU.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used by <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/></strong>.</p><p><see cref="F:SharpDX.Direct3D11.MapFlags.DoNotWait"/> cannot be used with <strong><see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/></strong> or <strong>D3D11_MAP_WRITE_NOOVERWRITE</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_FLAG']/*"/>	
            <msdn-id>ff476183</msdn-id>	
            <unmanaged>D3D11_MAP_FLAG</unmanaged>	
            <unmanaged-short>D3D11_MAP_FLAG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapFlags.DoNotWait">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_FLAG_DO_NOT_WAIT']/*"/>	
            <unmanaged>D3D11_MAP_FLAG_DO_NOT_WAIT</unmanaged>	
            <unmanaged-short>D3D11_MAP_FLAG_DO_NOT_WAIT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.MapMode">
            <summary>	
            <p>Identifies a resource to be accessed for reading and writing by the CPU. Applications may combine one or more of these flags.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used in <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/></strong>.</p><p>These remarks are divided into the following topics:</p><p> </p><ul> <li>Meaning</li> <li>Common</li> </ul>Meaning of <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/><p><see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/> signifies that the application promises not to write to data that the input assembler (IA) stage is using. In exchange, the GPU allows the application to write to other parts of the same buffer.  The application must ensure that it does not write over any data in use by the IA stage.</p><p>For example, consider the buffer illustrated in the following diagram. If a Draw call has been issued that uses vertices 4-6, then an application that calls Map on this buffer must ensure that it does not write to the vertices that the Draw call will access during rendering.</p><p>However, ensuring this can be difficult, because the GPU is often many frames behind the CPU in terms of which frame it is currently processing. Keeping track of which sections of a resource are being used because of calls made 2 to 5 frames ago is difficult and error-prone. Because of this, it is recommended that applications only write to the uninitialized portions of a resource when using <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/>.</p>Common Usage of <see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/> with <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/><p><see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/> and <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/> are normally used in conjunction with dynamic index/vertex buffers. <see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/> can also be used with dynamic textures. However, <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/> cannot be used with dynamic textures.</p><p>A common use of these two flags involves filling dynamic index/vertex buffers with geometry that can be seen from the camera's current position. The first time that data is entered into the buffer on a given frame, Map is called with <see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/>; doing so invalidates the previous contents of the buffer. The buffer is then filled with all available data.</p><p>Subsequent writes to the buffer within the same frame should use <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/>. This will enable the CPU to access a resource that is potentially being used by the GPU as long as the restrictions described previously are respected.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP']/*"/>	
            <msdn-id>ff476181</msdn-id>	
            <unmanaged>D3D11_MAP</unmanaged>	
            <unmanaged-short>D3D11_MAP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapMode.Read">
            <summary>	
            <dd> <p>Resource is mapped for reading. The resource must have been created with read access  (see <strong><see cref="F:SharpDX.Direct3D11.CpuAccessFlags.Read"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_READ']/*"/>	
            <msdn-id>ff476181</msdn-id>	
            <unmanaged>D3D11_MAP_READ</unmanaged>	
            <unmanaged-short>D3D11_MAP_READ</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapMode.Write">
            <summary>	
            <dd> <p>Resource is mapped for writing. The resource must have been created with write  access (see <strong><see cref="F:SharpDX.Direct3D11.CpuAccessFlags.Write"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_WRITE']/*"/>	
            <msdn-id>ff476181</msdn-id>	
            <unmanaged>D3D11_MAP_WRITE</unmanaged>	
            <unmanaged-short>D3D11_MAP_WRITE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapMode.ReadWrite">
            <summary>	
            <dd> <p>Resource is mapped for reading and writing. The resource must have been created with read and write  access (see <strong><see cref="F:SharpDX.Direct3D11.CpuAccessFlags.Read"/> and <see cref="F:SharpDX.Direct3D11.CpuAccessFlags.Write"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_READ_WRITE']/*"/>	
            <msdn-id>ff476181</msdn-id>	
            <unmanaged>D3D11_MAP_READ_WRITE</unmanaged>	
            <unmanaged-short>D3D11_MAP_READ_WRITE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapMode.WriteDiscard">
            <summary>	
            <dd> <p>Resource is mapped for writing; the previous contents of the resource will be undefined. The resource must have been created with write access  and dynamic usage (See <strong><see cref="F:SharpDX.Direct3D11.CpuAccessFlags.Write"/></strong> and <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_WRITE_DISCARD']/*"/>	
            <msdn-id>ff476181</msdn-id>	
            <unmanaged>D3D11_MAP_WRITE_DISCARD</unmanaged>	
            <unmanaged-short>D3D11_MAP_WRITE_DISCARD</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite">
            <summary>	
            <dd> <p>Resource is mapped for writing; the existing contents of the resource cannot be overwritten (see Remarks). This flag is only valid on vertex and  index buffers. The resource must have been created with write access (see <strong><see cref="F:SharpDX.Direct3D11.CpuAccessFlags.Write"/></strong>).  Cannot be used on a resource created with the <strong><see cref="F:SharpDX.Direct3D11.BindFlags.ConstantBuffer"/></strong> flag.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_WRITE_NO_OVERWRITE']/*"/>	
            <msdn-id>ff476181</msdn-id>	
            <unmanaged>D3D11_MAP_WRITE_NO_OVERWRITE</unmanaged>	
            <unmanaged-short>D3D11_MAP_WRITE_NO_OVERWRITE</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.QueryFlags">
            <summary>	
            <p>Flags that describe miscellaneous query behavior.</p>	
            </summary>	
            <remarks>	
            <p>This flag is part of a query description (see <strong><see cref="T:SharpDX.Direct3D11.QueryDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_MISC_FLAG']/*"/>	
            <msdn-id>ff476196</msdn-id>	
            <unmanaged>D3D11_QUERY_MISC_FLAG</unmanaged>	
            <unmanaged-short>D3D11_QUERY_MISC_FLAG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryFlags.Predicatehint">
            <summary>	
            <dd> <p>Tell the hardware that if it is not yet sure if something is hidden or not to draw it anyway. This is only used with an occlusion predicate. Predication data cannot be returned to your application via <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> when using this flag.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_MISC_PREDICATEHINT']/*"/>	
            <msdn-id>ff476196</msdn-id>	
            <unmanaged>D3D11_QUERY_MISC_PREDICATEHINT</unmanaged>	
            <unmanaged-short>D3D11_QUERY_MISC_PREDICATEHINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.QueryType">
            <summary>	
            <p>Query types.</p>	
            </summary>	
            <remarks>	
            <p>Create a query with <strong><see cref="M:SharpDX.Direct3D11.Device.CreateQuery(SharpDX.Direct3D11.QueryDescription,SharpDX.Direct3D11.Query)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY</unmanaged>	
            <unmanaged-short>D3D11_QUERY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.Event">
            <summary>	
            <dd> <p>Determines whether or not the GPU is finished processing commands. When the GPU is finished processing commands <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> will return <see cref="F:SharpDX.Result.Ok"/>, and pData will point to a <see cref="T:SharpDX.Bool"/> with a value of <strong>TRUE</strong>. When using this type of query, <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> is disabled.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_EVENT']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_EVENT</unmanaged>	
            <unmanaged-short>D3D11_QUERY_EVENT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.Occlusion">
            <summary>	
            <dd> <p>Get the number of samples that passed the depth and stencil tests in between <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>. <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> returns a UINT64. If a depth or stencil test is disabled, then each of those tests will be counted as a pass.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_OCCLUSION']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_OCCLUSION</unmanaged>	
            <unmanaged-short>D3D11_QUERY_OCCLUSION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.Timestamp">
            <summary>	
            <dd> <p>Get a timestamp value where <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> returns a UINT64. This kind of query is only useful if two timestamp queries are done in the middle of a <see cref="F:SharpDX.Direct3D11.QueryType.TimestampDisjoint"/> query. The difference of two timestamps can be used to determine how many ticks have elapsed, and the <see cref="F:SharpDX.Direct3D11.QueryType.TimestampDisjoint"/> query will determine if that difference is a reliable value and also has a value that shows how to convert the number of ticks into seconds. See <strong><see cref="T:SharpDX.Direct3D11.QueryDataTimestampDisjoint"/></strong>. When using this type of query, <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> is disabled.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_TIMESTAMP']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_TIMESTAMP</unmanaged>	
            <unmanaged-short>D3D11_QUERY_TIMESTAMP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.TimestampDisjoint">
            <summary>	
            <dd> <p>Determines whether or not a <see cref="F:SharpDX.Direct3D11.QueryType.Timestamp"/> is returning reliable values, and also gives the frequency of the processor enabling you to convert the number of elapsed ticks into seconds. <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> will return a <strong><see cref="T:SharpDX.Direct3D11.QueryDataTimestampDisjoint"/></strong>. This type of query should only be invoked once per frame or less.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_TIMESTAMP_DISJOINT']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_TIMESTAMP_DISJOINT</unmanaged>	
            <unmanaged-short>D3D11_QUERY_TIMESTAMP_DISJOINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.PipelineStatistics">
            <summary>	
            <dd> <p>Get pipeline statistics, such as the number of pixel shader invocations in between <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>. <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> will return a <strong><see cref="T:SharpDX.Direct3D11.QueryDataPipelineStatistics"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_PIPELINE_STATISTICS']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_PIPELINE_STATISTICS</unmanaged>	
            <unmanaged-short>D3D11_QUERY_PIPELINE_STATISTICS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.OcclusionPredicate">
            <summary>	
            <dd> <p>Similar to <see cref="F:SharpDX.Direct3D11.QueryType.Occlusion"/>, except <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> returns a <see cref="T:SharpDX.Bool"/> indicating whether or not any samples passed the depth and stencil tests - <strong>TRUE</strong> meaning at least one passed, <strong><see cref="F:SharpDX.Result.False"/></strong> meaning none passed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_OCCLUSION_PREDICATE']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_OCCLUSION_PREDICATE</unmanaged>	
            <unmanaged-short>D3D11_QUERY_OCCLUSION_PREDICATE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputStatistics">
            <summary>	
            <dd> <p>Get streaming output statistics, such as the number of primitives streamed out in between <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>. <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> will return a <strong><see cref="T:SharpDX.Direct3D11.StreamOutputStatistics"/></strong> structure.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_STATISTICS']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_SO_STATISTICS</unmanaged>	
            <unmanaged-short>D3D11_QUERY_SO_STATISTICS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputOverflowPredicate">
            <summary>	
            <dd> <p>Determines whether or not any of the streaming output buffers overflowed in between <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>. <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> returns a <see cref="T:SharpDX.Bool"/> - <strong>TRUE</strong> meaning there was an overflow, <strong><see cref="F:SharpDX.Result.False"/></strong> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_OVERFLOW_PREDICATE']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE</unmanaged>	
            <unmanaged-short>D3D11_QUERY_SO_OVERFLOW_PREDICATE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputStatisticsStream0">
            <summary>	
            <dd> <p>Get streaming output statistics for stream 0, such as the number of primitives streamed out in between <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>. <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> will return a <strong><see cref="T:SharpDX.Direct3D11.StreamOutputStatistics"/></strong> structure.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_STATISTICS_STREAM0']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_SO_STATISTICS_STREAM0</unmanaged>	
            <unmanaged-short>D3D11_QUERY_SO_STATISTICS_STREAM0</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputOverflowPredicateStream0">
            <summary>	
            <dd> <p>Determines whether or not the stream 0 output buffers overflowed in between <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>. <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> returns a <see cref="T:SharpDX.Bool"/> - <strong>TRUE</strong> meaning there was an overflow, <strong><see cref="F:SharpDX.Result.False"/></strong> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0</unmanaged>	
            <unmanaged-short>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputStatisticsStream1">
            <summary>	
            <dd> <p>Get streaming output statistics for stream 1, such as the number of primitives streamed out in between <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>. <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> will return a <strong><see cref="T:SharpDX.Direct3D11.StreamOutputStatistics"/></strong> structure.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_STATISTICS_STREAM1']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_SO_STATISTICS_STREAM1</unmanaged>	
            <unmanaged-short>D3D11_QUERY_SO_STATISTICS_STREAM1</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputOverflowPredicateStream1">
            <summary>	
            <dd> <p>Determines whether or not the stream 1 output buffers overflowed in between <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>. <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> returns a <see cref="T:SharpDX.Bool"/> - <strong>TRUE</strong> meaning there was an overflow, <strong><see cref="F:SharpDX.Result.False"/></strong> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1</unmanaged>	
            <unmanaged-short>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputStatisticsStream2">
            <summary>	
            <dd> <p>Get streaming output statistics for stream 2, such as the number of primitives streamed out in between <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>. <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> will return a <strong><see cref="T:SharpDX.Direct3D11.StreamOutputStatistics"/></strong> structure.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_STATISTICS_STREAM2']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_SO_STATISTICS_STREAM2</unmanaged>	
            <unmanaged-short>D3D11_QUERY_SO_STATISTICS_STREAM2</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputOverflowPredicateStream2">
            <summary>	
            <dd> <p>Determines whether or not the stream 2 output buffers overflowed in between <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>. <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> returns a <see cref="T:SharpDX.Bool"/> - <strong>TRUE</strong> meaning there was an overflow, <strong><see cref="F:SharpDX.Result.False"/></strong> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2</unmanaged>	
            <unmanaged-short>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputStatisticsStream3">
            <summary>	
            <dd> <p>Get streaming output statistics for stream 3, such as the number of primitives streamed out in between <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>. <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> will return a <strong><see cref="T:SharpDX.Direct3D11.StreamOutputStatistics"/></strong> structure.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_STATISTICS_STREAM3']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_SO_STATISTICS_STREAM3</unmanaged>	
            <unmanaged-short>D3D11_QUERY_SO_STATISTICS_STREAM3</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputOverflowPredicateStream3">
            <summary>	
            <dd> <p>Determines whether or not the stream 3 output buffers overflowed in between <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>. <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> returns a <see cref="T:SharpDX.Bool"/> - <strong>TRUE</strong> meaning there was an overflow, <strong><see cref="F:SharpDX.Result.False"/></strong> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3']/*"/>	
            <msdn-id>ff476191</msdn-id>	
            <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3</unmanaged>	
            <unmanaged-short>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDimension">
            <summary>	
            <p>These flags identify the type of resource that will be viewed as a render target.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used in <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/></strong> to create a render-target view.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION']/*"/>	
            <msdn-id>ff476206</msdn-id>	
            <unmanaged>D3D11_RTV_DIMENSION</unmanaged>	
            <unmanaged-short>D3D11_RTV_DIMENSION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Unknown">
            <summary>	
            <dd> <p>Do not use this value, as it will cause <strong><see cref="M:SharpDX.Direct3D11.Device.CreateRenderTargetView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.RenderTargetViewDescription},SharpDX.Direct3D11.RenderTargetView)"/></strong> to fail.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_UNKNOWN']/*"/>	
            <msdn-id>ff476206</msdn-id>	
            <unmanaged>D3D11_RTV_DIMENSION_UNKNOWN</unmanaged>	
            <unmanaged-short>D3D11_RTV_DIMENSION_UNKNOWN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Buffer">
            <summary>	
            <dd> <p>The resource will be accessed as a buffer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_BUFFER']/*"/>	
            <msdn-id>ff476206</msdn-id>	
            <unmanaged>D3D11_RTV_DIMENSION_BUFFER</unmanaged>	
            <unmanaged-short>D3D11_RTV_DIMENSION_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture1D">
            <summary>	
            <dd> <p>The resource will be accessed as a 1D texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE1D']/*"/>	
            <msdn-id>ff476206</msdn-id>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE1D</unmanaged>	
            <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE1D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture1DArray">
            <summary>	
            <dd> <p>The resource will be accessed as an array of 1D textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE1DARRAY']/*"/>	
            <msdn-id>ff476206</msdn-id>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE1DARRAY</unmanaged>	
            <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE1DARRAY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture2D">
            <summary>	
            <dd> <p>The resource will be accessed as a 2D texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE2D']/*"/>	
            <msdn-id>ff476206</msdn-id>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE2D</unmanaged>	
            <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE2D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture2DArray">
            <summary>	
            <dd> <p>The resource will be accessed as an array of 2D textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE2DARRAY']/*"/>	
            <msdn-id>ff476206</msdn-id>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE2DARRAY</unmanaged>	
            <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE2DARRAY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture2DMultisampled">
            <summary>	
            <dd> <p>The resource will be accessed as a 2D texture with multisampling.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE2DMS']/*"/>	
            <msdn-id>ff476206</msdn-id>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE2DMS</unmanaged>	
            <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE2DMS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture2DMultisampledArray">
            <summary>	
            <dd> <p>The resource will be accessed as an array of 2D textures with multisampling.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY']/*"/>	
            <msdn-id>ff476206</msdn-id>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY</unmanaged>	
            <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture3D">
            <summary>	
            <dd> <p>The resource will be accessed as a 3D texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE3D']/*"/>	
            <msdn-id>ff476206</msdn-id>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE3D</unmanaged>	
            <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE3D</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ResourceDimension">
            <summary>	
            <p>Identifies the type of resource being used.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used in <strong><see cref="M:SharpDX.Direct3D11.Resource.GetDimension(SharpDX.Direct3D11.ResourceDimension@)"/></strong>. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_DIMENSION']/*"/>	
            <msdn-id>ff476202</msdn-id>	
            <unmanaged>D3D11_RESOURCE_DIMENSION</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_DIMENSION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceDimension.Unknown">
            <summary>	
            <dd> <p>Resource is of unknown type.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_DIMENSION_UNKNOWN']/*"/>	
            <msdn-id>ff476202</msdn-id>	
            <unmanaged>D3D11_RESOURCE_DIMENSION_UNKNOWN</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_DIMENSION_UNKNOWN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceDimension.Buffer">
            <summary>	
            <dd> <p>Resource is a buffer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_DIMENSION_BUFFER']/*"/>	
            <msdn-id>ff476202</msdn-id>	
            <unmanaged>D3D11_RESOURCE_DIMENSION_BUFFER</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_DIMENSION_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceDimension.Texture1D">
            <summary>	
            <dd> <p>Resource is a 1D texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_DIMENSION_TEXTURE1D']/*"/>	
            <msdn-id>ff476202</msdn-id>	
            <unmanaged>D3D11_RESOURCE_DIMENSION_TEXTURE1D</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_DIMENSION_TEXTURE1D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceDimension.Texture2D">
            <summary>	
            <dd> <p>Resource is a 2D texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_DIMENSION_TEXTURE2D']/*"/>	
            <msdn-id>ff476202</msdn-id>	
            <unmanaged>D3D11_RESOURCE_DIMENSION_TEXTURE2D</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_DIMENSION_TEXTURE2D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceDimension.Texture3D">
            <summary>	
            <dd> <p>Resource is a 3D texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_DIMENSION_TEXTURE3D']/*"/>	
            <msdn-id>ff476202</msdn-id>	
            <unmanaged>D3D11_RESOURCE_DIMENSION_TEXTURE3D</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_DIMENSION_TEXTURE3D</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ResourceOptionFlags">
            <summary>	
            <p>Identifies options for resources.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used in <strong><see cref="T:SharpDX.Direct3D11.BufferDescription"/></strong>, <strong><see cref="T:SharpDX.Direct3D11.Texture1DDescription"/></strong>, <strong><see cref="T:SharpDX.Direct3D11.Texture2DDescription"/></strong>, <strong><see cref="T:SharpDX.Direct3D11.Texture3DDescription"/></strong>. </p><p>These flags can be combined by bitwise OR.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_FLAG']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_FLAG</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_FLAG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.GenerateMipMaps">
            <summary>	
            <dd> <p>Enables MIP map generation by using <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GenerateMips(SharpDX.Direct3D11.ShaderResourceView)"/></strong> on a texture resource. The resource must be created with the <strong>bind flags</strong> that specify that the resource is a render target and a shader resource.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_GENERATE_MIPS']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_GENERATE_MIPS</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_GENERATE_MIPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.Shared">
            <summary>	
            <dd> <p>Enables resource data sharing between two or more Direct3D devices. The only resources that can be shared are 2D non-mipmapped textures.</p> <p><strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.Shared"/></strong> and <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedKeyedmutex"/></strong> are mutually exclusive.</p> <p><strong>WARP</strong> and <strong>REF</strong> devices do not support shared resources. If you try to create a resource with this flag on either a <strong>WARP</strong> or <strong>REF</strong> device,  the create method will return an <strong>E_OUTOFMEMORY</strong> error code.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_SHARED']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_SHARED</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_SHARED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.TextureCube">
            <summary>	
            <dd> <p>Sets a resource to be a cube texture created from a Texture2DArray that contains 6 textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_TEXTURECUBE']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_TEXTURECUBE</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_TEXTURECUBE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.DrawIndirectArguments">
            <summary>	
            <dd> <p>Enables instancing of GPU-generated content.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.BufferAllowRawViews">
            <summary>	
            <dd> <p>Enables a resource as a byte address buffer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.BufferStructured">
            <summary>	
            <dd> <p>Enables a resource as a structured buffer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_BUFFER_STRUCTURED']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_BUFFER_STRUCTURED</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_BUFFER_STRUCTURED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.ResourceClamp">
            <summary>	
            <dd> <p>Enables a resource with MIP map clamping for use with <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.SetMinimumLod(SharpDX.Direct3D11.Resource,System.Single)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_RESOURCE_CLAMP']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_RESOURCE_CLAMP</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_RESOURCE_CLAMP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedKeyedmutex">
            <summary>	
            <dd> <p>Enables the resource  to be synchronized by using the <strong><see cref="M:SharpDX.DXGI.KeyedMutex.Acquire(System.Int64,System.Int32)"/></strong> and  <strong><see cref="M:SharpDX.DXGI.KeyedMutex.Release(System.Int64)"/></strong> APIs.  The following Direct3D?11 resource creation  APIs, that take <strong><see cref="T:SharpDX.Direct3D11.ResourceOptionFlags"/></strong> parameters, have been extended to support the new flag.</p> <ul> <li> <strong><see cref="M:SharpDX.Direct3D11.Device.CreateTexture1D(SharpDX.Direct3D11.Texture1DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture1D)"/></strong> </li> <li> <strong><see cref="M:SharpDX.Direct3D11.Device.CreateTexture2D(SharpDX.Direct3D11.Texture2DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture2D)"/></strong> </li> <li> <strong><see cref="M:SharpDX.Direct3D11.Device.CreateTexture3D(SharpDX.Direct3D11.Texture3DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture3D)"/></strong> </li> <li> <strong><see cref="M:SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)"/></strong> </li> </ul> <p>If you call any of these  methods with the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedKeyedmutex"/></strong> flag set, the interface returned will support the <strong><see cref="T:SharpDX.DXGI.KeyedMutex"/></strong> interface.  You can retrieve a reference to the <strong><see cref="T:SharpDX.DXGI.KeyedMutex"/></strong> interface from the resource by using <strong>IUnknown::QueryInterface</strong>.  The <strong><see cref="T:SharpDX.DXGI.KeyedMutex"/></strong> interface implements the <strong><see cref="M:SharpDX.DXGI.KeyedMutex.Acquire(System.Int64,System.Int32)"/></strong> and <strong><see cref="M:SharpDX.DXGI.KeyedMutex.Release(System.Int64)"/></strong> APIs to synchronize access to the surface. The device that creates the surface, and any other device that opens the surface  by using <strong>OpenSharedResource</strong>, must call <strong><see cref="M:SharpDX.DXGI.KeyedMutex.Acquire(System.Int64,System.Int32)"/></strong> before they issue any rendering commands to the surface. When those devices finish rendering, they must call <strong><see cref="M:SharpDX.DXGI.KeyedMutex.Release(System.Int64)"/></strong>.</p> <p><strong> <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.Shared"/></strong> and <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedKeyedmutex"/></strong> are mutually exclusive.</p> <p><strong>WARP</strong> and <strong>REF</strong> devices do not support shared resources. If you try to create a resource with this flag on either a <strong>WARP</strong> or <strong>REF</strong> device,  the create method will return an <strong>E_OUTOFMEMORY</strong> error code.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible">
            <summary>	
            <dd> <p>Enables a resource compatible with GDI. You must set the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible"/></strong> flag  on surfaces that you use with GDI. Setting the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible"/></strong> flag allows GDI rendering on the surface via <strong><see cref="M:SharpDX.DXGI.Surface1.GetDC(SharpDX.Bool)"/></strong>.	
            </p> <p>Consider the following programming tips for using <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible"/> when you create a texture or use that texture in a swap chain:</p> <ul> <li><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedKeyedmutex"/> and <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible"/> are mutually exclusive. Therefore, do not use them together.</li> <li><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.ResourceClamp"/> and <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible"/> are mutually exclusive. Therefore, do not use them together.</li> <li>You must bind the texture as a render target for the output-merger stage. For example, set the <see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/> flag in the <strong>BindFlags</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.Texture2DDescription"/></strong> structure.</li> <li>You must set the maximum number of MIP map levels to 1. For example, set the <strong>MipLevels</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.Texture2DDescription"/></strong> structure to 1.</li> <li>You must specify that the texture requires read and write access by the GPU. For example, set the <strong>Usage</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.Texture2DDescription"/></strong> structure to <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/>.</li> <li> <p>You must set the texture format to one of the following types. </p> <ul> <li><see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm"/>	
            </li> <li><see cref="F:SharpDX.DXGI.Format.B8G8R8A8_Typeless"/></li> <li><see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm_SRgb"/>	
            </li> </ul>For example, set the <strong>Format</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.Texture2DDescription"/></strong> structure to one of these  types.</li> <li>You cannot use <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible"/> with multisampling. Therefore, set the <strong>Count</strong> member of the <strong><see cref="T:SharpDX.DXGI.SampleDescription"/></strong> structure to 1. Then, set the <strong>SampleDesc</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.Texture2DDescription"/></strong> structure to this <strong><see cref="T:SharpDX.DXGI.SampleDescription"/></strong> structure.</li> </ul> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_GDI_COMPATIBLE']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_GDI_COMPATIBLE</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_GDI_COMPATIBLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle">
            <summary>	
            <dd> <p>Set this flag to enable the use NT HANDLE values when you create a shared resource.  By enabling this flag, you deprecate the use of existing HANDLE values.</p> <p>You must combine this flag only with the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedKeyedmutex"/></strong> flag by using a bitwise OR operation. The resulting value specifies a new shared resource type that directs the runtime to use NT HANDLE values for the shared resource. The runtime then must confirm that the shared resource  works on all hardware at the specified feature level.</p> <p>Without this flag set, the runtime does not strictly validate shared resource parameters (that is, formats, flags, usage, and so on). When the runtime does not validate shared resource parameters, behavior of much of the Direct3D   API might be undefined and might vary from driver to driver.  </p> <strong>Direct 3D 11 and earlier:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_SHARED_NTHANDLE']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_SHARED_NTHANDLE</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_SHARED_NTHANDLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.RestrictedContent">
            <summary>	
            <dd> <p>Set this flag to indicate that the resource might contain protected content; therefore, the operating system should  use the resource only when the driver and hardware support content protection.  If the driver and hardware do not support content protection and you try to create a resource with this flag, the resource creation fails.</p> <strong>Direct 3D 11:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_RESTRICTED_CONTENT']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_RESTRICTED_CONTENT</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_RESTRICTED_CONTENT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.RestrictSharedResource">
            <summary>	
            <dd> <p>Set this flag to indicate that the operating system  restricts access to the shared surface. You can use this flag together with the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.RestrictSharedResourceDriver"/> flag and only when you create a shared surface. The process that creates the shared resource can always open the shared resource.</p> <strong>Direct 3D 11:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.RestrictSharedResourceDriver">
            <summary>	
            <dd> <p>Set this flag to indicate that the driver  restricts access to the shared surface. You can use this flag in conjunction with the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.RestrictSharedResource"/> flag and only when you create a shared surface. The process that creates the shared resource can always open the shared resource.</p> <strong>Direct 3D 11:??</strong>This value is not supported until Direct3D 11.1. </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER']/*"/>	
            <msdn-id>ff476203</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.Guarded">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_GUARDED']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_GUARDED</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_GUARDED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ResourceUsage">
            <summary>	
            <p>Identifies expected resource use during rendering. The usage directly reflects whether a resource is accessible by the CPU and/or the graphics processing unit (GPU).</p>	
            </summary>	
            <remarks>	
            <p>An application identifies the way a resource is intended to be used (its usage) in a resource description. There are several structures for creating resources including: <strong><see cref="T:SharpDX.Direct3D11.Texture1DDescription"/></strong>, <strong><see cref="T:SharpDX.Direct3D11.Texture2DDescription"/></strong>, <strong><see cref="T:SharpDX.Direct3D11.Texture3DDescription"/></strong>, <strong><see cref="T:SharpDX.Direct3D11.BufferDescription"/></strong>.</p><table> <tr><td> <p>Differences between Direct3D 9 and Direct3D 10/11:</p> <p>In Direct3D 9, you specify the type of memory a resource should be created in at resource creation time (using D3DPOOL). It was an application's job to decide what memory pool would provide the best combination of functionality and performance.</p> <p>In Direct3D 10/11, an application no longer specifies what type of memory (the pool) to create a resource in. Instead, you specify the intended usage of the resource, and let the runtime (in concert with the driver and a memory manager) choose the type of memory that will achieve the best performance.</p> </td></tr> </table><p>?</p>Resource Usage Restrictions<p>Each usage dictates a tradeoff between accessibility for the CPU and accessibility for the GPU. In general, higher-performance access for one of these two processors means lower-performance access for the other. At either extreme are the <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/></strong> and <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Staging"/></strong> usages. <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/></strong> restricts access almost entirely to the GPU. <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Staging"/></strong> restricts access almost entirely to the CPU and allows only a data transfer (copy) of a resource between the GPU and the CPU. You can perform these copy operations via the <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)"/></strong> methods. You can also use these copy methods to copy data between two resources of the same usage. You can also use the <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32)"/></strong> method to copy memory directly from a CPU-supplied reference to any resource, most usefully a resource with <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/></strong>.</p><p><strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/></strong> usage is a special case that optimizes the flow of data from CPU to GPU when the CPU generates that data on-the-fly and sends that data with high frequency. <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/></strong> is typically used on resources with vertex data and on constant buffers. Use the <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.UnmapSubresource(SharpDX.Direct3D11.Resource,System.Int32)"/></strong> methods to write data to these resources. To achieve the highest performance for data consumed serially, like vertex data, use the <strong><see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/></strong> and <strong><see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/></strong> sequence. For more info about this sequence, see <strong>Common Usage of <see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/> with <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/></strong>.	
            </p><p><strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/></strong> usage is another special case that causes the GPU to generate data just once when you create a resource. <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/></strong> is well-suited to data such as textures because such data is typically read into memory from some file format. Therefore, when you create a texture with <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/></strong>, the GPU directly reads that texture into memory.	
            </p><p>Use the following table to choose the usage that best describes how the resource will need to be accessed by the CPU and/or the GPU. Of course, there will be performance tradeoffs.</p><table> <tr><th>Resource Usage</th><th>Default</th><th>Dynamic</th><th>Immutable</th><th>Staging</th></tr> <tr><td>GPU-Read</td><td>yes</td><td>yes</td><td>yes</td><td>yes1</td></tr> <tr><td>GPU-Write</td><td>yes</td><td></td><td></td><td>yes1</td></tr> <tr><td>CPU-Read</td><td></td><td></td><td></td><td>yes1</td></tr> <tr><td>CPU-Write</td><td></td><td>yes</td><td></td><td>yes1</td></tr> </table><p>?</p><p>1 - GPU read or write of a resource with the <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Staging"/></strong> usage is restricted to copy operations. You use <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)"/></strong> for these copy operations. Also, because depth-stencil formats and multisample layouts are implementation details of a particular GPU design, the operating system can?t expose these formats and layouts to the CPU in general. Therefore, staging resources can't be a depth-stencil buffer or a multisampled render target.</p><p><strong>Note</strong>??You can technically use <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32)"/></strong> to copy to a resource with any usage except <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/></strong>. However, we recommend to use <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32)"/></strong> to update only a resource with <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/></strong>. We recommend to use <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.UnmapSubresource(SharpDX.Direct3D11.Resource,System.Int32)"/></strong> to update resources with <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/></strong> because that is the specific purpose of <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/></strong> resources, and is therefore the most optimized path.</p><p><strong>Note</strong>??<strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/></strong> resources consume specific hardware capabilities. Therefore, use them sparingly. The display driver typically allocates memory for <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/></strong> resources with a caching algorithm that favors CPU writes and hinders CPU reads. Furthermore, the memory behind <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/></strong> resources might not even be the same for successive calls to <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/></strong>. Therefore, do not expect high performance or even consistent CPU reads from <strong><see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/></strong> resources.</p><p><strong>Note</strong>??<strong><see cref="M:SharpDX.Direct3D11.DeviceContext.CopyStructureCount(SharpDX.Direct3D11.Buffer,System.Int32,SharpDX.Direct3D11.UnorderedAccessView)"/></strong> is a special case of GPU-to-CPU copy. Use <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.CopyStructureCount(SharpDX.Direct3D11.Buffer,System.Int32,SharpDX.Direct3D11.UnorderedAccessView)"/></strong> only with unordered access views (UAVs) of buffers.</p>Resource Bind Options<p>To maximize performance, not all resource usage options can be used as input or output resources to the pipeline. This table identifies these limitations.</p><table> <tr><th>Resource Can Be Bound As</th><th>Default</th><th>Dynamic</th><th>Immutable</th><th>Staging</th></tr> <tr><td>Input to a Stage</td><td>yes2</td><td>yes3</td><td>yes</td><td></td></tr> <tr><td>Output from a Stage</td><td>yes2</td><td></td><td></td><td></td></tr> </table><p>?</p><ul> <li>2 - If bound as an input and an output using different views, each view must use different subresources.</li> <li>3 - The resource can only be created with a single subresource. The resource cannot be a texture array. The resource cannot be a mipmap chain.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_USAGE']/*"/>	
            <msdn-id>ff476259</msdn-id>	
            <unmanaged>D3D11_USAGE</unmanaged>	
            <unmanaged-short>D3D11_USAGE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceUsage.Default">
            <summary>	
            <dd> <p>A resource that requires read and write access by the GPU. This is likely to be the most common usage choice.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_USAGE_DEFAULT']/*"/>	
            <msdn-id>ff476259</msdn-id>	
            <unmanaged>D3D11_USAGE_DEFAULT</unmanaged>	
            <unmanaged-short>D3D11_USAGE_DEFAULT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceUsage.Immutable">
            <summary>	
            <dd> <p>A resource that can only be read by the GPU. It cannot be written by the GPU, and cannot be accessed at all by the CPU. This type of resource must be initialized when it is created, since it cannot be changed after creation.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_USAGE_IMMUTABLE']/*"/>	
            <msdn-id>ff476259</msdn-id>	
            <unmanaged>D3D11_USAGE_IMMUTABLE</unmanaged>	
            <unmanaged-short>D3D11_USAGE_IMMUTABLE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceUsage.Dynamic">
            <summary>	
            <dd> <p>A resource that is accessible by both the GPU (read only) and the CPU (write only). A dynamic resource is a good choice for a resource that will be updated by the CPU at least once per frame. To update a dynamic resource, use a <strong>Map</strong> method.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_USAGE_DYNAMIC']/*"/>	
            <msdn-id>ff476259</msdn-id>	
            <unmanaged>D3D11_USAGE_DYNAMIC</unmanaged>	
            <unmanaged-short>D3D11_USAGE_DYNAMIC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceUsage.Staging">
            <summary>	
            <dd> <p>A resource that supports data transfer (copy) from the GPU to the CPU.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_USAGE_STAGING']/*"/>	
            <msdn-id>ff476259</msdn-id>	
            <unmanaged>D3D11_USAGE_STAGING</unmanaged>	
            <unmanaged-short>D3D11_USAGE_STAGING</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderMinimumPrecisionSupport">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p><strong>Note</strong>??This enumeration is supported by the Direct3D 11.1 runtime, which is available on Windows?8 Consumer Preview and later operating systems.</p><p>Values that specify minimum precision levels at shader stages.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_MIN_PRECISION_SUPPORT']/*"/>	
            <msdn-id>hh404495</msdn-id>	
            <unmanaged>D3D11_SHADER_MIN_PRECISION_SUPPORT</unmanaged>	
            <unmanaged-short>D3D11_SHADER_MIN_PRECISION_SUPPORT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderMinimumPrecisionSupport.Bit10">
            <summary>	
            <dd> <p>Minimum precision level is 10-bit.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_MIN_PRECISION_10_BIT']/*"/>	
            <msdn-id>hh404495</msdn-id>	
            <unmanaged>D3D11_SHADER_MIN_PRECISION_10_BIT</unmanaged>	
            <unmanaged-short>D3D11_SHADER_MIN_PRECISION_10_BIT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderMinimumPrecisionSupport.Bit16">
            <summary>	
            <dd> <p>Minimum precision level is 16-bit.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_MIN_PRECISION_16_BIT']/*"/>	
            <msdn-id>hh404495</msdn-id>	
            <unmanaged>D3D11_SHADER_MIN_PRECISION_16_BIT</unmanaged>	
            <unmanaged-short>D3D11_SHADER_MIN_PRECISION_16_BIT</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewExtendedBufferFlags">
            <summary>	
            <p>Identifies how to bind a raw-buffer resource to the pipeline.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used by <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.ExtendedBufferResource"/></strong> </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFEREX_SRV_FLAG']/*"/>	
            <msdn-id>ff476091</msdn-id>	
            <unmanaged>D3D11_BUFFEREX_SRV_FLAG</unmanaged>	
            <unmanaged-short>D3D11_BUFFEREX_SRV_FLAG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewExtendedBufferFlags.Raw">
            <summary>	
            <dd> <p>Bind a raw buffer to the input-assembler stage.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFEREX_SRV_FLAG_RAW']/*"/>	
            <msdn-id>ff476091</msdn-id>	
            <unmanaged>D3D11_BUFFEREX_SRV_FLAG_RAW</unmanaged>	
            <unmanaged-short>D3D11_BUFFEREX_SRV_FLAG_RAW</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewExtendedBufferFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.StandardMultisampleQualityLevels">
            <summary>	
            <p>Specifies a multi-sample pattern type.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS']/*"/>	
            <msdn-id>ff476218</msdn-id>	
            <unmanaged>D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS</unmanaged>	
            <unmanaged-short>D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StandardMultisampleQualityLevels.StandardMultisamplePattern">
            <summary>	
            <dd> <p>Pre-defined multi-sample patterns required for DX11 and DX10.1 hardware.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STANDARD_MULTISAMPLE_PATTERN']/*"/>	
            <msdn-id>ff476218</msdn-id>	
            <unmanaged>D3D11_STANDARD_MULTISAMPLE_PATTERN</unmanaged>	
            <unmanaged-short>D3D11_STANDARD_MULTISAMPLE_PATTERN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StandardMultisampleQualityLevels.CenterMultisamplePattern">
            <summary>	
            <dd> <p>Pattern where all of the samples are located at the pixel center.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CENTER_MULTISAMPLE_PATTERN']/*"/>	
            <msdn-id>ff476218</msdn-id>	
            <unmanaged>D3D11_CENTER_MULTISAMPLE_PATTERN</unmanaged>	
            <unmanaged-short>D3D11_CENTER_MULTISAMPLE_PATTERN</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.StencilOperation">
            <summary>	
            <p>The stencil operations that can be performed during depth-stencil testing.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP']/*"/>	
            <msdn-id>ff476219</msdn-id>	
            <unmanaged>D3D11_STENCIL_OP</unmanaged>	
            <unmanaged-short>D3D11_STENCIL_OP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.Keep">
            <summary>	
            <dd> <p>Keep the existing stencil data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_KEEP']/*"/>	
            <msdn-id>ff476219</msdn-id>	
            <unmanaged>D3D11_STENCIL_OP_KEEP</unmanaged>	
            <unmanaged-short>D3D11_STENCIL_OP_KEEP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.Zero">
            <summary>	
            <dd> <p>Set the stencil data to 0.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_ZERO']/*"/>	
            <msdn-id>ff476219</msdn-id>	
            <unmanaged>D3D11_STENCIL_OP_ZERO</unmanaged>	
            <unmanaged-short>D3D11_STENCIL_OP_ZERO</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.Replace">
            <summary>	
            <dd> <p>Set the stencil data to the reference value set by calling <strong><see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetDepthStencilState(SharpDX.Direct3D11.DepthStencilState,System.Int32)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_REPLACE']/*"/>	
            <msdn-id>ff476219</msdn-id>	
            <unmanaged>D3D11_STENCIL_OP_REPLACE</unmanaged>	
            <unmanaged-short>D3D11_STENCIL_OP_REPLACE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.IncrementAndClamp">
            <summary>	
            <dd> <p>Increment the stencil value by 1, and clamp the result.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_INCR_SAT']/*"/>	
            <msdn-id>ff476219</msdn-id>	
            <unmanaged>D3D11_STENCIL_OP_INCR_SAT</unmanaged>	
            <unmanaged-short>D3D11_STENCIL_OP_INCR_SAT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.DecrementAndClamp">
            <summary>	
            <dd> <p>Decrement the stencil value by 1, and clamp the result.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_DECR_SAT']/*"/>	
            <msdn-id>ff476219</msdn-id>	
            <unmanaged>D3D11_STENCIL_OP_DECR_SAT</unmanaged>	
            <unmanaged-short>D3D11_STENCIL_OP_DECR_SAT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.Invert">
            <summary>	
            <dd> <p>Invert the stencil data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_INVERT']/*"/>	
            <msdn-id>ff476219</msdn-id>	
            <unmanaged>D3D11_STENCIL_OP_INVERT</unmanaged>	
            <unmanaged-short>D3D11_STENCIL_OP_INVERT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.Increment">
            <summary>	
            <dd> <p>Increment the stencil value by 1, and wrap the result if necessary.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_INCR']/*"/>	
            <msdn-id>ff476219</msdn-id>	
            <unmanaged>D3D11_STENCIL_OP_INCR</unmanaged>	
            <unmanaged-short>D3D11_STENCIL_OP_INCR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.Decrement">
            <summary>	
            <dd> <p>Increment the stencil value by 1, and wrap the result if necessary.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_DECR']/*"/>	
            <msdn-id>ff476219</msdn-id>	
            <unmanaged>D3D11_STENCIL_OP_DECR</unmanaged>	
            <unmanaged-short>D3D11_STENCIL_OP_DECR</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.TextureAddressMode">
            <summary>	
            <p>Identify a technique for resolving texture coordinates that are outside of the boundaries of a texture.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE_ADDRESS_MODE']/*"/>	
            <msdn-id>ff476256</msdn-id>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_MODE</unmanaged>	
            <unmanaged-short>D3D11_TEXTURE_ADDRESS_MODE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureAddressMode.Wrap">
            <summary>	
            <dd> <p>Tile the texture at every (u,v) integer junction. For example, for u values between 0 and 3, the texture is repeated three times.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE_ADDRESS_WRAP']/*"/>	
            <msdn-id>ff476256</msdn-id>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_WRAP</unmanaged>	
            <unmanaged-short>D3D11_TEXTURE_ADDRESS_WRAP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureAddressMode.Mirror">
            <summary>	
            <dd> <p>Flip the texture at every (u,v) integer junction. For u values between 0 and 1, for example, the texture is addressed normally; between 1 and 2, the texture is flipped (mirrored); between 2 and 3, the texture is normal again; and so on. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE_ADDRESS_MIRROR']/*"/>	
            <msdn-id>ff476256</msdn-id>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_MIRROR</unmanaged>	
            <unmanaged-short>D3D11_TEXTURE_ADDRESS_MIRROR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureAddressMode.Clamp">
            <summary>	
            <dd> <p>Texture coordinates outside the range [0.0, 1.0] are set to the texture color at 0.0 or 1.0, respectively.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE_ADDRESS_CLAMP']/*"/>	
            <msdn-id>ff476256</msdn-id>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_CLAMP</unmanaged>	
            <unmanaged-short>D3D11_TEXTURE_ADDRESS_CLAMP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureAddressMode.Border">
            <summary>	
            <dd> <p>Texture coordinates outside the range [0.0, 1.0] are set to the border color specified in <strong><see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/></strong> or HLSL code.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE_ADDRESS_BORDER']/*"/>	
            <msdn-id>ff476256</msdn-id>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_BORDER</unmanaged>	
            <unmanaged-short>D3D11_TEXTURE_ADDRESS_BORDER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureAddressMode.MirrorOnce">
            <summary>	
            <dd> <p>Similar to <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Mirror"/> and <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>. Takes the absolute value of the texture coordinate (thus, mirroring around 0), and then clamps to the maximum value.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE_ADDRESS_MIRROR_ONCE']/*"/>	
            <msdn-id>ff476256</msdn-id>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_MIRROR_ONCE</unmanaged>	
            <unmanaged-short>D3D11_TEXTURE_ADDRESS_MIRROR_ONCE</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.TextureCubeFace">
            <summary>	
            <p>The different faces of a cube texture.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE']/*"/>	
            <msdn-id>ff476255</msdn-id>	
            <unmanaged>D3D11_TEXTURECUBE_FACE</unmanaged>	
            <unmanaged-short>D3D11_TEXTURECUBE_FACE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureCubeFace.PositiveX">
            <summary>	
            <dd> <p>Positive X face.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE_POSITIVE_X']/*"/>	
            <msdn-id>ff476255</msdn-id>	
            <unmanaged>D3D11_TEXTURECUBE_FACE_POSITIVE_X</unmanaged>	
            <unmanaged-short>D3D11_TEXTURECUBE_FACE_POSITIVE_X</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureCubeFace.NegativeX">
            <summary>	
            <dd> <p>Negative X face.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE_NEGATIVE_X']/*"/>	
            <msdn-id>ff476255</msdn-id>	
            <unmanaged>D3D11_TEXTURECUBE_FACE_NEGATIVE_X</unmanaged>	
            <unmanaged-short>D3D11_TEXTURECUBE_FACE_NEGATIVE_X</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureCubeFace.PositiveY">
            <summary>	
            <dd> <p>Positive Y face.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE_POSITIVE_Y']/*"/>	
            <msdn-id>ff476255</msdn-id>	
            <unmanaged>D3D11_TEXTURECUBE_FACE_POSITIVE_Y</unmanaged>	
            <unmanaged-short>D3D11_TEXTURECUBE_FACE_POSITIVE_Y</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureCubeFace.NegativeY">
            <summary>	
            <dd> <p>Negative Y face.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE_NEGATIVE_Y']/*"/>	
            <msdn-id>ff476255</msdn-id>	
            <unmanaged>D3D11_TEXTURECUBE_FACE_NEGATIVE_Y</unmanaged>	
            <unmanaged-short>D3D11_TEXTURECUBE_FACE_NEGATIVE_Y</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureCubeFace.PositiveZ">
            <summary>	
            <dd> <p>Positive Z face.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE_POSITIVE_Z']/*"/>	
            <msdn-id>ff476255</msdn-id>	
            <unmanaged>D3D11_TEXTURECUBE_FACE_POSITIVE_Z</unmanaged>	
            <unmanaged-short>D3D11_TEXTURECUBE_FACE_POSITIVE_Z</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureCubeFace.NegativeZ">
            <summary>	
            <dd> <p>Negative Z face.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE_NEGATIVE_Z']/*"/>	
            <msdn-id>ff476255</msdn-id>	
            <unmanaged>D3D11_TEXTURECUBE_FACE_NEGATIVE_Z</unmanaged>	
            <unmanaged-short>D3D11_TEXTURECUBE_FACE_NEGATIVE_Z</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags">
            <summary>	
            <p>Unordered-access-view buffer options.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV_FLAG']/*"/>	
            <msdn-id>ff476096</msdn-id>	
            <unmanaged>D3D11_BUFFER_UAV_FLAG</unmanaged>	
            <unmanaged-short>D3D11_BUFFER_UAV_FLAG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Raw">
            <summary>	
            <dd> <p>Resource contains raw, unstructured data.  Requires the UAV format to be <see cref="F:SharpDX.DXGI.Format.R32_Typeless"/>. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV_FLAG_RAW']/*"/>	
            <msdn-id>ff476096</msdn-id>	
            <unmanaged>D3D11_BUFFER_UAV_FLAG_RAW</unmanaged>	
            <unmanaged-short>D3D11_BUFFER_UAV_FLAG_RAW</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append">
            <summary>	
            <dd> <p>Allow data to be appended to the end of the buffer.  <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/></strong> flag must also be used for  any view that will be used as a AppendStructuredBuffer or a ConsumeStructuredBuffer.  Requires the UAV format to be <see cref="F:SharpDX.DXGI.Format.Unknown"/>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV_FLAG_APPEND']/*"/>	
            <msdn-id>ff476096</msdn-id>	
            <unmanaged>D3D11_BUFFER_UAV_FLAG_APPEND</unmanaged>	
            <unmanaged-short>D3D11_BUFFER_UAV_FLAG_APPEND</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter">
            <summary>	
            <dd> <p>Adds a counter to the unordered-access-view buffer.  <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/></strong> can only be used on a UAV that is a  RWStructuredBuffer and it enables the functionality needed for the <strong>IncrementCounter</strong> and <strong>DecrementCounter</strong> methods in HLSL.  Requires the UAV format to be <see cref="F:SharpDX.DXGI.Format.Unknown"/>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV_FLAG_COUNTER']/*"/>	
            <msdn-id>ff476096</msdn-id>	
            <unmanaged>D3D11_BUFFER_UAV_FLAG_COUNTER</unmanaged>	
            <unmanaged-short>D3D11_BUFFER_UAV_FLAG_COUNTER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
            <unmanaged-short>None</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDimension">
            <summary>	
            <p>Unordered-access view options.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used by a unordered access-view description (see <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION']/*"/>	
            <msdn-id>ff476257</msdn-id>	
            <unmanaged>D3D11_UAV_DIMENSION</unmanaged>	
            <unmanaged-short>D3D11_UAV_DIMENSION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Unknown">
            <summary>	
            <dd> <p>The view type is unknown.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_UNKNOWN']/*"/>	
            <msdn-id>ff476257</msdn-id>	
            <unmanaged>D3D11_UAV_DIMENSION_UNKNOWN</unmanaged>	
            <unmanaged-short>D3D11_UAV_DIMENSION_UNKNOWN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Buffer">
            <summary>	
            <dd> <p>View the resource as a buffer.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_BUFFER']/*"/>	
            <msdn-id>ff476257</msdn-id>	
            <unmanaged>D3D11_UAV_DIMENSION_BUFFER</unmanaged>	
            <unmanaged-short>D3D11_UAV_DIMENSION_BUFFER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture1D">
            <summary>	
            <dd> <p>View the resource as a 1D texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_TEXTURE1D']/*"/>	
            <msdn-id>ff476257</msdn-id>	
            <unmanaged>D3D11_UAV_DIMENSION_TEXTURE1D</unmanaged>	
            <unmanaged-short>D3D11_UAV_DIMENSION_TEXTURE1D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture1DArray">
            <summary>	
            <dd> <p>View the resource as a 1D texture array.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_TEXTURE1DARRAY']/*"/>	
            <msdn-id>ff476257</msdn-id>	
            <unmanaged>D3D11_UAV_DIMENSION_TEXTURE1DARRAY</unmanaged>	
            <unmanaged-short>D3D11_UAV_DIMENSION_TEXTURE1DARRAY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture2D">
            <summary>	
            <dd> <p>View the resource as a 2D texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_TEXTURE2D']/*"/>	
            <msdn-id>ff476257</msdn-id>	
            <unmanaged>D3D11_UAV_DIMENSION_TEXTURE2D</unmanaged>	
            <unmanaged-short>D3D11_UAV_DIMENSION_TEXTURE2D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture2DArray">
            <summary>	
            <dd> <p>View the resource as a 2D texture array.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_TEXTURE2DARRAY']/*"/>	
            <msdn-id>ff476257</msdn-id>	
            <unmanaged>D3D11_UAV_DIMENSION_TEXTURE2DARRAY</unmanaged>	
            <unmanaged-short>D3D11_UAV_DIMENSION_TEXTURE2DARRAY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture3D">
            <summary>	
            <dd> <p>View the resource as a 3D texture array.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_TEXTURE3D']/*"/>	
            <msdn-id>ff476257</msdn-id>	
            <unmanaged>D3D11_UAV_DIMENSION_TEXTURE3D</unmanaged>	
            <unmanaged-short>D3D11_UAV_DIMENSION_TEXTURE3D</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VdovDimension">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies how to access a resource that is used in a video decoding output view.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used with the <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderOutputViewDescription"/></strong> structure.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VDOV_DIMENSION']/*"/>	
            <msdn-id>hh447636</msdn-id>	
            <unmanaged>D3D11_VDOV_DIMENSION</unmanaged>	
            <unmanaged-short>D3D11_VDOV_DIMENSION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VdovDimension.Unknown">
            <summary>	
            <dd> <p>Not a valid value.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VDOV_DIMENSION_UNKNOWN']/*"/>	
            <msdn-id>hh447636</msdn-id>	
            <unmanaged>D3D11_VDOV_DIMENSION_UNKNOWN</unmanaged>	
            <unmanaged-short>D3D11_VDOV_DIMENSION_UNKNOWN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VdovDimension.Texture2D">
            <summary>	
            <dd> <p>The resource will be accessed as a 2D texture.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VDOV_DIMENSION_TEXTURE2D']/*"/>	
            <msdn-id>hh447636</msdn-id>	
            <unmanaged>D3D11_VDOV_DIMENSION_TEXTURE2D</unmanaged>	
            <unmanaged-short>D3D11_VDOV_DIMENSION_TEXTURE2D</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderBufferType">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies a type of compressed buffer for DirectX Video Acceleration (DXVA) decoding.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_TYPE']/*"/>	
            <msdn-id>hh447642</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_TYPE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_TYPE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.PictureParameters">
            <summary>	
            <dd> <p>Picture decoding parameter buffer.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_PICTURE_PARAMETERS']/*"/>	
            <msdn-id>hh447642</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_PICTURE_PARAMETERS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_PICTURE_PARAMETERS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.MacroblockControl">
            <summary>	
            <dd> <p>Macroblock control command buffer.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_MACROBLOCK_CONTROL']/*"/>	
            <msdn-id>hh447642</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_MACROBLOCK_CONTROL</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_MACROBLOCK_CONTROL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.ResidualDifference">
            <summary>	
            <dd> <p>Residual difference block data buffer.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_RESIDUAL_DIFFERENCE']/*"/>	
            <msdn-id>hh447642</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_RESIDUAL_DIFFERENCE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_RESIDUAL_DIFFERENCE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.DeblockingControl">
            <summary>	
            <dd> <p>Deblocking filter control command buffer.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DEBLOCKING_CONTROL']/*"/>	
            <msdn-id>hh447642</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_DEBLOCKING_CONTROL</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_DEBLOCKING_CONTROL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.InverseQuantizationMatrix">
            <summary>	
            <dd> <p>Inverse quantization matrix buffer.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_INVERSE_QUANTIZATION_MATRIX']/*"/>	
            <msdn-id>hh447642</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_INVERSE_QUANTIZATION_MATRIX</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_INVERSE_QUANTIZATION_MATRIX</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.SliceControl">
            <summary>	
            <dd> <p>Slice-control buffer.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL']/*"/>	
            <msdn-id>hh447642</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.Bitstream">
            <summary>	
            <dd> <p>Bitstream data buffer.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_BITSTREAM']/*"/>	
            <msdn-id>hh447642</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_BITSTREAM</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_BITSTREAM</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.MotionVector">
            <summary>	
            <dd> <p>Motion vector buffer.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_MOTION_VECTOR']/*"/>	
            <msdn-id>hh447642</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_MOTION_VECTOR</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_MOTION_VECTOR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.FilmGrain">
            <summary>	
            <dd> <p>Film grain synthesis data buffer.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_FILM_GRAIN']/*"/>	
            <msdn-id>hh447642</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_FILM_GRAIN</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_FILM_GRAIN</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoFrameFormat">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Describes how a video stream is interlaced.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_FRAME_FORMAT']/*"/>	
            <msdn-id>hh447647</msdn-id>	
            <unmanaged>D3D11_VIDEO_FRAME_FORMAT</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_FRAME_FORMAT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoFrameFormat.Progressive">
            <summary>	
            <dd> <p>Frames are progressive.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_FRAME_FORMAT_PROGRESSIVE']/*"/>	
            <msdn-id>hh447647</msdn-id>	
            <unmanaged>D3D11_VIDEO_FRAME_FORMAT_PROGRESSIVE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_FRAME_FORMAT_PROGRESSIVE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoFrameFormat.InterlacedTopFieldFirst">
            <summary>	
            <dd> <p>Frames are interlaced. The top field of each frame is displayed first. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST']/*"/>	
            <msdn-id>hh447647</msdn-id>	
            <unmanaged>D3D11_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoFrameFormat.InterlacedBottomFieldFirst">
            <summary>	
            <dd> <p>Frame are interlaced. The bottom field of each frame is displayed first.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST']/*"/>	
            <msdn-id>hh447647</msdn-id>	
            <unmanaged>D3D11_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorAlphaFillMode">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies the alpha fill mode for video processing.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE']/*"/>	
            <msdn-id>hh447648</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.Opaque">
            <summary>	
            <dd> <p>Alpha values inside the target rectangle are set to opaque. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_OPAQUE']/*"/>	
            <msdn-id>hh447648</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_OPAQUE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_OPAQUE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.Background">
            <summary>	
            <dd> <p>Alpha values inside the target rectangle are set to the alpha value specified in the background color. To set the background color, call the <strong><see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputBackgroundColor(SharpDX.Direct3D11.VideoProcessor,SharpDX.Bool,SharpDX.Direct3D11.VideoColor)"/></strong> method.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_BACKGROUND']/*"/>	
            <msdn-id>hh447648</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_BACKGROUND</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_BACKGROUND</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.Destination">
            <summary>	
            <dd> <p>Existing alpha values remain unchanged in the output surface.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_DESTINATION']/*"/>	
            <msdn-id>hh447648</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_DESTINATION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_DESTINATION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.SourceStream">
            <summary>	
            <dd> <p>Alpha values are taken from an  input stream, scaled, and copied to the corresponding destination rectangle for that stream. The input stream is specified in the <em>StreamIndex</em> parameter of the <strong><see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputAlphaFillMode(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorAlphaFillMode,System.Int32)"/></strong> method. </p> <p>If the input stream does not have alpha data, the video processor sets the alpha values in the target rectangle to opaque. If the input stream is disabled or the source rectangle is empty, the alpha values in the target rectangle are not modified.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM']/*"/>	
            <msdn-id>hh447648</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Specifies the automatic image processing capabilities of the video processor.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS']/*"/>	
            <msdn-id>hh447649</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.Denoise">
            <summary>	
            <dd> <p>Denoise.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DENOISE']/*"/>	
            <msdn-id>hh447649</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DENOISE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DENOISE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.Deringing">
            <summary>	
            <dd> <p>Deringing.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DERINGING']/*"/>	
            <msdn-id>hh447649</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DERINGING</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DERINGING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.EdgeEnhancement">
            <summary>	
            <dd> <p>Edge enhancement.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_EDGE_ENHANCEMENT']/*"/>	
            <msdn-id>hh447649</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_EDGE_ENHANCEMENT</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_EDGE_ENHANCEMENT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.ColorCorrection">
            <summary>	
            <dd> <p>Color correction.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_COLOR_CORRECTION']/*"/>	
            <msdn-id>hh447649</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_COLOR_CORRECTION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_COLOR_CORRECTION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.FleshToneMapping">
            <summary>	
            <dd> <p>Flesh-tone mapping.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_FLESH_TONE_MAPPING']/*"/>	
            <msdn-id>hh447649</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_FLESH_TONE_MAPPING</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_FLESH_TONE_MAPPING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.ImageStabilization">
            <summary>	
            <dd> <p>Image stabilization.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_IMAGE_STABILIZATION']/*"/>	
            <msdn-id>hh447649</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_IMAGE_STABILIZATION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_IMAGE_STABILIZATION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.SuperResolution">
            <summary>	
            <dd> <p>Enhanced image resolution.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_SUPER_RESOLUTION']/*"/>	
            <msdn-id>hh447649</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_SUPER_RESOLUTION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_SUPER_RESOLUTION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.AnamorphicScaling">
            <summary>	
            <dd> <p>Anamorphic scaling.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_ANAMORPHIC_SCALING']/*"/>	
            <msdn-id>hh447649</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_ANAMORPHIC_SCALING</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_ANAMORPHIC_SCALING</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorDeviceCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Defines video processing capabilities for a Microsoft Direct3D?11 video processor.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_DEVICE_CAPS']/*"/>	
            <msdn-id>hh447654</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorDeviceCaps.LinearSpace">
            <summary>	
            <dd> <p>The video processor can blend video content in linear color space. Most video content is gamma corrected, resulting in nonlinear values. This capability flag means that the video processor converts colors to linear space before blending, which produces better results.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_LINEAR_SPACE']/*"/>	
            <msdn-id>hh447654</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_LINEAR_SPACE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_LINEAR_SPACE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorDeviceCaps.XvYCC">
            <summary>	
            <dd> <p>The video processor supports the xvYCC color space for YCbCr data. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_xvYCC']/*"/>	
            <msdn-id>hh447654</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_xvYCC</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_xvYCC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorDeviceCaps.RgbRangeConversion">
            <summary>	
            <dd> <p>The video processor can perform range conversion when the input and output are both RGB but use different color ranges (0-255 or 16-235, for 8-bit RGB). </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_RGB_RANGE_CONVERSION']/*"/>	
            <msdn-id>hh447654</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_RGB_RANGE_CONVERSION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_RGB_RANGE_CONVERSION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorDeviceCaps.YCbCrMatrixConversion">
            <summary>	
            <dd> <p>The video processor can apply a matrix conversion to YCbCr values when the input and output are both YCbCr. For example, the driver can convert colors from BT.601 to BT.709. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION']/*"/>	
            <msdn-id>hh447654</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorFeatureCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Defines features that a Microsoft Direct3D?11 video processor can support. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS']/*"/>	
            <msdn-id>hh447655</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.AlphaFill">
            <summary>	
            <dd> <p>The video processor can set alpha values on the output pixels. For more information, see <strong><see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputAlphaFillMode(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorAlphaFillMode,System.Int32)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_FILL']/*"/>	
            <msdn-id>hh447655</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_FILL</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_FILL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Constriction">
            <summary>	
            <dd> <p>The video processor can downsample the video output. For more information, see <strong><see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputConstriction(SharpDX.Direct3D11.VideoProcessor,SharpDX.Bool,SharpDX.DrawingSize)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_CONSTRICTION']/*"/>	
            <msdn-id>hh447655</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_CONSTRICTION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_CONSTRICTION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.LumaKey">
            <summary>	
            <dd> <p>The video processor can perform luma keying. For more information, see <strong><see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamLumaKey(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool,System.Single,System.Single)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LUMA_KEY']/*"/>	
            <msdn-id>hh447655</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LUMA_KEY</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LUMA_KEY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.AlphaPalette">
            <summary>	
            <dd> <p>The video processor can apply alpha values from color palette entries. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_PALETTE']/*"/>	
            <msdn-id>hh447655</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_PALETTE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_PALETTE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Legacy">
            <summary>	
            <dd> <p>The driver does not support the DXVA-HD DDI. If this capability flag is set, the video processor has the following limitations:</p> <ul> <li>A maximum of two streams are supported:<ul> <li>The first stream must be either NV12 or YUY2.</li> <li>The second stream must be AYUV, AI44, or IA44.</li> </ul> </li> <li>Image adjustment (proc amp) controls are applied to the entire video processing blit, rather than per stream.</li> <li>Support for per-stream planar alpha is not reliable. (Per-pixel alpha is supported, however.)</li> </ul> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LEGACY']/*"/>	
            <msdn-id>hh447655</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LEGACY</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LEGACY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Stereo">
            <summary>	
            <dd> <p>The video processor can support 3D stereo video. For more information, see <strong><see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamStereoFormat(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool,SharpDX.Direct3D11.VideoProcessorStereoFormat,SharpDX.Bool,SharpDX.Bool,SharpDX.Direct3D11.VideoProcessorStereoFlipMode,System.Int32)"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_STEREO']/*"/>	
            <msdn-id>hh447655</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_STEREO</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_STEREO</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Rotation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ROTATION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ROTATION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ROTATION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.AlphaStream">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_STREAM']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_STREAM</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_STREAM</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.PixelAspectRatio">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_PIXEL_ASPECT_RATIO']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_PIXEL_ASPECT_RATIO</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_PIXEL_ASPECT_RATIO</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorFilter">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Defines the range of supported values for an image filter. </p>	
            </summary>	
            <remarks>	
            <p>The multiplier enables the filter range to have a fractional step value.</p><p>For example, a hue filter might have an actual range of [?180.0 ... +180.0] with a step size of 0.25. The device would report the following range and multiplier:</p><ul> <li>Minimum: ?720</li> <li>Maximum: +720</li> <li>Multiplier: 0.25</li> </ul><p>In this case,  a filter value of 2 would be interpreted by the device as 0.50 (or 2 ? 0.25).</p><p>The device should use  a multiplier that can be represented exactly as a base-2 fraction.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER']/*"/>	
            <msdn-id>hh447657</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.Brightness">
            <summary>	
            <dd> <p>The minimum value of the filter. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_BRIGHTNESS']/*"/>	
            <msdn-id>hh447657</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_BRIGHTNESS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_BRIGHTNESS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.Contrast">
            <summary>	
            <dd> <p>The maximum value of the filter. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CONTRAST']/*"/>	
            <msdn-id>hh447657</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CONTRAST</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CONTRAST</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.Hue">
            <summary>	
            <dd> <p>The default value of the filter. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_HUE']/*"/>	
            <msdn-id>hh447657</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_HUE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_HUE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.Saturation">
            <summary>	
            <dd> <p>A multiplier. Use the following formula to translate the filter setting into the actual filter value: <em>Actual Value</em> = <em>Set Value</em>???<em>Multiplier</em>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_SATURATION']/*"/>	
            <msdn-id>hh447657</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_SATURATION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_SATURATION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.NoiseReduction">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_NOISE_REDUCTION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_NOISE_REDUCTION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_NOISE_REDUCTION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.EdgeEnhancement">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_EDGE_ENHANCEMENT']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_EDGE_ENHANCEMENT</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_EDGE_ENHANCEMENT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.AnamorphicScaling">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_ANAMORPHIC_SCALING']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_ANAMORPHIC_SCALING</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_ANAMORPHIC_SCALING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.StereoAdjustment">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_STEREO_ADJUSTMENT']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_STEREO_ADJUSTMENT</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_STEREO_ADJUSTMENT</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorFilterCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Defines image filter capabilities for a Microsoft Direct3D?11 video processor.</p>	
            </summary>	
            <remarks>	
            <p>These capability flags indicate support for the image filters defined by the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorFilter"/></strong> enumeration. To apply a particular filter, call the <strong><see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamFilter(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoProcessorFilter,SharpDX.Bool,System.Int32)"/></strong> method.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS']/*"/>	
            <msdn-id>hh447671</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.Brightness">
            <summary>	
            <dd> <p>The video processor can adjust the brightness level. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_BRIGHTNESS']/*"/>	
            <msdn-id>hh447671</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_BRIGHTNESS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_BRIGHTNESS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.Contrast">
            <summary>	
            <dd> <p>The video processor can adjust the contrast level. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_CONTRAST']/*"/>	
            <msdn-id>hh447671</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_CONTRAST</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_CONTRAST</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.Hue">
            <summary>	
            <dd> <p>The video processor can adjust hue. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_HUE']/*"/>	
            <msdn-id>hh447671</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_HUE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_HUE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.Saturation">
            <summary>	
            <dd> <p>The video processor can adjust the saturation level. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_SATURATION']/*"/>	
            <msdn-id>hh447671</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_SATURATION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_SATURATION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.NoiseReduction">
            <summary>	
            <dd> <p>The video processor can perform noise reduction. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_NOISE_REDUCTION']/*"/>	
            <msdn-id>hh447671</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_NOISE_REDUCTION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_NOISE_REDUCTION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.EdgeEnhancement">
            <summary>	
            <dd> <p>The video processor can perform edge enhancement. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_EDGE_ENHANCEMENT']/*"/>	
            <msdn-id>hh447671</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_EDGE_ENHANCEMENT</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_EDGE_ENHANCEMENT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.AnamorphicScaling">
            <summary>	
            <dd> <p>The video processor can perform anamorphic scaling. Anamorphic scaling can be used to stretch 4:3 content to a widescreen 16:9 aspect ratio. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_ANAMORPHIC_SCALING']/*"/>	
            <msdn-id>hh447671</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_ANAMORPHIC_SCALING</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_ANAMORPHIC_SCALING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.StereoAdjustment">
            <summary>	
            <dd> <p>For stereo 3D video, the video processor can adjust the offset between the left and right views, allowing the user to reduce potential eye strain.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_STEREO_ADJUSTMENT']/*"/>	
            <msdn-id>hh447671</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_STEREO_ADJUSTMENT</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_STEREO_ADJUSTMENT</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorFormatCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Defines capabilities related to input formats for a Microsoft Direct3D?11 video processor.</p>	
            </summary>	
            <remarks>	
            <p>These flags define video processing capabilities that usually are not needed, and that video devices are therefore not required to support.</p><p> The first three flags relate to RGB support for functions that are normally applied to YCbCr video: deinterlacing, color adjustment, and luma keying. A device that supports these functions for YCbCr is not required  to support them for RGB input. Supporting RGB input for these functions  is  an additional capability, reflected by these constants. Note that the driver might convert the input to another color space, perform the indicated function, and then convert the result back to RGB. </p><p>Similarly, a device that supports deinterlacing is not required to support deinterlacing of palettized formats. This capability is indicated by the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorFormatCaps.PaletteInterlaced"/></strong> flag.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_CAPS']/*"/>	
            <msdn-id>hh447658</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFormatCaps.RgbInterlaced">
            <summary>	
            <dd> <p>The video processor can deinterlace an input stream that contains interlaced RGB video. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_INTERLACED']/*"/>	
            <msdn-id>hh447658</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_INTERLACED</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_INTERLACED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFormatCaps.RgbProcamp">
            <summary>	
            <dd> <p>The video processor can perform color adjustment on RGB video.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_PROCAMP']/*"/>	
            <msdn-id>hh447658</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_PROCAMP</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_PROCAMP</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFormatCaps.RgbLumaKey">
            <summary>	
            <dd> <p>The video processor can perform luma keying on RGB video.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_LUMA_KEY']/*"/>	
            <msdn-id>hh447658</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_LUMA_KEY</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_LUMA_KEY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFormatCaps.PaletteInterlaced">
            <summary>	
            <dd> <p>The video processor can deinterlace input streams with palettized color formats.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_PALETTE_INTERLACED']/*"/>	
            <msdn-id>hh447658</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_PALETTE_INTERLACED</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_PALETTE_INTERLACED</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorFormatSupport">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Specifies how a video format can be used for video processing.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT']/*"/>	
            <msdn-id>hh447659</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFormatSupport.Input">
            <summary>	
            <dd> <p>The format can be used as the input to the video processor.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_INPUT']/*"/>	
            <msdn-id>hh447659</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_INPUT</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFormatSupport.Output">
            <summary>	
            <dd> <p>The format can be used as the output from the video processor.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_OUTPUT']/*"/>	
            <msdn-id>hh447659</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_OUTPUT</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorItelecineCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Specifies the inverse telecine (IVTC) capabilities of a video processor. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS']/*"/>	
            <msdn-id>hh447661</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value32">
            <summary>	
            <dd> <p>The video processor can reverse 3:2 pulldown.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32']/*"/>	
            <msdn-id>hh447661</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value22">
            <summary>	
            <dd> <p>The video processor can reverse 2:2 pulldown.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_22']/*"/>	
            <msdn-id>hh447661</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_22</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_22</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value2224">
            <summary>	
            <dd> <p>The video processor can reverse 2:2:2:4 pulldown.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2224']/*"/>	
            <msdn-id>hh447661</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2224</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2224</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value2332">
            <summary>	
            <dd> <p>The video processor can reverse 2:3:3:2 pulldown.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2332']/*"/>	
            <msdn-id>hh447661</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2332</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2332</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value32322">
            <summary>	
            <dd> <p>The video processor can reverse 3:2:3:2:2 pulldown.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32322']/*"/>	
            <msdn-id>hh447661</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32322</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32322</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value55">
            <summary>	
            <dd> <p>The video processor can reverse 5:5 pulldown.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_55']/*"/>	
            <msdn-id>hh447661</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_55</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_55</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value64">
            <summary>	
            <dd> <p>The video processor can reverse 6:4 pulldown.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_64']/*"/>	
            <msdn-id>hh447661</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_64</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_64</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value87">
            <summary>	
            <dd> <p>The video processor can reverse 8:7 pulldown.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_87']/*"/>	
            <msdn-id>hh447661</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_87</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_87</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value222222222223">
            <summary>	
            <dd> <p>The video processor can reverse 2:2:2:2:2:2:2:2:2:2:2:3 pulldown.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_222222222223']/*"/>	
            <msdn-id>hh447661</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_222222222223</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_222222222223</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Other">
            <summary>	
            <dd> <p>The video processor can reverse other telecine modes not listed here.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_OTHER']/*"/>	
            <msdn-id>hh447661</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_OTHER</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_OTHER</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorOutputRate">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies the rate at which the video processor produces output frames from an input stream.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_RATE']/*"/>	
            <msdn-id>hh447662</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorOutputRate.Normal">
            <summary>	
            <dd> <p>The output is the normal frame rate. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_NORMAL']/*"/>	
            <msdn-id>hh447662</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_NORMAL</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_NORMAL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorOutputRate.Half">
            <summary>	
            <dd> <p>The output is half the frame rate. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_HALF']/*"/>	
            <msdn-id>hh447662</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_HALF</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_HALF</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorOutputRate.Custom">
            <summary>	
            <dd> <p>The output is a custom frame rate.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM']/*"/>	
            <msdn-id>hh447662</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorProcessorCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Specifies video processing capabilities that relate to deinterlacing, inverse telecine (IVTC), and frame-rate conversion.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS']/*"/>	
            <msdn-id>hh447664</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorProcessorCaps.DeinterlaceBlend">
            <summary>	
            <dd> <p>The video processor can perform blend deinterlacing. </p> <p>In blend deinterlacing, the two fields from an interlaced frame are blended into a single progressive frame. A video processor uses blend deinterlacing when it deinterlaces at half rate, as when converting 60i to 30p. Blend deinterlacing does not require reference frames.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BLEND']/*"/>	
            <msdn-id>hh447664</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BLEND</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BLEND</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorProcessorCaps.DeinterlaceBob">
            <summary>	
            <dd> <p>The video processor can perform bob deinterlacing.</p> <p>In bob deinterlacing, missing field lines are interpolated from the lines above and below. Bob deinterlacing does not require reference frames.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BOB']/*"/>	
            <msdn-id>hh447664</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BOB</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BOB</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorProcessorCaps.DeinterlaceAdaptive">
            <summary>	
            <dd> <p>The video processor can perform adaptive deinterlacing.</p> <p>Adaptive deinterlacing uses spatial or temporal interpolation, and switches between the two on a field-by-field basis, depending on the amount of motion. If the video processor does not receive enough reference frames to perform adaptive deinterlacing, it falls back to bob deinterlacing.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE']/*"/>	
            <msdn-id>hh447664</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorProcessorCaps.DeinterlaceMotionCompensation">
            <summary>	
            <dd> <p>The video processor can perform motion-compensated deinterlacing. </p> <p>Motion-compensated deinterlacing uses motion vectors to recreate missing lines. If the video processor does not receive enough reference frames to perform motion-compensated deinterlacing, it falls back to bob deinterlacing. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION']/*"/>	
            <msdn-id>hh447664</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorProcessorCaps.InverseTelecine">
            <summary>	
            <dd> <p>The video processor can perform inverse telecine (IVTC). </p> <p>If the video processor supports this capability, the <strong>ITelecineCaps</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorRateConversionCaps"/></strong> structure specifies which IVTC modes are supported. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_INVERSE_TELECINE']/*"/>	
            <msdn-id>hh447664</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_INVERSE_TELECINE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_INVERSE_TELECINE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorProcessorCaps.FrameRateConversion">
            <summary>	
            <dd> <p>The video processor can convert the frame rate by interpolating frames. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_FRAME_RATE_CONVERSION']/*"/>	
            <msdn-id>hh447664</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_FRAME_RATE_CONVERSION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_FRAME_RATE_CONVERSION</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorRotation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ROTATION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ROTATION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRotation.Identity">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ROTATION_IDENTITY']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION_IDENTITY</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ROTATION_IDENTITY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRotation.Rotation90">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ROTATION_90']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION_90</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ROTATION_90</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRotation.Rotation180">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ROTATION_180']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION_180</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ROTATION_180</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRotation.Rotation270">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ROTATION_270']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION_270</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_ROTATION_270</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorStereoCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Defines stereo 3D capabilities for a Microsoft Direct3D?11 video processor.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_CAPS']/*"/>	
            <msdn-id>hh447667</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_CAPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoCaps.MonoOffset">
            <summary>	
            <dd> <p>The video processor supports the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.MonoOffset"/></strong> format.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_CAPS_MONO_OFFSET']/*"/>	
            <msdn-id>hh447667</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_MONO_OFFSET</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_MONO_OFFSET</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoCaps.RowInterleaved">
            <summary>	
            <dd> <p>The video processor supports the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.RowInterleaved"/></strong> format.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_CAPS_ROW_INTERLEAVED']/*"/>	
            <msdn-id>hh447667</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_ROW_INTERLEAVED</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_ROW_INTERLEAVED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoCaps.ColumnInterleaved">
            <summary>	
            <dd> <p>The video processor supports the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.ColumnInterleaved"/></strong> format.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_CAPS_COLUMN_INTERLEAVED']/*"/>	
            <msdn-id>hh447667</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_COLUMN_INTERLEAVED</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_COLUMN_INTERLEAVED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoCaps.CheckerBoard">
            <summary>	
            <dd> <p>The video processor supports the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.CheckerBoard"/></strong> format.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_CAPS_CHECKERBOARD']/*"/>	
            <msdn-id>hh447667</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_CHECKERBOARD</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_CHECKERBOARD</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoCaps.FlipMode">
            <summary>	
            <dd> <p>The video processor can flip one or both views. For more information, see <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorStereoFlipMode"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_CAPS_FLIP_MODE']/*"/>	
            <msdn-id>hh447667</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_FLIP_MODE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_FLIP_MODE</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorStereoFlipMode">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>For stereo 3D video, specifies whether the data in frame 0 or frame 1 is flipped, either horizontally or vertically. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE']/*"/>	
            <msdn-id>hh447668</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFlipMode.None">
            <summary>	
            <dd> <p>Neither frame is flipped.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FLIP_NONE']/*"/>	
            <msdn-id>hh447668</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_NONE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_NONE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFlipMode.Frame0">
            <summary>	
            <dd> <p>The data in frame 0 is flipped.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME0']/*"/>	
            <msdn-id>hh447668</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME0</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME0</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFlipMode.Frame1">
            <summary>	
            <dd> <p>The data in frame 1 is flipped.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME1']/*"/>	
            <msdn-id>hh447668</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME1</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME1</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorStereoFormat">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies the layout in memory of a stereo 3D video frame.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration designates the two stereo views as "frame 0" and "frame 1". The <em>LeftViewFrame0</em> parameter of the <strong>VideoProcessorSetStreamStereoFormat</strong> method specifies which view is the left view, and which is the right view.</p><p>For packed formats, if the source rectangle clips part of the surface, the driver interprets the rectangle in logical coordinates relative to the stereo view,  rather than absolute pixel coordinates. The result is that frame 0 and frame 1 are clipped proportionately.</p><p>To query whether the device supports stereo 3D video, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check for the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Stereo"/></strong> flag in the <strong>FeatureCaps</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorCaps"/></strong> structure. If this capability flag is present, it means that the driver supports all of the stereo formats that are not  listed as optional. To find out which optional formats are supported, call <strong>GetVideoProcessorCaps</strong> and check the <strong>StereoCaps</strong> member of the structure.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT']/*"/>	
            <msdn-id>hh447669</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.Mono">
            <summary>	
            <dd> <p>The sample does not contain stereo data.  If the stereo format is not specified, this value is the default.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO']/*"/>	
            <msdn-id>hh447669</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.Horizontal">
            <summary>	
            <dd> <p>Frame 0 and frame 1 are packed side-by-side, as shown in the following diagram.</p> <p></p> <p>All drivers that support stereo video must support this format.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL']/*"/>	
            <msdn-id>hh447669</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.Vertical">
            <summary>	
            <dd> <p>Frame 0 and frame 1 are packed top-to-bottom, as shown in the following diagram.</p> <p></p> <p>All drivers that support stereo video must support this format.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL']/*"/>	
            <msdn-id>hh447669</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.Separate">
            <summary>	
            <dd> <p>Frame 0 and frame 1 are placed in separate resources or in separate texture array elements within the same resource.</p> <p>All drivers that support stereo video must support this format.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE']/*"/>	
            <msdn-id>hh447669</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.MonoOffset">
            <summary>	
            <dd> <p>The sample contains non-stereo data. However, the driver should create a left/right output of this sample using a specified offset.  The offset is specified in the <em>MonoOffset</em> parameter of the <strong><see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamStereoFormat(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool,SharpDX.Direct3D11.VideoProcessorStereoFormat,SharpDX.Bool,SharpDX.Bool,SharpDX.Direct3D11.VideoProcessorStereoFlipMode,System.Int32)"/></strong> method. </p> <p>This format is primarily intended for subtitles and other subpicture data, where the entire sample is presented on the same plane.</p> <p>Support for this stereo format is optional.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET']/*"/>	
            <msdn-id>hh447669</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.RowInterleaved">
            <summary>	
            <dd> <p>Frame 0 and frame 1 are packed into interleaved rows, as shown in the following diagram.</p> <p></p> <p>Support for this stereo format is optional.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED']/*"/>	
            <msdn-id>hh447669</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.ColumnInterleaved">
            <summary>	
            <dd> <p>Frame 0 and frame 1 are packed into interleaved columns, as shown in the following diagram.</p> <p></p> <p>Support for this stereo format is optional.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED']/*"/>	
            <msdn-id>hh447669</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.CheckerBoard">
            <summary>	
            <dd> <p>Frame 0 and frame 1 are packed in a checkerboard format, as shown in the following diagram.</p> <p></p> <p>Support for this stereo format is optional.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD']/*"/>	
            <msdn-id>hh447669</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoUsage">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies the intended use for a video processor.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_USAGE']/*"/>	
            <msdn-id>hh447673</msdn-id>	
            <unmanaged>D3D11_VIDEO_USAGE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_USAGE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoUsage.PlaybackNormal">
            <summary>	
            <dd> <p>Normal video playback. The graphics driver should expose a set of capabilities that are appropriate for real-time video playback. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_USAGE_PLAYBACK_NORMAL']/*"/>	
            <msdn-id>hh447673</msdn-id>	
            <unmanaged>D3D11_VIDEO_USAGE_PLAYBACK_NORMAL</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_USAGE_PLAYBACK_NORMAL</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoUsage.OptimalSpeed">
            <summary>	
            <dd> <p>Optimal speed. The graphics driver should expose a minimal set of capabilities that are optimized for performance. </p> <p>Use this setting if you want better performance and can accept some reduction in video quality. For example, you might use this setting in power-saving mode or to play video thumbnails. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_USAGE_OPTIMAL_SPEED']/*"/>	
            <msdn-id>hh447673</msdn-id>	
            <unmanaged>D3D11_VIDEO_USAGE_OPTIMAL_SPEED</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_USAGE_OPTIMAL_SPEED</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoUsage.OptimalQuality">
            <summary>	
            <dd> <p>Optimal quality. The grahics driver should expose its maximum set of capabilities.</p> <p>Specify this setting to get the best video quality possible. It is appropriate for tasks such as video editing, when quality is more important than speed. It is not appropriate for real-time playback. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_USAGE_OPTIMAL_QUALITY']/*"/>	
            <msdn-id>hh447673</msdn-id>	
            <unmanaged>D3D11_VIDEO_USAGE_OPTIMAL_QUALITY</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_USAGE_OPTIMAL_QUALITY</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VpivDimension">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies how to access a resource that is used in a video processor input view.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used with the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorInputViewDescription"/></strong> structure.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPIV_DIMENSION']/*"/>	
            <msdn-id>hh447674</msdn-id>	
            <unmanaged>D3D11_VPIV_DIMENSION</unmanaged>	
            <unmanaged-short>D3D11_VPIV_DIMENSION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VpivDimension.Unknown">
            <summary>	
            <dd> <p>Not a valid value.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPIV_DIMENSION_UNKNOWN']/*"/>	
            <msdn-id>hh447674</msdn-id>	
            <unmanaged>D3D11_VPIV_DIMENSION_UNKNOWN</unmanaged>	
            <unmanaged-short>D3D11_VPIV_DIMENSION_UNKNOWN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VpivDimension.Texture2D">
            <summary>	
            <dd> <p>The resource will be accessed as a 2D texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPIV_DIMENSION_TEXTURE2D']/*"/>	
            <msdn-id>hh447674</msdn-id>	
            <unmanaged>D3D11_VPIV_DIMENSION_TEXTURE2D</unmanaged>	
            <unmanaged-short>D3D11_VPIV_DIMENSION_TEXTURE2D</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VpovDimension">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies how to access a resource that is used in a video processor output view.</p>	
            </summary>	
            <remarks>	
            <p>This enumeration is used with the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorOutputViewDescription"/></strong> structure.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPOV_DIMENSION']/*"/>	
            <msdn-id>hh447675</msdn-id>	
            <unmanaged>D3D11_VPOV_DIMENSION</unmanaged>	
            <unmanaged-short>D3D11_VPOV_DIMENSION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VpovDimension.Unknown">
            <summary>	
            <dd> <p>Not a valid value.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPOV_DIMENSION_UNKNOWN']/*"/>	
            <msdn-id>hh447675</msdn-id>	
            <unmanaged>D3D11_VPOV_DIMENSION_UNKNOWN</unmanaged>	
            <unmanaged-short>D3D11_VPOV_DIMENSION_UNKNOWN</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VpovDimension.Texture2D">
            <summary>	
            <dd> <p>The resource will be accessed as a 2D texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPOV_DIMENSION_TEXTURE2D']/*"/>	
            <msdn-id>hh447675</msdn-id>	
            <unmanaged>D3D11_VPOV_DIMENSION_TEXTURE2D</unmanaged>	
            <unmanaged-short>D3D11_VPOV_DIMENSION_TEXTURE2D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VpovDimension.Texture2DArray">
            <summary>	
            <dd> <p>The resource will be accessed as an array of 2D textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPOV_DIMENSION_TEXTURE2DARRAY']/*"/>	
            <msdn-id>hh447675</msdn-id>	
            <unmanaged>D3D11_VPOV_DIMENSION_TEXTURE2DARRAY</unmanaged>	
            <unmanaged-short>D3D11_VPOV_DIMENSION_TEXTURE2DARRAY</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.D3D11">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.Direct3D11.D3D11']/*"/>	
        </member>
        <member name="F:SharpDX.Direct3D11.D3D11.SdkVersion">
            <summary>Constant SdkVersion.</summary>
            <unmanaged>D3D11_SDK_VERSION</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)">
            <summary>	
            <p>Creates a device that represents the display adapter.</p>	
            </summary>	
            <param name="adapterRef"><dd>  <p>A reference to the video adapter to use when creating a device. Pass <strong><c>null</c></strong> to use the default adapter, which is the first adapter that is enumerated by <strong>IDXGIFactory1::EnumAdapters</strong>. </p> <p><strong>Note</strong>??Do not mix the use of DXGI 1.0 (<strong><see cref="T:SharpDX.DXGI.Factory"/></strong>) and DXGI 1.1 (<strong><see cref="T:SharpDX.DXGI.Factory1"/></strong>) in an application. Use <strong><see cref="T:SharpDX.DXGI.Factory"/></strong> or <strong><see cref="T:SharpDX.DXGI.Factory1"/></strong>, but not both in an application.</p> </dd></param>	
            <param name="driverType"><dd>  <p>The <strong><see cref="T:SharpDX.Direct3D.DriverType"/></strong>, which represents the driver type to create.</p> </dd></param>	
            <param name="software"><dd>  <p>A handle to a DLL that implements a software rasterizer.  If <em>DriverType</em> is <em><see cref="F:SharpDX.Direct3D.DriverType.Software"/></em>,  <em>Software</em> must not be <strong><c>null</c></strong>. Get the handle by  calling LoadLibrary,  LoadLibraryEx ,  or GetModuleHandle.</p> </dd></param>	
            <param name="flags"><dd>  <p>The runtime layers to enable (see <strong><see cref="T:SharpDX.Direct3D11.DeviceCreationFlags"/></strong>);  values can be bitwise OR'd together.</p> </dd></param>	
            <param name="featureLevelsRef"><dd>  <p>A reference to an array of <strong><see cref="T:SharpDX.Direct3D.FeatureLevel"/></strong>s, which determine the order of feature levels to attempt to create.  Use default parameters to get the greatest feature level available. If <em>pFeatureLevels</em> is set to <strong><c>null</c></strong>,  the following array of feature levels will be used:</p>  <pre><code> { <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_1"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_2"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_1"/>,}; </code></pre>  </dd></param>	
            <param name="featureLevels"><dd>  <p>The number of elements in <em>pFeatureLevels</em>.</p> </dd></param>	
            <param name="sDKVersion"><dd>  <p>The SDK version; use <em><see cref="F:SharpDX.Direct3D11.D3D11.SdkVersion"/></em>.</p> </dd></param>	
            <param name="deviceOut"><dd>  <p>Returns the address of a reference to an <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong> object that represents the device created.</p> </dd></param>	
            <param name="featureLevelRef"><dd>  <p>If successful, returns the first <strong><see cref="T:SharpDX.Direct3D.FeatureLevel"/></strong> from the <em>pFeatureLevels</em> array which succeeded. Otherwise, returns 0.</p> </dd></param>	
            <param name="immediateContextOut"><dd>  <p>Returns the address of a reference to an <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> object that represents the device context.</p> </dd></param>	
            <returns><p>This method returns one of the following Direct3D 11 Return Codes.</p></returns>	
            <remarks>	
            <p>This entry-point is supported by the Direct3D 11 runtime, which is available on Windows 7, Windows Server 2008 R2, and as an update to  Windows Vista (KB971644).</p><p>Set <em>ppDevice</em> and <em>ppImmediateContext</em> to <strong><c>null</c></strong> to determine which feature level is supported by looking  at pFeatureLevel without creating a device.</p><p>For an example, see How To: Create a Device and Immediate Context; to create a device and a swap chain at the same time,  use <strong>D3D11CreateDeviceAndSwapChain</strong>.</p><p>If you set the <em>pAdapter</em> parameter to a non-<strong><c>null</c></strong> value, you must also set the <em>DriverType</em> parameter to the <see cref="F:SharpDX.Direct3D.DriverType.Unknown"/> value. If you set the <em>pAdapter</em> parameter to a non-<strong><c>null</c></strong> value and the <em>DriverType</em> parameter to the <see cref="F:SharpDX.Direct3D.DriverType.Hardware"/> value, <strong><see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/></strong> returns an <strong><see cref="T:SharpDX.Result"/></strong> of E_INVALIDARG.</p><table> <tr><td> <p>Differences between Direct3D 10 and Direct3D 11:</p> <p>In Direct3D 10, the presence of <em>pAdapter</em> dictated which adapter to use and the <em>DriverType</em> could  mismatch what the adapter was.</p> <p>In Direct3D 11, if you are trying to create a hardware or a software device, set <em>pAdapter</em> != <strong><c>null</c></strong> which constrains  the other inputs to be:</p> <ul> <li><em>DriverType</em> must be <see cref="F:SharpDX.Direct3D.DriverType.Unknown"/></li> <li><em>Software</em> must be <strong><c>null</c></strong>.</li> </ul> <p>On the other hand, if <em>pAdapter</em> == <strong><c>null</c></strong>, the <em>DriverType</em> cannot be set to <see cref="F:SharpDX.Direct3D.DriverType.Unknown"/>; it can be set to either:</p> <ul> <li>If <em>DriverType</em> == <see cref="F:SharpDX.Direct3D.DriverType.Software"/>,  <em>Software</em> cannot be <strong><c>null</c></strong>.</li> <li>If <em>DriverType</em> == <see cref="F:SharpDX.Direct3D.DriverType.Hardware"/>, the adapter used will be the default adapter, which is the first adapter that is enumerated by <strong>IDXGIFactory1::EnumAdapters</strong> </li> </ul> </td></tr> </table><p>?</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11CreateDevice']/*"/>	
            <msdn-id>ff476082</msdn-id>	
            <unmanaged>HRESULT D3D11CreateDevice([In, Optional] IDXGIAdapter* pAdapter,[In] D3D_DRIVER_TYPE DriverType,[In] HINSTANCE Software,[In] D3D11_CREATE_DEVICE_FLAG Flags,[In, Buffer, Optional] const D3D_FEATURE_LEVEL* pFeatureLevels,[In] unsigned int FeatureLevels,[In] unsigned int SDKVersion,[Out, Fast] ID3D11Device** ppDevice,[Out, Optional] D3D_FEATURE_LEVEL* pFeatureLevel,[Out, Optional] ID3D11DeviceContext** ppImmediateContext)</unmanaged>	
            <unmanaged-short>D3D11CreateDevice</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.D3DCSX">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.Direct3D11.D3DCSX']/*"/>	
        </member>
        <member name="T:SharpDX.Direct3D11.D3DX11">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.Direct3D11.D3DX11']/*"/>	
        </member>
        <member name="T:SharpDX.Direct3D11.ResultCode">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.Direct3D11.ResultCode']/*"/>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResultCode.TooManyUniqueViewObjects">
            <summary>Constant TooManyUniqueViewObjects.</summary>
            <unmanaged>D3D11_ERROR_TOO_MANY_UNIQUE_VIEW_OBJECTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ResultCode.TooManyUniqueStateObjects">
            <summary>Constant TooManyUniqueStateObjects.</summary>
            <unmanaged>D3D11_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ResultCode.FileNotFound">
            <summary>Constant FileNotFound.</summary>
            <unmanaged>D3D11_ERROR_FILE_NOT_FOUND</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ResultCode.DeferredContextMapWithoutInitialDiscard">
            <summary>Constant DeferredContextMapWithoutInitialDiscard.</summary>
            <unmanaged>D3D11_ERROR_DEFERRED_CONTEXT_MAP_WITHOUT_INITIAL_DISCARD</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedChannel">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Provides a communication channel with the graphics driver or the Microsoft Direct3D runtime. </p>	
            </summary>	
            <remarks>	
            <p>To get a reference to this interface, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateAuthenticatedChannel(SharpDX.Direct3D11.AuthenticatedChannelType,SharpDX.Direct3D11.AuthenticatedChannel@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11AuthenticatedChannel']/*"/>	
            <msdn-id>hh447690</msdn-id>	
            <unmanaged>ID3D11AuthenticatedChannel</unmanaged>	
            <unmanaged-short>ID3D11AuthenticatedChannel</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.AuthenticatedChannel.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.AuthenticatedChannel"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.AuthenticatedChannel.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.AuthenticatedChannel">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.AuthenticatedChannel"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.AuthenticatedChannel.GetCertificateSize(System.Int32@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets the size of the driver's certificate chain.</p>	
            </summary>	
            <param name="certificateSizeRef"><dd> <p>Receives the size of the certificate chain, in bytes.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11AuthenticatedChannel::GetCertificateSize']/*"/>	
            <msdn-id>hh447688</msdn-id>	
            <unmanaged>HRESULT ID3D11AuthenticatedChannel::GetCertificateSize([Out] unsigned int* pCertificateSize)</unmanaged>	
            <unmanaged-short>ID3D11AuthenticatedChannel::GetCertificateSize</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.AuthenticatedChannel.GetCertificate(System.Int32,System.Byte[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets the driver's certificate chain.</p>	
            </summary>	
            <param name="certificateSize"><dd> <p>The size of the <em>pCertificate</em> array, in bytes. To get the size of the certificate chain, call <strong><see cref="M:SharpDX.Direct3D11.CryptoSession.GetCertificateSize(System.Int32@)"/></strong>.</p> </dd></param>	
            <param name="certificateRef"><dd> <p>A reference to a byte array that receives the driver's certificate chain. The caller must allocate the array.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11AuthenticatedChannel::GetCertificate']/*"/>	
            <msdn-id>hh447687</msdn-id>	
            <unmanaged>HRESULT ID3D11AuthenticatedChannel::GetCertificate([In] unsigned int CertificateSize,[Out, Buffer] unsigned char* pCertificate)</unmanaged>	
            <unmanaged-short>ID3D11AuthenticatedChannel::GetCertificate</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.AuthenticatedChannel.GetChannelHandle(System.IntPtr@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets a handle to the authenticated channel.</p>	
            </summary>	
            <param name="channelHandleRef"><dd> <p>Receives a handle to the channel.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11AuthenticatedChannel::GetChannelHandle']/*"/>	
            <msdn-id>hh447689</msdn-id>	
            <unmanaged>void ID3D11AuthenticatedChannel::GetChannelHandle([Out] void** pChannelHandle)</unmanaged>	
            <unmanaged-short>ID3D11AuthenticatedChannel::GetChannelHandle</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.AuthenticatedChannel.CertificateSize">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets the size of the driver's certificate chain.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11AuthenticatedChannel::GetCertificateSize']/*"/>	
            <msdn-id>hh447688</msdn-id>	
            <unmanaged>GetCertificateSize</unmanaged>	
            <unmanaged-short>GetCertificateSize</unmanaged-short>	
            <unmanaged>HRESULT ID3D11AuthenticatedChannel::GetCertificateSize([Out] unsigned int* pCertificateSize)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.AuthenticatedChannel.ChannelHandle">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets a handle to the authenticated channel.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11AuthenticatedChannel::GetChannelHandle']/*"/>	
            <msdn-id>hh447689</msdn-id>	
            <unmanaged>GetChannelHandle</unmanaged>	
            <unmanaged-short>GetChannelHandle</unmanaged-short>	
            <unmanaged>void ID3D11AuthenticatedChannel::GetChannelHandle([Out] void** pChannelHandle)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.CommandList">
            <summary>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.CommandList"/></strong> interface encapsulates a list of graphics commands for play back.</p>	
            </summary>	
            <remarks>	
            <p>There is no explicit creation method, simply declare an <strong><see cref="T:SharpDX.Direct3D11.CommandList"/></strong> interface, then call <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.FinishCommandListInternal(SharpDX.Bool,SharpDX.Direct3D11.CommandList@)"/></strong> to record commands or <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.ExecuteCommandList(SharpDX.Direct3D11.CommandList,SharpDX.Bool)"/></strong> to play back commands.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CommandList']/*"/>	
            <msdn-id>ff476361</msdn-id>	
            <unmanaged>ID3D11CommandList</unmanaged>	
            <unmanaged-short>ID3D11CommandList</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.CommandList.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.CommandList"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.CommandList.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.CommandList">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.CommandList"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.CommandList.GetContextFlags">
            <summary>	
            <p>Gets the initialization flags associated with the deferred context that created the command list.</p>	
            </summary>	
            <returns><p>The context flag is reserved for future use and is always 0.</p></returns>	
            <remarks>	
            <p>The GetContextFlags method gets the flags that were supplied to the <em>ContextFlags</em> parameter of <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDeferredContext(System.Int32,SharpDX.Direct3D11.DeviceContext)"/></strong>; however, the context flag is reserved for future use.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CommandList::GetContextFlags']/*"/>	
            <msdn-id>ff476362</msdn-id>	
            <unmanaged>unsigned int ID3D11CommandList::GetContextFlags()</unmanaged>	
            <unmanaged-short>ID3D11CommandList::GetContextFlags</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.CommandList.ContextFlags">
            <summary>	
            <p>Gets the initialization flags associated with the deferred context that created the command list.</p>	
            </summary>	
            <remarks>	
            <p>The GetContextFlags method gets the flags that were supplied to the <em>ContextFlags</em> parameter of <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDeferredContext(System.Int32,SharpDX.Direct3D11.DeviceContext)"/></strong>; however, the context flag is reserved for future use.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CommandList::GetContextFlags']/*"/>	
            <msdn-id>ff476362</msdn-id>	
            <unmanaged>GetContextFlags</unmanaged>	
            <unmanaged-short>GetContextFlags</unmanaged-short>	
            <unmanaged>unsigned int ID3D11CommandList::GetContextFlags()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.CryptoSession">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Represents a cryptographic session. </p>	
            </summary>	
            <remarks>	
            <p>To get a reference to this interface, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateCryptoSession(System.Guid,System.Nullable{System.Guid},System.Guid,SharpDX.Direct3D11.CryptoSession@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession']/*"/>	
            <msdn-id>hh447691</msdn-id>	
            <unmanaged>ID3D11CryptoSession</unmanaged>	
            <unmanaged-short>ID3D11CryptoSession</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.CryptoSession.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.CryptoSession"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.CryptoSession.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.CryptoSession">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.CryptoSession"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.CryptoSession.GetCryptoType(System.Guid@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets the type of encryption that is supported by this session.</p>	
            </summary>	
            <param name="cryptoTypeRef"><dd> <p>Receives a <see cref="T:System.Guid"/> that specifies the encryption type. The following GUIDs are defined.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>D3D11_CRYPTO_TYPE_AES128_CTR</strong></dt> </dl> </td><td> <p>128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <remarks>	
            <p>The application specifies the encryption type when it creates the session.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetCryptoType']/*"/>	
            <msdn-id>hh447699</msdn-id>	
            <unmanaged>void ID3D11CryptoSession::GetCryptoType([Out] GUID* pCryptoType)</unmanaged>	
            <unmanaged-short>ID3D11CryptoSession::GetCryptoType</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.CryptoSession.GetDecoderProfile(System.Guid@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets the DirectX Video Acceleration (DXVA) decoding profile of the session.</p>	
            </summary>	
            <param name="decoderProfileRef"><dd> <p>Receives the DXVA decoding profile. For a list of possible values, see <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)"/></strong>. </p> </dd></param>	
            <remarks>	
            <p>The application specifies the DXVA profile when it creates the session.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetDecoderProfile']/*"/>	
            <msdn-id>hh447701</msdn-id>	
            <unmanaged>void ID3D11CryptoSession::GetDecoderProfile([Out] GUID* pDecoderProfile)</unmanaged>	
            <unmanaged-short>ID3D11CryptoSession::GetDecoderProfile</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.CryptoSession.GetCertificateSize(System.Int32@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets the size of the driver's certificate chain.</p>	
            </summary>	
            <param name="certificateSizeRef"><dd> <p>Receives the size of the certificate chain, in bytes. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>To get the certificate, call <strong><see cref="M:SharpDX.Direct3D11.CryptoSession.GetCertificate(System.Int32,System.Byte[])"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetCertificateSize']/*"/>	
            <msdn-id>hh447695</msdn-id>	
            <unmanaged>HRESULT ID3D11CryptoSession::GetCertificateSize([Out] unsigned int* pCertificateSize)</unmanaged>	
            <unmanaged-short>ID3D11CryptoSession::GetCertificateSize</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.CryptoSession.GetCertificate(System.Int32,System.Byte[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets the driver's certificate chain.</p>	
            </summary>	
            <param name="certificateSize"><dd> <p>The size of the <em>pCertificate</em> array, in bytes. To get the size of the certificate chain, call <strong><see cref="M:SharpDX.Direct3D11.CryptoSession.GetCertificateSize(System.Int32@)"/></strong>.</p> </dd></param>	
            <param name="certificateRef"><dd> <p>A reference to a byte array that receives the driver's certificate chain. The caller must allocate the array.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetCertificate']/*"/>	
            <msdn-id>hh447693</msdn-id>	
            <unmanaged>HRESULT ID3D11CryptoSession::GetCertificate([In] unsigned int CertificateSize,[Out, Buffer] unsigned char* pCertificate)</unmanaged>	
            <unmanaged-short>ID3D11CryptoSession::GetCertificate</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.CryptoSession.GetCryptoSessionHandle(System.IntPtr@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets a handle to the cryptographic session.</p>	
            </summary>	
            <param name="cryptoSessionHandleRef"><dd> <p>Receives a handle to the session.</p> </dd></param>	
            <remarks>	
            <p>You can use this handle to associate the session with a decoder. This enables the decoder to decrypt data that is encrypted using this session.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetCryptoSessionHandle']/*"/>	
            <msdn-id>hh447697</msdn-id>	
            <unmanaged>void ID3D11CryptoSession::GetCryptoSessionHandle([Out] void** pCryptoSessionHandle)</unmanaged>	
            <unmanaged-short>ID3D11CryptoSession::GetCryptoSessionHandle</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.CryptoSession.CryptoType">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets the type of encryption that is supported by this session.</p>	
            </summary>	
            <remarks>	
            <p>The application specifies the encryption type when it creates the session.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetCryptoType']/*"/>	
            <msdn-id>hh447699</msdn-id>	
            <unmanaged>GetCryptoType</unmanaged>	
            <unmanaged-short>GetCryptoType</unmanaged-short>	
            <unmanaged>void ID3D11CryptoSession::GetCryptoType([Out] GUID* pCryptoType)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.CryptoSession.DecoderProfile">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets the DirectX Video Acceleration (DXVA) decoding profile of the session.</p>	
            </summary>	
            <remarks>	
            <p>The application specifies the DXVA profile when it creates the session.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetDecoderProfile']/*"/>	
            <msdn-id>hh447701</msdn-id>	
            <unmanaged>GetDecoderProfile</unmanaged>	
            <unmanaged-short>GetDecoderProfile</unmanaged-short>	
            <unmanaged>void ID3D11CryptoSession::GetDecoderProfile([Out] GUID* pDecoderProfile)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.CryptoSession.CertificateSize">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets the size of the driver's certificate chain.</p>	
            </summary>	
            <remarks>	
            <p>To get the certificate, call <strong><see cref="M:SharpDX.Direct3D11.CryptoSession.GetCertificate(System.Int32,System.Byte[])"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetCertificateSize']/*"/>	
            <msdn-id>hh447695</msdn-id>	
            <unmanaged>GetCertificateSize</unmanaged>	
            <unmanaged-short>GetCertificateSize</unmanaged-short>	
            <unmanaged>HRESULT ID3D11CryptoSession::GetCertificateSize([Out] unsigned int* pCertificateSize)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.CryptoSession.CryptoSessionHandle">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Gets a handle to the cryptographic session.</p>	
            </summary>	
            <remarks>	
            <p>You can use this handle to associate the session with a decoder. This enables the decoder to decrypt data that is encrypted using this session.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetCryptoSessionHandle']/*"/>	
            <msdn-id>hh447697</msdn-id>	
            <unmanaged>GetCryptoSessionHandle</unmanaged>	
            <unmanaged-short>GetCryptoSessionHandle</unmanaged-short>	
            <unmanaged>void ID3D11CryptoSession::GetCryptoSessionHandle([Out] void** pCryptoSessionHandle)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.DeviceContextState">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>The <strong><see cref="T:SharpDX.Direct3D11.DeviceContextState"/></strong> interface represents a context state object, which holds state and behavior information about a Microsoft Direct3D device.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DDeviceContextState']/*"/>	
            <msdn-id>hh446878</msdn-id>	
            <unmanaged>ID3DDeviceContextState</unmanaged>	
            <unmanaged-short>ID3DDeviceContextState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContextState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DeviceContextState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContextState.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.DeviceContextState">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.DeviceContextState"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:SharpDX.Direct3D11.DomainShaderStage">
            <summary>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface represents a device context which generates rendering commands.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <msdn-id>ff476385</msdn-id>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DomainShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.DomainShaderStage">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.DomainShaderStage"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Bind an array of shader resources to the domain-shader stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</p> </dd></param>	
            <param name="numViews"><dd>  <p>Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="shaderResourceViewsOut"><dd>  <p>Array of <strong>shader resource view</strong> interfaces to set to the device.</p> </dd></param>	
            <remarks>	
            <p>If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <strong><c>null</c></strong>.</p><p>For information about creating shader-resource views, see <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSSetShaderResources']/*"/>	
            <msdn-id>ff476421</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DSSetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[In, Buffer, Optional] const void** ppShaderResourceViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DSSetShaderResources</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.SetShader(SharpDX.Direct3D11.DomainShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)">
            <summary>	
            <p>Set a domain shader to the device.</p>	
            </summary>	
            <param name="domainShaderRef"><dd>  <p>Pointer to a domain shader (see <strong><see cref="T:SharpDX.Direct3D11.DomainShader"/></strong>). Passing in <strong><c>null</c></strong> disables the shader for this pipeline stage.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>A reference to an array of class-instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <strong><c>null</c></strong> if the shader does not use any interfaces.</p> </dd></param>	
            <param name="numClassInstances"><dd>  <p>The number of class-instance interfaces in the array.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The maximum number of instances a shader can have is 256.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSSetShader']/*"/>	
            <msdn-id>ff476420</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DSSetShader([In, Optional] ID3D11DomainShader* pDomainShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DSSetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.SetShader(SharpDX.Direct3D11.DomainShader,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance},System.Int32)">
            <summary>	
            <p>Set a domain shader to the device.</p>	
            </summary>	
            <param name="domainShaderRef"><dd>  <p>Pointer to a domain shader (see <strong><see cref="T:SharpDX.Direct3D11.DomainShader"/></strong>). Passing in <strong><c>null</c></strong> disables the shader for this pipeline stage.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>A reference to an array of class-instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <strong><c>null</c></strong> if the shader does not use any interfaces.</p> </dd></param>	
            <param name="numClassInstances"><dd>  <p>The number of class-instance interfaces in the array.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The maximum number of instances a shader can have is 256.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSSetShader']/*"/>	
            <msdn-id>ff476420</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DSSetShader([In, Optional] ID3D11DomainShader* pDomainShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DSSetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Set an array of sampler states to the domain-shader stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting samplers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</p> </dd></param>	
            <param name="numSamplers"><dd>  <p>Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="samplersOut"><dd>  <p>Pointer to an array of sampler-state interfaces (see <strong><see cref="T:SharpDX.Direct3D11.SamplerState"/></strong>). See Remarks.</p> </dd></param>	
            <remarks>	
            <p>Any sampler may be set to <strong><c>null</c></strong>; this invokes the default state, which is defined to be the following.</p><pre><code> //Default sampler state:	
            <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/> SamplerDesc;	
            SamplerDesc.Filter = <see cref="F:SharpDX.Direct3D11.Filter.MinMagMipLinear"/>;	
            SamplerDesc.AddressU = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressV = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressW = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.MipLODBias = 0;	
            SamplerDesc.MaxAnisotropy = 1;	
            SamplerDesc.ComparisonFunc = <see cref="F:SharpDX.Direct3D11.Comparison.Never"/>;	
            SamplerDesc.BorderColor[0] = 1.0f;	
            SamplerDesc.BorderColor[1] = 1.0f;	
            SamplerDesc.BorderColor[2] = 1.0f;	
            SamplerDesc.BorderColor[3] = 1.0f;	
            SamplerDesc.MinLOD = -FLT_MAX;	
            SamplerDesc.MaxLOD = FLT_MAX; </code></pre><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSSetSamplers']/*"/>	
            <msdn-id>ff476419</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DSSetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[In, Buffer, Optional] const void** ppSamplers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DSSetSamplers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.SetConstantBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Sets the constant buffers used by the domain-shader stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <strong><see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/></strong> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>Number of buffers to set (ranges from 0 to <strong><see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/></strong> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd>  <p>Array of constant buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) being given to the device.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, can bind a larger number of <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.  </p><p>If the application wants the shader to access other parts of the buffer, it must call the <strong>DSSetConstantBuffers1</strong> method instead. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSSetConstantBuffers']/*"/>	
            <msdn-id>ff476418</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DSSetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void** ppConstantBuffers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DSSetConstantBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>	
            <p>Get the domain-shader resources.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</p> </dd></param>	
            <param name="numViews"><dd>  <p>The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="shaderResourceViewsOut"><dd>  <p>Array of <strong>shader resource view</strong> interfaces to be returned by the device.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSGetShaderResources']/*"/>	
            <msdn-id>ff476417</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DSGetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DSGetShaderResources</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.GetShader(SharpDX.Direct3D11.DomainShader@,SharpDX.Direct3D11.ClassInstance[],System.Int32@)">
            <summary>	
            <p>Get the domain shader currently set on the device.</p>	
            </summary>	
            <param name="domainShaderOut"><dd>  <p>Address of a reference to a domain shader (see <strong><see cref="T:SharpDX.Direct3D11.DomainShader"/></strong>) to be returned by the method.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>Pointer to an array of class instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>).</p> </dd></param>	
            <param name="numClassInstancesRef"><dd>  <p>The number of class-instance elements in the array.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSGetShader']/*"/>	
            <msdn-id>ff476416</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DSGetShader([Out] ID3D11DomainShader** ppDomainShader,[Out, Buffer, Optional] ID3D11ClassInstance** ppClassInstances,[InOut] unsigned int* pNumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DSGetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>	
            <p>Get an array of sampler state interfaces from the domain-shader stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into a zero-based array to begin getting samplers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</p> </dd></param>	
            <param name="numSamplers"><dd>  <p>Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="samplersOut"><dd>  <p>Pointer to an array of sampler-state interfaces (see <strong><see cref="T:SharpDX.Direct3D11.SamplerState"/></strong>).</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSGetSamplers']/*"/>	
            <msdn-id>ff476415</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DSGetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[Out, Buffer, Optional] ID3D11SamplerState** ppSamplers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DSGetSamplers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            <p>Get the constant buffers used by the domain-shader stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="constantBuffersOut"><dd>  <p>Array of constant buffer interface references (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) to be returned by the method.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSGetConstantBuffers']/*"/>	
            <msdn-id>ff476414</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::DSGetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::DSGetConstantBuffers</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.GeometryShader">
            <summary>	
            <p>A geometry-shader interface manages an executable program (a geometry shader) that controls the geometry-shader stage.</p>	
            </summary>	
            <remarks>	
            <p>The geometry-shader interface has no methods; use HLSL to implement your shader functionality. All shaders are implemented from a common set of features referred to as the common-shader core..</p><p>To create a geometry shader interface, call either <strong><see cref="M:SharpDX.Direct3D11.Device.CreateGeometryShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.GeometryShader)"/></strong> or <strong><see cref="M:SharpDX.Direct3D11.Device.CreateGeometryShaderWithStreamOutput(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.StreamOutputElement[],System.Int32,System.Int32[],System.Int32,System.Int32,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.GeometryShader)"/></strong>. Before using a geometry shader you must bind it to the device by calling <strong><see cref="M:SharpDX.Direct3D11.GeometryShaderStage.SetShader(SharpDX.Direct3D11.GeometryShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)"/></strong>.</p><p>This interface is defined in D3D11.h.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11GeometryShader']/*"/>	
            <msdn-id>ff476536</msdn-id>	
            <unmanaged>ID3D11GeometryShader</unmanaged>	
            <unmanaged-short>ID3D11GeometryShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.GeometryShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShader.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.GeometryShader">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.GeometryShader"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShader.#ctor(SharpDX.Direct3D11.Device,System.Byte[],SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.GeometryShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShader.#ctor(SharpDX.Direct3D11.Device,System.Byte[],SharpDX.Direct3D11.StreamOutputElement[],System.Int32[],System.Int32,SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.GeometryShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "elements">An array of <see cref = "T:SharpDX.Direct3D11.StreamOutputElement" /> instances describing the layout of the output buffers.</param>
            <param name = "bufferedStrides">An array of buffer strides; each stride is the size of an element for that buffer.</param>
            <param name = "rasterizedStream">The index number of the stream to be sent to the rasterizer stage. Set to NoRasterizedStream if no stream is to be rasterized.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="T:SharpDX.Direct3D11.GeometryShaderStage">
            <summary>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface represents a device context which generates rendering commands.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <msdn-id>ff476385</msdn-id>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.GeometryShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.GeometryShaderStage">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.GeometryShaderStage"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.SetConstantBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Sets the constant buffers used by the geometry shader pipeline stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <strong><see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/></strong> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>Number of buffers to set (ranges from 0 to <strong><see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/></strong> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd>  <p>Array of constant buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) being given to the device.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>You can't use the <strong><see cref="!:SharpDX.D3DCompiler.ConstantBuffer"/></strong> interface to get information about what is currently bound to the pipeline in the device context. But you can use <strong><see cref="!:SharpDX.D3DCompiler.ConstantBuffer"/></strong> to get information from a compiled shader. For example, you can use <strong><see cref="!:SharpDX.D3DCompiler.ConstantBuffer"/></strong> and <strong><see cref="!:SharpDX.D3DCompiler.ShaderReflectionVariable"/></strong> to determine the slot in which a geometry shader expects a constant buffer. You can then pass this slot number to <strong>GSSetConstantBuffers</strong> to set the constant buffer. You can call the <strong>D3D11Reflect</strong> function to retrieve the address of a reference to the <strong><see cref="!:SharpDX.D3DCompiler.ShaderReflection"/></strong> interface and then call <strong><see cref="!:SharpDX.D3DCompiler.ShaderReflection.GetConstantBuffer"/></strong> to get a reference to <strong><see cref="!:SharpDX.D3DCompiler.ConstantBuffer"/></strong>.</p><p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, can bind a larger number of <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.  </p><p>If the application wants the shader to access other parts of the buffer, it must call the <strong>GSSetConstantBuffers1</strong> method instead. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSSetConstantBuffers']/*"/>	
            <msdn-id>ff476436</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::GSSetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void** ppConstantBuffers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GSSetConstantBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.SetShader(SharpDX.Direct3D11.GeometryShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)">
            <summary>	
            <p>Set a geometry shader to the device.</p>	
            </summary>	
            <param name="shaderRef"><dd>  <p>Pointer to a geometry shader (see <strong><see cref="T:SharpDX.Direct3D11.GeometryShader"/></strong>). Passing in <strong><c>null</c></strong> disables the shader for this pipeline stage.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>A reference to an array of class-instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <strong><c>null</c></strong> if the shader does not use any interfaces.</p> </dd></param>	
            <param name="numClassInstances"><dd>  <p>The number of class-instance interfaces in the array.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The maximum number of instances a shader can have is 256.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSSetShader']/*"/>	
            <msdn-id>ff476438</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::GSSetShader([In, Optional] ID3D11GeometryShader* pShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GSSetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.SetShader(SharpDX.Direct3D11.GeometryShader,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance},System.Int32)">
            <summary>	
            <p>Set a geometry shader to the device.</p>	
            </summary>	
            <param name="shaderRef"><dd>  <p>Pointer to a geometry shader (see <strong><see cref="T:SharpDX.Direct3D11.GeometryShader"/></strong>). Passing in <strong><c>null</c></strong> disables the shader for this pipeline stage.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>A reference to an array of class-instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <strong><c>null</c></strong> if the shader does not use any interfaces.</p> </dd></param>	
            <param name="numClassInstances"><dd>  <p>The number of class-instance interfaces in the array.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The maximum number of instances a shader can have is 256.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSSetShader']/*"/>	
            <msdn-id>ff476438</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::GSSetShader([In, Optional] ID3D11GeometryShader* pShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GSSetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Bind an array of shader resources to the geometry shader stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</p> </dd></param>	
            <param name="numViews"><dd>  <p>Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="shaderResourceViewsOut"><dd>  <p>Array of <strong>shader resource view</strong> interfaces to set to the device.</p> </dd></param>	
            <remarks>	
            <p>If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <strong><c>null</c></strong>.</p><p>For information about creating shader-resource views, see <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSSetShaderResources']/*"/>	
            <msdn-id>ff476439</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::GSSetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[In, Buffer, Optional] const void** ppShaderResourceViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GSSetShaderResources</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Set an array of sampler states to the geometry shader pipeline stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting samplers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</p> </dd></param>	
            <param name="numSamplers"><dd>  <p>Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="samplersOut"><dd>  <p>Pointer to an array of sampler-state interfaces (see <strong><see cref="T:SharpDX.Direct3D11.SamplerState"/></strong>). See Remarks.</p> </dd></param>	
            <remarks>	
            <p>Any sampler may be set to <strong><c>null</c></strong>; this invokes the default state, which is defined to be the following.</p><pre><code> //Default sampler state:	
            <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/> SamplerDesc;	
            SamplerDesc.Filter = <see cref="F:SharpDX.Direct3D11.Filter.MinMagMipLinear"/>;	
            SamplerDesc.AddressU = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressV = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressW = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.MipLODBias = 0;	
            SamplerDesc.MaxAnisotropy = 1;	
            SamplerDesc.ComparisonFunc = <see cref="F:SharpDX.Direct3D11.Comparison.Never"/>;	
            SamplerDesc.BorderColor[0] = 1.0f;	
            SamplerDesc.BorderColor[1] = 1.0f;	
            SamplerDesc.BorderColor[2] = 1.0f;	
            SamplerDesc.BorderColor[3] = 1.0f;	
            SamplerDesc.MinLOD = -FLT_MAX;	
            SamplerDesc.MaxLOD = FLT_MAX; </code></pre><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSSetSamplers']/*"/>	
            <msdn-id>ff476437</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::GSSetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[In, Buffer, Optional] const void** ppSamplers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GSSetSamplers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            <p>Get the constant buffers used by the geometry shader pipeline stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="constantBuffersOut"><dd>  <p>Array of constant buffer interface references (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) to be returned by the method.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSGetConstantBuffers']/*"/>	
            <msdn-id>ff476432</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::GSGetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GSGetConstantBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.GetShader(SharpDX.Direct3D11.GeometryShader@,SharpDX.Direct3D11.ClassInstance[],System.Int32@)">
            <summary>	
            <p>Get the geometry shader currently set on the device.</p>	
            </summary>	
            <param name="geometryShaderOut"><dd>  <p>Address of a reference to a geometry shader (see <strong><see cref="T:SharpDX.Direct3D11.GeometryShader"/></strong>) to be returned by the method.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>Pointer to an array of class instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>).</p> </dd></param>	
            <param name="numClassInstancesRef"><dd>  <p>The number of class-instance elements in the array.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSGetShader']/*"/>	
            <msdn-id>ff476434</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::GSGetShader([Out] ID3D11GeometryShader** ppGeometryShader,[Out, Buffer, Optional] ID3D11ClassInstance** ppClassInstances,[InOut] unsigned int* pNumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GSGetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>	
            <p>Get the geometry shader resources.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</p> </dd></param>	
            <param name="numViews"><dd>  <p>The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="shaderResourceViewsOut"><dd>  <p>Array of <strong>shader resource view</strong> interfaces to be returned by the device.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSGetShaderResources']/*"/>	
            <msdn-id>ff476435</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::GSGetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GSGetShaderResources</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>	
            <p>Get an array of sampler state interfaces from the geometry shader pipeline stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into a zero-based array to begin getting samplers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</p> </dd></param>	
            <param name="numSamplers"><dd>  <p>Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="samplersOut"><dd>  <p>Pointer to an array of sampler-state interfaces (see <strong><see cref="T:SharpDX.Direct3D11.SamplerState"/></strong>).</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSGetSamplers']/*"/>	
            <msdn-id>ff476433</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::GSGetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[Out, Buffer, Optional] ID3D11SamplerState** ppSamplers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::GSGetSamplers</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.HullShader">
            <summary>	
            <p>A hull-shader interface manages an executable program (a hull shader) that controls the hull-shader stage.</p>	
            </summary>	
            <remarks>	
            <p>The hull-shader interface has no methods; use HLSL to implement your shader functionality. All shaders are implemented from a common set of features referred to as the common-shader core..</p><p>To create a hull-shader interface, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateHullShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.HullShader)"/></strong>. Before using a hull shader you must bind it to the device by calling <strong><see cref="M:SharpDX.Direct3D11.HullShaderStage.SetShader(SharpDX.Direct3D11.HullShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)"/></strong>.</p><p>This interface is defined in D3D11.h.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11HullShader']/*"/>	
            <msdn-id>ff476537</msdn-id>	
            <unmanaged>ID3D11HullShader</unmanaged>	
            <unmanaged-short>ID3D11HullShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.HullShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShader.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.HullShader">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.HullShader"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.HullShader.#ctor(SharpDX.Direct3D11.Device,System.Byte[],SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.HullShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="T:SharpDX.Direct3D11.HullShaderStage">
            <summary>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface represents a device context which generates rendering commands.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <msdn-id>ff476385</msdn-id>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.HullShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.HullShaderStage">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.HullShaderStage"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Bind an array of shader resources to the hull-shader stage.</p>	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numViews">No documentation.</param>	
            <param name="shaderResourceViewsOut">No documentation.</param>	
            <remarks>	
            <p>If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <strong><c>null</c></strong>.</p><p>For information about creating shader-resource views, see <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSSetShaderResources']/*"/>	
            <msdn-id>ff476448</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::HSSetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[In, Buffer, Optional] const void** ppShaderResourceViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::HSSetShaderResources</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.SetShader(SharpDX.Direct3D11.HullShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)">
            <summary>	
            <p>Set a hull shader to the device.</p>	
            </summary>	
            <param name="hullShaderRef"><dd>  <p>Pointer to a hull shader (see <strong><see cref="T:SharpDX.Direct3D11.HullShader"/></strong>). Passing in <strong><c>null</c></strong> disables the shader for this pipeline stage.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>A reference to an array of class-instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <strong><c>null</c></strong> if the shader does not use any interfaces.</p> </dd></param>	
            <param name="numClassInstances"><dd>  <p>The number of class-instance interfaces in the array.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The maximum number of instances a shader can have is 256.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSSetShader']/*"/>	
            <msdn-id>ff476447</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::HSSetShader([In, Optional] ID3D11HullShader* pHullShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::HSSetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.SetShader(SharpDX.Direct3D11.HullShader,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance},System.Int32)">
            <summary>	
            <p>Set a hull shader to the device.</p>	
            </summary>	
            <param name="hullShaderRef"><dd>  <p>Pointer to a hull shader (see <strong><see cref="T:SharpDX.Direct3D11.HullShader"/></strong>). Passing in <strong><c>null</c></strong> disables the shader for this pipeline stage.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>A reference to an array of class-instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <strong><c>null</c></strong> if the shader does not use any interfaces.</p> </dd></param>	
            <param name="numClassInstances"><dd>  <p>The number of class-instance interfaces in the array.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The maximum number of instances a shader can have is 256.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSSetShader']/*"/>	
            <msdn-id>ff476447</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::HSSetShader([In, Optional] ID3D11HullShader* pHullShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::HSSetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Set an array of sampler states to the hull-shader stage.</p>	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numSamplers">No documentation.</param>	
            <param name="samplersOut">No documentation.</param>	
            <remarks>	
            <p>Any sampler may be set to <strong><c>null</c></strong>; this invokes the default state, which is defined to be the following.</p><pre><code> //Default sampler state:	
            <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/> SamplerDesc;	
            SamplerDesc.Filter = <see cref="F:SharpDX.Direct3D11.Filter.MinMagMipLinear"/>;	
            SamplerDesc.AddressU = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressV = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressW = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.MipLODBias = 0;	
            SamplerDesc.MaxAnisotropy = 1;	
            SamplerDesc.ComparisonFunc = <see cref="F:SharpDX.Direct3D11.Comparison.Never"/>;	
            SamplerDesc.BorderColor[0] = 1.0f;	
            SamplerDesc.BorderColor[1] = 1.0f;	
            SamplerDesc.BorderColor[2] = 1.0f;	
            SamplerDesc.BorderColor[3] = 1.0f;	
            SamplerDesc.MinLOD = -FLT_MAX;	
            SamplerDesc.MaxLOD = FLT_MAX; </code></pre><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSSetSamplers']/*"/>	
            <msdn-id>ff476446</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::HSSetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[In, Buffer, Optional] const void** ppSamplers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::HSSetSamplers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.SetConstantBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Set the constant buffers used by the hull-shader stage.</p>	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numBuffers">No documentation.</param>	
            <param name="constantBuffersOut">No documentation.</param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, can bind a larger number of <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.  </p><p>If the application wants the shader to access other parts of the buffer, it must call the <strong>HSSetConstantBuffers1</strong> method instead. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSSetConstantBuffers']/*"/>	
            <msdn-id>ff476445</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::HSSetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void** ppConstantBuffers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::HSSetConstantBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>	
            <p>Get the hull-shader resources.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</p> </dd></param>	
            <param name="numViews"><dd>  <p>The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="shaderResourceViewsOut"><dd>  <p>Array of <strong>shader resource view</strong> interfaces to be returned by the device.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSGetShaderResources']/*"/>	
            <msdn-id>ff476443</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::HSGetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::HSGetShaderResources</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.GetShader(SharpDX.Direct3D11.HullShader@,SharpDX.Direct3D11.ClassInstance[],System.Int32@)">
            <summary>	
            <p>Get the hull shader currently set on the device.</p>	
            </summary>	
            <param name="hullShaderOut"><dd>  <p>Address of a reference to a hull shader (see <strong><see cref="T:SharpDX.Direct3D11.HullShader"/></strong>) to be returned by the method.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>Pointer to an array of class instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>).</p> </dd></param>	
            <param name="numClassInstancesRef"><dd>  <p>The number of class-instance elements in the array.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSGetShader']/*"/>	
            <msdn-id>ff476442</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::HSGetShader([Out] ID3D11HullShader** ppHullShader,[Out, Buffer, Optional] ID3D11ClassInstance** ppClassInstances,[InOut] unsigned int* pNumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::HSGetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>	
            <p>Get an array of sampler state interfaces from the hull-shader stage.</p>	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numSamplers">No documentation.</param>	
            <param name="samplersOut">No documentation.</param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSGetSamplers']/*"/>	
            <msdn-id>ff476441</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::HSGetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[Out, Buffer, Optional] ID3D11SamplerState** ppSamplers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::HSGetSamplers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            <p>Get the constant buffers used by the hull-shader stage.</p>	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numBuffers">No documentation.</param>	
            <param name="constantBuffersOut">No documentation.</param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSGetConstantBuffers']/*"/>	
            <msdn-id>ff476440</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::HSGetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::HSGetConstantBuffers</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.InputLayout">
            <summary>	
            <p>An input-layout interface holds a definition of how to feed vertex data that is laid out in memory into the input-assembler stage of the graphics pipeline.</p>	
            </summary>	
            <remarks>	
            <p>To create an input-layout object, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateInputLayout(SharpDX.Direct3D11.InputElement[],System.Int32,System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.InputLayout)"/></strong>. To bind the input-layout object to the input-assembler stage, call <strong><see cref="M:SharpDX.Direct3D11.InputAssemblerStage.SetInputLayout(SharpDX.Direct3D11.InputLayout)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11InputLayout']/*"/>	
            <msdn-id>ff476575</msdn-id>	
            <unmanaged>ID3D11InputLayout</unmanaged>	
            <unmanaged-short>ID3D11InputLayout</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputLayout.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.InputLayout"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputLayout.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.InputLayout">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.InputLayout"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.InputLayout.#ctor(SharpDX.Direct3D11.Device,System.Byte[],SharpDX.Direct3D11.InputElement[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.InputLayout" /> object to describe the
              input-buffer data for the input-assembler stage.
            </summary>
            <unmanaged>ID3D11Device::CreateInputLayout</unmanaged>
            <param name = "device">The device used to create the layout.</param>
            <param name = "elements">An array of input elements describing the layout of the input data.</param>
            <param name = "shaderBytecode">The compiled shader used to validate the input elements.</param>
        </member>
        <member name="T:SharpDX.Direct3D11.PixelShader">
            <summary>	
            <p>A pixel-shader interface manages an executable program (a pixel shader) that controls the pixel-shader stage.</p>	
            </summary>	
            <remarks>	
            <p>The pixel-shader interface has no methods; use HLSL to implement your shader functionality. All shaders in are implemented from a common set of features referred to as the common-shader core..</p><p>To create a pixel shader interface, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreatePixelShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.PixelShader)"/></strong>. Before using a pixel shader you must bind it to the device by calling <strong><see cref="M:SharpDX.Direct3D11.PixelShaderStage.SetShader(SharpDX.Direct3D11.PixelShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)"/></strong>.</p><p>This interface is defined in D3D11.h.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11PixelShader']/*"/>	
            <msdn-id>ff476576</msdn-id>	
            <unmanaged>ID3D11PixelShader</unmanaged>	
            <unmanaged-short>ID3D11PixelShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.PixelShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShader.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.PixelShader">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.PixelShader"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShader.#ctor(SharpDX.Direct3D11.Device,System.Byte[],SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.PixelShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="T:SharpDX.Direct3D11.PixelShaderStage">
            <summary>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface represents a device context which generates rendering commands.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <msdn-id>ff476385</msdn-id>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.InputRegisterComponentBitCount">
            <summary>Constant InputRegisterComponentBitCount.</summary>
            <unmanaged>D3D11_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.InputRegisterCount">
            <summary>Constant InputRegisterCount.</summary>
            <unmanaged>D3D11_PS_INPUT_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.InputRegisterReadPorts">
            <summary>Constant InputRegisterReadPorts.</summary>
            <unmanaged>D3D11_PS_INPUT_REGISTER_READ_PORTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.OutputRegisterComponentBitCount">
            <summary>Constant OutputRegisterComponentBitCount.</summary>
            <unmanaged>D3D11_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.PixelCenterFractionalComponent">
            <summary>Constant PixelCenterFractionalComponent.</summary>
            <unmanaged>D3D11_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.OutputRegisterCount">
            <summary>Constant OutputRegisterCount.</summary>
            <unmanaged>D3D11_PS_OUTPUT_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.OutputMaskRegisterCount">
            <summary>Constant OutputMaskRegisterCount.</summary>
            <unmanaged>D3D11_PS_OUTPUT_MASK_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.OutputRegisterComponents">
            <summary>Constant OutputRegisterComponents.</summary>
            <unmanaged>D3D11_PS_OUTPUT_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.FrontfacingFalseValue">
            <summary>Constant FrontfacingFalseValue.</summary>
            <unmanaged>D3D11_PS_FRONTFACING_FALSE_VALUE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.InputRegisterComponents">
            <summary>Constant InputRegisterComponents.</summary>
            <unmanaged>D3D11_PS_INPUT_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.LegacyPixelCenterFractionalComponent">
            <summary>Constant LegacyPixelCenterFractionalComponent.</summary>
            <unmanaged>D3D11_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.OutputDepthRegisterComponentBitCount">
            <summary>Constant OutputDepthRegisterComponentBitCount.</summary>
            <unmanaged>D3D11_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.OutputMaskRegisterComponentBitCount">
            <summary>Constant OutputMaskRegisterComponentBitCount.</summary>
            <unmanaged>D3D11_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.OutputMaskRegisterComponents">
            <summary>Constant OutputMaskRegisterComponents.</summary>
            <unmanaged>D3D11_PS_OUTPUT_MASK_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.FrontfacingDefaultValue">
            <summary>Constant FrontfacingDefaultValue.</summary>
            <unmanaged>D3D11_PS_FRONTFACING_DEFAULT_VALUE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.FrontfacingTrueValue">
            <summary>Constant FrontfacingTrueValue.</summary>
            <unmanaged>D3D11_PS_FRONTFACING_TRUE_VALUE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.InputRegisterReadsPerInst">
            <summary>Constant InputRegisterReadsPerInst.</summary>
            <unmanaged>D3D11_PS_INPUT_REGISTER_READS_PER_INST</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.OutputDepthRegisterCount">
            <summary>Constant OutputDepthRegisterCount.</summary>
            <unmanaged>D3D11_PS_OUTPUT_DEPTH_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.PixelShaderStage.OutputDepthRegisterComponents">
            <summary>Constant OutputDepthRegisterComponents.</summary>
            <unmanaged>D3D11_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.PixelShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.PixelShaderStage">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.PixelShaderStage"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Bind an array of shader resources to the pixel shader stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</p> </dd></param>	
            <param name="numViews"><dd>  <p>Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="shaderResourceViewsOut"><dd>  <p>Array of <strong>shader resource view</strong> interfaces to set to the device.</p> </dd></param>	
            <remarks>	
            <p>If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with <strong><c>null</c></strong>.</p><p>For information about creating shader-resource views, see <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSSetShaderResources']/*"/>	
            <msdn-id>ff476473</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::PSSetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[In, Buffer, Optional] const void** ppShaderResourceViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::PSSetShaderResources</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.SetShader(SharpDX.Direct3D11.PixelShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)">
            <summary>	
            <p>Sets a pixel shader to the device.</p>	
            </summary>	
            <param name="pixelShaderRef"><dd>  <p>Pointer to a pixel shader (see <strong><see cref="T:SharpDX.Direct3D11.PixelShader"/></strong>). Passing in <strong><c>null</c></strong> disables the shader for this pipeline stage.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>A reference to an array of class-instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <strong><c>null</c></strong> if the shader does not use any interfaces.</p> </dd></param>	
            <param name="numClassInstances"><dd>  <p>The number of class-instance interfaces in the array.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The maximum number of instances a shader can have is 256.</p><p>Set ppClassInstances to <strong><c>null</c></strong> if no interfaces are used in the shader. If it is not <strong><c>null</c></strong>, the number of class instances must match the number of interfaces used in the shader. Furthermore, each interface reference must have a corresponding class instance or the assigned shader will be disabled.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSSetShader']/*"/>	
            <msdn-id>ff476472</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::PSSetShader([In, Optional] ID3D11PixelShader* pPixelShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::PSSetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.SetShader(SharpDX.Direct3D11.PixelShader,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance},System.Int32)">
            <summary>	
            <p>Sets a pixel shader to the device.</p>	
            </summary>	
            <param name="pixelShaderRef"><dd>  <p>Pointer to a pixel shader (see <strong><see cref="T:SharpDX.Direct3D11.PixelShader"/></strong>). Passing in <strong><c>null</c></strong> disables the shader for this pipeline stage.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>A reference to an array of class-instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <strong><c>null</c></strong> if the shader does not use any interfaces.</p> </dd></param>	
            <param name="numClassInstances"><dd>  <p>The number of class-instance interfaces in the array.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The maximum number of instances a shader can have is 256.</p><p>Set ppClassInstances to <strong><c>null</c></strong> if no interfaces are used in the shader. If it is not <strong><c>null</c></strong>, the number of class instances must match the number of interfaces used in the shader. Furthermore, each interface reference must have a corresponding class instance or the assigned shader will be disabled.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSSetShader']/*"/>	
            <msdn-id>ff476472</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::PSSetShader([In, Optional] ID3D11PixelShader* pPixelShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::PSSetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Set an array of sampler states to the pixel shader pipeline stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting samplers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</p> </dd></param>	
            <param name="numSamplers"><dd>  <p>Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="samplersOut"><dd>  <p>Pointer to an array of sampler-state interfaces (see <strong><see cref="T:SharpDX.Direct3D11.SamplerState"/></strong>). See Remarks.</p> </dd></param>	
            <remarks>	
            <p>Any sampler may be set to <strong><c>null</c></strong>; this invokes the default state, which is defined to be the following.</p><table> <tr><th>State</th><th>Default Value</th></tr> <tr><td>Filter</td><td><see cref="F:SharpDX.Direct3D11.Filter.MinMagMipLinear"/></td></tr> <tr><td>AddressU</td><td><see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/></td></tr> <tr><td>AddressV</td><td><see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/></td></tr> <tr><td>AddressW</td><td><see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/></td></tr> <tr><td>MipLODBias</td><td>0</td></tr> <tr><td>MaxAnisotropy</td><td>1</td></tr> <tr><td>ComparisonFunc</td><td><see cref="F:SharpDX.Direct3D11.Comparison.Never"/></td></tr> <tr><td>BorderColor[0]</td><td>1.0f</td></tr> <tr><td>BorderColor[1]</td><td>1.0f</td></tr> <tr><td>BorderColor[2]</td><td>1.0f</td></tr> <tr><td>BorderColor[3]</td><td>1.0f</td></tr> <tr><td>MinLOD</td><td>-FLT_MAX</td></tr> <tr><td>MaxLOD</td><td>FLT_MAX</td></tr> </table><p>?</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSSetSamplers']/*"/>	
            <msdn-id>ff476471</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::PSSetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[In, Buffer, Optional] const void** ppSamplers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::PSSetSamplers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.SetConstantBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Sets the constant buffers used by the pixel shader pipeline stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <strong><see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/></strong> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>Number of buffers to set (ranges from 0 to <strong><see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/></strong> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd>  <p>Array of constant buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) being given to the device.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The Direct3D 11.1 runtime, which is available on Windows Developer Preview and later operating systems, can bind a larger number of <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.  </p><p>If the application wants the shader to access other parts of the buffer, it must call the <strong>PSSetConstantBuffers1</strong> method instead. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSSetConstantBuffers']/*"/>	
            <msdn-id>ff476470</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::PSSetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void** ppConstantBuffers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::PSSetConstantBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>	
            <p>Get the pixel shader resources.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</p> </dd></param>	
            <param name="numViews"><dd>  <p>The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="shaderResourceViewsOut"><dd>  <p>Array of <strong>shader resource view</strong> interfaces to be returned by the device.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSGetShaderResources']/*"/>	
            <msdn-id>ff476469</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::PSGetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::PSGetShaderResources</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.GetShader(SharpDX.Direct3D11.PixelShader@,SharpDX.Direct3D11.ClassInstance[],System.Int32@)">
            <summary>	
            <p>Get the pixel shader currently set on the device.</p>	
            </summary>	
            <param name="pixelShaderOut"><dd>  <p>Address of a reference to a pixel shader (see <strong><see cref="T:SharpDX.Direct3D11.PixelShader"/></strong>) to be returned by the method.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>Pointer to an array of class instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>).</p> </dd></param>	
            <param name="numClassInstancesRef"><dd>  <p>The number of class-instance elements in the array.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSGetShader']/*"/>	
            <msdn-id>ff476468</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::PSGetShader([Out] ID3D11PixelShader** ppPixelShader,[Out, Buffer, Optional] ID3D11ClassInstance** ppClassInstances,[InOut] unsigned int* pNumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::PSGetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>	
            <p>Get an array of sampler states from the pixel shader pipeline stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into a zero-based array to begin getting samplers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</p> </dd></param>	
            <param name="numSamplers"><dd>  <p>Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="samplersOut"><dd>  <p>Arry of sampler-state interface references (see <strong><see cref="T:SharpDX.Direct3D11.SamplerState"/></strong>) to be returned by the device.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSGetSamplers']/*"/>	
            <msdn-id>ff476467</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::PSGetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[Out, Buffer, Optional] ID3D11SamplerState** ppSamplers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::PSGetSamplers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            <p>Get the constant buffers used by the pixel shader pipeline stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="constantBuffersOut"><dd>  <p>Array of constant buffer interface references (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) to be returned by the method.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSGetConstantBuffers']/*"/>	
            <msdn-id>ff476466</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::PSGetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::PSGetConstantBuffers</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Predicate">
            <summary>	
            <p>A predicate interface determines whether geometry should be processed depending on the results of a previous draw call.</p>	
            </summary>	
            <remarks>	
            <p>To create a predicate object, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreatePredicate(SharpDX.Direct3D11.QueryDescription,SharpDX.Direct3D11.Predicate)"/></strong>. To set the predicate object, call <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.SetPredication(SharpDX.Direct3D11.Predicate,SharpDX.Bool)"/></strong>.</p><p>There are two types of predicates: stream-output-overflow predicates and occlusion predicates. Stream-output-overflow predicates cause any geometry residing in stream-output buffers that were overflowed to not be processed. Occlusion predicates cause any geometry that did not have a single sample pass the depth/stencil tests to not be processed.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Predicate']/*"/>	
            <msdn-id>ff476577</msdn-id>	
            <unmanaged>ID3D11Predicate</unmanaged>	
            <unmanaged-short>ID3D11Predicate</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Query">
            <summary>	
            <p>A query interface queries information from the GPU.</p>	
            </summary>	
            <remarks>	
            <p>A query can be created with <strong><see cref="M:SharpDX.Direct3D11.Device.CreateQuery(SharpDX.Direct3D11.QueryDescription,SharpDX.Direct3D11.Query)"/></strong>.</p><p>Query data is typically gathered by issuing an <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> command, issuing some graphics commands, issuing an <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong> command, and then calling <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> to get data about what happened in between the Begin and End calls. The data returned by <strong>GetData</strong> will be different depending on the type of query.</p><p>There are, however, some queries that do not require calls to <strong>Begin</strong>. For a list of possible queries see <strong><see cref="T:SharpDX.Direct3D11.QueryType"/></strong>.</p><p>A query is typically executed as shown in the following code:</p><pre><code> <see cref="T:SharpDX.Direct3D11.QueryDescription"/> queryDesc;	
            ... // Fill out queryDesc structure	
            <see cref="T:SharpDX.Direct3D11.Query"/> * pQuery;	
            pDevice-&gt;CreateQuery(&amp;queryDesc, &amp;pQuery);	
            pDeviceContext-&gt;Begin(pQuery); ... // Issue graphics commands pDeviceContext-&gt;End(pQuery);	
            UINT64 queryData; // This data type is different depending on the query type while( <see cref="F:SharpDX.Result.Ok"/> != pDeviceContext-&gt;GetData(pQuery, &amp;queryData, sizeof(UINT64), 0) )	
            {	
            }	
            </code></pre><p>When using a query that does not require a call to <strong>Begin</strong>, it still requires a call to <strong>End</strong>. The call to <strong>End</strong> causes the data returned by <strong>GetData</strong> to be accurate up until the last call to <strong>End</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Query']/*"/>	
            <msdn-id>ff476578</msdn-id>	
            <unmanaged>ID3D11Query</unmanaged>	
            <unmanaged-short>ID3D11Query</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Query.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Query"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Query.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.Query">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.Query"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Query.GetDescription(SharpDX.Direct3D11.QueryDescription@)">
            <summary>	
            <p>Get a query description.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>Pointer to a query description (see <strong><see cref="T:SharpDX.Direct3D11.QueryDescription"/></strong>).</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Query::GetDesc']/*"/>	
            <msdn-id>ff476579</msdn-id>	
            <unmanaged>void ID3D11Query::GetDesc([Out] D3D11_QUERY_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11Query::GetDesc</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Query.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.QueryDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.Query" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The query description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="P:SharpDX.Direct3D11.Query.Description">
            <summary>	
            <p>Get a query description.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Query::GetDesc']/*"/>	
            <msdn-id>ff476579</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11Query::GetDesc([Out] D3D11_QUERY_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Predicate.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Predicate"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Predicate.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.Predicate">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.Predicate"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Predicate.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.QueryDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.Predicate" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The query description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetView">
            <summary>	
            <p>A render-target-view interface identifies the render-target subresources that can be accessed during rendering.</p>	
            </summary>	
            <remarks>	
            <p>To create a render-target view, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateRenderTargetView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.RenderTargetViewDescription},SharpDX.Direct3D11.RenderTargetView)"/></strong>. To bind a render-target view to the pipeline, call <strong><see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargets(System.Int32,System.IntPtr,SharpDX.Direct3D11.DepthStencilView)"/></strong>.</p><p>A rendertarget is a resource that can be written by the output-merger stage at the end of a render pass. Each render-target should also have a corresponding depth-stencil view.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RenderTargetView']/*"/>	
            <msdn-id>ff476582</msdn-id>	
            <unmanaged>ID3D11RenderTargetView</unmanaged>	
            <unmanaged-short>ID3D11RenderTargetView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RenderTargetView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.RenderTargetView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.RenderTargetView.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.RenderTargetView">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.RenderTargetView.GetDescription(SharpDX.Direct3D11.RenderTargetViewDescription@)">
            <summary>	
            <p>Get the properties of a render target view.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>Pointer to the description of a render target view (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/></strong>).</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RenderTargetView::GetDesc']/*"/>	
            <msdn-id>ff476583</msdn-id>	
            <unmanaged>void ID3D11RenderTargetView::GetDesc([Out] D3D11_RENDER_TARGET_VIEW_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11RenderTargetView::GetDesc</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RenderTargetView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.RenderTargetView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.RenderTargetView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">RenderTarget</see> flag.</param>
            <unmanaged>ID3D11Device::CreateRenderTargetView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.RenderTargetView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.RenderTargetViewDescription)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.RenderTargetView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.RenderTargetView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">RenderTarget</see> flag.</param>
            <param name = "description">A structure describing the <see cref = "T:SharpDX.Direct3D11.RenderTargetView" /> to be created.</param>
            <unmanaged>ID3D11Device::CreateRenderTargetView</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.RenderTargetView.Description">
            <summary>	
            <p>Get the properties of a render target view.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RenderTargetView::GetDesc']/*"/>	
            <msdn-id>ff476583</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11RenderTargetView::GetDesc([Out] D3D11_RENDER_TARGET_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.SamplerState">
            <summary>	
            <p>The sampler-state interface holds a description for sampler state that you can bind to any shader stage of the pipeline for reference by texture sample operations.</p>	
            </summary>	
            <remarks>	
            <p>To create a sampler-state object, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateSamplerState(SharpDX.Direct3D11.SamplerStateDescription@,SharpDX.Direct3D11.SamplerState)"/></strong>.</p><p>To bind a sampler-state object to any pipeline shader stage, call the following methods:</p><ul> <li> <strong><see cref="M:SharpDX.Direct3D11.VertexShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)"/></strong> </li> <li> <strong>ID3D11DeviceContext::HSSetSampler</strong> </li> <li> <strong><see cref="M:SharpDX.Direct3D11.DomainShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)"/></strong> </li> <li> <strong><see cref="M:SharpDX.Direct3D11.GeometryShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)"/></strong> </li> <li> <strong><see cref="M:SharpDX.Direct3D11.PixelShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)"/></strong> </li> <li> <strong><see cref="M:SharpDX.Direct3D11.ComputeShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)"/></strong> </li> </ul><p>You can bind the same sampler-state object to multiple shader stages simultaneously.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11SamplerState']/*"/>	
            <msdn-id>ff476588</msdn-id>	
            <unmanaged>ID3D11SamplerState</unmanaged>	
            <unmanaged-short>ID3D11SamplerState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.SamplerState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.SamplerState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.SamplerState.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.SamplerState">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.SamplerState"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.SamplerState.GetDescription(SharpDX.Direct3D11.SamplerStateDescription@)">
            <summary>	
            <p>Gets the description for sampler state that you used to create the sampler-state object.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/></strong> structure that receives a description of the sampler state.</p> </dd></param>	
            <remarks>	
            <p>You use the description for sampler state in a call to the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateSamplerState(SharpDX.Direct3D11.SamplerStateDescription@,SharpDX.Direct3D11.SamplerState)"/></strong> method to create the sampler-state object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11SamplerState::GetDesc']/*"/>	
            <msdn-id>ff476589</msdn-id>	
            <unmanaged>void ID3D11SamplerState::GetDesc([Out] D3D11_SAMPLER_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11SamplerState::GetDesc</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.SamplerState.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.SamplerStateDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.SamplerState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
            <msdn-id>ff476518</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateSamplerState([In] const D3D11_SAMPLER_DESC* pSamplerDesc,[Out, Fast] ID3D11SamplerState** ppSamplerState)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateSamplerState</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.SamplerState.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.SamplerStateDescription@)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.SamplerState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
            <msdn-id>ff476518</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateSamplerState([In] const D3D11_SAMPLER_DESC* pSamplerDesc,[Out, Fast] ID3D11SamplerState** ppSamplerState)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateSamplerState</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.SamplerState.Description">
            <summary>	
            <p>Gets the description for sampler state that you used to create the sampler-state object.</p>	
            </summary>	
            <remarks>	
            <p>You use the description for sampler state in a call to the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateSamplerState(SharpDX.Direct3D11.SamplerStateDescription@,SharpDX.Direct3D11.SamplerState)"/></strong> method to create the sampler-state object.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11SamplerState::GetDesc']/*"/>	
            <msdn-id>ff476589</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11SamplerState::GetDesc([Out] D3D11_SAMPLER_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceView">
            <summary>	
            <p>A shader-resource-view interface specifies the subresources a shader can access during rendering. Examples of shader resources include a constant buffer, a texture buffer, a texture or a sampler.</p>	
            </summary>	
            <remarks>	
            <p>To create a shader-resource view, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>.</p><p>A shader-resource view is required when binding a resource to a shader stage; the binding occurs by calling <strong><see cref="M:SharpDX.Direct3D11.GeometryShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/></strong>, <strong><see cref="M:SharpDX.Direct3D11.VertexShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/></strong> or <strong><see cref="M:SharpDX.Direct3D11.PixelShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ShaderResourceView']/*"/>	
            <msdn-id>ff476628</msdn-id>	
            <unmanaged>ID3D11ShaderResourceView</unmanaged>	
            <unmanaged-short>ID3D11ShaderResourceView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ShaderResourceView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.ShaderResourceView.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.ShaderResourceView">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.ShaderResourceView.GetDescription(SharpDX.Direct3D11.ShaderResourceViewDescription@)">
            <summary>	
            <p>Get the shader resource view's description.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/></strong> structure to be filled with data about the shader resource view.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ShaderResourceView::GetDesc']/*"/>	
            <msdn-id>ff476629</msdn-id>	
            <unmanaged>void ID3D11ShaderResourceView::GetDesc([Out] D3D11_SHADER_RESOURCE_VIEW_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11ShaderResourceView::GetDesc</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ShaderResourceView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.ShaderResourceView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.ShaderResourceView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">ShaderResource</see> flag.</param>
            <msdn-id>ff476519</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateShaderResourceView([In] ID3D11Resource* pResource,[In, Optional] const D3D11_SHADER_RESOURCE_VIEW_DESC* pDesc,[Out, Fast] ID3D11ShaderResourceView** ppSRView)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateShaderResourceView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ShaderResourceView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.ShaderResourceViewDescription)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.ShaderResourceView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.ShaderResourceView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">ShaderResource</see> flag.</param>
            <param name = "description">A structure describing the <see cref = "T:SharpDX.Direct3D11.ShaderResourceView" /> to be created.</param>
            <msdn-id>ff476519</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateShaderResourceView([In] ID3D11Resource* pResource,[In, Optional] const D3D11_SHADER_RESOURCE_VIEW_DESC* pDesc,[Out, Fast] ID3D11ShaderResourceView** ppSRView)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateShaderResourceView</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.ShaderResourceView.Description">
            <summary>	
            <p>Get the shader resource view's description.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ShaderResourceView::GetDesc']/*"/>	
            <msdn-id>ff476629</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11ShaderResourceView::GetDesc([Out] D3D11_SHADER_RESOURCE_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.Texture1D">
            <summary>	
            <p>A 1D texture interface accesses texel data, which is structured memory.</p>	
            </summary>	
            <remarks>	
            <p>To create an empty 1D texture, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateTexture1D(SharpDX.Direct3D11.Texture1DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture1D)"/></strong>. For more details on creating and loading textures, see Creating Texture Resources.</p><p>Textures cannot be bound directly to the pipeline; instead, a view must be created and bound. Using a view, texture data can be interpreted at run time within certain restrictions. To use the texture as a render target or depth-stencil resource, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateRenderTargetView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.RenderTargetViewDescription},SharpDX.Direct3D11.RenderTargetView)"/></strong>, and <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.DepthStencilViewDescription},SharpDX.Direct3D11.DepthStencilView)"/></strong>, respectively. To use the texture as an input to a shader, create a  by calling <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture1D']/*"/>	
            <msdn-id>ff476633</msdn-id>	
            <unmanaged>ID3D11Texture1D</unmanaged>	
            <unmanaged-short>ID3D11Texture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture1D.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Texture1D"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture1D.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.Texture1D">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.Texture1D"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Texture1D.GetDescription(SharpDX.Direct3D11.Texture1DDescription@)">
            <summary>	
            <p>Get the properties of the texture resource.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>Pointer to a resource description (see <strong><see cref="T:SharpDX.Direct3D11.Texture1DDescription"/></strong>).</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture1D::GetDesc']/*"/>	
            <msdn-id>ff476634</msdn-id>	
            <unmanaged>void ID3D11Texture1D::GetDesc([Out] D3D11_TEXTURE1D_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11Texture1D::GetDesc</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture1D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1DDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture1D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture1D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1DDescription,SharpDX.DataStream[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture1D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">An array of initial texture data for each subresource.</param>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture1D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1DDescription,System.IntPtr[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture1D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">An array of initial texture data for each subresource.</param>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture1D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1DDescription,SharpDX.DataBox[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture1D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">An array of initial texture data for each subresource.</param>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture1D.CalculateSubResourceIndex(System.Int32,System.Int32,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:SharpDX.Direct3D11.Texture1D.Description">
            <summary>	
            <p>Get the properties of the texture resource.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture1D::GetDesc']/*"/>	
            <msdn-id>ff476634</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11Texture1D::GetDesc([Out] D3D11_TEXTURE1D_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.Texture2D">
            <summary>	
            <p>A 2D texture interface manages texel data, which is structured memory.</p>	
            </summary>	
            <remarks>	
            <p>To create an empty Texture2D resource, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateTexture2D(SharpDX.Direct3D11.Texture2DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture2D)"/></strong>. For more details on creating and loading textures, see Creating Texture Resources.</p><p>Textures cannot be bound directly to the pipeline; instead, a view must be created and bound. Using a view, texture data can be interpreted at run time within certain restrictions. To use the texture as a render target or depth-stencil resource, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateRenderTargetView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.RenderTargetViewDescription},SharpDX.Direct3D11.RenderTargetView)"/></strong>, and <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.DepthStencilViewDescription},SharpDX.Direct3D11.DepthStencilView)"/></strong>, respectively. To use the texture as an input to a shader, create a  by calling <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture2D']/*"/>	
            <msdn-id>ff476635</msdn-id>	
            <unmanaged>ID3D11Texture2D</unmanaged>	
            <unmanaged-short>ID3D11Texture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture2D.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Texture2D"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture2D.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.Texture2D">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.Texture2D"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Texture2D.GetDescription(SharpDX.Direct3D11.Texture2DDescription@)">
            <summary>	
            <p>Get the properties of the texture resource.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>Pointer to a resource description (see <strong><see cref="T:SharpDX.Direct3D11.Texture2DDescription"/></strong>).</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture2D::GetDesc']/*"/>	
            <msdn-id>ff476636</msdn-id>	
            <unmanaged>void ID3D11Texture2D::GetDesc([Out] D3D11_TEXTURE2D_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11Texture2D::GetDesc</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture2D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2DDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture2D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture2D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2DDescription,SharpDX.DataRectangle[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture2D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">An array of initial texture data for each subresource.</param>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture2D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2DDescription,SharpDX.DataBox[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture2D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">An array of initial texture data for each subresource.</param>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture2D.CalculateSubResourceIndex(System.Int32,System.Int32,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:SharpDX.Direct3D11.Texture2D.Description">
            <summary>	
            <p>Get the properties of the texture resource.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture2D::GetDesc']/*"/>	
            <msdn-id>ff476636</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11Texture2D::GetDesc([Out] D3D11_TEXTURE2D_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.Texture3D">
            <summary>	
            <p>A 3D texture interface accesses texel data, which is structured memory.</p>	
            </summary>	
            <remarks>	
            <p>To create an empty Texture3D resource, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateTexture3D(SharpDX.Direct3D11.Texture3DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture3D)"/></strong>. For more details on creating and loading textures, see Creating Texture Resources.</p><p>Textures cannot be bound directly to the pipeline; instead, a view must be created and bound. Using a view, texture data can be interpreted at run time within certain restrictions. To use the texture as a render target or depth-stencil resource, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateRenderTargetView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.RenderTargetViewDescription},SharpDX.Direct3D11.RenderTargetView)"/></strong>, and <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.DepthStencilViewDescription},SharpDX.Direct3D11.DepthStencilView)"/></strong>, respectively. To use the texture as an input to a shader, create a  by calling <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture3D']/*"/>	
            <msdn-id>ff476637</msdn-id>	
            <unmanaged>ID3D11Texture3D</unmanaged>	
            <unmanaged-short>ID3D11Texture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture3D.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Texture3D"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture3D.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.Texture3D">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.Texture3D"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Texture3D.GetDescription(SharpDX.Direct3D11.Texture3DDescription@)">
            <summary>	
            <p>Get the properties of the texture resource.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>Pointer to a resource description (see <strong><see cref="T:SharpDX.Direct3D11.Texture3DDescription"/></strong>).</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture3D::GetDesc']/*"/>	
            <msdn-id>ff476638</msdn-id>	
            <unmanaged>void ID3D11Texture3D::GetDesc([Out] D3D11_TEXTURE3D_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11Texture3D::GetDesc</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture3D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture3DDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture3D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.Texture3D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture3DDescription,SharpDX.DataBox[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture3D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">An array of initial texture data for each subresource.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.Texture3D.CalculateSubResourceIndex(System.Int32,System.Int32,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:SharpDX.Direct3D11.Texture3D.Description">
            <summary>	
            <p>Get the properties of the texture resource.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture3D::GetDesc']/*"/>	
            <msdn-id>ff476638</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11Texture3D::GetDesc([Out] D3D11_TEXTURE3D_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessView">
            <summary>	
            <p>A view interface specifies the parts of a resource the pipeline can access during rendering.</p>	
            </summary>	
            <remarks>	
            <p>To create a view for an unordered access resource, call  <strong><see cref="M:SharpDX.Direct3D11.Device.CreateUnorderedAccessView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.UnorderedAccessViewDescription},SharpDX.Direct3D11.UnorderedAccessView)"/></strong>.</p><p>All resources must be bound to the pipeline before they can be accessed. Call <strong><see cref="M:SharpDX.Direct3D11.ComputeShaderStage.SetUnorderedAccessViews(System.Int32,SharpDX.Direct3D11.UnorderedAccessView[])"/></strong> to bind an unordered access view to a compute shader; call <strong><see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargetsAndUnorderedAccessViews(System.Int32,SharpDX.Direct3D11.RenderTargetView[],SharpDX.Direct3D11.DepthStencilView,System.Int32,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[])"/></strong> to bind an unordered access view to a pixel shader.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11UnorderedAccessView']/*"/>	
            <msdn-id>ff476639</msdn-id>	
            <unmanaged>ID3D11UnorderedAccessView</unmanaged>	
            <unmanaged-short>ID3D11UnorderedAccessView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.UnorderedAccessView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.UnorderedAccessView.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.UnorderedAccessView">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.UnorderedAccessView.GetDescription(SharpDX.Direct3D11.UnorderedAccessViewDescription@)">
            <summary>	
            <p>Get a description of the resource.</p>	
            </summary>	
            <param name="descRef"><dd>  <p>Pointer to a resource description (see <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/></strong>.)</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11UnorderedAccessView::GetDesc']/*"/>	
            <msdn-id>ff476640</msdn-id>	
            <unmanaged>void ID3D11UnorderedAccessView::GetDesc([Out] D3D11_UNORDERED_ACCESS_VIEW_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11UnorderedAccessView::GetDesc</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.UnorderedAccessView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.UnorderedAccessView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.UnorderedAccessView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">UnorderedAccess</see> flag.</param>
            <unmanaged>ID3D11Device::CreateUnorderedAccessView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.UnorderedAccessView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.UnorderedAccessViewDescription)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.UnorderedAccessView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.UnorderedAccessView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">UnorderedAccess</see> flag.</param>
            <param name = "description">A structure describing the <see cref = "T:SharpDX.Direct3D11.UnorderedAccessView" /> to be created.</param>
            <unmanaged>ID3D11Device::CreateUnorderedAccessView</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.UnorderedAccessView.Description">
            <summary>	
            <p>Get a description of the resource.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11UnorderedAccessView::GetDesc']/*"/>	
            <msdn-id>ff476640</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11UnorderedAccessView::GetDesc([Out] D3D11_UNORDERED_ACCESS_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.UserDefinedAnnotation">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>The <strong><see cref="T:SharpDX.Direct3D11.UserDefinedAnnotation"/></strong> interface enables an application to describe conceptual sections and markers within the application's code flow. An appropriately enabled tool, such as Microsoft Visual Studio?11 Ultimate Beta, can display these sections and markers visually along the tool's Microsoft Direct3D time line, while the tool debugs the application. These visual notes allow users of such a tool to navigate to parts of the time line that are of interest, or to understand what set of Direct3D calls are produced by certain sections of the application's code.</p>	
            </summary>	
            <remarks>	
            <p>The methods of <strong><see cref="T:SharpDX.Direct3D11.UserDefinedAnnotation"/></strong> have no effect when the calling application is not running under a Direct3D-specific profiling tool like Visual Studio?11 Ultimate Beta.	
            </p><p>The <strong><see cref="T:SharpDX.Direct3D11.UserDefinedAnnotation"/></strong> interface is published by Microsoft Direct3D?11 device contexts. Therefore, <strong><see cref="T:SharpDX.Direct3D11.UserDefinedAnnotation"/></strong> has the same threading rules as the <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface, or any other context interface. For more information about Direct3D threading, see MultiThreading.	
            To retrieve the <strong><see cref="T:SharpDX.Direct3D11.UserDefinedAnnotation"/></strong> interface for the context, call the <strong>QueryInterface</strong> method for the context (for example, <strong>ID3D11DeviceContext::QueryInterface</strong>). In this call, you must pass the identifier of <strong><see cref="T:SharpDX.Direct3D11.UserDefinedAnnotation"/></strong>. </p><p>The <strong><see cref="T:SharpDX.Direct3D11.UserDefinedAnnotation"/></strong> interface is the Microsoft Direct3D?10 and later equivalent of the Direct3D 9 PIX functions (D3DPERF_* functions).</p><p><strong>Note</strong>??Setting the <strong><see cref="F:SharpDX.Direct3D11.DeviceCreationFlags.PreventAlteringLayerSettingsFromRegistry"/></strong> flag in your app replaces calling D3DPerf_SetOptions(1). But, to prevent Direct3D debugging tools from hooking your app, your app can also call <strong><see cref="M:SharpDX.Direct3D11.UserDefinedAnnotation.GetStatus"/></strong> to determine whether it is running under a Direct3D debugging tool and then exit accordingly.</p><p>You must call the <strong>BeginEvent</strong> and <strong>EndEvent</strong> methods in pairs; pairs of calls to these methods can nest within pairs of calls to these methods at a higher level in the application's call stack.  In other words, a "Draw World" section can entirely contain another section named "Draw Trees," which can in turn entirely contain a section called "Draw Oaks." You can only associate an <strong>EndEvent</strong> method with the most recent <strong>BeginEvent</strong> method, that is, pairs cannot overlap. You cannot call an <strong>EndEvent</strong> for any <strong>BeginEvent</strong> that preceded the most recent <strong>BeginEvent</strong>. In fact, the runtime interprets the first <strong>EndEvent</strong> as ending the second <strong>BeginEvent</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation']/*"/>	
            <msdn-id>hh446881</msdn-id>	
            <unmanaged>ID3DUserDefinedAnnotation</unmanaged>	
            <unmanaged-short>ID3DUserDefinedAnnotation</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.UserDefinedAnnotation.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.UserDefinedAnnotation"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.UserDefinedAnnotation.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.UserDefinedAnnotation">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.UserDefinedAnnotation"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.UserDefinedAnnotation.BeginEvent(System.String)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Marks the beginning of a section of event code.</p>	
            </summary>	
            <param name="name"><dd> <p>A <strong><c>null</c></strong>-terminated <strong>UNICODE</strong> string that contains the name of the event. The name is not relevant to the operating system. You can choose a name that is meaningful when the calling application is running under the Direct3D profiling tool.A <strong><c>null</c></strong> reference produces undefined results.</p> </dd></param>	
            <returns><p>Returns the number of previous calls to <strong>BeginEvent</strong> that have not yet been finalized by calls to the <strong><see cref="M:SharpDX.Direct3D11.UserDefinedAnnotation.EndEvent"/></strong> method.</p><p>The return value is ?1 if the calling application is not running under a Direct3D profiling tool.</p></returns>	
            <remarks>	
            <p>You call the <strong>EndEvent</strong> method to mark the end of the section of event code.</p><p>A user can visualize the event when the calling application is running under an enabled Direct3D profiling tool such as Microsoft Visual Studio?11 Ultimate Beta.</p><p><strong>BeginEvent</strong> has no effect if the calling application is not running under an enabled Direct3D profiling tool.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation::BeginEvent']/*"/>	
            <msdn-id>hh446884</msdn-id>	
            <unmanaged>int ID3DUserDefinedAnnotation::BeginEvent([In] const wchar_t* Name)</unmanaged>	
            <unmanaged-short>ID3DUserDefinedAnnotation::BeginEvent</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.UserDefinedAnnotation.EndEvent">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Marks the end of a section of event code.</p>	
            </summary>	
            <returns><p>Returns the number of previous calls to the <strong><see cref="M:SharpDX.Direct3D11.UserDefinedAnnotation.BeginEvent(System.String)"/></strong> method that have not yet been finalized by calls to <strong>EndEvent</strong>.</p><p>The return value is ?1 if the calling application is not running under a Direct3D profiling tool.</p></returns>	
            <remarks>	
            <p>You call the <strong>BeginEvent</strong> method to mark the beginning of the section of event code.</p><p>A user can visualize the event when the calling application is running under an enabled Direct3D profiling tool such as Microsoft Visual Studio?11 Ultimate Beta.</p><p><strong>EndEvent</strong> has no effect if the calling application is not running under an enabled Direct3D profiling tool.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation::EndEvent']/*"/>	
            <msdn-id>hh446886</msdn-id>	
            <unmanaged>int ID3DUserDefinedAnnotation::EndEvent()</unmanaged>	
            <unmanaged-short>ID3DUserDefinedAnnotation::EndEvent</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.UserDefinedAnnotation.SetMarker(System.String)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Marks a single point of execution in code.</p>	
            </summary>	
            <param name="name"><dd> <p>A <strong><c>null</c></strong>-terminated <strong>UNICODE</strong> string that contains the name of the marker. The name is not relevant to the operating system. You can choose a name that is meaningful when the calling application is running under the Direct3D profiling tool.A <strong><c>null</c></strong> reference produces undefined results.</p> </dd></param>	
            <remarks>	
            <p>A user can visualize the marker when the calling application is running under an enabled Direct3D profiling tool such as Microsoft Visual Studio?11 Ultimate Beta.</p><p><strong>SetMarker</strong> has no effect if the calling application is not running under an enabled Direct3D profiling tool.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation::SetMarker']/*"/>	
            <msdn-id>hh446898</msdn-id>	
            <unmanaged>void ID3DUserDefinedAnnotation::SetMarker([In] const wchar_t* Name)</unmanaged>	
            <unmanaged-short>ID3DUserDefinedAnnotation::SetMarker</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.UserDefinedAnnotation.GetStatus">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Determines whether the calling application is running under a Microsoft Direct3D profiling tool.</p>	
            </summary>	
            <returns><p>The return value is nonzero if the calling application is running under a Direct3D profiling tool such as Visual Studio?11 Ultimate Beta, and zero otherwise.</p></returns>	
            <remarks>	
            <p>You can call <strong>GetStatus</strong> to determine whether your application is running under a Direct3D profiling tool before you make further calls to other methods of the <strong><see cref="T:SharpDX.Direct3D11.UserDefinedAnnotation"/></strong> interface. For example, the <strong><see cref="M:SharpDX.Direct3D11.UserDefinedAnnotation.BeginEvent(System.String)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.UserDefinedAnnotation.EndEvent"/></strong> methods have no effect if the calling application is not running under an enabled Direct3D profiling tool. Therefore, you do not need to call these methods unless your application is running under a Direct3D profiling tool.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation::GetStatus']/*"/>	
            <msdn-id>hh446889</msdn-id>	
            <unmanaged>BOOL ID3DUserDefinedAnnotation::GetStatus()</unmanaged>	
            <unmanaged-short>ID3DUserDefinedAnnotation::GetStatus</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.UserDefinedAnnotation.Marker">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Marks a single point of execution in code.</p>	
            </summary>	
            <remarks>	
            <p>A user can visualize the marker when the calling application is running under an enabled Direct3D profiling tool such as Microsoft Visual Studio?11 Ultimate Beta.</p><p><strong>SetMarker</strong> has no effect if the calling application is not running under an enabled Direct3D profiling tool.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation::SetMarker']/*"/>	
            <msdn-id>hh446898</msdn-id>	
            <unmanaged>SetMarker</unmanaged>	
            <unmanaged-short>SetMarker</unmanaged-short>	
            <unmanaged>void ID3DUserDefinedAnnotation::SetMarker([In] const wchar_t* Name)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.UserDefinedAnnotation.Status">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Determines whether the calling application is running under a Microsoft Direct3D profiling tool.</p>	
            </summary>	
            <remarks>	
            <p>You can call <strong>GetStatus</strong> to determine whether your application is running under a Direct3D profiling tool before you make further calls to other methods of the <strong><see cref="T:SharpDX.Direct3D11.UserDefinedAnnotation"/></strong> interface. For example, the <strong><see cref="M:SharpDX.Direct3D11.UserDefinedAnnotation.BeginEvent(System.String)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.UserDefinedAnnotation.EndEvent"/></strong> methods have no effect if the calling application is not running under an enabled Direct3D profiling tool. Therefore, you do not need to call these methods unless your application is running under a Direct3D profiling tool.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation::GetStatus']/*"/>	
            <msdn-id>hh446889</msdn-id>	
            <unmanaged>GetStatus</unmanaged>	
            <unmanaged-short>GetStatus</unmanaged-short>	
            <unmanaged>BOOL ID3DUserDefinedAnnotation::GetStatus()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VertexShader">
            <summary>	
            <p>A vertex-shader interface manages an executable program (a vertex shader) that controls the vertex-shader stage.</p>	
            </summary>	
            <remarks>	
            <p>The vertex-shader interface has no methods; use HLSL to implement your shader functionality. All shaders are implemented from a common set of features referred to as the common-shader core..</p><p>To create a vertex shader interface, call <strong><see cref="M:SharpDX.Direct3D11.Device.CreateVertexShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.VertexShader)"/></strong>. Before using a vertex shader you must bind it to the device by calling <strong><see cref="M:SharpDX.Direct3D11.VertexShaderStage.SetShader(SharpDX.Direct3D11.VertexShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)"/></strong>.</p><p>This interface is defined in D3D11.h.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VertexShader']/*"/>	
            <msdn-id>ff476641</msdn-id>	
            <unmanaged>ID3D11VertexShader</unmanaged>	
            <unmanaged-short>ID3D11VertexShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VertexShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShader.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.VertexShader">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.VertexShader"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShader.#ctor(SharpDX.Direct3D11.Device,System.Byte[],SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.VertexShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="T:SharpDX.Direct3D11.VertexShaderStage">
            <summary>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.DeviceContext"/></strong> interface represents a device context which generates rendering commands.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <msdn-id>ff476385</msdn-id>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VertexShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.VertexShaderStage">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.VertexShaderStage"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.SetConstantBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Sets the constant buffers used by the vertex shader pipeline stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <strong><see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/></strong> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>Number of buffers to set (ranges from 0 to <strong><see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/></strong> - <em>StartSlot</em>).</p> </dd></param>	
            <param name="constantBuffersOut"><dd>  <p>Array of constant buffers (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) being given to the device.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, can bind a larger number of <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.  </p><p>If the application wants the shader to access other parts of the buffer, it must call the <strong>VSSetConstantBuffers1</strong> method instead. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSSetConstantBuffers']/*"/>	
            <msdn-id>ff476491</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::VSSetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void** ppConstantBuffers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::VSSetConstantBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.SetShader(SharpDX.Direct3D11.VertexShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)">
            <summary>	
            <p>Set a vertex shader to the device.</p>	
            </summary>	
            <param name="vertexShaderRef"><dd>  <p>Pointer to a vertex shader (see <strong><see cref="T:SharpDX.Direct3D11.VertexShader"/></strong>). Passing in <strong><c>null</c></strong> disables the shader for this pipeline stage.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>A reference to an array of class-instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <strong><c>null</c></strong> if the shader does not use any interfaces.</p> </dd></param>	
            <param name="numClassInstances"><dd>  <p>The number of class-instance interfaces in the array.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The maximum number of instances a shader can have is 256.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSSetShader']/*"/>	
            <msdn-id>ff476493</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::VSSetShader([In, Optional] ID3D11VertexShader* pVertexShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::VSSetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.SetShader(SharpDX.Direct3D11.VertexShader,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance},System.Int32)">
            <summary>	
            <p>Set a vertex shader to the device.</p>	
            </summary>	
            <param name="vertexShaderRef"><dd>  <p>Pointer to a vertex shader (see <strong><see cref="T:SharpDX.Direct3D11.VertexShader"/></strong>). Passing in <strong><c>null</c></strong> disables the shader for this pipeline stage.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>A reference to an array of class-instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <strong><c>null</c></strong> if the shader does not use any interfaces.</p> </dd></param>	
            <param name="numClassInstances"><dd>  <p>The number of class-instance interfaces in the array.</p> </dd></param>	
            <remarks>	
            <p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p><p>The maximum number of instances a shader can have is 256.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSSetShader']/*"/>	
            <msdn-id>ff476493</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::VSSetShader([In, Optional] ID3D11VertexShader* pVertexShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::VSSetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Bind an array of shader resources to the vertex-shader stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting shader resources to (range is from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</p> </dd></param>	
            <param name="numViews"><dd>  <p>Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (range is from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="shaderResourceViewsOut"><dd>  <p>Array of <strong>shader resource view</strong> interfaces to set to the device.</p> </dd></param>	
            <remarks>	
            <p>If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with <strong><c>null</c></strong>.</p><p>For information about creating shader-resource views, see <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>.</p><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSSetShaderResources']/*"/>	
            <msdn-id>ff476494</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::VSSetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[In, Buffer, Optional] const void** ppShaderResourceViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::VSSetShaderResources</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            <p>Set an array of sampler states to the vertex shader pipeline stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin setting samplers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</p> </dd></param>	
            <param name="numSamplers"><dd>  <p>Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="samplersOut"><dd>  <p>Pointer to an array of sampler-state interfaces (see <strong><see cref="T:SharpDX.Direct3D11.SamplerState"/></strong>). See Remarks.</p> </dd></param>	
            <remarks>	
            <p>Any sampler may be set to <strong><c>null</c></strong>; this invokes the default state, which is defined to be the following.</p><pre><code> //Default sampler state:	
            <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/> SamplerDesc;	
            SamplerDesc.Filter = <see cref="F:SharpDX.Direct3D11.Filter.MinMagMipLinear"/>;	
            SamplerDesc.AddressU = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressV = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressW = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.MipLODBias = 0;	
            SamplerDesc.MaxAnisotropy = 1;	
            SamplerDesc.ComparisonFunc = <see cref="F:SharpDX.Direct3D11.Comparison.Never"/>;	
            SamplerDesc.BorderColor[0] = 1.0f;	
            SamplerDesc.BorderColor[1] = 1.0f;	
            SamplerDesc.BorderColor[2] = 1.0f;	
            SamplerDesc.BorderColor[3] = 1.0f;	
            SamplerDesc.MinLOD = -FLT_MAX;	
            SamplerDesc.MaxLOD = FLT_MAX; </code></pre><p> The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSSetSamplers']/*"/>	
            <msdn-id>ff476492</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::VSSetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[In, Buffer, Optional] const void** ppSamplers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::VSSetSamplers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            <p>Get the constant buffers used by the vertex shader pipeline stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</p> </dd></param>	
            <param name="numBuffers"><dd>  <p>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="constantBuffersOut"><dd>  <p>Array of constant buffer interface references (see <strong><see cref="T:SharpDX.Direct3D11.Buffer"/></strong>) to be returned by the method.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSGetConstantBuffers']/*"/>	
            <msdn-id>ff476487</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::VSGetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::VSGetConstantBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.GetShader(SharpDX.Direct3D11.VertexShader@,SharpDX.Direct3D11.ClassInstance[],System.Int32@)">
            <summary>	
            <p>Get the vertex shader currently set on the device.</p>	
            </summary>	
            <param name="vertexShaderOut"><dd>  <p>Address of a reference to a vertex shader (see <strong><see cref="T:SharpDX.Direct3D11.VertexShader"/></strong>) to be returned by the method.</p> </dd></param>	
            <param name="classInstancesOut"><dd>  <p>Pointer to an array of class instance interfaces (see <strong><see cref="T:SharpDX.Direct3D11.ClassInstance"/></strong>).</p> </dd></param>	
            <param name="numClassInstancesRef"><dd>  <p>The number of class-instance elements in the array.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSGetShader']/*"/>	
            <msdn-id>ff476489</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::VSGetShader([Out] ID3D11VertexShader** ppVertexShader,[Out, Buffer, Optional] ID3D11ClassInstance** ppClassInstances,[InOut] unsigned int* pNumClassInstances)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::VSGetShader</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>	
            <p>Get the vertex shader resources.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</p> </dd></param>	
            <param name="numViews"><dd>  <p>The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="shaderResourceViewsOut"><dd>  <p>Array of <strong>shader resource view</strong> interfaces to be returned by the device.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSGetShaderResources']/*"/>	
            <msdn-id>ff476490</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::VSGetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::VSGetShaderResources</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>	
            <p>Get an array of sampler states from the vertex shader pipeline stage.</p>	
            </summary>	
            <param name="startSlot"><dd>  <p>Index into a zero-based array to begin getting samplers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</p> </dd></param>	
            <param name="numSamplers"><dd>  <p>Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</p> </dd></param>	
            <param name="samplersOut"><dd>  <p>Arry of sampler-state interface references (see <strong><see cref="T:SharpDX.Direct3D11.SamplerState"/></strong>) to be returned by the device.</p> </dd></param>	
            <remarks>	
            <p>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSGetSamplers']/*"/>	
            <msdn-id>ff476488</msdn-id>	
            <unmanaged>void ID3D11DeviceContext::VSGetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[Out, Buffer, Optional] ID3D11SamplerState** ppSamplers)</unmanaged>	
            <unmanaged-short>ID3D11DeviceContext::VSGetSamplers</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoContext">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a reference to a DirectX Video Acceleration (DXVA) decoder buffer.</p>	
            </summary>	
            <remarks>	
            <p>The graphics driver allocates the buffers that are used for DXVA decoding. This method locks the Microsoft Direct3D surface that contains the buffer. When you are done using the buffer, call <strong><see cref="M:SharpDX.Direct3D11.VideoContext.ReleaseDecoderBuffer(SharpDX.Direct3D11.VideoDecoder,SharpDX.Direct3D11.VideoDecoderBufferType)"/></strong> to unlock the surface. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext']/*"/>	
            <msdn-id>hh447711</msdn-id>	
            <unmanaged>ID3D11VideoContext</unmanaged>	
            <unmanaged-short>ID3D11VideoContext</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoContext"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.VideoContext">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.VideoContext"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.GetDecoderBuffer(SharpDX.Direct3D11.VideoDecoder,SharpDX.Direct3D11.VideoDecoderBufferType,System.Int32@,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a reference to a DirectX Video Acceleration (DXVA) decoder buffer.</p>	
            </summary>	
            <param name="decoderRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoDecoder"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoder(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@,SharpDX.Direct3D11.VideoDecoder@)"/></strong>.</p> </dd></param>	
            <param name="type"><dd> <p>The type of buffer to retrieve, specified as a member of the <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderBufferType"/></strong> enumeration.</p> </dd></param>	
            <param name="bufferSizeRef"><dd> <p>Receives the size of the buffer, in bytes. </p> </dd></param>	
            <param name="bufferOut"><dd> <p>Receives a reference to the start of the memory buffer. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The graphics driver allocates the buffers that are used for DXVA decoding. This method locks the Microsoft Direct3D surface that contains the buffer. When you are done using the buffer, call <strong><see cref="M:SharpDX.Direct3D11.VideoContext.ReleaseDecoderBuffer(SharpDX.Direct3D11.VideoDecoder,SharpDX.Direct3D11.VideoDecoderBufferType)"/></strong> to unlock the surface. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::GetDecoderBuffer']/*"/>	
            <msdn-id>hh447711</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::GetDecoderBuffer([In] ID3D11VideoDecoder* pDecoder,[In] D3D11_VIDEO_DECODER_BUFFER_TYPE Type,[Out] unsigned int* pBufferSize,[Out, Buffer, Optional] void** ppBuffer)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::GetDecoderBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.ReleaseDecoderBuffer(SharpDX.Direct3D11.VideoDecoder,SharpDX.Direct3D11.VideoDecoderBufferType)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Releases a buffer that was obtained by calling the <strong><see cref="M:SharpDX.Direct3D11.VideoContext.GetDecoderBuffer(SharpDX.Direct3D11.VideoDecoder,SharpDX.Direct3D11.VideoDecoderBufferType,System.Int32@,System.IntPtr)"/></strong> method.</p>	
            </summary>	
            <param name="decoderRef">No documentation.</param>	
            <param name="type">No documentation.</param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::ReleaseDecoderBuffer']/*"/>	
            <msdn-id>hh447716</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::ReleaseDecoderBuffer([In] ID3D11VideoDecoder* pDecoder,[In] D3D11_VIDEO_DECODER_BUFFER_TYPE Type)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::ReleaseDecoderBuffer</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.DecoderBeginFrame(SharpDX.Direct3D11.VideoDecoder,SharpDX.Direct3D11.VideoDecoderOutputView,System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Starts a DirectX Video Acceleration (DXVA) decoding operation to decode a video frame.</p>	
            </summary>	
            <param name="decoderRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoDecoder"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoder(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@,SharpDX.Direct3D11.VideoDecoder@)"/></strong>.</p> </dd></param>	
            <param name="viewRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderOutputView"/></strong> interface. This interface describes the resource that will receive the decoded frame. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoderOutputView(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.VideoDecoderOutputViewDescription@,SharpDX.Direct3D11.VideoDecoderOutputView@)"/></strong>.</p> </dd></param>	
            <param name="contentKeySize"><dd> <p>The size of the content key that is specified in <em>pContentKey</em>. If <em>pContentKey</em> is <c>null</c>, set <em>ContentKeySize</em> to zero.</p> </dd></param>	
            <param name="contentKeyRef"><dd> <p>An optional reference to a content key that was used to encrypt the frame data. If no content key was used, set this parameter to <strong><c>null</c></strong>. If the caller provides a content key, the caller must use the session key to encrypt the content key.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>After this method is called, call <strong><see cref="M:SharpDX.Direct3D11.VideoContext.SubmitDecoderBuffers(SharpDX.Direct3D11.VideoDecoder,System.Int32,SharpDX.Direct3D11.VideoDecoderBufferDescription[])"/></strong> to perform decoding operations. When all decoding operations have been executed, call <strong><see cref="M:SharpDX.Direct3D11.VideoContext.DecoderEndFrame(SharpDX.Direct3D11.VideoDecoder)"/></strong>. </p><p>Each call to <strong>DecoderBeginFrame</strong> must have a matching call to <strong>DecoderEndFrame</strong>, and <strong>DecoderBeginFrame</strong> calls cannot be nested. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::DecoderBeginFrame']/*"/>	
            <msdn-id>hh447705</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::DecoderBeginFrame([In] ID3D11VideoDecoder* pDecoder,[In] ID3D11VideoDecoderOutputView* pView,[In] unsigned int ContentKeySize,[In, Buffer, Optional] const void* pContentKey)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::DecoderBeginFrame</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.DecoderEndFrame(SharpDX.Direct3D11.VideoDecoder)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Signals the end of a DirectX Video Acceleration (DXVA) decoding operation.</p>	
            </summary>	
            <param name="decoderRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoDecoder"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoder(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@,SharpDX.Direct3D11.VideoDecoder@)"/></strong>.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::DecoderEndFrame']/*"/>	
            <msdn-id>hh447706</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::DecoderEndFrame([In] ID3D11VideoDecoder* pDecoder)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::DecoderEndFrame</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.SubmitDecoderBuffers(SharpDX.Direct3D11.VideoDecoder,System.Int32,SharpDX.Direct3D11.VideoDecoderBufferDescription[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Submits one or more buffers for DirectX Video Acceleration (DXVA) decoding.</p>	
            </summary>	
            <param name="decoderRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoDecoder"/></strong> interface. To get this reference, call the <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoder(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@,SharpDX.Direct3D11.VideoDecoder@)"/></strong> method.</p> </dd></param>	
            <param name="numBuffers"><dd> <p>The number of buffers submitted for decoding.</p> </dd></param>	
            <param name="bufferDescRef"><dd> <p>A reference to an array of <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderBufferDescription"/></strong> structures. The <em>NumBuffers</em> parameter specifies the number of elements in the array. Each element in the array describes a compressed buffer for decoding.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::SubmitDecoderBuffers']/*"/>	
            <msdn-id>hh447718</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::SubmitDecoderBuffers([In] ID3D11VideoDecoder* pDecoder,[In] unsigned int NumBuffers,[In, Buffer] const D3D11_VIDEO_DECODER_BUFFER_DESC* pBufferDesc)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::SubmitDecoderBuffers</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.DecoderExtension(SharpDX.Direct3D11.VideoDecoder,SharpDX.Direct3D11.VideoDecoderExtension@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Performs an extended function for DirectX Video Acceleration (DXVA) decoding. This method enables extensions to the basic DXVA decoder functionality.</p>	
            </summary>	
            <param name="decoderRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoDecoder"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoder(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@,SharpDX.Direct3D11.VideoDecoder@)"/></strong>.</p> </dd></param>	
            <param name="extensionDataRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderExtension"/></strong> structure that contains data for the function.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::DecoderExtension']/*"/>	
            <msdn-id>hh447707</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::DecoderExtension([In] ID3D11VideoDecoder* pDecoder,[In] const D3D11_VIDEO_DECODER_EXTENSION* pExtensionData)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::DecoderExtension</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputTargetRect(SharpDX.Direct3D11.VideoProcessor,SharpDX.Bool,System.Nullable{SharpDX.Rectangle})">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the target rectangle for the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="enable"><dd> <p>Specifies whether to apply the target rectangle.</p> </dd></param>	
            <param name="rectRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Rectangle"/></strong> structure that specifies the target rectangle.  If <em>Enable</em> is <strong><see cref="F:SharpDX.Result.False"/></strong>, this parameter is ignored.</p> </dd></param>	
            <remarks>	
            <p>The target rectangle is the area within the destination surface where the output will be drawn. The target rectangle is given in pixel coordinates, relative to the destination surface.</p><p>If this method is never called, or if the <em>Enable</em> parameter is <strong><see cref="F:SharpDX.Result.False"/></strong>, the video processor writes to the entire destination surface.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputTargetRect']/*"/>	
            <msdn-id>hh447752</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetOutputTargetRect([In] ID3D11VideoProcessor* pVideoProcessor,[In] BOOL Enable,[In, Optional] const RECT* pRect)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetOutputTargetRect</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputBackgroundColor(SharpDX.Direct3D11.VideoProcessor,SharpDX.Bool,SharpDX.Direct3D11.VideoColor)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the background color for the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="yCbCr"><dd> <p>If <strong>TRUE</strong>, the color is specified as a YCbCr value. Otherwise, the color is specified as an RGB value.</p> </dd></param>	
            <param name="colorRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoColor"/></strong> structure that specifies the background color.</p> </dd></param>	
            <remarks>	
            <p>The video processor uses the background color to fill areas of the target rectangle that do not contain a video image. Areas outside the target rectangle are not affected.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputBackgroundColor']/*"/>	
            <msdn-id>hh447747</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetOutputBackgroundColor([In] ID3D11VideoProcessor* pVideoProcessor,[In] BOOL YCbCr,[In] const D3D11_VIDEO_COLOR* pColor)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetOutputBackgroundColor</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputColorSpace(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorColorSpace)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the output color space for the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="colorSpaceRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorColorSpace"/></strong> structure that specifies the color space.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputColorSpace']/*"/>	
            <msdn-id>hh447748</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetOutputColorSpace([In] ID3D11VideoProcessor* pVideoProcessor,[In] const D3D11_VIDEO_PROCESSOR_COLOR_SPACE* pColorSpace)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetOutputColorSpace</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputAlphaFillMode(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorAlphaFillMode,System.Int32)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the alpha fill mode for data that the video processor writes to the render target.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="alphaFillMode"><dd> <p>The alpha fill mode, specified as a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorAlphaFillMode"/></strong> value.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of an input stream. This parameter is used if <em>AlphaFillMode</em> is <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.SourceStream"/></strong>. Otherwise, the parameter is ignored.</p> </dd></param>	
            <remarks>	
            <p>To find out which fill modes the device supports, call the <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> method. If the driver reports the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.AlphaFill"/></strong> capability, the driver supports all of the fill modes. Otherwise, the <em>AlphaFillMode</em> parameter must be <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.Opaque"/></strong>. </p><p>The default fill mode is <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.Opaque"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputAlphaFillMode']/*"/>	
            <msdn-id>hh447746</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetOutputAlphaFillMode([In] ID3D11VideoProcessor* pVideoProcessor,[In] D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE AlphaFillMode,[In] unsigned int StreamIndex)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetOutputAlphaFillMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputConstriction(SharpDX.Direct3D11.VideoProcessor,SharpDX.Bool,SharpDX.DrawingSize)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the amount of downsampling to perform on the output.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="enable"><dd> <p>If <strong>TRUE</strong>, downsampling is enabled. Otherwise, downsampling is disabled and the <strong>Size</strong> member is ignored. </p> </dd></param>	
            <param name="size"><dd> <p>The sampling size.</p> </dd></param>	
            <remarks>	
            <p>Downsampling is sometimes used to reduce the quality of premium content when other forms of content protection are not available. By default, downsampling is disabled.</p><p>If the <em>Enable</em> parameter is <strong>TRUE</strong>, the driver downsamples the composed image  to the specified size, and then scales it back to the size of the target rectangle.</p><p>The width and height of <em>Size</em> must be greater than zero. If the size is larger than the target rectangle, downsampling does not occur.</p><p>To use this feature, the driver must support downsampling, indicated by the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Constriction"/></strong> capability flag. To query for this capability, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputConstriction']/*"/>	
            <msdn-id>hh447749</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetOutputConstriction([In] ID3D11VideoProcessor* pVideoProcessor,[In] BOOL Enable,[In] SIZE Size)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetOutputConstriction</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputStereoMode(SharpDX.Direct3D11.VideoProcessor,SharpDX.Bool)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies whether the video processor produces stereo video frames.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="enable"><dd> <p>If <strong>TRUE</strong>, stereo output is enabled. Otherwise, the video processor produces mono video frames.</p> </dd></param>	
            <remarks>	
            <p>By default, the video processor produces mono video frames. If stereo video is enabled,  set the stereo output format by calling <strong><see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamStereoFormat(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool,SharpDX.Direct3D11.VideoProcessorStereoFormat,SharpDX.Bool,SharpDX.Bool,SharpDX.Direct3D11.VideoProcessorStereoFlipMode,System.Int32)"/></strong>.</p><p>To use this feature, the driver must support stereo video, indicated by the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Stereo"/></strong> capability flag. To query for this capability, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputStereoMode']/*"/>	
            <msdn-id>hh447751</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetOutputStereoMode([In] ID3D11VideoProcessor* pVideoProcessor,[In] BOOL Enable)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetOutputStereoMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputExtension(SharpDX.Direct3D11.VideoProcessor,System.Guid,System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets a driver-specific video processing state.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="extensionGuidRef"><dd> <p>A reference to a <see cref="T:System.Guid"/> that identifies the operation. The meaning of this <see cref="T:System.Guid"/> is defined by the graphics driver.</p> </dd></param>	
            <param name="dataSize"><dd> <p>The size of the <em>pData</em> buffer, in bytes.</p> </dd></param>	
            <param name="dataRef"><dd> <p>A reference to a buffer that contains private state data. The method passes this buffer directly to the driver without validation. It is the responsibility of the driver to validate the data.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputExtension']/*"/>	
            <msdn-id>hh447750</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::VideoProcessorSetOutputExtension([In] ID3D11VideoProcessor* pVideoProcessor,[In] const GUID* pExtensionGuid,[In] unsigned int DataSize,[In] void* pData)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetOutputExtension</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputTargetRect(SharpDX.Direct3D11.VideoProcessor,SharpDX.Bool@,SharpDX.Rectangle@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the current target rectangle for the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="enabled"><dd> <p>Receives the value <strong>TRUE</strong> if the target rectangle was explicitly set using the <strong><see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputTargetRect(SharpDX.Direct3D11.VideoProcessor,SharpDX.Bool,System.Nullable{SharpDX.Rectangle})"/></strong> method. Receives the value <see cref="F:SharpDX.Result.False"/> if the target rectangle was disabled or was never set.</p> </dd></param>	
            <param name="rectRef"><dd> <p>If <em>Enabled</em> receives the value <strong>TRUE</strong>, this parameter receives the target rectangle. Otherwise, this parameter is ignored.  </p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputTargetRect']/*"/>	
            <msdn-id>hh447726</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetOutputTargetRect([In] ID3D11VideoProcessor* pVideoProcessor,[Out] BOOL* Enabled,[Out] RECT* pRect)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetOutputTargetRect</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputBackgroundColor(SharpDX.Direct3D11.VideoProcessor,SharpDX.Bool@,SharpDX.Direct3D11.VideoColor@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the current background color for the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="yCbCrRef"><dd> <p>Receives the value <strong>TRUE</strong> if the background color is a YCbCr color, or <strong><see cref="F:SharpDX.Result.False"/></strong> if the background color is an RGB color.</p> </dd></param>	
            <param name="colorRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoColor"/></strong> structure. The method fills in the structure with the background color.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputBackgroundColor']/*"/>	
            <msdn-id>hh447721</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetOutputBackgroundColor([In] ID3D11VideoProcessor* pVideoProcessor,[Out] BOOL* pYCbCr,[Out] D3D11_VIDEO_COLOR* pColor)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetOutputBackgroundColor</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputColorSpace(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorColorSpace@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the current output color space for the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="colorSpaceRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorColorSpace"/></strong> structure. The method fills in the structure with the output color space.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputColorSpace']/*"/>	
            <msdn-id>hh447722</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetOutputColorSpace([In] ID3D11VideoProcessor* pVideoProcessor,[Out] D3D11_VIDEO_PROCESSOR_COLOR_SPACE* pColorSpace)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetOutputColorSpace</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputAlphaFillMode(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorAlphaFillMode@,System.Int32@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the current alpha fill mode for the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="alphaFillModeRef"><dd> <p>Receives the alpha fill mode, as a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorAlphaFillMode"/></strong> value.</p> </dd></param>	
            <param name="streamIndexRef"><dd> <p>If the alpha fill mode is <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.SourceStream"/></strong>, this parameter receives the zero-based index of an input stream. The input stream provides the alpha values for the alpha fill.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputAlphaFillMode']/*"/>	
            <msdn-id>hh447720</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetOutputAlphaFillMode([In] ID3D11VideoProcessor* pVideoProcessor,[Out] D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE* pAlphaFillMode,[Out] unsigned int* pStreamIndex)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetOutputAlphaFillMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputConstriction(SharpDX.Direct3D11.VideoProcessor,SharpDX.Bool@,SharpDX.DrawingSize@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the current level of downsampling that is performed by the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="enabledRef"><dd> <p>Receives the value <strong>TRUE</strong> if downsampling was explicitly enabled using the <strong><see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputConstriction(SharpDX.Direct3D11.VideoProcessor,SharpDX.Bool,SharpDX.DrawingSize)"/></strong> method. Receives the value <strong><see cref="F:SharpDX.Result.False"/></strong> if the downsampling was disabled or was never set.</p> </dd></param>	
            <param name="sizeRef"><dd> <p>If <em>Enabled</em> receives the value <strong>TRUE</strong>, this parameter receives the downsampling size. Otherwise, this parameter is ignored.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputConstriction']/*"/>	
            <msdn-id>hh447723</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetOutputConstriction([In] ID3D11VideoProcessor* pVideoProcessor,[Out] BOOL* pEnabled,[Out] SIZE* pSize)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetOutputConstriction</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputStereoMode(SharpDX.Direct3D11.VideoProcessor,SharpDX.Bool@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the video processor produces stereo video frames.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="enabledRef"><dd> <p>Receives the value <strong>TRUE</strong> if stereo output is enabled, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputStereoMode']/*"/>	
            <msdn-id>hh447725</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetOutputStereoMode([In] ID3D11VideoProcessor* pVideoProcessor,[Out] BOOL* pEnabled)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetOutputStereoMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputExtension(SharpDX.Direct3D11.VideoProcessor,System.Guid,System.Int32,System.IntPtr@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets private state data from the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="extensionGuidRef"><dd> <p>A reference to a <see cref="T:System.Guid"/> that identifies the state. The meaning of this <see cref="T:System.Guid"/> is defined by the graphics driver.</p> </dd></param>	
            <param name="dataSize"><dd> <p>The size of the <em>pData</em> buffer, in bytes.</p> </dd></param>	
            <param name="dataRef"><dd> <p>A reference to a buffer that receives the private state data. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputExtension']/*"/>	
            <msdn-id>hh447724</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::VideoProcessorGetOutputExtension([In] ID3D11VideoProcessor* pVideoProcessor,[In] const GUID* pExtensionGuid,[In] unsigned int DataSize,[Out] void* pData)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetOutputExtension</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamFrameFormat(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoFrameFormat)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies whether an input stream on the video processor contains interlaced or progressive frames.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="frameFormat"><dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.VideoFrameFormat"/></strong> value that specifies the interlacing.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamFrameFormat']/*"/>	
            <msdn-id>hh447759</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamFrameFormat([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] D3D11_VIDEO_FRAME_FORMAT FrameFormat)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamFrameFormat</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamColorSpace(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoProcessorColorSpace)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the color space for an input stream on the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="colorSpaceRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorColorSpace"/></strong> structure that specifies the color space.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamColorSpace']/*"/>	
            <msdn-id>hh447755</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamColorSpace([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] const D3D11_VIDEO_PROCESSOR_COLOR_SPACE* pColorSpace)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamColorSpace</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamOutputRate(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoProcessorOutputRate,SharpDX.Bool,System.Nullable{SharpDX.DXGI.Rational})">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the rate at which the video processor produces output frames for an input stream.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="outputRate"><dd> <p>The output rate, specified as a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorOutputRate"/></strong> value.</p> </dd></param>	
            <param name="repeatFrame"><dd> <p>Specifies how the driver performs frame-rate conversion, if required.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>TRUE</strong></dt> </dl> </td><td> <p>Repeat frames.</p> </td></tr> <tr><td><dl> <dt><strong><see cref="F:SharpDX.Result.False"/></strong></dt> </dl> </td><td> <p>Interpolate frames.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="customRateRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.DXGI.Rational"/></strong> structure. If <em>OutputRate</em> is <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorOutputRate.Custom"/></strong>,  this parameter specifies the exact output rate. Otherwise, this parameter is ignored and can be <strong><c>null</c></strong>.</p> </dd></param>	
            <remarks>	
            <p>The standard output rates are normal frame-rate (<strong><see cref="F:SharpDX.Direct3D11.VideoProcessorOutputRate.Normal"/></strong>) and half frame-rate (<strong><see cref="F:SharpDX.Direct3D11.VideoProcessorOutputRate.Half"/></strong>). In addition, the driver might support custom rates  for rate conversion or inverse telecine. To get the list of custom rates, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCustomRate(System.Int32,System.Int32,SharpDX.Direct3D11.VideoProcessorCustomRate@)"/></strong>.</p><p>Depending on the output rate, the driver might need to convert the frame rate. If so, the value of <em>RepeatFrame</em> controls whether the driver creates interpolated frames or simply repeats input frames.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamOutputRate']/*"/>	
            <msdn-id>hh447761</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamOutputRate([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] D3D11_VIDEO_PROCESSOR_OUTPUT_RATE OutputRate,[In] BOOL RepeatFrame,[In, Optional] const DXGI_RATIONAL* pCustomRate)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamOutputRate</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamSourceRect(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool,System.Nullable{SharpDX.Rectangle})">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the source rectangle for an input stream on the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enable"><dd> <p>Specifies whether to apply the source rectangle.</p> </dd></param>	
            <param name="rectRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Rectangle"/></strong> structure that specifies the source rectangle. If <em>Enable</em> is <strong><see cref="F:SharpDX.Result.False"/></strong>, this parameter is ignored.</p> </dd></param>	
            <remarks>	
            <p>The source rectangle is the portion of the input surface that is  blitted to the destination surface. The source rectangle is given in pixel coordinates, relative to the input surface.</p><p>If this method is never called, or if the <em>Enable</em> parameter is <strong><see cref="F:SharpDX.Result.False"/></strong>, the video processor reads from the entire input surface.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamSourceRect']/*"/>	
            <msdn-id>hh447764</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamSourceRect([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In, Optional] const RECT* pRect)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamSourceRect</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamDestRect(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool,System.Nullable{SharpDX.Rectangle})">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the destination rectangle for an input stream on the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enable"><dd> <p>Specifies whether to apply the destination rectangle.</p> </dd></param>	
            <param name="rectRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Rectangle"/></strong> structure that specifies the destination rectangle. If <em>Enable</em> is <strong><see cref="F:SharpDX.Result.False"/></strong>, this parameter is ignored.</p> </dd></param>	
            <remarks>	
            <p>The destination rectangle is the portion of the output surface that receives the blit for this stream. The destination rectangle is given in pixel coordinates, relative to the output surface.</p><p>The default destination rectangle is an empty rectangle (0, 0, 0, 0). If this method is never called, or if the <em>Enable</em> parameter is <strong><see cref="F:SharpDX.Result.False"/></strong>, no data is written from this stream. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamDestRect']/*"/>	
            <msdn-id>hh447756</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamDestRect([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In, Optional] const RECT* pRect)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamDestRect</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamAlpha(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool,System.Single)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the planar alpha for an input stream on the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enable"><dd> <p>Specifies whether alpha blending is enabled.</p> </dd></param>	
            <param name="alpha"><dd> <p>The planar alpha value. The value can range from 0.0 (transparent) to 1.0 (opaque).  If <em>Enable</em> is <strong><see cref="F:SharpDX.Result.False"/></strong>, this parameter is ignored.</p> </dd></param>	
            <remarks>	
            <p>Alpha blending is disabled by default.  </p><p>For each pixel, the destination color value is computed as follows:</p><p><code>Cd = Cs * (As * Ap * Ae) + Cd * (1.0 - As * Ap * Ae)</code></p><p>where:</p><ul> <li><code>Cd</code> = The color value of the destination pixel</li> <li><code>Cs</code> = The color value of the source pixel</li> <li><code>As</code> = The per-pixel source alpha</li> <li><code>Ap</code> = The planar alpha value</li> <li><code>Ae</code> = The palette-entry alpha value, or 1.0 (see Note)</li> </ul><p><strong>Note</strong>??Palette-entry alpha values apply only to palettized color formats, and only when the device supports the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.AlphaPalette"/></strong> capability. Otherwise, this factor equals 1.0. </p><p>The destination alpha value is computed according to the alpha fill mode. For more information, see <strong><see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputAlphaFillMode(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorAlphaFillMode,System.Int32)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamAlpha']/*"/>	
            <msdn-id>hh447753</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamAlpha([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In] float Alpha)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamAlpha</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamPalette(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Int32,System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the color-palette entries for an input stream on the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="count"><dd> <p>The number of elements in the <em>pEntries</em> array.</p> </dd></param>	
            <param name="entriesRef"><dd> <p>A reference to an array of palette entries. For RGB streams, the palette entries use the <strong>DXGI_FORMAT_B8G8R8A8</strong> representation. For YCbCr streams, the palette entries use the <strong><see cref="F:SharpDX.DXGI.Format.AYUV"/></strong> representation. The caller allocates the array.</p> </dd></param>	
            <remarks>	
            <p>This method applies only to  input streams that have a palettized color format. Palettized formats with 4 bits per pixel (bpp) use the first 16 entries in the list. Formats with 8 bpp use the first 256 entries.</p><p>If a pixel has a palette index greater than the number of entries, the device treats the pixel as white with opaque alpha. For full-range RGB, this value is (255, 255, 255, 255); for YCbCr the value is (255, 235, 128, 128).</p><p>If the driver does not report the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.AlphaPalette"/></strong> capability flag, every palette entry must have an alpha value of 0xFF (opaque). To query for this capability, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamPalette']/*"/>	
            <msdn-id>hh447762</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamPalette([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] unsigned int Count,[In, Buffer, Optional] const unsigned int* pEntries)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamPalette</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamPixelAspectRatio(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool,System.Nullable{SharpDX.DXGI.Rational},System.Nullable{SharpDX.DXGI.Rational})">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the pixel aspect ratio for an input stream on the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enable"><dd> <p>Specifies whether the <em>pSourceAspectRatio</em> and <em>pDestinationAspectRatio</em> parameters contain valid values. Otherwise, the pixel aspect ratios are unspecified.</p> </dd></param>	
            <param name="sourceAspectRatioRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.DXGI.Rational"/></strong> structure that contains the pixel aspect ratio of the source rectangle. If <em>Enable</em> is <strong><see cref="F:SharpDX.Result.False"/></strong>, this parameter can be <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="destinationAspectRatioRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.DXGI.Rational"/></strong> structure that contains the pixel aspect ratio of the destination rectangle. If <em>Enable</em> is <strong><see cref="F:SharpDX.Result.False"/></strong>, this parameter can be <strong><c>null</c></strong>.</p> </dd></param>	
            <remarks>	
            <p>Pixel aspect ratios of the form 0/n and n/0 are not valid.</p><p>The default pixel aspect ratio is 1:1 (square pixels).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamPixelAspectRatio']/*"/>	
            <msdn-id>hh447763</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamPixelAspectRatio([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In, Optional] const DXGI_RATIONAL* pSourceAspectRatio,[In, Optional] const DXGI_RATIONAL* pDestinationAspectRatio)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamPixelAspectRatio</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamLumaKey(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool,System.Single,System.Single)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets the luma key for an input stream on the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enable"><dd> <p>Specifies whether luma keying is enabled.</p> </dd></param>	
            <param name="lower"><dd> <p>The lower bound for the luma key. The valid range is [0?1]. If <em>Enable</em> is <strong><see cref="F:SharpDX.Result.False"/></strong>, this parameter is ignored.</p> </dd></param>	
            <param name="upper"><dd> <p>The upper bound for the luma key. The valid range is [0?1]. If <em>Enable</em> is <strong><see cref="F:SharpDX.Result.False"/></strong>, this parameter is ignored.</p> </dd></param>	
            <remarks>	
            <p>To use this feature, the driver must support luma keying, indicated by the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.LumaKey"/></strong> capability flag. To query for this capability, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong>. In addition, if the input format is RGB, the device must support the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorFormatCaps.RgbLumaKey"/></strong> capability.</p><p>The values of <em>Lower</em> and <em>Upper</em> give the lower and upper bounds of the luma key, using a nominal range of [0...1]. Given a format with <em>n</em> bits per channel, these values are converted to luma values as follows:</p><p><code>val = f * ((1 &lt;&lt; n)-1)</code></p><p>Any pixel whose luma value falls within the upper and lower bounds (inclusive) is treated as transparent.</p><p>For example, if the pixel format uses 8-bit luma, the upper bound is calculated as follows:</p><p><code>BYTE Y = BYTE(max(min(1.0, Upper), 0.0) * 255.0)</code></p><p>Note that the value is clamped to the range [0...1] before multiplying by 255.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamLumaKey']/*"/>	
            <msdn-id>hh447760</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamLumaKey([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In] float Lower,[In] float Upper)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamLumaKey</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamStereoFormat(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool,SharpDX.Direct3D11.VideoProcessorStereoFormat,SharpDX.Bool,SharpDX.Bool,SharpDX.Direct3D11.VideoProcessorStereoFlipMode,System.Int32)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Enables or disables stereo 3D video for an input stream on the video processor. In addition, this method specifies the layout of the video frames in memory.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enable"><dd> <p>Specifies whether stereo 3D is enabled for this stream. If the value is <strong><see cref="F:SharpDX.Result.False"/></strong>, the remaining parameters of this method are ignored.</p> </dd></param>	
            <param name="format"><dd> <p>Specifies the layout of the two stereo views in memory, as a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorStereoFormat"/></strong> value.</p> </dd></param>	
            <param name="leftViewFrame0"><dd> <p>If <strong>TRUE</strong>, frame 0 contains the left view. Otherwise, frame 0 contains the right view. </p> <p>This parameter is ignored for the following stereo formats:</p> <ul> <li><strong><see cref="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.Mono"/> </strong></li> <li><strong><see cref="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.MonoOffset"/></strong></li> </ul> </dd></param>	
            <param name="baseViewFrame0"><dd> <p>If <strong>TRUE</strong>, frame 0 contains the base view. Otherwise, frame 1 contains the base view.</p> <p>This parameter is ignored for the following stereo formats:</p> <ul> <li><strong><see cref="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.Mono"/> </strong></li> <li><strong><see cref="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.MonoOffset"/></strong></li> <li><strong><see cref="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.Separate"/></strong></li> </ul> </dd></param>	
            <param name="flipMode"><dd> <p>A flag from the  <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorStereoFlipMode"/></strong> enumeration, specifying whether one of the views is flipped.</p> </dd></param>	
            <param name="monoOffset"><dd> <p>For <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.MonoOffset"/></strong> format, this parameter specifies how to generate the left and right views:  </p> <ul> <li>If <em>MonoOffset</em> is positive, the right view is shifted to the right by that many pixels, and the left view is shifted to the left by the same amount. </li> <li>If <em>MonoOffset</em> is negative, the right view is shifted to the left by that many pixels, and the left view is shifted to right by the same amount.</li> </ul> <p>If <em>Format</em> is not <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.MonoOffset"/></strong>, this parameter must be zero.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamStereoFormat']/*"/>	
            <msdn-id>hh447765</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamStereoFormat([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In] D3D11_VIDEO_PROCESSOR_STEREO_FORMAT Format,[In] BOOL LeftViewFrame0,[In] BOOL BaseViewFrame0,[In] D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE FlipMode,[In] int MonoOffset)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamStereoFormat</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamAutoProcessingMode(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Enables or disables automatic processing features on the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enable"><dd> <p>If <strong>TRUE</strong>, automatic processing features are enabled. If <strong><see cref="F:SharpDX.Result.False"/></strong>, the driver disables any  extra video processing that it might be performing.</p> </dd></param>	
            <remarks>	
            <p>By default, the driver might perform certain processing tasks automatically during the video processor blit. This method enables the application to disable these extra video processing features. For example, if you provide your own pixel  shader for the video processor, you might want to disable the driver's automatic processing.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamAutoProcessingMode']/*"/>	
            <msdn-id>hh447754</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamAutoProcessingMode([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamAutoProcessingMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamFilter(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoProcessorFilter,SharpDX.Bool,System.Int32)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Enables or disables an image filter for an input stream on the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="filter"><dd> <p>The filter, specified as a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorFilter"/></strong> value.</p> <p>To query which filters the driver supports, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong>.</p> </dd></param>	
            <param name="enable"><dd> <p>Specifies whether to enable the filter.</p> </dd></param>	
            <param name="level"><dd> <p>The filter level. If <em>Enable</em> is <strong><see cref="F:SharpDX.Result.False"/></strong>, this parameter is ignored. </p> <p>To find the valid range of levels for a specified filter, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorFilterRange(SharpDX.Direct3D11.VideoProcessorFilter,SharpDX.Direct3D11.VideoProcessorFilterRange@)"/></strong>.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamFilter']/*"/>	
            <msdn-id>hh447758</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamFilter([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] D3D11_VIDEO_PROCESSOR_FILTER Filter,[In] BOOL Enable,[In] int Level)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamFilter</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamExtension(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Guid,System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets a driver-specific state on a video processing stream.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="extensionGuidRef"><dd> <p>A reference to a <see cref="T:System.Guid"/> that identifies the operation. The meaning of this <see cref="T:System.Guid"/> is defined by the graphics driver.</p> </dd></param>	
            <param name="dataSize"><dd> <p>The size of the <em>pData</em> buffer, in bytes.</p> </dd></param>	
            <param name="dataRef"><dd> <p>A reference to a buffer that contains private state data. The method passes this buffer directly to the driver without validation. It is the responsibility of the driver to validate the data.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamExtension']/*"/>	
            <msdn-id>hh447757</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::VideoProcessorSetStreamExtension([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] const GUID* pExtensionGuid,[In] unsigned int DataSize,[In] void* pData)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamExtension</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamFrameFormat(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoFrameFormat@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the format of an input stream on the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="frameFormatRef"><dd> <p>Receives a <strong><see cref="T:SharpDX.Direct3D11.VideoFrameFormat"/></strong> value that specifies whether the stream contains interlaced or progressive frames.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamFrameFormat']/*"/>	
            <msdn-id>hh447739</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamFrameFormat([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] D3D11_VIDEO_FRAME_FORMAT* pFrameFormat)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamFrameFormat</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamColorSpace(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoProcessorColorSpace@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the color space for an input stream of the video processor. </p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="colorSpaceRef"><dd> <p>Receives a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorColorSpace"/></strong> value that specifies the color space.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamColorSpace']/*"/>	
            <msdn-id>hh447731</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamColorSpace([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] D3D11_VIDEO_PROCESSOR_COLOR_SPACE* pColorSpace)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamColorSpace</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamOutputRate(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoProcessorOutputRate@,SharpDX.Bool@,SharpDX.DXGI.Rational@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the rate at which the video processor produces output frames for an input stream. </p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="outputRateRef"><dd> <p>Receives a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorOutputRate"/></strong> value that specifies the output rate.</p> </dd></param>	
            <param name="repeatFrameRef"><dd> <p>Receives a Boolean value that specifies how the driver performs frame-rate conversion, if required. </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>TRUE</strong></dt> </dl> </td><td> <p>Repeat frames.</p> </td></tr> <tr><td><dl> <dt><strong><see cref="F:SharpDX.Result.False"/></strong></dt> </dl> </td><td> <p>Interpolate frames.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="customRateRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.DXGI.Rational"/></strong> structure. If the output rate is <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorOutputRate.Custom"/></strong>, the method fills in this structure with the exact output rate. Otherwise, this parameter is ignored. </p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamOutputRate']/*"/>	
            <msdn-id>hh447741</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamOutputRate([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] D3D11_VIDEO_PROCESSOR_OUTPUT_RATE* pOutputRate,[Out] BOOL* pRepeatFrame,[Out] DXGI_RATIONAL* pCustomRate)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamOutputRate</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamSourceRect(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool@,SharpDX.Rectangle@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the source rectangle for an input stream on the video processor. </p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enabledRef"><dd> <p>Receives the value <strong>TRUE</strong> if the source rectangle is enabled, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p> </dd></param>	
            <param name="rectRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Rectangle"/></strong> structure that receives the source rectangle.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamSourceRect']/*"/>	
            <msdn-id>hh447744</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamSourceRect([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnabled,[Out] RECT* pRect)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamSourceRect</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamDestRect(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool@,SharpDX.Rectangle@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the destination rectangle for an input stream on the video processor. </p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enabledRef"><dd> <p>Receives the value <strong>TRUE</strong> if the destination rectangle is enabled, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p> </dd></param>	
            <param name="rectRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Rectangle"/></strong> structure that receives the destination rectangle.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamDestRect']/*"/>	
            <msdn-id>hh447733</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamDestRect([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnabled,[Out] RECT* pRect)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamDestRect</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamAlpha(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool@,System.Single@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the planar alpha for an input stream on the video processor. </p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enabledRef"><dd> <p>Receives the value <strong>TRUE</strong> if planar alpha is enabled, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p> </dd></param>	
            <param name="alphaRef"><dd> <p>Receives the planar alpha value. The value can range from 0.0 (transparent) to 1.0 (opaque).</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamAlpha']/*"/>	
            <msdn-id>hh447727</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamAlpha([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnabled,[Out] float* pAlpha)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamAlpha</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamPalette(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Int32,System.Int32[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the color-palette entries for an input stream on the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="count"><dd> <p>The number of entries in the <em>pEntries</em> array.</p> </dd></param>	
            <param name="entriesRef"><dd> <p>A reference to a <strong>UINT</strong> array allocated by the caller. The method fills the array with the palette entries. For RGB streams, the palette entries use the <strong>DXGI_FORMAT_B8G8R8A8</strong> representation. For YCbCr streams, the palette entries use the <strong><see cref="F:SharpDX.DXGI.Format.AYUV"/></strong> representation.</p> </dd></param>	
            <remarks>	
            <p>This method applies only to input streams that have a palettized color format. Palettized formats with 4 bits per pixel (bpp) use 16 palette entries. Formats with 8 bpp use 256 entries.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamPalette']/*"/>	
            <msdn-id>hh447742</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamPalette([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] unsigned int Count,[Out, Buffer] unsigned int* pEntries)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamPalette</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamPixelAspectRatio(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool@,SharpDX.DXGI.Rational@,SharpDX.DXGI.Rational@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the pixel aspect ratio for an input stream on the video processor. </p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enabledRef"><dd> <p>Receives the value <strong>TRUE</strong> if the pixel aspect ratio is specified. Otherwise, receives the value <strong><see cref="F:SharpDX.Result.False"/></strong>.</p> </dd></param>	
            <param name="sourceAspectRatioRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.DXGI.Rational"/></strong> structure. If *<em>pEnabled</em> is <strong>TRUE</strong>, this parameter receives the pixel aspect ratio of the source rectangle.</p> </dd></param>	
            <param name="destinationAspectRatioRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.DXGI.Rational"/></strong> structure. If *<em>pEnabled</em> is <strong>TRUE</strong>, this parameter receives the pixel aspect ratio of the destination rectangle.</p> </dd></param>	
            <remarks>	
            <p>When the method returns, if <em>*pEnabled</em> is <strong>TRUE</strong>, the <em>pSourceAspectRatio</em> and <em>pDestinationAspectRatio</em> parameters contain the pixel aspect ratios. Otherwise, the default pixel aspect ratio is 1:1 (square pixels).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamPixelAspectRatio']/*"/>	
            <msdn-id>hh447743</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamPixelAspectRatio([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnabled,[Out] DXGI_RATIONAL* pSourceAspectRatio,[Out] DXGI_RATIONAL* pDestinationAspectRatio)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamPixelAspectRatio</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamLumaKey(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool@,System.Single@,System.Single@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the luma key for an input stream of the video processor. </p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enabledRef"><dd> <p>Receives the value <strong>TRUE</strong> if luma keying is enabled, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p> </dd></param>	
            <param name="lowerRef"><dd> <p>Receives the lower bound for the luma key. The valid range is [0?1]. </p> </dd></param>	
            <param name="upperRef"><dd> <p>Receives the upper bound for the luma key. The valid range is [0?1]. </p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamLumaKey']/*"/>	
            <msdn-id>hh447740</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamLumaKey([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnabled,[Out] float* pLower,[Out] float* pUpper)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamLumaKey</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamStereoFormat(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool@,SharpDX.Direct3D11.VideoProcessorStereoFormat@,SharpDX.Bool@,SharpDX.Bool@,SharpDX.Direct3D11.VideoProcessorStereoFlipMode@,System.Int32@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the stereo 3D format for an input stream on the video processor</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enableRef"><dd> <p>Receives the value <strong>TRUE</strong> if stereo 3D is enabled for this stream, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise. If the value is <strong><see cref="F:SharpDX.Result.False"/></strong>, ignore the remaining parameters.</p> </dd></param>	
            <param name="formatRef"><dd> <p>Receives a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorStereoFormat"/></strong> value that specifies the layout of the two stereo views in memory.</p> </dd></param>	
            <param name="leftViewFrame0Ref"><dd> <p>Receives a Boolean value.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>TRUE</strong></dt> </dl> </td><td> <p>Frame 0 contains the left view.</p> </td></tr> <tr><td><dl> <dt><strong><see cref="F:SharpDX.Result.False"/></strong></dt> </dl> </td><td> <p>Frame 0 contains the right view.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="baseViewFrame0Ref"><dd> <p>Receives a Boolean value.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>TRUE</strong></dt> </dl> </td><td> <p>Frame 0 contains the base view.</p> </td></tr> <tr><td><dl> <dt><strong><see cref="F:SharpDX.Result.False"/></strong></dt> </dl> </td><td> <p>Frame 1 contains the base view.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="flipModeRef"><dd> <p>Receives a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorStereoFlipMode"/></strong> value. This value specifies whether one of the views is flipped.</p> </dd></param>	
            <param name="monoOffset"><dd> <p>Receives the pixel offset used for <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.MonoOffset"/></strong> format. This parameter is ignored for other stereo formats.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamStereoFormat']/*"/>	
            <msdn-id>hh447745</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamStereoFormat([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnable,[Out] D3D11_VIDEO_PROCESSOR_STEREO_FORMAT* pFormat,[Out] BOOL* pLeftViewFrame0,[Out] BOOL* pBaseViewFrame0,[Out] D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE* pFlipMode,[Out] int* MonoOffset)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamStereoFormat</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamAutoProcessingMode(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether automatic processing features of the video processor are enabled.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="enabledRef"><dd> <p>Receives the value <strong>TRUE</strong> if automatic processing features are enabled, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamAutoProcessingMode']/*"/>	
            <msdn-id>hh447729</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamAutoProcessingMode([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnabled)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamAutoProcessingMode</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamFilter(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoProcessorFilter,SharpDX.Bool@,System.Int32@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the image filter settings for an input stream on the video processor.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="filter"><dd> <p>The filter to query, specified as a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorFilter"/></strong> value. </p> </dd></param>	
            <param name="enabledRef"><dd> <p>Receives the value <strong>TRUE</strong> if the image filter is enabled, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p> </dd></param>	
            <param name="levelRef"><dd> <p>Receives the filter level.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamFilter']/*"/>	
            <msdn-id>hh447737</msdn-id>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamFilter([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] D3D11_VIDEO_PROCESSOR_FILTER Filter,[Out] BOOL* pEnabled,[Out] int* pLevel)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamFilter</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamExtension(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Guid,System.Int32,System.IntPtr@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a driver-specific state for a video processing stream. </p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p> </dd></param>	
            <param name="streamIndex"><dd> <p>The zero-based index of the input stream. To get the maximum number of streams, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>MaxStreamStates</strong> structure member.</p> </dd></param>	
            <param name="extensionGuidRef"><dd> <p>A reference to a <see cref="T:System.Guid"/> that identifies the state. The meaning of this <see cref="T:System.Guid"/> is defined by the graphics driver.</p> </dd></param>	
            <param name="dataSize"><dd> <p>The size of the <em>pData</em> buffer, in bytes.</p> </dd></param>	
            <param name="dataRef"><dd> <p>A reference to a buffer that receives the private state data. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamExtension']/*"/>	
            <msdn-id>hh447735</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::VideoProcessorGetStreamExtension([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] const GUID* pExtensionGuid,[In] unsigned int DataSize,[Out] void* pData)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamExtension</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorBlt(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorOutputView,System.Int32,System.Int32,SharpDX.Direct3D11.VideoProcessorStream[])">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Performs a video processing operation on one or more input samples and writes the result to a Direct3D surface.</p>	
            </summary>	
            <param name="videoProcessorRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. To get this reference, call the <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong> method.</p> </dd></param>	
            <param name="viewRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorOutputView"/></strong> interface for the output surface. The output of the video processing operation will be written to this surface.</p> </dd></param>	
            <param name="outputFrame"><dd> <p>The frame number of the output video frame, indexed from zero. </p> </dd></param>	
            <param name="streamCount"><dd> <p>The number of input streams to process.</p> </dd></param>	
            <param name="streamsRef"><dd> <p>A reference to an array of <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorStream"/></strong> structures that contain information about the input streams. The caller allocates the array and fills in each structure. The number of elements in the array is given in the <em>StreamCount</em> parameter. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The maximum value of <em>StreamCount</em> is given in the <strong>MaxStreamStates</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorCaps"/></strong> structure. The maximum numbr of streams that can be enabled at one time is given in the <strong>MaxInputStreams</strong> member of that structure. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorBlt']/*"/>	
            <msdn-id>hh447719</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::VideoProcessorBlt([In] ID3D11VideoProcessor* pVideoProcessor,[In] ID3D11VideoProcessorOutputView* pView,[In] unsigned int OutputFrame,[In] unsigned int StreamCount,[In, Buffer] const D3D11_VIDEO_PROCESSOR_STREAM* pStreams)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorBlt</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.NegotiateCryptoSessionKeyExchange(SharpDX.Direct3D11.CryptoSession,System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Establishes the session key for a cryptographic session. </p>	
            </summary>	
            <param name="cryptoSessionRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.CryptoSession"/></strong> interface of the cryptographic session.</p> </dd></param>	
            <param name="dataSize"><dd> <p>The size of the <em>pData</em> byte array, in bytes. </p> </dd></param>	
            <param name="dataRef"><dd> <p>A reference to a byte array that contains the encrypted session key. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The key exchange mechanism depends on the type of cryptographic session.</p><p>For RSA Encryption Scheme - Optimal Asymmetric Encryption Padding (RSAES-OAEP), the software decoder generates the secret key, encrypts the secret key by using the public key with RSAES-OAEP, and places the cipher text in the <em>pData</em> parameter. The actual size of the buffer for RSAES-OAEP is 256 bytes.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::NegotiateCryptoSessionKeyExchange']/*"/>	
            <msdn-id>hh447714</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::NegotiateCryptoSessionKeyExchange([In] ID3D11CryptoSession* pCryptoSession,[In] unsigned int DataSize,[Out, Buffer] void* pData)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::NegotiateCryptoSessionKeyExchange</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.EncryptionBlt(SharpDX.Direct3D11.CryptoSession,SharpDX.Direct3D11.Texture2D,SharpDX.Direct3D11.Texture2D,System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Reads encrypted data from a protected surface. </p>	
            </summary>	
            <param name="cryptoSessionRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.CryptoSession"/></strong> interface of the cryptographic session.</p> </dd></param>	
            <param name="srcSurfaceRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.Texture2D"/></strong> interface of the protected surface.</p> </dd></param>	
            <param name="dstSurfaceRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.Texture2D"/></strong> interface of the surface that receives the encrypted data.</p> </dd></param>	
            <param name="iVSize"><dd> <p>A reference to a buffer that receives the initialization vector (IV). The caller allocates this buffer, but the driver generates the IV. </p> <p>For 128-bit AES-CTR encryption, <em>pIV</em> points to a <strong><see cref="T:SharpDX.Direct3D11.AesCtrIv"/></strong> structure. When the driver generates the first IV, it initializes the structure to a random number. For each subsequent IV, the driver simply increments the <strong>IV</strong> member of the structure, ensuring that the value always increases. The application can validate that the same IV is never used more than once with the same key pair.</p> </dd></param>	
            <param name="iVRef"><dd> <p>The size of the <em>pIV</em> buffer, in bytes.</p> </dd></param>	
            <remarks>	
            <p>Not all drivers support this method. To query the driver capabilities, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetContentProtectionCaps(System.Nullable{System.Guid},System.Nullable{System.Guid},SharpDX.Direct3D11.VideoContentProtectionCaps@)"/></strong> and check for the <strong><see cref="F:SharpDX.Direct3D11.ContentProtectionCaps.EncryptedReadBack"/></strong> flag in the <strong>Caps</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.VideoContentProtectionCaps"/></strong> structure.</p><p>Some drivers might require a separate key to decrypt the data that is read back. To check for this requirement, call <strong>GetContentProtectionCaps</strong> and check for the <strong><see cref="F:SharpDX.Direct3D11.ContentProtectionCaps.EncryptedReadBackKey"/></strong> flag. If this flag is present, call <strong><see cref="M:SharpDX.Direct3D11.VideoContext.GetEncryptionBltKey(SharpDX.Direct3D11.CryptoSession,System.Int32,System.IntPtr)"/></strong> to get the decryption key.</p><p>This method has the following limitations:</p><ul> <li>Reading back  subrectangles is not supported.</li> <li>Reading back  partially encrypted surfaces is not supported.</li> <li>The protected surface must be either an offscreen plain surface or a render target.</li> <li>The destination surface must be a system-memory surface, created with the proper alignment.</li> <li>The protected surface cannot be multisampled.</li> <li>Stretching and colorspace conversion are not supported.</li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::EncryptionBlt']/*"/>	
            <msdn-id>hh447709</msdn-id>	
            <unmanaged>void ID3D11VideoContext::EncryptionBlt([In] ID3D11CryptoSession* pCryptoSession,[In] ID3D11Texture2D* pSrcSurface,[In] ID3D11Texture2D* pDstSurface,[In] unsigned int IVSize,[In, Buffer, Optional] void* pIV)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::EncryptionBlt</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.DecryptionBlt(SharpDX.Direct3D11.CryptoSession,SharpDX.Direct3D11.Texture2D,SharpDX.Direct3D11.Texture2D,System.Nullable{SharpDX.Direct3D11.EncryptedBlockInformation},System.Int32,System.IntPtr,System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Writes encrypted data to a protected surface.</p>	
            </summary>	
            <param name="cryptoSessionRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.CryptoSession"/></strong> interface.</p> </dd></param>	
            <param name="srcSurfaceRef"><dd> <p>A reference to the surface that contains the source data.</p> </dd></param>	
            <param name="dstSurfaceRef"><dd> <p>A reference to the protected surface where the encrypted data is written.</p> </dd></param>	
            <param name="encryptedBlockInfoRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.EncryptedBlockInformation"/></strong> structure, or <strong><c>null</c></strong>.</p> <p>If the driver supports partially encrypted buffers,  <em>pEncryptedBlockInfo</em> indicates which portions of the buffer are encrypted.  If the entire surface is encrypted, set this parameter to <strong><c>null</c></strong>. </p> <p>To check whether the driver supports partially encrypted buffers, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetContentProtectionCaps(System.Nullable{System.Guid},System.Nullable{System.Guid},SharpDX.Direct3D11.VideoContentProtectionCaps@)"/></strong> and check for the <strong><see cref="F:SharpDX.Direct3D11.ContentProtectionCaps.PartialDecryption"/> </strong> capabilities flag. If the driver does not support partially encrypted buffers, set this parameter to <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="contentKeySize"><dd> <p>A reference to a buffer that contains a content encryption key, or <strong><c>null</c></strong>. To query whether the driver supports the use of content keys, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetContentProtectionCaps(System.Nullable{System.Guid},System.Nullable{System.Guid},SharpDX.Direct3D11.VideoContentProtectionCaps@)"/></strong> and check for the <strong><see cref="F:SharpDX.Direct3D11.ContentProtectionCaps.ContentKey"/></strong> capabilities flag. </p> <p>If the driver supports content keys, use the content key to encrypt the surface. Encrypt the content key using the session key, and place the  resulting cipher text in <em>pContentKey</em>. If the driver does not support content keys, use the session key to encrypt the surface and set <em>pContentKey</em> to <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="contentKeyRef"><dd> <p>The size of the encrypted content key, in bytes.</p> </dd></param>	
            <param name="iVSize"><dd> <p>A reference to a buffer that contains the initialization vector (IV). </p> <p>For 128-bit AES-CTR encryption, <em>pIV</em> points to a <strong><see cref="T:SharpDX.Direct3D11.AesCtrIv"/></strong> structure. The caller allocates the structure and generates the IV. When you generate the first IV, initialize the structure to a random number. For each subsequent IV, simply increment the <strong>IV</strong> member of the structure, ensuring that the value always increases.  This procedure enables the driver to validate that the same IV is never used more than once with the same key pair.</p> <p>For other encryption types, a different structure might be used, or the encryption might not use an IV.</p> </dd></param>	
            <param name="iVRef"><dd> <p>The size of the <em>pIV</em> buffer, in bytes.</p> </dd></param>	
            <remarks>	
            <p>Not all hardware or drivers support this functionality for all cryptographic types.</p><p>This method does not support writing to subrectangles of the surface.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::DecryptionBlt']/*"/>	
            <msdn-id>hh447708</msdn-id>	
            <unmanaged>void ID3D11VideoContext::DecryptionBlt([In] ID3D11CryptoSession* pCryptoSession,[In] ID3D11Texture2D* pSrcSurface,[In] ID3D11Texture2D* pDstSurface,[In, Optional] D3D11_ENCRYPTED_BLOCK_INFO* pEncryptedBlockInfo,[In] unsigned int ContentKeySize,[In, Buffer, Optional] const void* pContentKey,[In] unsigned int IVSize,[In, Buffer, Optional] void* pIV)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::DecryptionBlt</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.StartSessionKeyRefresh(SharpDX.Direct3D11.CryptoSession,System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a random number that can be used to refresh the session key. </p>	
            </summary>	
            <param name="cryptoSessionRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.CryptoSession"/></strong> interface.</p> </dd></param>	
            <param name="randomNumberSize"><dd> <p>A reference to a byte array that receives a random number.</p> </dd></param>	
            <param name="randomNumberRef"><dd> <p>The size of the <em>pRandomNumber</em> array, in bytes. The size should match the size of the session key.</p> </dd></param>	
            <remarks>	
            <p>To generate a new session key, perform a bitwise <strong>XOR</strong> between the previous session key and the random number. The new session key does not take affect until the application calls <strong><see cref="M:SharpDX.Direct3D11.VideoContext.FinishSessionKeyRefresh(SharpDX.Direct3D11.CryptoSession)"/></strong>.</p><p>To query whether the driver supports this method, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetContentProtectionCaps(System.Nullable{System.Guid},System.Nullable{System.Guid},SharpDX.Direct3D11.VideoContentProtectionCaps@)"/></strong> and check for the <strong><see cref="F:SharpDX.Direct3D11.ContentProtectionCaps.FreshenSessionKey"/></strong> capabilities flag.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::StartSessionKeyRefresh']/*"/>	
            <msdn-id>hh447717</msdn-id>	
            <unmanaged>void ID3D11VideoContext::StartSessionKeyRefresh([In] ID3D11CryptoSession* pCryptoSession,[In] unsigned int RandomNumberSize,[Out, Buffer] void* pRandomNumber)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::StartSessionKeyRefresh</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.FinishSessionKeyRefresh(SharpDX.Direct3D11.CryptoSession)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Switches to a new session key. </p>	
            </summary>	
            <param name="cryptoSessionRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.CryptoSession"/></strong> interface.</p> </dd></param>	
            <remarks>	
            <p>Before calling this method, call <strong><see cref="M:SharpDX.Direct3D11.VideoContext.StartSessionKeyRefresh(SharpDX.Direct3D11.CryptoSession,System.Int32,System.IntPtr)"/></strong>. The <strong>StartSessionKeyRefresh</strong> method gets a random number from the driver, which is used to create a new session key. The new session key does not become active until the application calls <strong>FinishSessionKeyRefresh</strong>. After the application calls <strong>FinishSessionKeyRefresh</strong>, all protected surfaces are encrypted using the new session key. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::FinishSessionKeyRefresh']/*"/>	
            <msdn-id>hh447710</msdn-id>	
            <unmanaged>void ID3D11VideoContext::FinishSessionKeyRefresh([In] ID3D11CryptoSession* pCryptoSession)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::FinishSessionKeyRefresh</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.GetEncryptionBltKey(SharpDX.Direct3D11.CryptoSession,System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the cryptographic key to decrypt the data returned by the <strong><see cref="M:SharpDX.Direct3D11.VideoContext.EncryptionBlt(SharpDX.Direct3D11.CryptoSession,SharpDX.Direct3D11.Texture2D,SharpDX.Direct3D11.Texture2D,System.Int32,System.IntPtr)"/></strong> method.</p>	
            </summary>	
            <param name="cryptoSessionRef">No documentation.</param>	
            <param name="keySize">No documentation.</param>	
            <param name="readbackKeyRef">No documentation.</param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method applies only when the driver requires a separate content key for the <strong>EncryptionBlt</strong> method. For more information, see the Remarks for <strong>EncryptionBlt</strong>.</p><p>Each time this method is called, the driver generates a new key.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::GetEncryptionBltKey']/*"/>	
            <msdn-id>hh447712</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::GetEncryptionBltKey([In] ID3D11CryptoSession* pCryptoSession,[In] unsigned int KeySize,[Out, Buffer] void* pReadbackKey)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::GetEncryptionBltKey</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.NegotiateAuthenticatedChannelKeyExchange(SharpDX.Direct3D11.AuthenticatedChannel,System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Establishes a session key for an authenticated channel. </p>	
            </summary>	
            <param name="channelRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedChannel"/></strong> interface.</p> </dd></param>	
            <param name="dataSize"><dd> <p>The size of the data in the <em>pData</em> array, in bytes.</p> </dd></param>	
            <param name="dataRef"><dd> <p>A reference to a byte array that contains the encrypted session key. The buffer must contain 256 bytes of data, encrypted using RSA Encryption Scheme - Optimal Asymmetric Encryption Padding (RSAES-OAEP).</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::NegotiateAuthenticatedChannelKeyExchange']/*"/>	
            <msdn-id>hh447713</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::NegotiateAuthenticatedChannelKeyExchange([In] ID3D11AuthenticatedChannel* pChannel,[In] unsigned int DataSize,[Out, Buffer] void* pData)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::NegotiateAuthenticatedChannelKeyExchange</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.QueryAuthenticatedChannel(SharpDX.Direct3D11.AuthenticatedChannel,System.Int32,System.IntPtr,System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sends a query to an authenticated channel. </p>	
            </summary>	
            <param name="channelRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedChannel"/></strong> interface.</p> </dd></param>	
            <param name="inputSize"><dd> <p>The size of the <em>pInput</em> array, in bytes.</p> </dd></param>	
            <param name="inputRef"><dd> <p>A reference to a byte array that contains input data for the query. This array always starts with a <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryInput"/></strong> structure. The <strong>QueryType</strong> member of the structure specifies the query and defines the meaning of the rest of the array.</p> </dd></param>	
            <param name="outputSize"><dd> <p>The size of the <em>pOutput</em> array, in bytes.</p> </dd></param>	
            <param name="outputRef"><dd> <p>A reference to a byte array that receives the result of the query. This array always starts with a <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure. The meaning of the rest of the array depends on the query.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::QueryAuthenticatedChannel']/*"/>	
            <msdn-id>hh447715</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::QueryAuthenticatedChannel([In] ID3D11AuthenticatedChannel* pChannel,[In] unsigned int InputSize,[In, Buffer] const void* pInput,[In] unsigned int OutputSize,[Out, Buffer] void* pOutput)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::QueryAuthenticatedChannel</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.ConfigureAuthenticatedChannel(SharpDX.Direct3D11.AuthenticatedChannel,System.Int32,System.IntPtr,SharpDX.Direct3D11.AuthenticatedConfigureOutput@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sends a configuration command to an authenticated channel.</p>	
            </summary>	
            <param name="channelRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedChannel"/></strong> interface.</p> </dd></param>	
            <param name="inputSize"><dd> <p>The size of the <em>pInput</em> array, in bytes.</p> </dd></param>	
            <param name="inputRef"><dd> <p>A reference to a byte array that contains input data for the command. This buffer always starts with a <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedConfigureInput"/></strong> structure. The <strong>ConfigureType</strong> member of the structure specifies the command and defines the meaning of the rest of the buffer.</p> </dd></param>	
            <param name="outputRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedConfigureOutput"/></strong> structure that receives the response to the command.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::ConfigureAuthenticatedChannel']/*"/>	
            <msdn-id>hh447704</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoContext::ConfigureAuthenticatedChannel([In] ID3D11AuthenticatedChannel* pChannel,[In] unsigned int InputSize,[In, Buffer] const void* pInput,[Out] D3D11_AUTHENTICATED_CONFIGURE_OUTPUT* pOutput)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::ConfigureAuthenticatedChannel</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamRotation(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool,SharpDX.Direct3D11.VideoProcessorRotation)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="enable">No documentation.</param>	
            <param name="rotation">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamRotation']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamRotation([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In] D3D11_VIDEO_PROCESSOR_ROTATION Rotation)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorSetStreamRotation</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamRotation(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Bool@,SharpDX.Direct3D11.VideoProcessorRotation@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="enableRef">No documentation.</param>	
            <param name="rotationRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamRotation']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamRotation([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnable,[Out] D3D11_VIDEO_PROCESSOR_ROTATION* pRotation)</unmanaged>	
            <unmanaged-short>ID3D11VideoContext::VideoProcessorGetStreamRotation</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoder">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Represents a hardware-accelerated video decoder for Microsoft Direct3D?11.</p>	
            </summary>	
            <remarks>	
            <p>To get a reference to this interface, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoder(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@,SharpDX.Direct3D11.VideoDecoder@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoder']/*"/>	
            <msdn-id>hh447766</msdn-id>	
            <unmanaged>ID3D11VideoDecoder</unmanaged>	
            <unmanaged-short>ID3D11VideoDecoder</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDecoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoDecoder"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDecoder.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.VideoDecoder">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.VideoDecoder"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDecoder.GetCreationParameters(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the parameters that were used to create the decoder.</p>	
            </summary>	
            <param name="videoDescRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderDescription"/></strong> structure that receives a description of the video stream.</p> </dd></param>	
            <param name="configRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderConfig"/></strong> structure that receives the decoder configuration.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoder::GetCreationParameters']/*"/>	
            <msdn-id>hh447769</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDecoder::GetCreationParameters([Out] D3D11_VIDEO_DECODER_DESC* pVideoDesc,[Out] D3D11_VIDEO_DECODER_CONFIG* pConfig)</unmanaged>	
            <unmanaged-short>ID3D11VideoDecoder::GetCreationParameters</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDecoder.GetDriverHandle(System.IntPtr@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a handle to the driver.</p>	
            </summary>	
            <param name="driverHandleRef"><dd> <p>Receives a handle to the driver.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The driver handle can be used to configure content protection.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoder::GetDriverHandle']/*"/>	
            <msdn-id>hh447780</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDecoder::GetDriverHandle([Out] void** pDriverHandle)</unmanaged>	
            <unmanaged-short>ID3D11VideoDecoder::GetDriverHandle</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoDecoder.DriverHandle">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a handle to the driver.</p>	
            </summary>	
            <remarks>	
            <p>The driver handle can be used to configure content protection.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoder::GetDriverHandle']/*"/>	
            <msdn-id>hh447780</msdn-id>	
            <unmanaged>GetDriverHandle</unmanaged>	
            <unmanaged-short>GetDriverHandle</unmanaged-short>	
            <unmanaged>HRESULT ID3D11VideoDecoder::GetDriverHandle([Out] void** pDriverHandle)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderOutputView">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Identifies the output surfaces that can be accessed during video decoding.</p>	
            </summary>	
            <remarks>	
            <p>To get a reference to this interface, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoderOutputView(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.VideoDecoderOutputViewDescription@,SharpDX.Direct3D11.VideoDecoderOutputView@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoderOutputView']/*"/>	
            <msdn-id>hh447767</msdn-id>	
            <unmanaged>ID3D11VideoDecoderOutputView</unmanaged>	
            <unmanaged-short>ID3D11VideoDecoderOutputView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDecoderOutputView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoDecoderOutputView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDecoderOutputView.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.VideoDecoderOutputView">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.VideoDecoderOutputView"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDecoderOutputView.GetDescription(SharpDX.Direct3D11.VideoDecoderOutputViewDescription@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the properties of the video decoder output view.	
            </p>	
            </summary>	
            <param name="descRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderOutputViewDescription"/></strong> structure. The method fills the structure with the view properties.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoderOutputView::GetDesc']/*"/>	
            <msdn-id>hh447768</msdn-id>	
            <unmanaged>void ID3D11VideoDecoderOutputView::GetDesc([Out] D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11VideoDecoderOutputView::GetDesc</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoDecoderOutputView.Description">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the properties of the video decoder output view.	
            </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoderOutputView::GetDesc']/*"/>	
            <msdn-id>hh447768</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11VideoDecoderOutputView::GetDesc([Out] D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDevice">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Provides the video decoding and video processing capabilities of a Microsoft Direct3D?11 device.</p>	
            </summary>	
            <remarks>	
            <p>The Direct3D?11 device supports this interface. To get a reference to this interface, call <strong>QueryInterface</strong> with an <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong> interface reference.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice']/*"/>	
            <msdn-id>hh447781</msdn-id>	
            <unmanaged>ID3D11VideoDevice</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoDevice"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.VideoDevice">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.VideoDevice"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoder(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@,SharpDX.Direct3D11.VideoDecoder@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a DXVA video decoder device for Microsoft Direct3D?11.</p>	
            </summary>	
            <param name="videoDescRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderDescription"/></strong> structure that describes the video stream and the decoder profile.</p> </dd></param>	
            <param name="configRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderConfig"/></strong> structure that specifies the decoder configuration.</p> </dd></param>	
            <param name="decoderOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoDecoder"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>This method allocates the necessary decoder buffers. </p><p>The <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.ClearState"/></strong> method does not affect the internal state of the video decoder.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateVideoDecoder']/*"/>	
            <msdn-id>hh447786</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateVideoDecoder([In] const D3D11_VIDEO_DECODER_DESC* pVideoDesc,[In] const D3D11_VIDEO_DECODER_CONFIG* pConfig,[Out] ID3D11VideoDecoder** ppDecoder)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::CreateVideoDecoder</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a video processor device for Microsoft Direct3D?11.</p>	
            </summary>	
            <param name="enumRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorEnumerator"/></strong> interface. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorEnumerator(SharpDX.Direct3D11.VideoProcessorContentDescription@,SharpDX.Direct3D11.VideoProcessorEnumerator@)"/></strong>.</p> </dd></param>	
            <param name="rateConversionIndex"><dd> <p>Specifies the frame-rate conversion capabilities for the video processor. The value is a zero-based index that corresponds to the <em>TypeIndex</em> parameter of the <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorRateConversionCaps(System.Int32,SharpDX.Direct3D11.VideoProcessorRateConversionCaps@)"/></strong> method. </p> </dd></param>	
            <param name="videoProcessorOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessor"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.ClearState"/></strong> method does not affect the internal state of the video processor.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateVideoProcessor']/*"/>	
            <msdn-id>hh447788</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateVideoProcessor([In] ID3D11VideoProcessorEnumerator* pEnum,[In] unsigned int RateConversionIndex,[Out] ID3D11VideoProcessor** ppVideoProcessor)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::CreateVideoProcessor</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateAuthenticatedChannel(SharpDX.Direct3D11.AuthenticatedChannelType,SharpDX.Direct3D11.AuthenticatedChannel@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a channel to communicate with the Microsoft Direct3D device or the graphics driver. The channel can be used to send commands and queries for content protection.</p>	
            </summary>	
            <param name="channelType"><dd> <p>Specifies the type of channel, as a member of the <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedChannelType"/></strong> enumeration.</p> </dd></param>	
            <param name="authenticatedChannelOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedChannel"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>If the <em>ChannelType</em> parameter is <strong><see cref="F:SharpDX.Direct3D11.AuthenticatedChannelType.D3D11"/></strong>, the method creates a channel with the Direct3D device. This type of channel does not support authentication.</p><p>If <em>ChannelType</em> is <strong><see cref="F:SharpDX.Direct3D11.AuthenticatedChannelType.DriverSoftware"/></strong> or <strong><see cref="F:SharpDX.Direct3D11.AuthenticatedChannelType.DriverHardware"/></strong>, the method creates an authenticated channel with the graphics driver.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateAuthenticatedChannel']/*"/>	
            <msdn-id>hh447784</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateAuthenticatedChannel([In] D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType,[Out] ID3D11AuthenticatedChannel** ppAuthenticatedChannel)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::CreateAuthenticatedChannel</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateCryptoSession(System.Guid,System.Nullable{System.Guid},System.Guid,SharpDX.Direct3D11.CryptoSession@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a cryptographic session to encrypt video content that is sent to the graphics driver. </p>	
            </summary>	
            <param name="cryptoTypeRef"><dd> <p>A reference to a <see cref="T:System.Guid"/> that specifies the type of encryption to use. The following GUIDs are defined. </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>D3D11_CRYPTO_TYPE_AES128_CTR</strong></dt> </dl> </td><td> <p>128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="decoderProfileRef"><dd> <p>A reference to a <see cref="T:System.Guid"/> that specifies the DirectX Video Acceleration (DXVA) decoding profile. For a list of possible values, see <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)"/></strong>. If DXVA decoding will not be used, set this parameter to <strong><c>null</c></strong>. </p> </dd></param>	
            <param name="keyExchangeTypeRef"><dd> <p>A reference to a <see cref="T:System.Guid"/> that specifies the type of key exchange.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>D3D11_KEY_EXCHANGE_RSAES_OAEP</strong></dt> </dl> </td><td> <p>The caller will create the session key, encrypt it with RSA Encryption Scheme - Optimal Asymmetric Encryption Padding (RSAES-OAEP) by using the driver's public key, and pass the session key to the driver.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="cryptoSessionOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.Direct3D11.CryptoSession"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.ClearState"/></strong> method does not affect the internal state of the cryptographic session.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateCryptoSession']/*"/>	
            <msdn-id>hh447785</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateCryptoSession([In] const GUID* pCryptoType,[In, Optional] const GUID* pDecoderProfile,[In] const GUID* pKeyExchangeType,[Out] ID3D11CryptoSession** ppCryptoSession)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::CreateCryptoSession</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoderOutputView(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.VideoDecoderOutputViewDescription@,SharpDX.Direct3D11.VideoDecoderOutputView@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a resource view for a video decoder, describing the output sample for the decoding operation.</p>	
            </summary>	
            <param name="resourceRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong> interface of the decoder surface. The resource must be created with the <strong><see cref="F:SharpDX.Direct3D11.BindFlags.Decoder"/></strong> flag. See <strong><see cref="T:SharpDX.Direct3D11.BindFlags"/></strong>.</p> </dd></param>	
            <param name="descRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderOutputViewDescription"/></strong> structure that describes the view.</p> </dd></param>	
            <param name="vDOVViewOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderOutputView"/></strong> interface. The caller must release the interface. If this parameter is <strong><c>null</c></strong>, the method checks whether the view is supported, but does not create the view. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>Set the <em>ppVDOVView</em> parameter to <strong><c>null</c></strong> to test whether a view is supported.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateVideoDecoderOutputView']/*"/>	
            <msdn-id>hh447787</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateVideoDecoderOutputView([In] ID3D11Resource* pResource,[In] const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC* pDesc,[Out, Optional] ID3D11VideoDecoderOutputView** ppVDOVView)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::CreateVideoDecoderOutputView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorInputView(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.VideoProcessorEnumerator,SharpDX.Direct3D11.VideoProcessorInputViewDescription,SharpDX.Direct3D11.VideoProcessorInputView@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a resource view for a video processor, describing the input sample for the video processing operation.</p>	
            </summary>	
            <param name="resourceRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong> interface of the input surface.</p> </dd></param>	
            <param name="enumRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorEnumerator"/></strong> interface that specifies the video processor. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorEnumerator(SharpDX.Direct3D11.VideoProcessorContentDescription@,SharpDX.Direct3D11.VideoProcessorEnumerator@)"/></strong>.</p> </dd></param>	
            <param name="descRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorInputViewDescription"/></strong> structure that describes the view.</p> </dd></param>	
            <param name="vPIViewOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorInputView"/></strong> interface. The caller must release the resource. If this parameter is <strong><c>null</c></strong>, the method checks whether the view is supported, but does not create the view. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>Set the <em>ppVPIView</em> parameter to <strong><c>null</c></strong> to test whether a view is supported.</p><p>The surface format is given in the <strong>FourCC</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorInputViewDescription"/></strong> structure. The method fails if the video processor does not support this format as an input sample.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateVideoProcessorInputView']/*"/>	
            <msdn-id>hh447790</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateVideoProcessorInputView([In] ID3D11Resource* pResource,[In] ID3D11VideoProcessorEnumerator* pEnum,[In] const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC* pDesc,[Out, Optional] ID3D11VideoProcessorInputView** ppVPIView)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::CreateVideoProcessorInputView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorOutputView(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.VideoProcessorEnumerator,SharpDX.Direct3D11.VideoProcessorOutputViewDescription,SharpDX.Direct3D11.VideoProcessorOutputView@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Creates a resource view for a video processor, describing the output sample for the video processing operation.</p>	
            </summary>	
            <param name="resourceRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.Resource"/></strong> interface of the output surface. The resource must be created with the <strong><see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/></strong> flag. See <strong><see cref="T:SharpDX.Direct3D11.BindFlags"/></strong>.</p> </dd></param>	
            <param name="enumRef"><dd> <p>A reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorEnumerator"/></strong> interface that specifies the video processor. To get this reference, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorEnumerator(SharpDX.Direct3D11.VideoProcessorContentDescription@,SharpDX.Direct3D11.VideoProcessorEnumerator@)"/></strong>.</p> </dd></param>	
            <param name="descRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorOutputViewDescription"/></strong> structure that describes the view.</p> </dd></param>	
            <param name="vPOViewOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorOutputView"/></strong> interface. The caller must release the resource. If this parameter is <strong><c>null</c></strong>, the method checks whether the view is supported, but does not create the view. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>Set the <em>ppVPOView</em> parameter to <strong><c>null</c></strong> to test whether a view is supported.</p><p>The surface format is given in the <strong>FourCC</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorInputViewDescription"/></strong> structure. The method fails if the video processor does not support this format as an input sample.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateVideoProcessorOutputView']/*"/>	
            <msdn-id>hh447791</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateVideoProcessorOutputView([In] ID3D11Resource* pResource,[In] ID3D11VideoProcessorEnumerator* pEnum,[In] const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC* pDesc,[Out, Optional] ID3D11VideoProcessorOutputView** ppVPOView)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::CreateVideoProcessorOutputView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorEnumerator(SharpDX.Direct3D11.VideoProcessorContentDescription@,SharpDX.Direct3D11.VideoProcessorEnumerator@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Enumerates the video processor capabilities of the driver.</p>	
            </summary>	
            <param name="descRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorContentDescription"/></strong> structure that describes the video content.</p> </dd></param>	
            <param name="enumOut"><dd> <p>Receives a reference to the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorEnumerator"/></strong> interface. The caller must release the interface.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>To create the video processor device, pass the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorEnumerator"/></strong> reference to the <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong> method.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateVideoProcessorEnumerator']/*"/>	
            <msdn-id>hh447789</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateVideoProcessorEnumerator([In] const D3D11_VIDEO_PROCESSOR_CONTENT_DESC* pDesc,[Out] ID3D11VideoProcessorEnumerator** ppEnum)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::CreateVideoProcessorEnumerator</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfileCount">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the number of DirectX Video Acceleration (DXVA) profiles that are supported by the driver.</p>	
            </summary>	
            <returns><p>Returns the number of DXVA profiles.</p></returns>	
            <remarks>	
            <p>To enumerate the profiles, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::GetVideoDecoderProfileCount']/*"/>	
            <msdn-id>hh447796</msdn-id>	
            <unmanaged>unsigned int ID3D11VideoDevice::GetVideoDecoderProfileCount()</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::GetVideoDecoderProfileCount</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a DirectX Video Acceleration (DXVA) profile that is supported by the driver.</p>	
            </summary>	
            <param name="index"><dd> <p>The zero-based index of the DXVA profile. To get the number of profiles that the driver supports, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfileCount"/></strong>.</p> </dd></param>	
            <param name="decoderProfileRef"><dd> <p>Receives a <see cref="T:System.Guid"/> that identifies the profile.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::GetVideoDecoderProfile']/*"/>	
            <msdn-id>hh447795</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::GetVideoDecoderProfile([In] unsigned int Index,[Out] GUID* pDecoderProfile)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::GetVideoDecoderProfile</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CheckVideoDecoderFormat(System.Guid,SharpDX.DXGI.Format,SharpDX.Bool@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Given a DirectX Video Accelaration (DXVA) profile, checks whether the driver supports a specified output format.</p>	
            </summary>	
            <param name="decoderProfileRef"><dd> <p>A reference to a <see cref="T:System.Guid"/> that identifies the DXVA profile. To get the list of supported profiles, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)"/></strong>.</p> </dd></param>	
            <param name="format"><dd> <p>A <strong><see cref="T:SharpDX.DXGI.Format"/></strong> value that specifies the output format. Typical values include <strong><see cref="F:SharpDX.DXGI.Format.NV12"/></strong> and <strong><see cref="F:SharpDX.DXGI.Format.Opaque420"/></strong>.</p> </dd></param>	
            <param name="supportedRef"><dd> <p>Receives the value <strong>TRUE</strong> if the format is supported, or <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>If the driver does not support the DXVA profile given in <em>pDecoderProfile</em>, the method returns <strong>E_INVALIDARG</strong>. If the driver supports the profile, but the DXGI format is not compatible with the profile, the method succeeds but returns the value <strong><see cref="F:SharpDX.Result.False"/></strong> in <em>pSupported</em>. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CheckVideoDecoderFormat']/*"/>	
            <msdn-id>hh447783</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::CheckVideoDecoderFormat([In] const GUID* pDecoderProfile,[In] DXGI_FORMAT Format,[Out] BOOL* pSupported)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::CheckVideoDecoderFormat</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderConfigCount(SharpDX.Direct3D11.VideoDecoderDescription@,System.Int32@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the number of decoder configurations that the driver supports for a specified video description.</p>	
            </summary>	
            <param name="descRef"><dd> <p>A reference to a  <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderDescription"/></strong> structure that describes the video stream.</p> </dd></param>	
            <param name="countRef"><dd> <p>Receives the number of decoder configurations.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>To enumerate the decoder configurations, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderConfig(SharpDX.Direct3D11.VideoDecoderDescription@,System.Int32,SharpDX.Direct3D11.VideoDecoderConfig@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::GetVideoDecoderConfigCount']/*"/>	
            <msdn-id>hh447794</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::GetVideoDecoderConfigCount([In] const D3D11_VIDEO_DECODER_DESC* pDesc,[Out] unsigned int* pCount)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::GetVideoDecoderConfigCount</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderConfig(SharpDX.Direct3D11.VideoDecoderDescription@,System.Int32,SharpDX.Direct3D11.VideoDecoderConfig@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a decoder configuration that is supported by the driver.</p>	
            </summary>	
            <param name="descRef"><dd> <p>A reference to a  <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderDescription"/></strong> structure that describes the video stream.</p> </dd></param>	
            <param name="index"><dd> <p>The zero-based index of the decoder configuration. To get the number of configurations that the driver supports, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderConfigCount(SharpDX.Direct3D11.VideoDecoderDescription@,System.Int32@)"/></strong>.</p> </dd></param>	
            <param name="configRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderConfig"/></strong> structure. The method fills in the structure with the decoder configuration.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::GetVideoDecoderConfig']/*"/>	
            <msdn-id>hh447793</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::GetVideoDecoderConfig([In] const D3D11_VIDEO_DECODER_DESC* pDesc,[In] unsigned int Index,[Out] D3D11_VIDEO_DECODER_CONFIG* pConfig)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::GetVideoDecoderConfig</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.GetContentProtectionCaps(System.Nullable{System.Guid},System.Nullable{System.Guid},SharpDX.Direct3D11.VideoContentProtectionCaps@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries the driver for its content protection capabilities. </p>	
            </summary>	
            <param name="cryptoTypeRef"><dd> <p>A reference to a <see cref="T:System.Guid"/> that specifies the type of encryption to be used. The following GUIDs are defined.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>D3D11_CRYPTO_TYPE_AES128_CTR</strong></dt> </dl> </td><td> <p>128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher.</p> </td></tr> </table> <p>?</p> <p>If no encryption will be used, set this parameter to <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="decoderProfileRef"><dd> <p>A reference to a <see cref="T:System.Guid"/> that specifies the DXVA decoding profile. To get DXVA profiles that the driver supports, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)"/></strong>. If DXVA decoding will not be used, set this parameter to <strong><c>null</c></strong>.</p> <p>The driver might disallow some combinations of encryption type and DXVA profile.</p> </dd></param>	
            <param name="capsRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoContentProtectionCaps"/></strong> structure. The method fills in this structure with the driver's content protection capabilities. </p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::GetContentProtectionCaps']/*"/>	
            <msdn-id>hh447792</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::GetContentProtectionCaps([In, Optional] const GUID* pCryptoType,[In, Optional] const GUID* pDecoderProfile,[Out] D3D11_VIDEO_CONTENT_PROTECTION_CAPS* pCaps)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::GetContentProtectionCaps</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CheckCryptoKeyExchange(System.Guid,System.Nullable{System.Guid},System.Int32,System.Guid@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a cryptographic key-exchange mechanism that is supported by the driver.</p>	
            </summary>	
            <param name="cryptoTypeRef"><dd> <p>A reference to a <see cref="T:System.Guid"/> that specifies the type of encryption to be used. The following GUIDs are defined.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td><dl> <dt><strong>D3D11_CRYPTO_TYPE_AES128_CTR</strong></dt> </dl> </td><td> <p>128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher.</p> </td></tr> </table> <p>?</p> </dd></param>	
            <param name="decoderProfileRef"><dd> <p>A reference to a <see cref="T:System.Guid"/> that specifies the DXVA decoding profile. To get DXVA profiles that the driver supports, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)"/></strong>. If DXVA decoding will not be used, set this parameter to <strong><c>null</c></strong>.</p> </dd></param>	
            <param name="index"><dd> <p>The zero-based index of the key-exchange type. The driver reports the number of types in the <strong>KeyExchangeTypeCount</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.VideoContentProtectionCaps"/></strong> structure.</p> </dd></param>	
            <param name="keyExchangeTypeRef"><dd> <p>Receives a <see cref="T:System.Guid"/> that identifies the type of key exchange.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CheckCryptoKeyExchange']/*"/>	
            <msdn-id>hh447782</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::CheckCryptoKeyExchange([In] const GUID* pCryptoType,[In, Optional] const GUID* pDecoderProfile,[In] unsigned int Index,[Out] GUID* pKeyExchangeType)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::CheckCryptoKeyExchange</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.SetPrivateData(System.Guid,System.Int32,System.IntPtr)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets private data on the video device and associates that data with a <see cref="T:System.Guid"/>.	
            </p>	
            </summary>	
            <param name="guid"><dd> <p>The <see cref="T:System.Guid"/> associated with the data.</p> </dd></param>	
            <param name="dataSize"><dd> <p>The size of the data, in bytes.</p> </dd></param>	
            <param name="dataRef"><dd> <p>A reference to the data.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::SetPrivateData']/*"/>	
            <msdn-id>hh447797</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::SetPrivateData([In] const GUID&amp; guid,[In] unsigned int DataSize,[In, Buffer, Optional] const void* pData)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::SetPrivateData</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.SetPrivateDataInterface(System.Guid,SharpDX.ComObject)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Sets a private <strong><see cref="T:SharpDX.ComObject"/></strong> reference on the video device and associates that reference with a <see cref="T:System.Guid"/>.	
            </p>	
            </summary>	
            <param name="guid">No documentation.</param>	
            <param name="dataRef">No documentation.</param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::SetPrivateDataInterface']/*"/>	
            <msdn-id>hh447798</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoDevice::SetPrivateDataInterface([In] const GUID&amp; guid,[In, Optional] const IUnknown* pData)</unmanaged>	
            <unmanaged-short>ID3D11VideoDevice::SetPrivateDataInterface</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoDevice.VideoDecoderProfileCount">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the number of DirectX Video Acceleration (DXVA) profiles that are supported by the driver.</p>	
            </summary>	
            <remarks>	
            <p>To enumerate the profiles, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::GetVideoDecoderProfileCount']/*"/>	
            <msdn-id>hh447796</msdn-id>	
            <unmanaged>GetVideoDecoderProfileCount</unmanaged>	
            <unmanaged-short>GetVideoDecoderProfileCount</unmanaged-short>	
            <unmanaged>unsigned int ID3D11VideoDevice::GetVideoDecoderProfileCount()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessor">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Represents a video processor for Microsoft Direct3D?11.</p>	
            </summary>	
            <remarks>	
            <p>To get a reference to this interface, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessor']/*"/>	
            <msdn-id>hh447799</msdn-id>	
            <unmanaged>ID3D11VideoProcessor</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessor</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessor.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessor.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.VideoProcessor">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.VideoProcessor"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessor.GetContentDescription(SharpDX.Direct3D11.VideoProcessorContentDescription@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the content description that was used to create the video processor.</p>	
            </summary>	
            <param name="descRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorContentDescription"/></strong> structure that receives the content description.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessor::GetContentDesc']/*"/>	
            <msdn-id>hh447811</msdn-id>	
            <unmanaged>void ID3D11VideoProcessor::GetContentDesc([Out] D3D11_VIDEO_PROCESSOR_CONTENT_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessor::GetContentDesc</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessor.GetRateConversionCaps(SharpDX.Direct3D11.VideoProcessorRateConversionCaps@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the rate conversion capabilities of the video processor.</p>	
            </summary>	
            <param name="capsRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorRateConversionCaps"/></strong> structure that receives the rate conversion capabilities.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessor::GetRateConversionCaps']/*"/>	
            <msdn-id>hh447813</msdn-id>	
            <unmanaged>void ID3D11VideoProcessor::GetRateConversionCaps([Out] D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS* pCaps)</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessor::GetRateConversionCaps</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessor.ContentDescription">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the content description that was used to create the video processor.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessor::GetContentDesc']/*"/>	
            <msdn-id>hh447811</msdn-id>	
            <unmanaged>GetContentDesc</unmanaged>	
            <unmanaged-short>GetContentDesc</unmanaged-short>	
            <unmanaged>void ID3D11VideoProcessor::GetContentDesc([Out] D3D11_VIDEO_PROCESSOR_CONTENT_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessor.RateConversionCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the rate conversion capabilities of the video processor.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessor::GetRateConversionCaps']/*"/>	
            <msdn-id>hh447813</msdn-id>	
            <unmanaged>GetRateConversionCaps</unmanaged>	
            <unmanaged-short>GetRateConversionCaps</unmanaged-short>	
            <unmanaged>void ID3D11VideoProcessor::GetRateConversionCaps([Out] D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS* pCaps)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorEnumerator">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Enumerates the video processor capabilities of a Microsoft Direct3D?11 device.</p>	
            </summary>	
            <remarks>	
            <p>To get a reference to this interface, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorEnumerator(SharpDX.Direct3D11.VideoProcessorContentDescription@,SharpDX.Direct3D11.VideoProcessorEnumerator@)"/></strong>.</p><p>To create an instance of the video processor, pass the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorEnumerator"/></strong> reference to the <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/></strong> method.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator']/*"/>	
            <msdn-id>hh447800</msdn-id>	
            <unmanaged>ID3D11VideoProcessorEnumerator</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorEnumerator</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoProcessorEnumerator"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.VideoProcessorEnumerator">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.VideoProcessorEnumerator"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorContentDescription(SharpDX.Direct3D11.VideoProcessorContentDescription@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the content description that was used to create this enumerator.</p>	
            </summary>	
            <param name="contentDescRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorContentDescription"/></strong> structure that receives the content description.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorContentDesc']/*"/>	
            <msdn-id>hh447803</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorContentDesc([Out] D3D11_VIDEO_PROCESSOR_CONTENT_DESC* pContentDesc)</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorEnumerator::GetVideoProcessorContentDesc</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.CheckVideoProcessorFormat(SharpDX.DXGI.Format,System.Int32@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Queries whether the video processor supports a specified video format.</p>	
            </summary>	
            <param name="format"><dd> <p>The video format to query, specified as a <strong><see cref="T:SharpDX.DXGI.Format"/></strong> value.</p> </dd></param>	
            <param name="flagsRef"><dd> <p>Receives a bitwise <strong>OR</strong> of zero or more flags from the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorFormatSupport"/></strong> enumeration.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::CheckVideoProcessorFormat']/*"/>	
            <msdn-id>hh447801</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::CheckVideoProcessorFormat([In] DXGI_FORMAT Format,[Out] unsigned int* pFlags)</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorEnumerator::CheckVideoProcessorFormat</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the capabilities of the video processor.</p>	
            </summary>	
            <param name="capsRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorCaps"/></strong> structure that receives the capabilities.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps']/*"/>	
            <msdn-id>hh447802</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps([Out] D3D11_VIDEO_PROCESSOR_CAPS* pCaps)</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorRateConversionCaps(System.Int32,SharpDX.Direct3D11.VideoProcessorRateConversionCaps@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Returns a group of video processor capabilities that are associated with frame-rate conversion, including deinterlacing and inverse telecine.</p>	
            </summary>	
            <param name="typeIndex"><dd> <p>The zero-based index of the group to retrieve. To get the maximum index, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> and check the <strong>RateConversionCapsCount</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorCaps"/></strong> structure.</p> </dd></param>	
            <param name="capsRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorRateConversionCaps"/></strong> structure that receives the frame-rate conversion capabilities.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <remarks>	
            <p>The capabilities defined in the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorRateConversionCaps"/></strong> structure are interdependent. Therefore, the driver can support multiple, distinct groups of these capabilities. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorRateConversionCaps']/*"/>	
            <msdn-id>hh447806</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorRateConversionCaps([In] unsigned int TypeIndex,[Out] D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS* pCaps)</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorEnumerator::GetVideoProcessorRateConversionCaps</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCustomRate(System.Int32,System.Int32,SharpDX.Direct3D11.VideoProcessorCustomRate@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets a list of custom frame rates that a video processor supports.</p>	
            </summary>	
            <param name="typeIndex"><dd> <p>The zero-based index of the frame-rate capability group. To get the maxmum index, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> </strong> and check the <strong>RateConversionCapsCount</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorCaps"/></strong> structure.</p> </dd></param>	
            <param name="customRateIndex"><dd> <p>The zero-based index of the custom rate to retrieve. To get the maximum index, call <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorRateConversionCaps(System.Int32,SharpDX.Direct3D11.VideoProcessorRateConversionCaps@)"/></strong> and check the <strong>CustomRateCount</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorRateConversionCaps"/></strong> structure.</p> <p>This index value is always relative to the capability group specified in the <em>TypeIndex</em> parameter.</p> </dd></param>	
            <param name="rateRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorCustomRate"/></strong> structure that receives the custom rate.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorCustomRate']/*"/>	
            <msdn-id>hh447804</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorCustomRate([In] unsigned int TypeIndex,[In] unsigned int CustomRateIndex,[Out] D3D11_VIDEO_PROCESSOR_CUSTOM_RATE* pRate)</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorEnumerator::GetVideoProcessorCustomRate</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorFilterRange(SharpDX.Direct3D11.VideoProcessorFilter,SharpDX.Direct3D11.VideoProcessorFilterRange@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the range of values for an image filter.</p>	
            </summary>	
            <param name="filter"><dd> <p>The type of image filter, specified as a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorFilter"/></strong> value.</p> </dd></param>	
            <param name="rangeRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorFilterRange"/></strong> structure. The method fills the structure with the range of values for the specified filter.</p> </dd></param>	
            <returns><p>If this method succeeds, it returns <strong><see cref="F:SharpDX.Result.Ok"/></strong>. Otherwise, it returns an <strong><see cref="T:SharpDX.Result"/></strong> error code.</p></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorFilterRange']/*"/>	
            <msdn-id>hh447805</msdn-id>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorFilterRange([In] D3D11_VIDEO_PROCESSOR_FILTER Filter,[Out] D3D11_VIDEO_PROCESSOR_FILTER_RANGE* pRange)</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorEnumerator::GetVideoProcessorFilterRange</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorEnumerator.VideoProcessorContentDescription">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the content description that was used to create this enumerator.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorContentDesc']/*"/>	
            <msdn-id>hh447803</msdn-id>	
            <unmanaged>GetVideoProcessorContentDesc</unmanaged>	
            <unmanaged-short>GetVideoProcessorContentDesc</unmanaged-short>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorContentDesc([Out] D3D11_VIDEO_PROCESSOR_CONTENT_DESC* pContentDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorEnumerator.VideoProcessorCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the capabilities of the video processor.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps']/*"/>	
            <msdn-id>hh447802</msdn-id>	
            <unmanaged>GetVideoProcessorCaps</unmanaged>	
            <unmanaged-short>GetVideoProcessorCaps</unmanaged-short>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps([Out] D3D11_VIDEO_PROCESSOR_CAPS* pCaps)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorInputView">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Identifies the input surfaces that can be accessed during video processing.</p>	
            </summary>	
            <remarks>	
            <p>To get a reference to this interface, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorInputView(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.VideoProcessorEnumerator,SharpDX.Direct3D11.VideoProcessorInputViewDescription,SharpDX.Direct3D11.VideoProcessorInputView@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorInputView']/*"/>	
            <msdn-id>hh447807</msdn-id>	
            <unmanaged>ID3D11VideoProcessorInputView</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorInputView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorInputView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoProcessorInputView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorInputView.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.VideoProcessorInputView">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.VideoProcessorInputView"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorInputView.GetDescription(SharpDX.Direct3D11.VideoProcessorInputViewDescription@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the properties of the video processor input view.</p>	
            </summary>	
            <param name="descRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorInputViewDescription"/></strong> structure. The method fills the structure with the view properties.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorInputView::GetDesc']/*"/>	
            <msdn-id>hh447808</msdn-id>	
            <unmanaged>void ID3D11VideoProcessorInputView::GetDesc([Out] D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorInputView::GetDesc</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorInputView.Description">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the properties of the video processor input view.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorInputView::GetDesc']/*"/>	
            <msdn-id>hh447808</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11VideoProcessorInputView::GetDesc([Out] D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorOutputView">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Identifies the output surfaces that can be accessed during video processing.</p>	
            </summary>	
            <remarks>	
            <p>To get a reference to this interface, call <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorOutputView(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.VideoProcessorEnumerator,SharpDX.Direct3D11.VideoProcessorOutputViewDescription,SharpDX.Direct3D11.VideoProcessorOutputView@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorOutputView']/*"/>	
            <msdn-id>hh447809</msdn-id>	
            <unmanaged>ID3D11VideoProcessorOutputView</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorOutputView</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorOutputView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoProcessorOutputView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorOutputView.op_Explicit(System.IntPtr)~SharpDX.Direct3D11.VideoProcessorOutputView">
            <summary>
            Performs an explicit conversion from <see cref="T:System.IntPtr"/> to <see cref="T:SharpDX.Direct3D11.VideoProcessorOutputView"/>. (This method is a shortcut to <see cref="P:SharpDX.CppObject.NativePointer"/>) 
            </summary>
            <param name="nativePointer">The native pointer.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorOutputView.GetDescription(SharpDX.Direct3D11.VideoProcessorOutputViewDescription@)">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the properties of the video processor output view.</p>	
            </summary>	
            <param name="descRef"><dd> <p>A reference to a <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorOutputViewDescription"/></strong> structure. The method fills the structure with the view properties.</p> </dd></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorOutputView::GetDesc']/*"/>	
            <msdn-id>hh447810</msdn-id>	
            <unmanaged>void ID3D11VideoProcessorOutputView::GetDesc([Out] D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC* pDesc)</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorOutputView::GetDesc</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorOutputView.Description">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Gets the properties of the video processor output view.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorOutputView::GetDesc']/*"/>	
            <msdn-id>hh447810</msdn-id>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged-short>GetDesc</unmanaged-short>	
            <unmanaged>void ID3D11VideoProcessorOutputView::GetDesc([Out] D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.AesCtrIv">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains an initialization vector (IV) for 128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher encryption. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AES_CTR_IV']/*"/>	
            <msdn-id>hh447597</msdn-id>	
            <unmanaged>D3D11_AES_CTR_IV</unmanaged>	
            <unmanaged-short>D3D11_AES_CTR_IV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AesCtrIv.Iv">
            <summary>	
            <dd> <p>The IV, in big-endian format.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AES_CTR_IV::IV']/*"/>	
            <msdn-id>hh447597</msdn-id>	
            <unmanaged>unsigned longlong IV</unmanaged>	
            <unmanaged-short>unsigned longlong IV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AesCtrIv.Count">
            <summary>	
            <dd> <p>The block count, in big-endian format.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AES_CTR_IV::Count']/*"/>	
            <msdn-id>hh447597</msdn-id>	
            <unmanaged>unsigned longlong Count</unmanaged>	
            <unmanaged-short>unsigned longlong Count</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureAccessibleEncryptionInput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains input data for a <strong>D3D11_AUTHENTICATED_CONFIGURE_ENCRYPTION_WHEN_ACCESSIBLE</strong> command.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT']/*"/>	
            <msdn-id>hh447600</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureAccessibleEncryptionInput.Parameters">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedConfigureInput"/></strong> structure that contains the command <see cref="T:System.Guid"/> and other data. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT::Parameters']/*"/>	
            <msdn-id>hh447600</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureAccessibleEncryptionInput.EncryptionGuid">
            <summary>	
            <dd> <p>A <see cref="T:System.Guid"/> that specifies the type of encryption to apply.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT::EncryptionGuid']/*"/>	
            <msdn-id>hh447600</msdn-id>	
            <unmanaged>GUID EncryptionGuid</unmanaged>	
            <unmanaged-short>GUID EncryptionGuid</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureCryptoSessionInput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains input data for a <strong>D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION</strong> command.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT']/*"/>	
            <msdn-id>hh447601</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureCryptoSessionInput.Parameters">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedConfigureInput"/></strong> structure that contains the command <see cref="T:System.Guid"/> and other data. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::Parameters']/*"/>	
            <msdn-id>hh447601</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureCryptoSessionInput.DecoderHandle">
            <summary>	
            <dd> <p>A handle to the decoder device.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::DecoderHandle']/*"/>	
            <msdn-id>hh447601</msdn-id>	
            <unmanaged>void* DecoderHandle</unmanaged>	
            <unmanaged-short>void DecoderHandle</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureCryptoSessionInput.CryptoSessionHandle">
            <summary>	
            <dd> <p>A handle to the cryptographic session.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::CryptoSessionHandle']/*"/>	
            <msdn-id>hh447601</msdn-id>	
            <unmanaged>void* CryptoSessionHandle</unmanaged>	
            <unmanaged-short>void CryptoSessionHandle</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureCryptoSessionInput.DeviceHandle">
            <summary>	
            <dd> <p>A handle to the Direct3D device.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::DeviceHandle']/*"/>	
            <msdn-id>hh447601</msdn-id>	
            <unmanaged>void* DeviceHandle</unmanaged>	
            <unmanaged-short>void DeviceHandle</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureInitializeInput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains input data for a <strong>D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE</strong> command.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT']/*"/>	
            <msdn-id>hh447602</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInitializeInput.Parameters">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedConfigureInput"/></strong> structure that contains the command <see cref="T:System.Guid"/> and other data. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT::Parameters']/*"/>	
            <msdn-id>hh447602</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInitializeInput.StartSequenceQuery">
            <summary>	
            <dd> <p>The initial sequence number for queries.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT::StartSequenceQuery']/*"/>	
            <msdn-id>hh447602</msdn-id>	
            <unmanaged>unsigned int StartSequenceQuery</unmanaged>	
            <unmanaged-short>unsigned int StartSequenceQuery</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInitializeInput.StartSequenceConfigure">
            <summary>	
            <dd> <p>The initial sequence number for commands.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT::StartSequenceConfigure']/*"/>	
            <msdn-id>hh447602</msdn-id>	
            <unmanaged>unsigned int StartSequenceConfigure</unmanaged>	
            <unmanaged-short>unsigned int StartSequenceConfigure</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureInput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains input data for the <strong><see cref="M:SharpDX.Direct3D11.VideoContext.ConfigureAuthenticatedChannel(SharpDX.Direct3D11.AuthenticatedChannel,System.Int32,System.IntPtr,SharpDX.Direct3D11.AuthenticatedConfigureOutput@)"/></strong> method.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INPUT']/*"/>	
            <msdn-id>hh447603</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CONFIGURE_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInput.Omac">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INPUT::omac']/*"/>	
            <unmanaged>D3D11_OMAC omac</unmanaged>	
            <unmanaged-short>D3D11_OMAC omac</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInput.ConfigureType">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INPUT::ConfigureType']/*"/>	
            <unmanaged>GUID ConfigureType</unmanaged>	
            <unmanaged-short>GUID ConfigureType</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInput.HChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INPUT::hChannel']/*"/>	
            <unmanaged>void* hChannel</unmanaged>	
            <unmanaged-short>void hChannel</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInput.SequenceNumber">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INPUT::SequenceNumber']/*"/>	
            <unmanaged>unsigned int SequenceNumber</unmanaged>	
            <unmanaged-short>unsigned int SequenceNumber</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Contains the response from the <strong><see cref="M:SharpDX.Direct3D11.VideoContext.ConfigureAuthenticatedChannel(SharpDX.Direct3D11.AuthenticatedChannel,System.Int32,System.IntPtr,SharpDX.Direct3D11.AuthenticatedConfigureOutput@)"/></strong> method.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_OUTPUT']/*"/>	
            <msdn-id>hh447604</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CONFIGURE_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureOutput.Omac">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::omac']/*"/>	
            <unmanaged>D3D11_OMAC omac</unmanaged>	
            <unmanaged-short>D3D11_OMAC omac</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureOutput.ConfigureType">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::ConfigureType']/*"/>	
            <unmanaged>GUID ConfigureType</unmanaged>	
            <unmanaged-short>GUID ConfigureType</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureOutput.HChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::hChannel']/*"/>	
            <unmanaged>void* hChannel</unmanaged>	
            <unmanaged-short>void hChannel</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureOutput.SequenceNumber">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::SequenceNumber']/*"/>	
            <unmanaged>unsigned int SequenceNumber</unmanaged>	
            <unmanaged-short>unsigned int SequenceNumber</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureOutput.ReturnCode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::ReturnCode']/*"/>	
            <unmanaged>HRESULT ReturnCode</unmanaged>	
            <unmanaged-short>HRESULT ReturnCode</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureProtectionInput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains input data for a <strong>D3D11_AUTHENTICATED_CONFIGURE_PROTECTION</strong> command.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT']/*"/>	
            <msdn-id>hh447598</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureProtectionInput.Parameters">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedConfigureInput"/></strong> structure that contains the command <see cref="T:System.Guid"/> and other data. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT::Parameters']/*"/>	
            <msdn-id>hh447598</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureProtectionInput.Protections">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedProtectionFlags"/></strong> union that specifies the protection level.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT::Protections']/*"/>	
            <msdn-id>hh447598</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_PROTECTION_FLAGS Protections</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_PROTECTION_FLAGS Protections</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureSharedResourceInput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains input data for a <strong>D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE</strong> command.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT']/*"/>	
            <msdn-id>hh447605</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureSharedResourceInput.Parameters">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedConfigureInput"/></strong> structure that contains the command <see cref="T:System.Guid"/> and other data. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::Parameters']/*"/>	
            <msdn-id>hh447605</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureSharedResourceInput.ProcessType">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType"/></strong> value that specifies the type of process. To specify the Desktop Window Manager (DWM) process, set this member to <strong><see cref="F:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType.ProcessidtypeDwm"/></strong>. Otherwise, set this member to <strong><see cref="F:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType.ProcessidtypeHandle"/></strong> and set the <strong>ProcessHandle</strong> member to a valid handle.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::ProcessType']/*"/>	
            <msdn-id>hh447605</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE ProcessType</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE ProcessType</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureSharedResourceInput.ProcessHandle">
            <summary>	
            <dd> <p>A process handle. If the <strong>ProcessIdentifier</strong> member equals <strong><see cref="F:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType.ProcessidtypeHandle"/></strong>, the <strong>ProcessHandle</strong> member specifies a handle to a process. Otherwise, the value is ignored.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::ProcessHandle']/*"/>	
            <msdn-id>hh447605</msdn-id>	
            <unmanaged>void* ProcessHandle</unmanaged>	
            <unmanaged-short>void ProcessHandle</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureSharedResourceInput.AllowAccess">
            <summary>	
            <dd> <p>If <strong>TRUE</strong>, the specified process has access to restricted shared resources.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::AllowAccess']/*"/>	
            <msdn-id>hh447605</msdn-id>	
            <unmanaged>BOOL AllowAccess</unmanaged>	
            <unmanaged-short>BOOL AllowAccess</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedProtectionFlags">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Specifies the protection level for video content.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS']/*"/>	
            <msdn-id>hh447607</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_PROTECTION_FLAGS</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_PROTECTION_FLAGS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedProtectionFlags.Flags">
            <summary>	
            <dd> <dl> <dt><strong>ProtectionEnabled</strong></dt> <dd> <p>If 1, video content protection is enabled. </p> </dd> <dt><strong>OverlayOrFullscreenRequired</strong></dt> <dd> <p>If 1, the application requires video to be displayed using either a hardware overlay or full-screen exclusive mode.</p> </dd> <dt><strong>Reserved </strong></dt> <dd> <p>Reserved. Set all bits to zero. </p> </dd> </dl> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS::Flags']/*"/>	
            <msdn-id>hh447607</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER Flags</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER Flags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedProtectionFlags.Value">
            <summary>	
            <dd> <p>Use this member to access all of the bits in the union. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS::Value']/*"/>	
            <msdn-id>hh447607</msdn-id>	
            <unmanaged>unsigned int Value</unmanaged>	
            <unmanaged-short>unsigned int Value</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedProtectionFlagsMidlMidlItfD3d11000000340001Inner">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.AuthenticatedProtectionFlagsMidlMidlItfD3d11000000340001Inner.ProtectionEnabled">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER::ProtectionEnabled']/*"/>	
            <unmanaged>unsigned int ProtectionEnabled</unmanaged>	
            <unmanaged-short>unsigned int ProtectionEnabled</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.AuthenticatedProtectionFlagsMidlMidlItfD3d11000000340001Inner.OverlayOrFullscreenRequired">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER::OverlayOrFullscreenRequired']/*"/>	
            <unmanaged>unsigned int OverlayOrFullscreenRequired</unmanaged>	
            <unmanaged-short>unsigned int OverlayOrFullscreenRequired</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.AuthenticatedProtectionFlagsMidlMidlItfD3d11000000340001Inner.Reserved">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER::Reserved']/*"/>	
            <unmanaged>unsigned int Reserved</unmanaged>	
            <unmanaged-short>unsigned int Reserved</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidCountOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID_COUNT</strong> query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT']/*"/>	
            <msdn-id>hh447608</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidCountOutput.Output">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT::Output']/*"/>	
            <msdn-id>hh447608</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidCountOutput.EncryptionGuidCount">
            <summary>	
            <dd> <p>The number of encryption GUIDs. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT::EncryptionGuidCount']/*"/>	
            <msdn-id>hh447608</msdn-id>	
            <unmanaged>unsigned int EncryptionGuidCount</unmanaged>	
            <unmanaged-short>unsigned int EncryptionGuidCount</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidInput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains input data for a <strong>D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID</strong> query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT']/*"/>	
            <msdn-id>hh447609</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidInput.Input">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryInput"/></strong> structure that contains the <see cref="T:System.Guid"/> for the query and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT::Input']/*"/>	
            <msdn-id>hh447609</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidInput.EncryptionGuidIndex">
            <summary>	
            <dd> <p>The index of the encryption <see cref="T:System.Guid"/>. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT::EncryptionGuidIndex']/*"/>	
            <msdn-id>hh447609</msdn-id>	
            <unmanaged>unsigned int EncryptionGuidIndex</unmanaged>	
            <unmanaged-short>unsigned int EncryptionGuidIndex</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID</strong> query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT']/*"/>	
            <msdn-id>hh447610</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidOutput.Output">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT::Output']/*"/>	
            <msdn-id>hh447610</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidOutput.EncryptionGuidIndex">
            <summary>	
            <dd> <p>The index of the encryption <see cref="T:System.Guid"/>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT::EncryptionGuidIndex']/*"/>	
            <msdn-id>hh447610</msdn-id>	
            <unmanaged>unsigned int EncryptionGuidIndex</unmanaged>	
            <unmanaged-short>unsigned int EncryptionGuidIndex</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidOutput.EncryptionGuid">
            <summary>	
            <dd> <p>A <see cref="T:System.Guid"/> that specifies a supported encryption type.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT::EncryptionGuid']/*"/>	
            <msdn-id>hh447610</msdn-id>	
            <unmanaged>GUID EncryptionGuid</unmanaged>	
            <unmanaged-short>GUID EncryptionGuid</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryAcessibilityOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ATTRIBUTES</strong> query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT']/*"/>	
            <msdn-id>hh447611</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAcessibilityOutput.Output">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT::Output']/*"/>	
            <msdn-id>hh447611</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAcessibilityOutput.BusType">
            <summary>	
            <dd> <p>A bitwise <strong>OR</strong> of flags from the <strong><see cref="T:SharpDX.Direct3D11.BusType"/></strong> enumeration.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT::BusType']/*"/>	
            <msdn-id>hh447611</msdn-id>	
            <unmanaged>D3D11_BUS_TYPE BusType</unmanaged>	
            <unmanaged-short>D3D11_BUS_TYPE BusType</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAcessibilityOutput.AccessibleInContiguousBlocks">
            <summary>	
            <dd> <p>If <strong>TRUE</strong>, contiguous blocks of video memory may be accessible to the CPU or the bus.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT::AccessibleInContiguousBlocks']/*"/>	
            <msdn-id>hh447611</msdn-id>	
            <unmanaged>BOOL AccessibleInContiguousBlocks</unmanaged>	
            <unmanaged-short>BOOL AccessibleInContiguousBlocks</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAcessibilityOutput.AccessibleInNonContiguousBlocks">
            <summary>	
            <dd> <p>If <strong>TRUE</strong>, non-contiguous blocks of video memory may be accessible to the CPU or the bus.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT::AccessibleInNonContiguousBlocks']/*"/>	
            <msdn-id>hh447611</msdn-id>	
            <unmanaged>BOOL AccessibleInNonContiguousBlocks</unmanaged>	
            <unmanaged-short>BOOL AccessibleInNonContiguousBlocks</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryChannelTypeOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE</strong> query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT']/*"/>	
            <msdn-id>hh447612</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryChannelTypeOutput.Output">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT::Output']/*"/>	
            <msdn-id>hh447612</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryChannelTypeOutput.ChannelType">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedChannelType"/></strong> value that specifies the channel type. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT::ChannelType']/*"/>	
            <msdn-id>hh447612</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionInput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains input data for a <strong>D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION</strong> query. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT']/*"/>	
            <msdn-id>hh447613</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionInput.Input">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryInput"/></strong> structure that contains the <see cref="T:System.Guid"/> for the query and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT::Input']/*"/>	
            <msdn-id>hh447613</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionInput.DecoderHandle">
            <summary>	
            <dd> <p>A handle to a decoder device.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT::DecoderHandle']/*"/>	
            <msdn-id>hh447613</msdn-id>	
            <unmanaged>void* DecoderHandle</unmanaged>	
            <unmanaged-short>void DecoderHandle</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION</strong> query. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT']/*"/>	
            <msdn-id>hh447614</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionOutput.Output">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::Output']/*"/>	
            <msdn-id>hh447614</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionOutput.DecoderHandle">
            <summary>	
            <dd> <p>A handle to a decoder device.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::DecoderHandle']/*"/>	
            <msdn-id>hh447614</msdn-id>	
            <unmanaged>void* DecoderHandle</unmanaged>	
            <unmanaged-short>void DecoderHandle</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionOutput.CryptoSessionHandle">
            <summary>	
            <dd> <p>A handle to the cryptographic session that is associated with the decoder device.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::CryptoSessionHandle']/*"/>	
            <msdn-id>hh447614</msdn-id>	
            <unmanaged>void* CryptoSessionHandle</unmanaged>	
            <unmanaged-short>void CryptoSessionHandle</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionOutput.DeviceHandle">
            <summary>	
            <dd> <p>A handle to the Direct3D device that is associated with the decoder device.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::DeviceHandle']/*"/>	
            <msdn-id>hh447614</msdn-id>	
            <unmanaged>void* DeviceHandle</unmanaged>	
            <unmanaged-short>void DeviceHandle</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryCurrentAccessibilityEncryptionOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_CURRENT_ENCRYPTION_WHEN_ACCESSIBLE </strong>query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT']/*"/>	
            <msdn-id>hh447615</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCurrentAccessibilityEncryptionOutput.Output">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT::Output']/*"/>	
            <msdn-id>hh447615</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCurrentAccessibilityEncryptionOutput.EncryptionGuid">
            <summary>	
            <dd> <p>A <see cref="T:System.Guid"/> that specifies the current encryption type. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT::EncryptionGuid']/*"/>	
            <msdn-id>hh447615</msdn-id>	
            <unmanaged>GUID EncryptionGuid</unmanaged>	
            <unmanaged-short>GUID EncryptionGuid</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryDeviceHandleOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE</strong> query. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT']/*"/>	
            <msdn-id>hh447616</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryDeviceHandleOutput.Output">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT::Output']/*"/>	
            <msdn-id>hh447616</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryDeviceHandleOutput.DeviceHandle">
            <summary>	
            <dd> <p>A handle to the device. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT::DeviceHandle']/*"/>	
            <msdn-id>hh447616</msdn-id>	
            <unmanaged>void* DeviceHandle</unmanaged>	
            <unmanaged-short>void DeviceHandle</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryInput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains input data for the <strong><see cref="M:SharpDX.Direct3D11.VideoContext.QueryAuthenticatedChannel(SharpDX.Direct3D11.AuthenticatedChannel,System.Int32,System.IntPtr,System.Int32,System.IntPtr)"/></strong> method. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_INPUT']/*"/>	
            <msdn-id>hh447617</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_INPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryInput.QueryType">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_INPUT::QueryType']/*"/>	
            <unmanaged>GUID QueryType</unmanaged>	
            <unmanaged-short>GUID QueryType</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryInput.HChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_INPUT::hChannel']/*"/>	
            <unmanaged>void* hChannel</unmanaged>	
            <unmanaged-short>void hChannel</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryInput.SequenceNumber">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_INPUT::SequenceNumber']/*"/>	
            <unmanaged>unsigned int SequenceNumber</unmanaged>	
            <unmanaged-short>unsigned int SequenceNumber</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID</strong> query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT']/*"/>	
            <msdn-id>hh447622</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutput.Omac">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT::omac']/*"/>	
            <msdn-id>hh447622</msdn-id>	
            <unmanaged>D3D11_OMAC omac</unmanaged>	
            <unmanaged-short>D3D11_OMAC omac</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutput.QueryType">
            <summary>	
            <dd> <p>A handle to the device.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT::QueryType']/*"/>	
            <msdn-id>hh447622</msdn-id>	
            <unmanaged>GUID QueryType</unmanaged>	
            <unmanaged-short>GUID QueryType</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutput.HChannel">
            <summary>	
            <dd> <p>A handle to the cryptographic session.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT::hChannel']/*"/>	
            <msdn-id>hh447622</msdn-id>	
            <unmanaged>void* hChannel</unmanaged>	
            <unmanaged-short>void hChannel</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutput.SequenceNumber">
            <summary>	
            <dd> <p>The index of the output ID.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT::SequenceNumber']/*"/>	
            <msdn-id>hh447622</msdn-id>	
            <unmanaged>unsigned int SequenceNumber</unmanaged>	
            <unmanaged-short>unsigned int SequenceNumber</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutput.ReturnCode">
            <summary>	
            <dd> <p>An output ID that is associated with the specified device and cryptographic session.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT::ReturnCode']/*"/>	
            <msdn-id>hh447622</msdn-id>	
            <unmanaged>HRESULT ReturnCode</unmanaged>	
            <unmanaged-short>HRESULT ReturnCode</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountInput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains input data for a <strong>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT</strong> query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT']/*"/>	
            <msdn-id>hh447619</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountInput.Input">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryInput"/></strong> structure that contains the <see cref="T:System.Guid"/> for the query and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT::Input']/*"/>	
            <msdn-id>hh447619</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountInput.DeviceHandle">
            <summary>	
            <dd> <p>A handle to the device.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT::DeviceHandle']/*"/>	
            <msdn-id>hh447619</msdn-id>	
            <unmanaged>void* DeviceHandle</unmanaged>	
            <unmanaged-short>void DeviceHandle</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountInput.CryptoSessionHandle">
            <summary>	
            <dd> <p>A handle to the cryptographic session.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT::CryptoSessionHandle']/*"/>	
            <msdn-id>hh447619</msdn-id>	
            <unmanaged>void* CryptoSessionHandle</unmanaged>	
            <unmanaged-short>void CryptoSessionHandle</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT</strong> query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT']/*"/>	
            <msdn-id>hh447620</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountOutput.Output">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::Output']/*"/>	
            <msdn-id>hh447620</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountOutput.DeviceHandle">
            <summary>	
            <dd> <p>A handle to the device.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::DeviceHandle']/*"/>	
            <msdn-id>hh447620</msdn-id>	
            <unmanaged>void* DeviceHandle</unmanaged>	
            <unmanaged-short>void DeviceHandle</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountOutput.CryptoSessionHandle">
            <summary>	
            <dd> <p>A handle to the cryptographic session.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::CryptoSessionHandle']/*"/>	
            <msdn-id>hh447620</msdn-id>	
            <unmanaged>void* CryptoSessionHandle</unmanaged>	
            <unmanaged-short>void CryptoSessionHandle</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountOutput.OutputIDCount">
            <summary>	
            <dd> <p>The number of output IDs associated with the specified device and cryptographic session.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::OutputIDCount']/*"/>	
            <msdn-id>hh447620</msdn-id>	
            <unmanaged>unsigned int OutputIDCount</unmanaged>	
            <unmanaged-short>unsigned int OutputIDCount</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryOutputIdInput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains input data for a <strong>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID</strong> query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT']/*"/>	
            <msdn-id>hh447621</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdInput.Input">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryInput"/></strong> structure that contains the <see cref="T:System.Guid"/> for the query and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::Input']/*"/>	
            <msdn-id>hh447621</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdInput.DeviceHandle">
            <summary>	
            <dd> <p>A handle to the device.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::DeviceHandle']/*"/>	
            <msdn-id>hh447621</msdn-id>	
            <unmanaged>void* DeviceHandle</unmanaged>	
            <unmanaged-short>void DeviceHandle</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdInput.CryptoSessionHandle">
            <summary>	
            <dd> <p>A handle to the cryptographic session.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::CryptoSessionHandle']/*"/>	
            <msdn-id>hh447621</msdn-id>	
            <unmanaged>void* CryptoSessionHandle</unmanaged>	
            <unmanaged-short>void CryptoSessionHandle</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdInput.OutputIDIndex">
            <summary>	
            <dd> <p>The index of the output ID.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::OutputIDIndex']/*"/>	
            <msdn-id>hh447621</msdn-id>	
            <unmanaged>unsigned int OutputIDIndex</unmanaged>	
            <unmanaged-short>unsigned int OutputIDIndex</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryOutputIdOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID</strong> query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT']/*"/>	
            <msdn-id>hh447622</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdOutput.Output">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::Output']/*"/>	
            <msdn-id>hh447622</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdOutput.DeviceHandle">
            <summary>	
            <dd> <p>A handle to the device.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::DeviceHandle']/*"/>	
            <msdn-id>hh447622</msdn-id>	
            <unmanaged>void* DeviceHandle</unmanaged>	
            <unmanaged-short>void DeviceHandle</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdOutput.CryptoSessionHandle">
            <summary>	
            <dd> <p>A handle to the cryptographic session.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::CryptoSessionHandle']/*"/>	
            <msdn-id>hh447622</msdn-id>	
            <unmanaged>void* CryptoSessionHandle</unmanaged>	
            <unmanaged-short>void CryptoSessionHandle</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdOutput.OutputIDIndex">
            <summary>	
            <dd> <p>The index of the output ID.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::OutputIDIndex']/*"/>	
            <msdn-id>hh447622</msdn-id>	
            <unmanaged>unsigned int OutputIDIndex</unmanaged>	
            <unmanaged-short>unsigned int OutputIDIndex</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdOutput.OutputID">
            <summary>	
            <dd> <p>An output ID that is associated with the specified device and cryptographic session.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::OutputID']/*"/>	
            <msdn-id>hh447622</msdn-id>	
            <unmanaged>unsigned longlong OutputID</unmanaged>	
            <unmanaged-short>unsigned longlong OutputID</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryProtectionOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_PROTECTION</strong> query. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT']/*"/>	
            <msdn-id>hh447623</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryProtectionOutput.Output">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT::Output']/*"/>	
            <msdn-id>hh447623</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryProtectionOutput.ProtectionFlags">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedProtectionFlags"/></strong> union that specifies the protection level. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT::ProtectionFlags']/*"/>	
            <msdn-id>hh447623</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_PROTECTION_FLAGS ProtectionFlags</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_PROTECTION_FLAGS ProtectionFlags</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessCountOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT</strong> query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT']/*"/>	
            <msdn-id>hh447624</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessCountOutput.Output">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT::Output']/*"/>	
            <msdn-id>hh447624</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessCountOutput.RestrictedSharedResourceProcessCount">
            <summary>	
            <dd> <p>The number of processes that are allowed to open shared resources that have restricted access. A process cannot open such a resource unless the process has been granted access. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT::RestrictedSharedResourceProcessCount']/*"/>	
            <msdn-id>hh447624</msdn-id>	
            <unmanaged>unsigned int RestrictedSharedResourceProcessCount</unmanaged>	
            <unmanaged-short>unsigned int RestrictedSharedResourceProcessCount</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessInput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains input data for a <strong>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS</strong> query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT']/*"/>	
            <msdn-id>hh447625</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessInput.Input">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryInput"/></strong> structure that contains the <see cref="T:System.Guid"/> for the query and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT::Input']/*"/>	
            <msdn-id>hh447625</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessInput.ProcessIndex">
            <summary>	
            <dd> <p>The index of the process. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT::ProcessIndex']/*"/>	
            <msdn-id>hh447625</msdn-id>	
            <unmanaged>unsigned int ProcessIndex</unmanaged>	
            <unmanaged-short>unsigned int ProcessIndex</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS</strong> query.</p>	
            </summary>	
            <remarks>	
            <p>The Desktop Window Manager (DWM) process is identified by setting <strong>ProcessIdentifier</strong> equal to <strong><see cref="F:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType.ProcessidtypeDwm"/></strong>. Other processes are identified by setting the process handle in <strong>ProcessHandle</strong> and setting <strong>ProcessIdentifier</strong> equal to <strong><see cref="F:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType.ProcessidtypeHandle"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT']/*"/>	
            <msdn-id>hh447626</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessOutput.Output">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::Output']/*"/>	
            <msdn-id>hh447626</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessOutput.ProcessIndex">
            <summary>	
            <dd> <p>The index of the process in the list of processes.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::ProcessIndex']/*"/>	
            <msdn-id>hh447626</msdn-id>	
            <unmanaged>unsigned int ProcessIndex</unmanaged>	
            <unmanaged-short>unsigned int ProcessIndex</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessOutput.ProcessIdentifier">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType"/></strong> value that specifies the type of process.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::ProcessIdentifier']/*"/>	
            <msdn-id>hh447626</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE ProcessIdentifier</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE ProcessIdentifier</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessOutput.ProcessHandle">
            <summary>	
            <dd> <p>A process handle. If the <strong>ProcessIdentifier</strong> member equals <strong><see cref="F:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType.ProcessidtypeHandle"/></strong>, the <strong>ProcessHandle</strong> member contains a valid handle to a process. Otherwise, this member is ignored.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::ProcessHandle']/*"/>	
            <msdn-id>hh447626</msdn-id>	
            <unmanaged>void* ProcessHandle</unmanaged>	
            <unmanaged-short>void ProcessHandle</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryUnrestrictedProtectedSharedResourceCountOutput">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps only</p><p>Contains the response to a <strong>D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT</strong> query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT']/*"/>	
            <msdn-id>hh447627</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryUnrestrictedProtectedSharedResourceCountOutput.Output">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/></strong> structure that contains a Message Authentication Code (MAC) and other data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT::Output']/*"/>	
            <msdn-id>hh447627</msdn-id>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
            <unmanaged-short>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryUnrestrictedProtectedSharedResourceCountOutput.UnrestrictedProtectedSharedResourceCount">
            <summary>	
            <dd> <p>The number of protected, shared resources that can be opened by any process without restrictions.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT::UnrestrictedProtectedSharedResourceCount']/*"/>	
            <msdn-id>hh447627</msdn-id>	
            <unmanaged>unsigned int UnrestrictedProtectedSharedResourceCount</unmanaged>	
            <unmanaged-short>unsigned int UnrestrictedProtectedSharedResourceCount</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Cd3d11VideoDefault">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='CD3D11_VIDEO_DEFAULT']/*"/>	
            <unmanaged>CD3D11_VIDEO_DEFAULT</unmanaged>	
            <unmanaged-short>CD3D11_VIDEO_DEFAULT</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ClassInstanceDescription">
            <summary>	
            <p>Describes an HLSL class instance.</p>	
            </summary>	
            <remarks>	
            <p>The <see cref="T:SharpDX.Direct3D11.ClassInstanceDescription"/> structure is returned by the <strong><see cref="M:SharpDX.Direct3D11.ClassInstance.GetDescription(SharpDX.Direct3D11.ClassInstanceDescription@)"/></strong> method.</p><p>The members of this structure except <strong>InstanceIndex</strong> are valid (non default values) if they describe a class instance aquired using  <strong><see cref="M:SharpDX.Direct3D11.ClassLinkage.CreateClassInstance(System.String,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.ClassInstance)"/></strong>.  The <strong>InstanceIndex</strong> member is only valid when the class instance is aquired using <strong><see cref="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC']/*"/>	
            <msdn-id>ff476098</msdn-id>	
            <unmanaged>D3D11_CLASS_INSTANCE_DESC</unmanaged>	
            <unmanaged-short>D3D11_CLASS_INSTANCE_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.InstanceId">
            <summary>	
            <dd> <p>The instance ID of an HLSL class; the default value is 0.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::InstanceId']/*"/>	
            <msdn-id>ff476098</msdn-id>	
            <unmanaged>unsigned int InstanceId</unmanaged>	
            <unmanaged-short>unsigned int InstanceId</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.InstanceIndex">
            <summary>	
            <dd> <p>The instance index of an HLSL class; the default value is 0.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::InstanceIndex']/*"/>	
            <msdn-id>ff476098</msdn-id>	
            <unmanaged>unsigned int InstanceIndex</unmanaged>	
            <unmanaged-short>unsigned int InstanceIndex</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.TypeId">
            <summary>	
            <dd> <p>The type ID of an HLSL class; the default value is 0.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::TypeId']/*"/>	
            <msdn-id>ff476098</msdn-id>	
            <unmanaged>unsigned int TypeId</unmanaged>	
            <unmanaged-short>unsigned int TypeId</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.ConstantBuffer">
            <summary>	
            <dd> <p>Describes the constant buffer associated with an HLSL class; the default value is 0.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::ConstantBuffer']/*"/>	
            <msdn-id>ff476098</msdn-id>	
            <unmanaged>unsigned int ConstantBuffer</unmanaged>	
            <unmanaged-short>unsigned int ConstantBuffer</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.BaseConstantBufferOffset">
            <summary>	
            <dd> <p>The base constant buffer offset associated with an HLSL class; the default value is 0.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::BaseConstantBufferOffset']/*"/>	
            <msdn-id>ff476098</msdn-id>	
            <unmanaged>unsigned int BaseConstantBufferOffset</unmanaged>	
            <unmanaged-short>unsigned int BaseConstantBufferOffset</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.BaseTexture">
            <summary>	
            <dd> <p>The base texture associated with an HLSL class; the default value is 127.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::BaseTexture']/*"/>	
            <msdn-id>ff476098</msdn-id>	
            <unmanaged>unsigned int BaseTexture</unmanaged>	
            <unmanaged-short>unsigned int BaseTexture</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.BaseSampler">
            <summary>	
            <dd> <p>The base sampler associated with an HLSL class; the default value is 15.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::BaseSampler']/*"/>	
            <msdn-id>ff476098</msdn-id>	
            <unmanaged>unsigned int BaseSampler</unmanaged>	
            <unmanaged-short>unsigned int BaseSampler</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.IsCreated">
            <summary>	
            <dd> <p>True if the class was created; the default value is false.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::Created']/*"/>	
            <msdn-id>ff476098</msdn-id>	
            <unmanaged>BOOL Created</unmanaged>	
            <unmanaged-short>BOOL Created</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.CounterCapabilities">
            <summary>	
            <p>Information about the video card's performance counter capabilities.</p>	
            </summary>	
            <remarks>	
            <p>This structure is returned by <strong><see cref="M:SharpDX.Direct3D11.Device.GetCounterCapabilities"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_INFO']/*"/>	
            <msdn-id>ff476104</msdn-id>	
            <unmanaged>D3D11_COUNTER_INFO</unmanaged>	
            <unmanaged-short>D3D11_COUNTER_INFO</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterCapabilities.LastDeviceDependentCounter">
            <summary>	
            <dd> <p>Largest device-dependent counter ID that the device supports. If none are supported, this value will be 0. Otherwise it will be greater than or equal to <see cref="F:SharpDX.Direct3D11.CounterKind.DeviceDependent0"/>. See <strong><see cref="T:SharpDX.Direct3D11.CounterKind"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_INFO::LastDeviceDependentCounter']/*"/>	
            <msdn-id>ff476104</msdn-id>	
            <unmanaged>D3D11_COUNTER LastDeviceDependentCounter</unmanaged>	
            <unmanaged-short>D3D11_COUNTER LastDeviceDependentCounter</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterCapabilities.SimultaneousCounterCount">
            <summary>	
            <dd> <p>Number of counters that can be simultaneously supported.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_INFO::NumSimultaneousCounters']/*"/>	
            <msdn-id>ff476104</msdn-id>	
            <unmanaged>unsigned int NumSimultaneousCounters</unmanaged>	
            <unmanaged-short>unsigned int NumSimultaneousCounters</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterCapabilities.DetectableParallelUnitCount">
            <summary>	
            <dd> <p>Number of detectable parallel units that the counter is able to discern. Values are 1 ~ 4. Use NumDetectableParallelUnits to interpret the values of the VERTEX_PROCESSING, GEOMETRY_PROCESSING, PIXEL_PROCESSING, and OTHER_GPU_PROCESSING counters. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_INFO::NumDetectableParallelUnits']/*"/>	
            <msdn-id>ff476104</msdn-id>	
            <unmanaged>unsigned char NumDetectableParallelUnits</unmanaged>	
            <unmanaged-short>unsigned char NumDetectableParallelUnits</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.CounterDescription">
            <summary>	
            <p>Describes a counter.</p>	
            </summary>	
            <remarks>	
            <p>This structure is used by <strong><see cref="M:SharpDX.Direct3D11.Counter.GetDescription(SharpDX.Direct3D11.CounterDescription@)"/></strong>, <strong><see cref="M:SharpDX.Direct3D11.Device.CheckCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.CounterType@,System.Int32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.Device.CreateCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.Counter)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_DESC']/*"/>	
            <msdn-id>ff476103</msdn-id>	
            <unmanaged>D3D11_COUNTER_DESC</unmanaged>	
            <unmanaged-short>D3D11_COUNTER_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterDescription.Counter">
            <summary>	
            <dd> <p>Type of counter (see <strong><see cref="T:SharpDX.Direct3D11.CounterKind"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_DESC::Counter']/*"/>	
            <msdn-id>ff476103</msdn-id>	
            <unmanaged>D3D11_COUNTER Counter</unmanaged>	
            <unmanaged-short>D3D11_COUNTER Counter</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterDescription.MiscFlags">
            <summary>	
            <dd> <p>Reserved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_DESC::MiscFlags']/*"/>	
            <msdn-id>ff476103</msdn-id>	
            <unmanaged>unsigned int MiscFlags</unmanaged>	
            <unmanaged-short>unsigned int MiscFlags</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilOperationDescription">
            <summary>	
            <p>Stencil operations that can be performed based on the results of stencil test.</p>	
            </summary>	
            <remarks>	
            <p>All stencil operations are specified as a <strong><see cref="T:SharpDX.Direct3D11.StencilOperation"/></strong>. The stencil operation can be set differently based on the outcome of the stencil test (which is referred to as <strong>StencilFunc</strong> in the stencil test portion of depth-stencil testing.</p><p>This structure is a member of a <strong>depth-stencil description</strong>. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCILOP_DESC']/*"/>	
            <msdn-id>ff476109</msdn-id>	
            <unmanaged>D3D11_DEPTH_STENCILOP_DESC</unmanaged>	
            <unmanaged-short>D3D11_DEPTH_STENCILOP_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilOperationDescription.FailOperation">
            <summary>	
            <dd> <p>The stencil operation to perform when stencil testing fails.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCILOP_DESC::StencilFailOp']/*"/>	
            <msdn-id>ff476109</msdn-id>	
            <unmanaged>D3D11_STENCIL_OP StencilFailOp</unmanaged>	
            <unmanaged-short>D3D11_STENCIL_OP StencilFailOp</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilOperationDescription.DepthFailOperation">
            <summary>	
            <dd> <p>The stencil operation to perform when stencil testing passes and depth testing fails.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCILOP_DESC::StencilDepthFailOp']/*"/>	
            <msdn-id>ff476109</msdn-id>	
            <unmanaged>D3D11_STENCIL_OP StencilDepthFailOp</unmanaged>	
            <unmanaged-short>D3D11_STENCIL_OP StencilDepthFailOp</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilOperationDescription.PassOperation">
            <summary>	
            <dd> <p>The stencil operation to perform when stencil testing and depth testing both pass.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCILOP_DESC::StencilPassOp']/*"/>	
            <msdn-id>ff476109</msdn-id>	
            <unmanaged>D3D11_STENCIL_OP StencilPassOp</unmanaged>	
            <unmanaged-short>D3D11_STENCIL_OP StencilPassOp</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilOperationDescription.Comparison">
            <summary>	
            <dd> <p>A function that compares stencil data against existing stencil data. The function options are listed in <strong><see cref="T:SharpDX.Direct3D11.Comparison"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCILOP_DESC::StencilFunc']/*"/>	
            <msdn-id>ff476109</msdn-id>	
            <unmanaged>D3D11_COMPARISON_FUNC StencilFunc</unmanaged>	
            <unmanaged-short>D3D11_COMPARISON_FUNC StencilFunc</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription">
            <summary>	
            <p>Specifies the subresources of a texture that are accessible from a depth-stencil view.</p>	
            </summary>	
            <remarks>	
            <p>These are valid formats for a depth-stencil view:</p><ul> <li><see cref="F:SharpDX.DXGI.Format.D16_UNorm"/></li> <li><see cref="F:SharpDX.DXGI.Format.D24_UNorm_S8_UInt"/></li> <li><see cref="F:SharpDX.DXGI.Format.D32_Float"/></li> <li><see cref="F:SharpDX.DXGI.Format.D32_Float_S8X24_UInt"/></li> <li><see cref="F:SharpDX.DXGI.Format.Unknown"/></li> </ul><p>A depth-stencil view cannot use a typeless format.  If the format chosen is <see cref="F:SharpDX.DXGI.Format.Unknown"/>, then the format of the parent resource is used.</p><p>A depth-stencil-view description is needed when calling <strong><see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.DepthStencilViewDescription},SharpDX.Direct3D11.DepthStencilView)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC']/*"/>	
            <msdn-id>ff476112</msdn-id>	
            <unmanaged>D3D11_DEPTH_STENCIL_VIEW_DESC</unmanaged>	
            <unmanaged-short>D3D11_DEPTH_STENCIL_VIEW_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Format">
            <summary>	
            <dd> <p>Resource data  format (see <strong><see cref="T:SharpDX.DXGI.Format"/></strong>). See remarks for allowable formats.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Format']/*"/>	
            <msdn-id>ff476112</msdn-id>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
            <unmanaged-short>DXGI_FORMAT Format</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Dimension">
            <summary>	
            <dd> <p>Type of resource (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDimension"/></strong>). Specifies how a depth-stencil resource will be accessed; the value is stored in the  union in this structure.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::ViewDimension']/*"/>	
            <msdn-id>ff476112</msdn-id>	
            <unmanaged>D3D11_DSV_DIMENSION ViewDimension</unmanaged>	
            <unmanaged-short>D3D11_DSV_DIMENSION ViewDimension</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Flags">
            <summary>	
            <dd> <p>A value that describes whether the texture is read only.  Pass 0 to specify that it is not read only; otherwise, pass one of the members of  the <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewFlags"/></strong> enumerated type.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Flags']/*"/>	
            <msdn-id>ff476112</msdn-id>	
            <unmanaged>D3D11_DSV_FLAG Flags</unmanaged>	
            <unmanaged-short>D3D11_DSV_FLAG Flags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1D">
            <summary>	
            <dd> <p>Specifies a 1D texture subresource (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Texture1D']/*"/>	
            <msdn-id>ff476112</msdn-id>	
            <unmanaged>D3D11_TEX1D_DSV Texture1D</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_DSV Texture1D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DArray">
            <summary>	
            <dd> <p>Specifies an array of 1D texture subresources (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DArrayResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Texture1DArray']/*"/>	
            <msdn-id>ff476112</msdn-id>	
            <unmanaged>D3D11_TEX1D_ARRAY_DSV Texture1DArray</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_ARRAY_DSV Texture1DArray</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2D">
            <summary>	
            <dd> <p>Specifies a 2D texture subresource (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Texture2D']/*"/>	
            <msdn-id>ff476112</msdn-id>	
            <unmanaged>D3D11_TEX2D_DSV Texture2D</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_DSV Texture2D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DArray">
            <summary>	
            <dd> <p>Specifies an array of 2D texture subresources (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DArrayResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Texture2DArray']/*"/>	
            <msdn-id>ff476112</msdn-id>	
            <unmanaged>D3D11_TEX2D_ARRAY_DSV Texture2DArray</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_ARRAY_DSV Texture2DArray</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMS">
            <summary>	
            <dd> <p>Specifies a multisampled 2D texture (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Texture2DMS']/*"/>	
            <msdn-id>ff476112</msdn-id>	
            <unmanaged>D3D11_TEX2DMS_DSV Texture2DMS</unmanaged>	
            <unmanaged-short>D3D11_TEX2DMS_DSV Texture2DMS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMSArray">
            <summary>	
            <dd> <p>Specifies an array of multisampled 2D textures (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledArrayResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Texture2DMSArray']/*"/>	
            <msdn-id>ff476112</msdn-id>	
            <unmanaged>D3D11_TEX2DMS_ARRAY_DSV Texture2DMSArray</unmanaged>	
            <unmanaged-short>D3D11_TEX2DMS_ARRAY_DSV Texture2DMSArray</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledResource">
            <summary>	
            <p>Specifies the subresource from a multisampled 2D texture that is accessible to a depth-stencil view.</p>	
            </summary>	
            <remarks>	
            <p>Because a multisampled 2D texture contains a single subtexture, there is nothing to specify; this unused member is included so that this structure will compile in C.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_DSV']/*"/>	
            <msdn-id>ff476236</msdn-id>	
            <unmanaged>D3D11_TEX2DMS_DSV</unmanaged>	
            <unmanaged-short>D3D11_TEX2DMS_DSV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledResource.UnusedFieldNothingToDefine">
            <summary>	
            <dd> <p>Unused.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_DSV::UnusedField_NothingToDefine']/*"/>	
            <msdn-id>ff476236</msdn-id>	
            <unmanaged>unsigned int UnusedField_NothingToDefine</unmanaged>	
            <unmanaged-short>unsigned int UnusedField_NothingToDefine</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DResource">
            <summary>	
            <p>Specifies the subresource from a 2D texture that is accessible to a depth-stencil view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a depth-stencil-view description (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_DSV']/*"/>	
            <msdn-id>ff476243</msdn-id>	
            <unmanaged>D3D11_TEX2D_DSV</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_DSV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DResource.MipSlice">
            <summary>	
            <dd> <p>The index of the first mipmap level to use.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_DSV::MipSlice']/*"/>	
            <msdn-id>ff476243</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DArrayResource">
            <summary>	
            <p>Specifies the subresources from an array of 1D textures to use in a depth-stencil view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a depth-stencil-view description (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_DSV']/*"/>	
            <msdn-id>ff476225</msdn-id>	
            <unmanaged>D3D11_TEX1D_ARRAY_DSV</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_ARRAY_DSV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DArrayResource.MipSlice">
            <summary>	
            <dd> <p>The index of the first mipmap level to use.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_DSV::MipSlice']/*"/>	
            <msdn-id>ff476225</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DArrayResource.FirstArraySlice">
            <summary>	
            <dd> <p>The index of the first texture to use in an array of textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_DSV::FirstArraySlice']/*"/>	
            <msdn-id>ff476225</msdn-id>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
            <unmanaged-short>unsigned int FirstArraySlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DArrayResource.ArraySize">
            <summary>	
            <dd> <p>Number of textures to use.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_DSV::ArraySize']/*"/>	
            <msdn-id>ff476225</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledArrayResource">
            <summary>	
            <p>Specifies the subresources from an array of multisampled 2D textures for a depth-stencil view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a depth-stencil-view description (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_DSV']/*"/>	
            <msdn-id>ff476233</msdn-id>	
            <unmanaged>D3D11_TEX2DMS_ARRAY_DSV</unmanaged>	
            <unmanaged-short>D3D11_TEX2DMS_ARRAY_DSV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledArrayResource.FirstArraySlice">
            <summary>	
            <dd> <p>The index of the first texture to use in an array of textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_DSV::FirstArraySlice']/*"/>	
            <msdn-id>ff476233</msdn-id>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
            <unmanaged-short>unsigned int FirstArraySlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledArrayResource.ArraySize">
            <summary>	
            <dd> <p>Number of textures to use.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_DSV::ArraySize']/*"/>	
            <msdn-id>ff476233</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DArrayResource">
            <summary>	
            <p>Specifies the subresources from an array 2D textures that are accessible to a depth-stencil view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a depth-stencil-view description (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_DSV']/*"/>	
            <msdn-id>ff476239</msdn-id>	
            <unmanaged>D3D11_TEX2D_ARRAY_DSV</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_ARRAY_DSV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DArrayResource.MipSlice">
            <summary>	
            <dd> <p>The index of the first mipmap level to use.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_DSV::MipSlice']/*"/>	
            <msdn-id>ff476239</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DArrayResource.FirstArraySlice">
            <summary>	
            <dd> <p>The index of the first texture to use in an array of textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_DSV::FirstArraySlice']/*"/>	
            <msdn-id>ff476239</msdn-id>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
            <unmanaged-short>unsigned int FirstArraySlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DArrayResource.ArraySize">
            <summary>	
            <dd> <p>Number of textures to use.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_DSV::ArraySize']/*"/>	
            <msdn-id>ff476239</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DResource">
            <summary>	
            <p>Specifies the subresource from a 1D texture that is accessible to a depth-stencil view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a depth-stencil-view description (see <strong><see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_DSV']/*"/>	
            <msdn-id>ff476229</msdn-id>	
            <unmanaged>D3D11_TEX1D_DSV</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_DSV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DResource.MipSlice">
            <summary>	
            <dd> <p>The index of the first mipmap level to use.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_DSV::MipSlice']/*"/>	
            <msdn-id>ff476229</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.EncryptedBlockInformation">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies which bytes in a video surface are encrypted. </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_ENCRYPTED_BLOCK_INFO']/*"/>	
            <msdn-id>hh447630</msdn-id>	
            <unmanaged>D3D11_ENCRYPTED_BLOCK_INFO</unmanaged>	
            <unmanaged-short>D3D11_ENCRYPTED_BLOCK_INFO</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.EncryptedBlockInformation.NumEncryptedBytesAtBeginning">
            <summary>	
            <dd> <p>The number of bytes that are encrypted at the start of the buffer. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_ENCRYPTED_BLOCK_INFO::NumEncryptedBytesAtBeginning']/*"/>	
            <msdn-id>hh447630</msdn-id>	
            <unmanaged>unsigned int NumEncryptedBytesAtBeginning</unmanaged>	
            <unmanaged-short>unsigned int NumEncryptedBytesAtBeginning</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.EncryptedBlockInformation.NumBytesInSkipPattern">
            <summary>	
            <dd> <p>The number of bytes that are skipped after the first <strong>NumEncryptedBytesAtBeginning</strong> bytes, and then after each block of <strong>NumBytesInEncryptPattern</strong> bytes. Skipped bytes are not encrypted. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_ENCRYPTED_BLOCK_INFO::NumBytesInSkipPattern']/*"/>	
            <msdn-id>hh447630</msdn-id>	
            <unmanaged>unsigned int NumBytesInSkipPattern</unmanaged>	
            <unmanaged-short>unsigned int NumBytesInSkipPattern</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.EncryptedBlockInformation.NumBytesInEncryptPattern">
            <summary>	
            <dd> <p>The number of bytes that are encrypted after each block of skipped bytes.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_ENCRYPTED_BLOCK_INFO::NumBytesInEncryptPattern']/*"/>	
            <msdn-id>hh447630</msdn-id>	
            <unmanaged>unsigned int NumBytesInEncryptPattern</unmanaged>	
            <unmanaged-short>unsigned int NumBytesInEncryptPattern</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataArchitectureInformation">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p><strong>Note</strong>??This structure is supported by the Direct3D 11.1 runtime, which is available on Windows?8 Consumer Preview and later operating systems.</p><p>Describes information about Direct3D 11.1 adapter architecture.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_ARCHITECTURE_INFO']/*"/>	
            <msdn-id>hh404455</msdn-id>	
            <unmanaged>D3D11_FEATURE_DATA_ARCHITECTURE_INFO</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_DATA_ARCHITECTURE_INFO</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataArchitectureInformation.TileBasedDeferredRenderer">
            <summary>	
            <dd> <p>Specifies whether a rendering device batches rendering commands and performs multipass rendering into tiles or bins over a render area. Certain API usage patterns that are fine TileBasedDefferredRenderers (TBDRs) can perform worse on non-TBDRs and vice versa.  Applications that are careful about rendering can be friendly to both TBDR and non-TBDR architectures. <strong>TRUE</strong> if the rendering device batches rendering commands and <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_ARCHITECTURE_INFO::TileBasedDeferredRenderer']/*"/>	
            <msdn-id>hh404455</msdn-id>	
            <unmanaged>BOOL TileBasedDeferredRenderer</unmanaged>	
            <unmanaged-short>BOOL TileBasedDeferredRenderer</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataD3D10XHardwareOptions">
            <summary>	
            <p>Describes compute shader and raw and structured buffer support in the current graphics driver.</p>	
            </summary>	
            <remarks>	
            <p>Direct3D 11 devices (<see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_0"/>) are required to support Compute Shader model 5.0.  Direct3D 10.x devices (<see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_1"/>) can optionally support Compute Shader model 4.0 or 4.1.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS']/*"/>	
            <msdn-id>ff476126</msdn-id>	
            <unmanaged>D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D10XHardwareOptions.ComputeShadersPlusRawAndStructuredBuffersViaShader4X">
            <summary>	
            <dd> <p><strong>TRUE</strong> if compute shaders and raw and structured buffers are supported; otherwise <strong><see cref="F:SharpDX.Result.False"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS::ComputeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x']/*"/>	
            <msdn-id>ff476126</msdn-id>	
            <unmanaged>BOOL ComputeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x</unmanaged>	
            <unmanaged-short>BOOL ComputeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataD3D11Options">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p><strong>Note</strong>??This structure is supported by the Direct3D 11.1 runtime, which is available on Windows?8 Consumer Preview and later operating systems.</p><p>Describes Direct3D 11.1 feature options in the current graphics driver.</p>	
            </summary>	
            <remarks>	
            <p>If a Microsoft Direct3D device supports feature level 11.1 (<strong><see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_1"/></strong>), when you call <strong><see cref="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)"/></strong> with <strong><see cref="F:SharpDX.Direct3D11.Feature.D3D11Options"/></strong>, <strong>CheckFeatureSupport</strong> returns a reference to <strong><see cref="T:SharpDX.Direct3D11.FeatureDataD3D11Options"/></strong> with all member set to <strong>TRUE</strong> except the <strong>SAD4ShaderInstructions</strong> and <strong>ExtendedDoublesShaderInstructions</strong> members, which are optionally supported by the hardware and driver and therefore can be <strong>TRUE</strong> or <strong><see cref="F:SharpDX.Result.False"/></strong>.</p><p>Feature level 11.1  provides the following additional features:</p><ul> <li>UAVs at every shader stage with 64 UAV bind slots instead of 8.</li> <li>Target-independent rasterization, which enables you  to set the <strong>ForcedSampleCount</strong> member of <strong><see cref="T:SharpDX.Direct3D11.RasterizerStateDescription1"/></strong> to 1, 4, 8, or 16 and to render to RTVs with a single sample.</li> <li>UAV-only rendering with the <strong>ForcedSampleCount</strong> member of <strong><see cref="T:SharpDX.Direct3D11.RasterizerStateDescription1"/></strong> set to up to 16 (only up to 8 for feature level 11).</li> </ul><p>The runtime always sets the following groupings of members identically. That is, all the values in a grouping are <strong>TRUE</strong> or <strong><see cref="F:SharpDX.Result.False"/></strong> together:</p><ul> <li><strong>DiscardAPIsSeenByDriver</strong> and <strong>FlagsForUpdateAndCopySeenByDriver</strong></li> <li><strong>ClearView</strong>, <strong>CopyWithOverlap</strong>, <strong>ConstantBufferPartialUpdate</strong>, <strong>ConstantBufferOffsetting</strong>, and <strong>MapNoOverwriteOnDynamicConstantBuffer</strong></li> <li><strong>MapNoOverwriteOnDynamicBufferSRV</strong> and <strong>MultisampleRTVWithForcedSampleCountOne</strong></li> </ul>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>D3D11_FEATURE_DATA_D3D11_OPTIONS</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_DATA_D3D11_OPTIONS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.OutputMergerLogicOp">
            <summary>	
            <dd> <p>Specifies whether logic operations are available in blend state. The runtime sets this member to <strong>TRUE</strong> if logic operations are available in blend state and <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise. This member is <strong><see cref="F:SharpDX.Result.False"/></strong> for feature level 9.1, 9.2, and 9.3.  This member is optional for feature level 10, 10.1, and 11.  This member is <strong>TRUE</strong> for feature level 11.1.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::OutputMergerLogicOp']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>BOOL OutputMergerLogicOp</unmanaged>	
            <unmanaged-short>BOOL OutputMergerLogicOp</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.UAVOnlyRenderingForcedSampleCount">
            <summary>	
            <dd> <p>Specifies whether the driver can render with no RTVs or DSVs and only UAVs bound. The runtime sets this member to <strong>TRUE</strong> if  the driver can render with no RTVs or DSVs and only UAVs bound and <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise. If <strong>TRUE</strong>, you can set the <strong>ForcedSampleCount</strong> member of <strong><see cref="T:SharpDX.Direct3D11.RasterizerStateDescription1"/></strong> to 1, 4, or 8 when you render with no RTVs or DSV and only UAVs bound.  For feature level 11.1, this member is always <strong>TRUE</strong> and you can also set <strong>ForcedSampleCount</strong> to 16 in addition to 1, 4, or 8.  The default value of <strong>ForcedSampleCount</strong> is 0, which means the same as if the value is set to 1. You can always set <strong>ForcedSampleCount</strong> to 0 or 1 for UAV-only rendering independently of how this member is set.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::UAVOnlyRenderingForcedSampleCount']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>BOOL UAVOnlyRenderingForcedSampleCount</unmanaged>	
            <unmanaged-short>BOOL UAVOnlyRenderingForcedSampleCount</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.DiscardAPIsSeenByDriver">
            <summary>	
            <dd> <p>Specifies whether the driver supports the <strong><see cref="M:SharpDX.Direct3D11.DeviceContext1.DiscardView(SharpDX.Direct3D11.ResourceView)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext1.DiscardResource(SharpDX.Direct3D11.Resource)"/></strong> methods. The runtime sets this member to <strong>TRUE</strong> if the driver supports these methods and <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise. How this member is set does not indicate whether the driver actually uses these methods; that is,   the driver might ignore these methods if they are not useful to the  hardware.  If <strong><see cref="F:SharpDX.Result.False"/></strong>, the runtime does not expose these methods to the driver because the driver does not support them.  You can monitor this member during development to rule out legacy drivers on hardware where these methods might have otherwise been beneficial.  You are not required to write separate code paths based on whether this member is <strong>TRUE</strong> or <strong><see cref="F:SharpDX.Result.False"/></strong>; you can call these methods whenever applicable.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::DiscardAPIsSeenByDriver']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>BOOL DiscardAPIsSeenByDriver</unmanaged>	
            <unmanaged-short>BOOL DiscardAPIsSeenByDriver</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.FlagsForUpdateAndCopySeenByDriver">
            <summary>	
            <dd> <p>Specifies whether the driver supports new semantics for copy and update that are exposed by the <strong><see cref="M:SharpDX.Direct3D11.DeviceContext1.CopySubresourceRegion1(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.Int32)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext1.UpdateSubresource1(SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.IntPtr,System.Int32,System.Int32,System.Int32)"/></strong> methods.  The runtime sets this member to <strong>TRUE</strong> if the driver supports new semantics for copy and update. The runtime sets this member to <strong><see cref="F:SharpDX.Result.False"/></strong> only for legacy drivers. The runtime handles this member similarly to the <strong>DiscardAPIsSeenByDriver</strong> member.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::FlagsForUpdateAndCopySeenByDriver']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>BOOL FlagsForUpdateAndCopySeenByDriver</unmanaged>	
            <unmanaged-short>BOOL FlagsForUpdateAndCopySeenByDriver</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.ClearView">
            <summary>	
            <dd> <p>Specifies whether the driver supports the <strong><see cref="M:SharpDX.Direct3D11.DeviceContext1.ClearView(SharpDX.Direct3D11.ResourceView,System.Single,SharpDX.Rectangle[],System.Int32)"/></strong> method. The runtime sets this member to <strong>TRUE</strong> if the driver supports this method and <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise. If <strong><see cref="F:SharpDX.Result.False"/></strong>, the runtime does not expose this method to the driver because the driver does not support it.  </p> <p><strong>Note</strong>??For feature level 9.1, 9.2, and 9.3, this member is always <strong>TRUE</strong> because the option is emulated by the runtime.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::ClearView']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>BOOL ClearView</unmanaged>	
            <unmanaged-short>BOOL ClearView</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.CopyWithOverlap">
            <summary>	
            <dd> <p>Specifies whether you can call <strong><see cref="M:SharpDX.Direct3D11.DeviceContext1.CopySubresourceRegion1(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.Int32)"/></strong> with overlapping source and destination rectangles. The runtime sets this member to <strong>TRUE</strong> if  you can call <strong>CopySubresourceRegion1</strong> with overlapping source and destination rectangles and <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise. If <strong><see cref="F:SharpDX.Result.False"/></strong>, the runtime does not expose this method to the driver because the driver does not support it.  </p> <p><strong>Note</strong>??For feature level 9.1, 9.2, and 9.3, this member is always <strong>TRUE</strong> because drivers already support the option for these feature levels.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::CopyWithOverlap']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>BOOL CopyWithOverlap</unmanaged>	
            <unmanaged-short>BOOL CopyWithOverlap</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.ConstantBufferPartialUpdate">
            <summary>	
            <dd> <p>Specifies whether the driver supports partial updates of constant buffers. The runtime sets this member to <strong>TRUE</strong> if  the driver supports partial updates of constant buffers and <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise. If <strong><see cref="F:SharpDX.Result.False"/></strong>, the runtime does not expose this operation to the driver because the driver does not support it.  </p> <p><strong>Note</strong>??For feature level 9.1, 9.2, and 9.3, this member is always <strong>TRUE</strong> because the option is emulated by the runtime.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::ConstantBufferPartialUpdate']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>BOOL ConstantBufferPartialUpdate</unmanaged>	
            <unmanaged-short>BOOL ConstantBufferPartialUpdate</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.ConstantBufferOffsetting">
            <summary>	
            <dd> <p>Specifies whether the driver supports new semantics for setting offsets in constant buffers for a shader. The runtime sets this member to <strong>TRUE</strong> if  the driver supports allowing you to specify offsets when you call new methods like the <strong><see cref="M:SharpDX.Direct3D11.DeviceContext1.VSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])"/></strong> method and <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise. If <strong><see cref="F:SharpDX.Result.False"/></strong>, the runtime does not expose this operation to the driver because the driver does not support it.    </p> <p><strong>Note</strong>??For feature level 9.1, 9.2, and 9.3, this member is always <strong>TRUE</strong> because the option is emulated by the runtime.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::ConstantBufferOffsetting']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>BOOL ConstantBufferOffsetting</unmanaged>	
            <unmanaged-short>BOOL ConstantBufferOffsetting</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.MapNoOverwriteOnDynamicConstantBuffer">
            <summary>	
            <dd> <p>Specifies whether you can call <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/></strong> with <strong><see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/></strong> on a dynamic constant buffer (that is, whether the driver supports this operation). The runtime sets this member to <strong>TRUE</strong> if  the driver supports this operation and <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise. If <strong><see cref="F:SharpDX.Result.False"/></strong>, the runtime fails this method because the driver does not support the operation.  </p> <p><strong>Note</strong>??For feature level 9.1, 9.2, and 9.3, this member is always <strong>TRUE</strong> because the option is emulated by the runtime.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::MapNoOverwriteOnDynamicConstantBuffer']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>BOOL MapNoOverwriteOnDynamicConstantBuffer</unmanaged>	
            <unmanaged-short>BOOL MapNoOverwriteOnDynamicConstantBuffer</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.MapNoOverwriteOnDynamicBufferSRV">
            <summary>	
            <dd> <p>Specifies whether you can call <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/></strong> with <strong><see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/></strong> on a dynamic buffer SRV (that is, whether the driver supports this operation). The runtime sets this member to <strong>TRUE</strong> if  the driver supports this operation and <strong><see cref="F:SharpDX.Result.False"/></strong> otherwise. If <strong><see cref="F:SharpDX.Result.False"/></strong>, the runtime fails this method because the driver does not support the operation.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::MapNoOverwriteOnDynamicBufferSRV']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>BOOL MapNoOverwriteOnDynamicBufferSRV</unmanaged>	
            <unmanaged-short>BOOL MapNoOverwriteOnDynamicBufferSRV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.MultisampleRTVWithForcedSampleCountOne">
            <summary>	
            <dd> <p>Specifies whether the driver supports multisample rendering when you render with RTVs bound. If <strong>TRUE</strong>, you can set the <strong>ForcedSampleCount</strong> member of <strong><see cref="T:SharpDX.Direct3D11.RasterizerStateDescription1"/></strong> to 1 with a multisample RTV bound. The driver can support this option on feature level 10 and higher.  If <strong><see cref="F:SharpDX.Result.False"/></strong>, the rasterizer-state creation will fail because the driver is legacy or the feature level is too low.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::MultisampleRTVWithForcedSampleCountOne']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>BOOL MultisampleRTVWithForcedSampleCountOne</unmanaged>	
            <unmanaged-short>BOOL MultisampleRTVWithForcedSampleCountOne</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.SAD4ShaderInstructions">
            <summary>	
            <dd> <p>Specifies whether the hardware and driver support the <strong>msad4</strong> intrinsic function in shaders. The runtime sets this member to <strong>TRUE</strong> if  the hardware and driver support calls to <strong>msad4</strong> intrinsic functions in shaders. If <strong><see cref="F:SharpDX.Result.False"/></strong>, the driver is legacy or the hardware does not support the option; the runtime will fail shader creation for shaders that use <strong>msad4</strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::SAD4ShaderInstructions']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>BOOL SAD4ShaderInstructions</unmanaged>	
            <unmanaged-short>BOOL SAD4ShaderInstructions</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.ExtendedDoublesShaderInstructions">
            <summary>	
            <dd> <p>Specifies whether the hardware and driver support the <strong>fma</strong> intrinsic function and other extended doubles instructions (<strong>DDIV</strong> and <strong>DRCP</strong>) in shaders. The <strong>fma</strong> intrinsic function emits an extended doubles <strong>DFMA</strong> instruction. The runtime sets this member to <strong>TRUE</strong> if  the hardware and driver support extended doubles instructions in shaders (shader model 5 and higher).  Support of this option implies support of basic double-precision shader instructions as well. You can use the <strong><see cref="F:SharpDX.Direct3D11.Feature.ShaderDoubles"/></strong> value to query for support of double-precision shaders.  If <strong><see cref="F:SharpDX.Result.False"/></strong>, the hardware and driver do not support the option; the runtime will fail shader creation for shaders that use extended doubles instructions.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::ExtendedDoublesShaderInstructions']/*"/>	
            <msdn-id>hh404457</msdn-id>	
            <unmanaged>BOOL ExtendedDoublesShaderInstructions</unmanaged>	
            <unmanaged-short>BOOL ExtendedDoublesShaderInstructions</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D11Options.ExtendedResourceSharing">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::ExtendedResourceSharing']/*"/>	
            <unmanaged>BOOL ExtendedResourceSharing</unmanaged>	
            <unmanaged-short>BOOL ExtendedResourceSharing</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataD3D9Options">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p><strong>Note</strong>??This structure is supported by the Direct3D 11.1 runtime, which is available on Windows?8 Consumer Preview and later operating systems.</p><p>Describes Direct3D 9 feature options in the current graphics driver.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D9_OPTIONS']/*"/>	
            <msdn-id>hh404458</msdn-id>	
            <unmanaged>D3D11_FEATURE_DATA_D3D9_OPTIONS</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_DATA_D3D9_OPTIONS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D9Options.FullNonPow2TextureSupport">
            <summary>	
            <dd> <p>Specifies whether the driver supports the nonpowers-of-2-unconditionally feature. For more information about this feature, see feature level. The runtime sets this member to <strong>TRUE</strong> for hardware at Direct3D 10 and higher feature levels.  For hardware at Direct3D 9.3 and lower feature levels, the runtime sets this member to <strong><see cref="F:SharpDX.Result.False"/></strong> if the hardware and driver support the powers-of-2 (2D textures must have widths and heights specified as powers of two) feature or the nonpowers-of-2-conditionally feature. For more information about this feature, see feature level.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D9_OPTIONS::FullNonPow2TextureSupport']/*"/>	
            <msdn-id>hh404458</msdn-id>	
            <unmanaged>BOOL FullNonPow2TextureSupport</unmanaged>	
            <unmanaged-short>BOOL FullNonPow2TextureSupport</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataD3D9ShadowSupport">
            <summary>	
            <p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p><strong>Note</strong>??This structure is supported by the Direct3D 11.1 runtime, which is available on Windows?8 and later operating systems.</p><p>Describes Direct3D?9 shadow support in the current graphics driver. </p>	
            </summary>	
            <remarks>	
            <p>Shadows are an important element in realistic 3D scenes.  You can use the shadow buffer technique to render shadows.  The basic principle of the technique is to use a depth buffer to store the scene depth info from the perspective of the light source, and then compare each point rendered in the scene with that buffer to determine if it is in shadow.</p><p>To render objects into the scene with shadows on them, you create <strong>sampler state objects</strong> with comparison filtering set and  the comparison mode (ComparisonFunc) to LessEqual.  You can also set BorderColor addressing on this depth sampler, even though BorderColor isn't typically allowed on feature levels 9.1 and 9.2.  By using the border color and picking 0.0 or 1.0 as the border color value, you can control whether the regions off the edge of the shadow map appear to be always in shadow or never in shadow respectively.	
            You can control the shadow filter quality by the Mag and Min filter settings in the comparison sampler.  Point sampling will produce shadows with non-anti-aliased edges.  Linear filter sampler settings will result in higher quality shadow edges, but might affect performance on some power-optimized devices.</p><p><strong>Note</strong>??If you use a separate setting for Mag versus Min filter options, you produce an undefined result.  Anisotropic filtering is not supported. The Mip filter choice is not relevant because feature level 9.x does not allow mipmapped depth buffers.</p><p><strong>Note</strong>??On feature level 9.x, you can't compile a shader with the <strong>SampleCmp</strong> and <strong>SampleCmpLevelZero</strong> intrinsic functions by using older versions of the compiler. For example,  you can't use the fxc.exe compiler that ships with the DirectX SDK or use the <strong><see cref="!:SharpDX.D3DCompiler.D3D.Compile"/>**</strong> functions (like <strong><see cref="!:SharpDX.D3DCompiler.D3D.CompileFromFile"/></strong>) that are implemented in D3DCompiler_43.dll and earlier. These intrinsic functions on feature level 9.x are only supported in the fxc.exe compiler that ships with the Windows?8 SDK and later and with the <strong><see cref="!:SharpDX.D3DCompiler.D3D.Compile"/>**</strong> functions that are implemented in D3DCompiler_44.dll and later.	
            But these intrinsic functions are present in shader models for feature levels higher than 9.x.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT']/*"/>	
            <msdn-id>jj247569</msdn-id>	
            <unmanaged>D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataD3D9ShadowSupport.SupportsDepthAsTextureWithLessEqualComparisonFilter">
            <summary>	
            <dd> <p>Specifies whether the driver supports the shadowing feature with the comparison-filtering mode set to less than or equal to. The runtime sets this member to <strong>TRUE</strong> for hardware at Direct3D 10 and higher feature levels.  For hardware at Direct3D 9.3 and lower feature levels, the runtime sets this member to <strong>TRUE</strong> only if the hardware and driver support the shadowing feature; otherwise <strong><see cref="F:SharpDX.Result.False"/></strong>. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT::SupportsDepthAsTextureWithLessEqualComparisonFilter']/*"/>	
            <msdn-id>jj247569</msdn-id>	
            <unmanaged>BOOL SupportsDepthAsTextureWithLessEqualComparisonFilter</unmanaged>	
            <unmanaged-short>BOOL SupportsDepthAsTextureWithLessEqualComparisonFilter</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataDoubles">
            <summary>	
            <p>Describes double data type support in the current graphics driver.</p>	
            </summary>	
            <remarks>	
            <p>If the runtime sets <strong>DoublePrecisionFloatShaderOps</strong> to  <strong>TRUE</strong>, the hardware and driver support the following Shader Model 5 instructions:</p><ul> <li> dadd </li> <li> dmax </li> <li> dmin </li> <li> dmul </li> <li> deq </li> <li> dge </li> <li> dlt </li> <li> dne </li> <li> dmov </li> <li> dmovc </li> <li> dtof </li> <li> ftod </li> </ul><p><strong>Note</strong>??If <strong>DoublePrecisionFloatShaderOps</strong> is <strong>TRUE</strong>, the hardware and driver do not necessarily support double-precision division.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_DOUBLES']/*"/>	
            <msdn-id>ff476127</msdn-id>	
            <unmanaged>D3D11_FEATURE_DATA_DOUBLES</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_DATA_DOUBLES</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataDoubles.DoublePrecisionFloatShaderOps">
            <summary>	
            <dd> <p>Specifies whether double types are allowed. If <strong>TRUE</strong>, double types are allowed; otherwise <strong><see cref="F:SharpDX.Result.False"/></strong>. The runtime must set <strong>DoublePrecisionFloatShaderOps</strong> to  <strong>TRUE</strong> in order for you to use any HLSL shader that is compiled with a double type.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_DOUBLES::DoublePrecisionFloatShaderOps']/*"/>	
            <msdn-id>ff476127</msdn-id>	
            <unmanaged>BOOL DoublePrecisionFloatShaderOps</unmanaged>	
            <unmanaged-short>BOOL DoublePrecisionFloatShaderOps</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataFormatSupport">
            <summary>	
            <p>Describes which resources are supported by the current graphics driver for a given format.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_FORMAT_SUPPORT']/*"/>	
            <msdn-id>ff476128</msdn-id>	
            <unmanaged>D3D11_FEATURE_DATA_FORMAT_SUPPORT</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_DATA_FORMAT_SUPPORT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataFormatSupport.InFormat">
            <summary>	
            <dd> <p> <strong><see cref="T:SharpDX.DXGI.Format"/></strong> to return information on.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_FORMAT_SUPPORT::InFormat']/*"/>	
            <msdn-id>ff476128</msdn-id>	
            <unmanaged>DXGI_FORMAT InFormat</unmanaged>	
            <unmanaged-short>DXGI_FORMAT InFormat</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataFormatSupport.OutFormatSupport">
            <summary>	
            <dd> <p>Combination of <strong><see cref="T:SharpDX.Direct3D11.FormatSupport"/></strong> flags indicating which resources are supported.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_FORMAT_SUPPORT::OutFormatSupport']/*"/>	
            <msdn-id>ff476128</msdn-id>	
            <unmanaged>D3D11_FORMAT_SUPPORT OutFormatSupport</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT OutFormatSupport</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataFormatSupport2">
            <summary>	
            <p>Describes which unordered resource options are supported by the current graphics driver for a given format.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_FORMAT_SUPPORT2']/*"/>	
            <msdn-id>ff476129</msdn-id>	
            <unmanaged>D3D11_FEATURE_DATA_FORMAT_SUPPORT2</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_DATA_FORMAT_SUPPORT2</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataFormatSupport2.InFormat">
            <summary>	
            <dd> <p> <strong><see cref="T:SharpDX.DXGI.Format"/></strong> to return information on.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_FORMAT_SUPPORT2::InFormat']/*"/>	
            <msdn-id>ff476129</msdn-id>	
            <unmanaged>DXGI_FORMAT InFormat</unmanaged>	
            <unmanaged-short>DXGI_FORMAT InFormat</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataFormatSupport2.OutFormatSupport2">
            <summary>	
            <dd> <p>Combination of <strong><see cref="T:SharpDX.Direct3D11.ComputeShaderFormatSupport"/></strong> flags indicating which unordered resource options are supported.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_FORMAT_SUPPORT2::OutFormatSupport2']/*"/>	
            <msdn-id>ff476129</msdn-id>	
            <unmanaged>D3D11_FORMAT_SUPPORT2 OutFormatSupport2</unmanaged>	
            <unmanaged-short>D3D11_FORMAT_SUPPORT2 OutFormatSupport2</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataShaderMinimumPrecisionSupport">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p><strong>Note</strong>??This structure is supported by the Direct3D 11.1 runtime, which is available on Windows?8 Consumer Preview and later operating systems.</p><p>Describes precision support  options for shaders in the current graphics driver.</p>	
            </summary>	
            <remarks>	
            <p>For hardware at Direct3D 10 and higher feature levels, the runtime sets both members identically.  For hardware at Direct3D 9.3 and lower feature levels, the runtime can set a lower precision support in the <strong>PixelShaderMinPrecision</strong> member than the <strong>AllOtherShaderStagesMinPrecision</strong> member; for 9.3 and lower, all other shader stages represent only the vertex shader.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT']/*"/>	
            <msdn-id>hh404460</msdn-id>	
            <unmanaged>D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataShaderMinimumPrecisionSupport.PixelShaderMinPrecision">
            <summary>	
            <dd> <p>A combination of <strong><see cref="T:SharpDX.Direct3D11.ShaderMinimumPrecisionSupport"/></strong>-typed values that are combined by using a bitwise OR operation. The resulting value specifies minimum precision levels that the driver supports for the pixel shader. A value of zero indicates that the driver supports only full 32-bit precision for the pixel shader.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT::PixelShaderMinPrecision']/*"/>	
            <msdn-id>hh404460</msdn-id>	
            <unmanaged>unsigned int PixelShaderMinPrecision</unmanaged>	
            <unmanaged-short>unsigned int PixelShaderMinPrecision</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataShaderMinimumPrecisionSupport.AllOtherShaderStagesMinPrecision">
            <summary>	
            <dd> <p>A combination of <strong><see cref="T:SharpDX.Direct3D11.ShaderMinimumPrecisionSupport"/></strong>-typed values that are combined by using a bitwise OR operation. The resulting value specifies minimum precision levels that the driver supports for all other shader stages. A value of zero indicates that the driver supports only full 32-bit precision for all other shader stages.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT::AllOtherShaderStagesMinPrecision']/*"/>	
            <msdn-id>hh404460</msdn-id>	
            <unmanaged>unsigned int AllOtherShaderStagesMinPrecision</unmanaged>	
            <unmanaged-short>unsigned int AllOtherShaderStagesMinPrecision</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataThreading">
            <summary>	
            <p>Describes the multi-threading features that are supported by the current graphics driver.</p>	
            </summary>	
            <remarks>	
            <p>Use the <see cref="T:SharpDX.Direct3D11.FeatureDataThreading"/> structure with the <strong><see cref="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)"/></strong> method to determine multi-threading support.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_THREADING']/*"/>	
            <msdn-id>ff476130</msdn-id>	
            <unmanaged>D3D11_FEATURE_DATA_THREADING</unmanaged>	
            <unmanaged-short>D3D11_FEATURE_DATA_THREADING</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataThreading.DriverConcurrentCreates">
            <summary>	
            <dd> <p><strong>TRUE</strong> means resources can be created concurrently on multiple threads while drawing; <strong><see cref="F:SharpDX.Result.False"/></strong> means that the presence of coarse synchronization will prevent concurrency.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_THREADING::DriverConcurrentCreates']/*"/>	
            <msdn-id>ff476130</msdn-id>	
            <unmanaged>BOOL DriverConcurrentCreates</unmanaged>	
            <unmanaged-short>BOOL DriverConcurrentCreates</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataThreading.DriverCommandLists">
            <summary>	
            <dd> <p><strong>TRUE</strong> means command lists are supported by the current driver; <strong><see cref="F:SharpDX.Result.False"/></strong> means that the API will emulate deferred contexts and command lists with software.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_THREADING::DriverCommandLists']/*"/>	
            <msdn-id>ff476130</msdn-id>	
            <unmanaged>BOOL DriverCommandLists</unmanaged>	
            <unmanaged-short>BOOL DriverCommandLists</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.InputElement">
            <summary>	
            <p>A description of a single element for the input-assembler stage.</p>	
            </summary>	
            <remarks>	
            <p>An input-layout object contains an array of structures, each structure defines one element being read from an input slot. Create an input-layout  object by calling <strong><see cref="M:SharpDX.Direct3D11.Device.CreateInputLayout(SharpDX.Direct3D11.InputElement[],System.Int32,System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.InputLayout)"/></strong>. For an example, see the "Create the Input-Layout Object" subtopic under the  Getting Started with the Input-Assembler Stage topic.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC']/*"/>	
            <msdn-id>ff476180</msdn-id>	
            <unmanaged>D3D11_INPUT_ELEMENT_DESC</unmanaged>	
            <unmanaged-short>D3D11_INPUT_ELEMENT_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.SemanticName">
            <summary>	
            <dd> <p>The HLSL semantic associated with this element in a shader input-signature.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::SemanticName']/*"/>	
            <msdn-id>ff476180</msdn-id>	
            <unmanaged>const char* SemanticName</unmanaged>	
            <unmanaged-short>char SemanticName</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.SemanticIndex">
            <summary>	
            <dd> <p>The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a  case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic  name </p>  <pre><code>matrix</code></pre>  <p>, however each of the four component would have different semantic indices (0, 1, 2, and 3).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::SemanticIndex']/*"/>	
            <msdn-id>ff476180</msdn-id>	
            <unmanaged>unsigned int SemanticIndex</unmanaged>	
            <unmanaged-short>unsigned int SemanticIndex</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.Format">
            <summary>	
            <dd> <p>The data type of the element data. See <strong><see cref="T:SharpDX.DXGI.Format"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::Format']/*"/>	
            <msdn-id>ff476180</msdn-id>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
            <unmanaged-short>DXGI_FORMAT Format</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.Slot">
            <summary>	
            <dd> <p>An integer value that identifies the input-assembler (see input slot). Valid values are between 0 and 15, defined in D3D11.h.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::InputSlot']/*"/>	
            <msdn-id>ff476180</msdn-id>	
            <unmanaged>unsigned int InputSlot</unmanaged>	
            <unmanaged-short>unsigned int InputSlot</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.AlignedByteOffset">
            <summary>	
            <dd> <p>Optional. Offset (in bytes) between each element. Use D3D11_APPEND_ALIGNED_ELEMENT for convenience to define the current element directly  after the previous one, including any packing if necessary.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::AlignedByteOffset']/*"/>	
            <msdn-id>ff476180</msdn-id>	
            <unmanaged>unsigned int AlignedByteOffset</unmanaged>	
            <unmanaged-short>unsigned int AlignedByteOffset</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.Classification">
            <summary>	
            <dd> <p>Identifies the input data class for a single input slot (see <strong><see cref="T:SharpDX.Direct3D11.InputClassification"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::InputSlotClass']/*"/>	
            <msdn-id>ff476180</msdn-id>	
            <unmanaged>D3D11_INPUT_CLASSIFICATION InputSlotClass</unmanaged>	
            <unmanaged-short>D3D11_INPUT_CLASSIFICATION InputSlotClass</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.InstanceDataStepRate">
            <summary>	
            <dd> <p>The number of instances to draw using the same per-instance data before advancing in the buffer by one element. This value must be 0 for an  element that contains per-vertex data (the slot class is set to <see cref="F:SharpDX.Direct3D11.InputClassification.PerVertexData"/>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::InstanceDataStepRate']/*"/>	
            <msdn-id>ff476180</msdn-id>	
            <unmanaged>unsigned int InstanceDataStepRate</unmanaged>	
            <unmanaged-short>unsigned int InstanceDataStepRate</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.#ctor(System.String,System.Int32,SharpDX.DXGI.Format,System.Int32,System.Int32,SharpDX.Direct3D11.InputClassification,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.InputElement" /> struct.
            </summary>
            <param name = "name">The HLSL semantic associated with this element in a shader input-signature.</param>
            <param name = "index">The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix, however each of the four component would have different semantic indices (0, 1, 2, and 3).</param>
            <param name = "format">The data type of the element data.</param>
            <param name = "offset">Offset (in bytes) between each element. Use AppendAligned for convenience to define the current element directly after the previous one, including any packing if necessary.</param>
            <param name = "slot">An integer value that identifies the input-assembler. Valid values are between 0 and 15.</param>
            <param name = "slotClass">Identifies the input data class for a single input slot.</param>
            <param name = "stepRate">The number of instances to draw using the same per-instance data before advancing in the buffer by one element. This value must be 0 for an element that contains per-vertex data.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.#ctor(System.String,System.Int32,SharpDX.DXGI.Format,System.Int32,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.InputElement" /> struct.
            </summary>
            <param name = "name">The HLSL semantic associated with this element in a shader input-signature.</param>
            <param name = "index">The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix, however each of the four component would have different semantic indices (0, 1, 2, and 3).</param>
            <param name = "format">The data type of the element data.</param>
            <param name = "offset">Offset (in bytes) between each element. Use AppendAligned for convenience to define the current element directly after the previous one, including any packing if necessary.</param>
            <param name = "slot">An integer value that identifies the input-assembler. Valid values are between 0 and 15.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.#ctor(System.String,System.Int32,SharpDX.DXGI.Format,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.InputElement" /> struct.
            </summary>
            <param name = "name">The HLSL semantic associated with this element in a shader input-signature.</param>
            <param name = "index">The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix, however each of the four component would have different semantic indices (0, 1, 2, and 3).</param>
            <param name = "format">The data type of the element data.</param>
            <param name = "slot">An integer value that identifies the input-assembler. Valid values are between 0 and 15.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.Equals(SharpDX.Direct3D11.InputElement)">
            <summary>
            Determines whether the specified <see cref="T:SharpDX.Direct3D11.InputElement"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:SharpDX.Direct3D11.InputElement"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:SharpDX.Direct3D11.InputElement"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.op_Equality(SharpDX.Direct3D11.InputElement,SharpDX.Direct3D11.InputElement)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.op_Inequality(SharpDX.Direct3D11.InputElement,SharpDX.Direct3D11.InputElement)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="P:SharpDX.Direct3D11.InputElement.AppendAligned">
            <summary>
              Returns a value that can be used for the offset parameter of an InputElement to indicate that the element
              should be aligned directly after the previous element, including any packing if neccessary.
            </summary>
            <returns>A value used to align input elements.</returns>
            <unmanaged>D3D11_APPEND_ALIGNED_ELEMENT</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.MessageAuthenticationCode">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Contains a Message Authentication Code (MAC). </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_OMAC']/*"/>	
            <msdn-id>hh447631</msdn-id>	
            <unmanaged>D3D11_OMAC</unmanaged>	
            <unmanaged-short>D3D11_OMAC</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.MessageAuthenticationCode.Buffer">
            <summary>	
            <dd> <p>A byte array that contains the cryptographic MAC value of the message.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_OMAC::Omac']/*"/>	
            <msdn-id>hh447631</msdn-id>	
            <unmanaged>unsigned char Omac[16]</unmanaged>	
            <unmanaged-short>unsigned char Omac</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.QueryDataPipelineStatistics">
            <summary>	
            <p>Query information about graphics-pipeline activity in between calls to <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS']/*"/>	
            <msdn-id>ff476192</msdn-id>	
            <unmanaged>D3D11_QUERY_DATA_PIPELINE_STATISTICS</unmanaged>	
            <unmanaged-short>D3D11_QUERY_DATA_PIPELINE_STATISTICS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.IAVerticeCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::IAVertices']/*"/>	
            <unmanaged>unsigned longlong IAVertices</unmanaged>	
            <unmanaged-short>unsigned longlong IAVertices</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.IAPrimitiveCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::IAPrimitives']/*"/>	
            <unmanaged>unsigned longlong IAPrimitives</unmanaged>	
            <unmanaged-short>unsigned longlong IAPrimitives</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.VSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::VSInvocations']/*"/>	
            <unmanaged>unsigned longlong VSInvocations</unmanaged>	
            <unmanaged-short>unsigned longlong VSInvocations</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.GSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::GSInvocations']/*"/>	
            <unmanaged>unsigned longlong GSInvocations</unmanaged>	
            <unmanaged-short>unsigned longlong GSInvocations</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.GSPrimitiveCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::GSPrimitives']/*"/>	
            <unmanaged>unsigned longlong GSPrimitives</unmanaged>	
            <unmanaged-short>unsigned longlong GSPrimitives</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.CInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::CInvocations']/*"/>	
            <unmanaged>unsigned longlong CInvocations</unmanaged>	
            <unmanaged-short>unsigned longlong CInvocations</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.CPrimitiveCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::CPrimitives']/*"/>	
            <unmanaged>unsigned longlong CPrimitives</unmanaged>	
            <unmanaged-short>unsigned longlong CPrimitives</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.PSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::PSInvocations']/*"/>	
            <unmanaged>unsigned longlong PSInvocations</unmanaged>	
            <unmanaged-short>unsigned longlong PSInvocations</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.HSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::HSInvocations']/*"/>	
            <unmanaged>unsigned longlong HSInvocations</unmanaged>	
            <unmanaged-short>unsigned longlong HSInvocations</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.DSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::DSInvocations']/*"/>	
            <unmanaged>unsigned longlong DSInvocations</unmanaged>	
            <unmanaged-short>unsigned longlong DSInvocations</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.CSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::CSInvocations']/*"/>	
            <unmanaged>unsigned longlong CSInvocations</unmanaged>	
            <unmanaged-short>unsigned longlong CSInvocations</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.QueryDataTimestampDisjoint">
            <summary>	
            <p>Query information about the reliability of a timestamp query.</p>	
            </summary>	
            <remarks>	
            <p>For a list of query types see <strong><see cref="T:SharpDX.Direct3D11.QueryType"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_TIMESTAMP_DISJOINT']/*"/>	
            <msdn-id>ff476194</msdn-id>	
            <unmanaged>D3D11_QUERY_DATA_TIMESTAMP_DISJOINT</unmanaged>	
            <unmanaged-short>D3D11_QUERY_DATA_TIMESTAMP_DISJOINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataTimestampDisjoint.Frequency">
            <summary>	
            <dd> <p>How frequently the GPU counter increments in Hz.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_TIMESTAMP_DISJOINT::Frequency']/*"/>	
            <msdn-id>ff476194</msdn-id>	
            <unmanaged>unsigned longlong Frequency</unmanaged>	
            <unmanaged-short>unsigned longlong Frequency</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataTimestampDisjoint.Disjoint">
            <summary>	
            <dd> <p>If this is <strong>TRUE</strong>, something occurred in between the query's <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong> calls that caused the timestamp counter to become discontinuous or disjoint, such as unplugging the AC chord on a laptop, overheating, or throttling up/down due to laptop savings events. The timestamp returned by <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/></strong> for a timestamp query is only reliable if Disjoint is <strong><see cref="F:SharpDX.Result.False"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_TIMESTAMP_DISJOINT::Disjoint']/*"/>	
            <msdn-id>ff476194</msdn-id>	
            <unmanaged>BOOL Disjoint</unmanaged>	
            <unmanaged-short>BOOL Disjoint</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.QueryDescription">
            <summary>	
            <p>Describes a query.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DESC']/*"/>	
            <msdn-id>ff476195</msdn-id>	
            <unmanaged>D3D11_QUERY_DESC</unmanaged>	
            <unmanaged-short>D3D11_QUERY_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDescription.Type">
            <summary>	
            <dd> <p>Type of query (see <strong><see cref="T:SharpDX.Direct3D11.QueryType"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DESC::Query']/*"/>	
            <msdn-id>ff476195</msdn-id>	
            <unmanaged>D3D11_QUERY Query</unmanaged>	
            <unmanaged-short>D3D11_QUERY Query</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDescription.Flags">
            <summary>	
            <dd> <p>Miscellaneous flags (see <strong><see cref="T:SharpDX.Direct3D11.QueryFlags"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DESC::MiscFlags']/*"/>	
            <msdn-id>ff476195</msdn-id>	
            <unmanaged>D3D11_QUERY_MISC_FLAG MiscFlags</unmanaged>	
            <unmanaged-short>D3D11_QUERY_MISC_FLAG MiscFlags</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetBlendDescription">
            <summary>	
            <p>Describes the blend state for a render target.</p>	
            </summary>	
            <remarks>	
            <p>For info about how blending is done, see the output-merger stage.</p><p>Here are the default values for blend state.</p><table> <tr><th>State</th><th>Default Value</th></tr> <tr><td>BlendEnable</td><td><see cref="F:SharpDX.Result.False"/></td></tr> <tr><td>SrcBlend</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.One"/></td></tr> <tr><td>DestBlend</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.Zero"/></td></tr> <tr><td>BlendOp</td><td><see cref="F:SharpDX.Direct3D11.BlendOperation.Add"/></td></tr> <tr><td>SrcBlendAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.One"/></td></tr> <tr><td>DestBlendAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.Zero"/></td></tr> <tr><td>BlendOpAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOperation.Add"/></td></tr> <tr><td>RenderTargetWriteMask</td><td><see cref="F:SharpDX.Direct3D11.ColorWriteMaskFlags.All"/></td></tr> </table><p>?</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC']/*"/>	
            <msdn-id>ff476200</msdn-id>	
            <unmanaged>D3D11_RENDER_TARGET_BLEND_DESC</unmanaged>	
            <unmanaged-short>D3D11_RENDER_TARGET_BLEND_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.IsBlendEnabled">
            <summary>	
            <dd> <p>Enable (or disable) blending.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::BlendEnable']/*"/>	
            <msdn-id>ff476200</msdn-id>	
            <unmanaged>BOOL BlendEnable</unmanaged>	
            <unmanaged-short>BOOL BlendEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.SourceBlend">
            <summary>	
            <dd> <p>This <strong>blend option</strong> specifies the operation to perform on the RGB value that the pixel shader outputs. The <strong>BlendOp</strong> member defines how to combine the <strong>SrcBlend</strong> and <strong>DestBlend</strong> operations.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::SrcBlend']/*"/>	
            <msdn-id>ff476200</msdn-id>	
            <unmanaged>D3D11_BLEND SrcBlend</unmanaged>	
            <unmanaged-short>D3D11_BLEND SrcBlend</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.DestinationBlend">
            <summary>	
            <dd> <p>This <strong>blend option</strong> specifies the operation to perform on the current RGB value in the render target. The <strong>BlendOp</strong> member defines how to combine the <strong>SrcBlend</strong> and <strong>DestBlend</strong> operations.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::DestBlend']/*"/>	
            <msdn-id>ff476200</msdn-id>	
            <unmanaged>D3D11_BLEND DestBlend</unmanaged>	
            <unmanaged-short>D3D11_BLEND DestBlend</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.BlendOperation">
            <summary>	
            <dd> <p>This <strong>blend operation</strong> defines how to combine the <strong>SrcBlend</strong> and <strong>DestBlend</strong> operations.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::BlendOp']/*"/>	
            <msdn-id>ff476200</msdn-id>	
            <unmanaged>D3D11_BLEND_OP BlendOp</unmanaged>	
            <unmanaged-short>D3D11_BLEND_OP BlendOp</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.SourceAlphaBlend">
            <summary>	
            <dd> <p>This <strong>blend option</strong> specifies the operation to perform on the alpha value that the pixel shader outputs. Blend options that end in _COLOR are not allowed. The <strong>BlendOpAlpha</strong> member defines how to combine the <strong>SrcBlendAlpha</strong> and <strong>DestBlendAlpha</strong> operations.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::SrcBlendAlpha']/*"/>	
            <msdn-id>ff476200</msdn-id>	
            <unmanaged>D3D11_BLEND SrcBlendAlpha</unmanaged>	
            <unmanaged-short>D3D11_BLEND SrcBlendAlpha</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.DestinationAlphaBlend">
            <summary>	
            <dd> <p>This <strong>blend option</strong> specifies the operation to perform on the current alpha value in the render target. Blend options that end in _COLOR are not allowed. The <strong>BlendOpAlpha</strong> member defines how to combine the <strong>SrcBlendAlpha</strong> and <strong>DestBlendAlpha</strong> operations.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::DestBlendAlpha']/*"/>	
            <msdn-id>ff476200</msdn-id>	
            <unmanaged>D3D11_BLEND DestBlendAlpha</unmanaged>	
            <unmanaged-short>D3D11_BLEND DestBlendAlpha</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.AlphaBlendOperation">
            <summary>	
            <dd> <p>This <strong>blend operation</strong> defines how to combine the <strong>SrcBlendAlpha</strong> and <strong>DestBlendAlpha</strong> operations.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::BlendOpAlpha']/*"/>	
            <msdn-id>ff476200</msdn-id>	
            <unmanaged>D3D11_BLEND_OP BlendOpAlpha</unmanaged>	
            <unmanaged-short>D3D11_BLEND_OP BlendOpAlpha</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.RenderTargetWriteMask">
            <summary>	
            <dd> <p>A write mask.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::RenderTargetWriteMask']/*"/>	
            <msdn-id>ff476200</msdn-id>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE RenderTargetWriteMask</unmanaged>	
            <unmanaged-short>D3D11_COLOR_WRITE_ENABLE RenderTargetWriteMask</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.RenderTargetBlendDescription.#ctor(System.Boolean,SharpDX.Direct3D11.BlendOption,SharpDX.Direct3D11.BlendOption,SharpDX.Direct3D11.BlendOperation,SharpDX.Direct3D11.BlendOption,SharpDX.Direct3D11.BlendOption,SharpDX.Direct3D11.BlendOperation,SharpDX.Direct3D11.ColorWriteMaskFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.RenderTargetBlendDescription"/> struct.
            </summary>
            <param name="isBlendEnabled">The is blend enabled.</param>
            <param name="sourceBlend">The source blend.</param>
            <param name="destinationBlend">The destination blend.</param>
            <param name="blendOperation">The blend operation.</param>
            <param name="sourceAlphaBlend">The source alpha blend.</param>
            <param name="destinationAlphaBlend">The destination alpha blend.</param>
            <param name="alphaBlendOperation">The alpha blend operation.</param>
            <param name="renderTargetWriteMask">The render target write mask.</param>
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetBlendDescription1">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p><strong>Note</strong>??This structure is supported by the Direct3D 11.1 runtime, which is available on Windows?8 Consumer Preview and later operating systems.</p><p>Describes the blend state for a render target.</p>	
            </summary>	
            <remarks>	
            <p>You specify an array of <strong><see cref="T:SharpDX.Direct3D11.RenderTargetBlendDescription1"/></strong> structures in the <strong>RenderTarget</strong> member of the <strong><see cref="T:SharpDX.Direct3D11.BlendStateDescription1"/></strong> structure to describe the blend states for render targets; you can bind up to eight render targets to the output-merger stage at one time.</p><p>For info about how blending is done, see the output-merger stage.</p><p>Here are the default values for blend state.</p><table> <tr><th>State</th><th>Default Value</th></tr> <tr><td>BlendEnable</td><td><see cref="F:SharpDX.Result.False"/></td></tr> <tr><td>LogicOpEnable</td><td><see cref="F:SharpDX.Result.False"/></td></tr> <tr><td>SrcBlend</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.One"/></td></tr> <tr><td>DestBlend</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.Zero"/></td></tr> <tr><td>BlendOp</td><td><see cref="F:SharpDX.Direct3D11.BlendOperation.Add"/></td></tr> <tr><td>SrcBlendAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.One"/></td></tr> <tr><td>DestBlendAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOption.Zero"/></td></tr> <tr><td>BlendOpAlpha</td><td><see cref="F:SharpDX.Direct3D11.BlendOperation.Add"/></td></tr> <tr><td>LogicOp</td><td><see cref="F:SharpDX.Direct3D11.LogicOperation.Noop"/></td></tr> <tr><td>RenderTargetWriteMask</td><td><see cref="F:SharpDX.Direct3D11.ColorWriteMaskFlags.All"/></td></tr> </table><p>?</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1']/*"/>	
            <msdn-id>hh404492</msdn-id>	
            <unmanaged>D3D11_RENDER_TARGET_BLEND_DESC1</unmanaged>	
            <unmanaged-short>D3D11_RENDER_TARGET_BLEND_DESC1</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.IsBlendEnabled">
            <summary>	
            <dd> <p>Enable (or disable) blending.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::BlendEnable']/*"/>	
            <msdn-id>hh404492</msdn-id>	
            <unmanaged>BOOL BlendEnable</unmanaged>	
            <unmanaged-short>BOOL BlendEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.IsLogicOperationEnabled">
            <summary>	
            <dd> <p>Enable (or disable) a logical operation.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::LogicOpEnable']/*"/>	
            <msdn-id>hh404492</msdn-id>	
            <unmanaged>BOOL LogicOpEnable</unmanaged>	
            <unmanaged-short>BOOL LogicOpEnable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.SourceBlend">
            <summary>	
            <dd> <p>This <strong>blend option</strong> specifies the operation to perform on the RGB value that the pixel shader outputs. The <strong>BlendOp</strong> member defines how to combine the <strong>SrcBlend</strong> and <strong>DestBlend</strong> operations.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::SrcBlend']/*"/>	
            <msdn-id>hh404492</msdn-id>	
            <unmanaged>D3D11_BLEND SrcBlend</unmanaged>	
            <unmanaged-short>D3D11_BLEND SrcBlend</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.DestinationBlend">
            <summary>	
            <dd> <p>This <strong>blend option</strong> specifies the operation to perform on the current RGB value in the render target. The <strong>BlendOp</strong> member defines how to combine the <strong>SrcBlend</strong> and <strong>DestBlend</strong> operations.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::DestBlend']/*"/>	
            <msdn-id>hh404492</msdn-id>	
            <unmanaged>D3D11_BLEND DestBlend</unmanaged>	
            <unmanaged-short>D3D11_BLEND DestBlend</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.BlendOperation">
            <summary>	
            <dd> <p>This <strong>blend operation</strong> defines how to combine the <strong>SrcBlend</strong> and <strong>DestBlend</strong> operations.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::BlendOp']/*"/>	
            <msdn-id>hh404492</msdn-id>	
            <unmanaged>D3D11_BLEND_OP BlendOp</unmanaged>	
            <unmanaged-short>D3D11_BLEND_OP BlendOp</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.SourceAlphaBlend">
            <summary>	
            <dd> <p>This <strong>blend option</strong> specifies the operation to perform on the alpha value that the pixel shader outputs. Blend options that end in _COLOR are not allowed. The <strong>BlendOpAlpha</strong> member defines how to combine the <strong>SrcBlendAlpha</strong> and <strong>DestBlendAlpha</strong> operations.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::SrcBlendAlpha']/*"/>	
            <msdn-id>hh404492</msdn-id>	
            <unmanaged>D3D11_BLEND SrcBlendAlpha</unmanaged>	
            <unmanaged-short>D3D11_BLEND SrcBlendAlpha</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.DestinationAlphaBlend">
            <summary>	
            <dd> <p>This <strong>blend option</strong> specifies the operation to perform on the current alpha value in the render target. Blend options that end in _COLOR are not allowed. The <strong>BlendOpAlpha</strong> member defines how to combine the <strong>SrcBlendAlpha</strong> and <strong>DestBlendAlpha</strong> operations.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::DestBlendAlpha']/*"/>	
            <msdn-id>hh404492</msdn-id>	
            <unmanaged>D3D11_BLEND DestBlendAlpha</unmanaged>	
            <unmanaged-short>D3D11_BLEND DestBlendAlpha</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.AlphaBlendOperation">
            <summary>	
            <dd> <p>This <strong>blend operation</strong> defines how to combine the <strong>SrcBlendAlpha</strong> and <strong>DestBlendAlpha</strong> operations.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::BlendOpAlpha']/*"/>	
            <msdn-id>hh404492</msdn-id>	
            <unmanaged>D3D11_BLEND_OP BlendOpAlpha</unmanaged>	
            <unmanaged-short>D3D11_BLEND_OP BlendOpAlpha</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.LogicOperation">
            <summary>	
            <dd> <p>A  <strong><see cref="T:SharpDX.Direct3D11.LogicOperation"/></strong>-typed value that specifies the logical operation to configure for the render target.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::LogicOp']/*"/>	
            <msdn-id>hh404492</msdn-id>	
            <unmanaged>D3D11_LOGIC_OP LogicOp</unmanaged>	
            <unmanaged-short>D3D11_LOGIC_OP LogicOp</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.RenderTargetWriteMask">
            <summary>	
            <dd> <p>A write mask.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::RenderTargetWriteMask']/*"/>	
            <msdn-id>hh404492</msdn-id>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE RenderTargetWriteMask</unmanaged>	
            <unmanaged-short>D3D11_COLOR_WRITE_ENABLE RenderTargetWriteMask</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription">
            <summary>	
            <p>Specifies the subresources from a resource that are accessible using a render-target view.</p>	
            </summary>	
            <remarks>	
            <p>A render-target-view description is passed into <strong><see cref="M:SharpDX.Direct3D11.Device.CreateRenderTargetView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.RenderTargetViewDescription},SharpDX.Direct3D11.RenderTargetView)"/></strong> to create a render target.</p><p>A render-target-view cannot use the following formats:</p><ul> <li>Any typeless format.</li> <li>DXGI_FORMAT_R32G32B32 if the view will be used to bind a buffer (vertex, index, constant, or stream-output).</li> </ul><p>If the format is set to <see cref="F:SharpDX.DXGI.Format.Unknown"/>, then the format of the resource that the view binds to the pipeline will be used.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC']/*"/>	
            <msdn-id>ff476201</msdn-id>	
            <unmanaged>D3D11_RENDER_TARGET_VIEW_DESC</unmanaged>	
            <unmanaged-short>D3D11_RENDER_TARGET_VIEW_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Format">
            <summary>	
            <dd> <p>The data format (see <strong><see cref="T:SharpDX.DXGI.Format"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Format']/*"/>	
            <msdn-id>ff476201</msdn-id>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
            <unmanaged-short>DXGI_FORMAT Format</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Dimension">
            <summary>	
            <dd> <p>The resource type (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDimension"/></strong>), which specifies how the render-target resource will be accessed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::ViewDimension']/*"/>	
            <msdn-id>ff476201</msdn-id>	
            <unmanaged>D3D11_RTV_DIMENSION ViewDimension</unmanaged>	
            <unmanaged-short>D3D11_RTV_DIMENSION ViewDimension</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Buffer">
            <summary>	
            <dd> <p>Specifies which buffer elements can be accessed (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.BufferResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Buffer']/*"/>	
            <msdn-id>ff476201</msdn-id>	
            <unmanaged>D3D11_BUFFER_RTV Buffer</unmanaged>	
            <unmanaged-short>D3D11_BUFFER_RTV Buffer</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1D">
            <summary>	
            <dd> <p>Specifies the subresources in a 1D texture that can be accessed (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture1D']/*"/>	
            <msdn-id>ff476201</msdn-id>	
            <unmanaged>D3D11_TEX1D_RTV Texture1D</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_RTV Texture1D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DArray">
            <summary>	
            <dd> <p>Specifies the subresources in a 1D texture array that can be accessed (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DArrayResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture1DArray']/*"/>	
            <msdn-id>ff476201</msdn-id>	
            <unmanaged>D3D11_TEX1D_ARRAY_RTV Texture1DArray</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_ARRAY_RTV Texture1DArray</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2D">
            <summary>	
            <dd> <p>Specifies the subresources in a 2D texture that can be accessed (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture2D']/*"/>	
            <msdn-id>ff476201</msdn-id>	
            <unmanaged>D3D11_TEX2D_RTV Texture2D</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_RTV Texture2D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DArray">
            <summary>	
            <dd> <p>Specifies the subresources in a 2D texture array that can be accessed (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DArrayResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture2DArray']/*"/>	
            <msdn-id>ff476201</msdn-id>	
            <unmanaged>D3D11_TEX2D_ARRAY_RTV Texture2DArray</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_ARRAY_RTV Texture2DArray</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMS">
            <summary>	
            <dd> <p>Specifies a single subresource because a multisampled 2D texture only contains one subresource (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture2DMS']/*"/>	
            <msdn-id>ff476201</msdn-id>	
            <unmanaged>D3D11_TEX2DMS_RTV Texture2DMS</unmanaged>	
            <unmanaged-short>D3D11_TEX2DMS_RTV Texture2DMS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMSArray">
            <summary>	
            <dd> <p>Specifies the subresources in a multisampled 2D texture array that can be accessed (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledArrayResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture2DMSArray']/*"/>	
            <msdn-id>ff476201</msdn-id>	
            <unmanaged>D3D11_TEX2DMS_ARRAY_RTV Texture2DMSArray</unmanaged>	
            <unmanaged-short>D3D11_TEX2DMS_ARRAY_RTV Texture2DMSArray</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture3D">
            <summary>	
            <dd> <p>Specifies subresources in a 3D texture that can be accessed (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture3DResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture3D']/*"/>	
            <msdn-id>ff476201</msdn-id>	
            <unmanaged>D3D11_TEX3D_RTV Texture3D</unmanaged>	
            <unmanaged-short>D3D11_TEX3D_RTV Texture3D</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DArrayResource">
            <summary>	
            <p>Specifies the subresources from an array of 2D textures to use in a render-target view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a render-target-view description (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_RTV']/*"/>	
            <msdn-id>ff476240</msdn-id>	
            <unmanaged>D3D11_TEX2D_ARRAY_RTV</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_ARRAY_RTV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DArrayResource.MipSlice">
            <summary>	
            <dd> <p>The index of the mipmap level to use mip slice.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_RTV::MipSlice']/*"/>	
            <msdn-id>ff476240</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DArrayResource.FirstArraySlice">
            <summary>	
            <dd> <p>The index of the first texture to use in an array of textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_RTV::FirstArraySlice']/*"/>	
            <msdn-id>ff476240</msdn-id>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
            <unmanaged-short>unsigned int FirstArraySlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DArrayResource.ArraySize">
            <summary>	
            <dd> <p>Number of textures in the array to use in the render target view, starting from <strong>FirstArraySlice</strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_RTV::ArraySize']/*"/>	
            <msdn-id>ff476240</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledArrayResource">
            <summary>	
            <p>Specifies the subresources from a an array of multisampled 2D textures to use in a render-target view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a render-target-view description (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_RTV']/*"/>	
            <msdn-id>ff476234</msdn-id>	
            <unmanaged>D3D11_TEX2DMS_ARRAY_RTV</unmanaged>	
            <unmanaged-short>D3D11_TEX2DMS_ARRAY_RTV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledArrayResource.FirstArraySlice">
            <summary>	
            <dd> <p>The index of the first texture to use in an array of textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_RTV::FirstArraySlice']/*"/>	
            <msdn-id>ff476234</msdn-id>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
            <unmanaged-short>unsigned int FirstArraySlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledArrayResource.ArraySize">
            <summary>	
            <dd> <p>Number of textures to use.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_RTV::ArraySize']/*"/>	
            <msdn-id>ff476234</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledResource">
            <summary>	
            <p>Specifies the subresource from a multisampled 2D texture to use in a render-target view.</p>	
            </summary>	
            <remarks>	
            <p>Since a multisampled 2D texture contains a single subresource, there is actually nothing to specify in <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledResource"/>. Consequently, <strong>UnusedField_NothingToDefine</strong> is included so that this structure will compile in C.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_RTV']/*"/>	
            <msdn-id>ff476237</msdn-id>	
            <unmanaged>D3D11_TEX2DMS_RTV</unmanaged>	
            <unmanaged-short>D3D11_TEX2DMS_RTV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledResource.UnusedFieldNothingToDefine">
            <summary>	
            <dd> <p>Integer of any value. See remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_RTV::UnusedField_NothingToDefine']/*"/>	
            <msdn-id>ff476237</msdn-id>	
            <unmanaged>unsigned int UnusedField_NothingToDefine</unmanaged>	
            <unmanaged-short>unsigned int UnusedField_NothingToDefine</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DResource">
            <summary>	
            <p>Specifies the subresource from a 1D texture to use in a render-target view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a render-target-view description (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_RTV']/*"/>	
            <msdn-id>ff476230</msdn-id>	
            <unmanaged>D3D11_TEX1D_RTV</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_RTV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DResource.MipSlice">
            <summary>	
            <dd> <p>The index of the mipmap level to use mip slice.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_RTV::MipSlice']/*"/>	
            <msdn-id>ff476230</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture3DResource">
            <summary>	
            <p>Specifies the subresources from a 3D texture to use in a render-target view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a render target view. See <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_RTV']/*"/>	
            <msdn-id>ff476247</msdn-id>	
            <unmanaged>D3D11_TEX3D_RTV</unmanaged>	
            <unmanaged-short>D3D11_TEX3D_RTV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture3DResource.MipSlice">
            <summary>	
            <dd> <p>The index of the mipmap level to use mip slice.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_RTV::MipSlice']/*"/>	
            <msdn-id>ff476247</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture3DResource.FirstDepthSlice">
            <summary>	
            <dd> <p>First depth level to use.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_RTV::FirstWSlice']/*"/>	
            <msdn-id>ff476247</msdn-id>	
            <unmanaged>unsigned int FirstWSlice</unmanaged>	
            <unmanaged-short>unsigned int FirstWSlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture3DResource.DepthSliceCount">
            <summary>	
            <dd> <p>Number of depth levels to use in the render-target view, starting from <strong>FirstWSlice</strong>. A value of -1 indicates all of the slices along the w axis, starting from <strong>FirstWSlice</strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_RTV::WSize']/*"/>	
            <msdn-id>ff476247</msdn-id>	
            <unmanaged>unsigned int WSize</unmanaged>	
            <unmanaged-short>unsigned int WSize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.BufferResource">
            <summary>	
            <p>Specifies the elements in a buffer resource to use in a render-target view.</p>	
            </summary>	
            <remarks>	
            <p>A render-target view is a member of a render-target-view description (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/></strong>). Create a render-target view by calling <strong><see cref="M:SharpDX.Direct3D11.Device.CreateRenderTargetView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.RenderTargetViewDescription},SharpDX.Direct3D11.RenderTargetView)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_RTV']/*"/>	
            <msdn-id>ff476093</msdn-id>	
            <unmanaged>D3D11_BUFFER_RTV</unmanaged>	
            <unmanaged-short>D3D11_BUFFER_RTV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.BufferResource.FirstElement">
            <summary>	
            <dd> <p>Number of bytes between the beginning of the buffer and the first element to access.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_RTV::FirstElement']/*"/>	
            <msdn-id>ff476093</msdn-id>	
            <unmanaged>unsigned int FirstElement</unmanaged>	
            <unmanaged-short>unsigned int FirstElement</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.BufferResource.ElementOffset">
            <summary>	
            <dd> <p>The offset of the first element in the view to access, relative to element 0.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_RTV::ElementOffset']/*"/>	
            <msdn-id>ff476093</msdn-id>	
            <unmanaged>unsigned int ElementOffset</unmanaged>	
            <unmanaged-short>unsigned int ElementOffset</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.BufferResource.ElementCount">
            <summary>	
            <dd> <p>The total number of elements in the view.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_RTV::NumElements']/*"/>	
            <msdn-id>ff476093</msdn-id>	
            <unmanaged>unsigned int NumElements</unmanaged>	
            <unmanaged-short>unsigned int NumElements</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.BufferResource.ElementWidth">
            <summary>	
            <dd> <p>The width of each element (in bytes). This can be determined from the format stored in the render-target-view description.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_RTV::ElementWidth']/*"/>	
            <msdn-id>ff476093</msdn-id>	
            <unmanaged>unsigned int ElementWidth</unmanaged>	
            <unmanaged-short>unsigned int ElementWidth</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DResource">
            <summary>	
            <p>Specifies the subresource from a 2D texture to use in a render-target view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a render-target-view description (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_RTV']/*"/>	
            <msdn-id>ff476244</msdn-id>	
            <unmanaged>D3D11_TEX2D_RTV</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_RTV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DResource.MipSlice">
            <summary>	
            <dd> <p>The index of the mipmap level to use mip slice.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_RTV::MipSlice']/*"/>	
            <msdn-id>ff476244</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DArrayResource">
            <summary>	
            <p>Specifies the subresources from an array of 1D textures to use in a render-target view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a render-target-view description (see <strong><see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_RTV']/*"/>	
            <msdn-id>ff476226</msdn-id>	
            <unmanaged>D3D11_TEX1D_ARRAY_RTV</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_ARRAY_RTV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DArrayResource.MipSlice">
            <summary>	
            <dd> <p>The index of the mipmap level to use mip slice.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_RTV::MipSlice']/*"/>	
            <msdn-id>ff476226</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DArrayResource.FirstArraySlice">
            <summary>	
            <dd> <p>The index of the first texture to use in an array of textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_RTV::FirstArraySlice']/*"/>	
            <msdn-id>ff476226</msdn-id>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
            <unmanaged-short>unsigned int FirstArraySlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DArrayResource.ArraySize">
            <summary>	
            <dd> <p>Number of textures to use.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_RTV::ArraySize']/*"/>	
            <msdn-id>ff476226</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ResourceRegion">
            <summary>	
            <p>Defines a 3D box.</p>	
            </summary>	
            <remarks>	
            <p>The following diagram shows a 3D box, where the origin is the left, front, top corner.</p><p></p><p>The values for <strong>right</strong>, <strong>bottom</strong>, and <strong>back</strong> are each one pixel past the end of the pixels that are included in the box region.  That is, the values for <strong>left</strong>, <strong>top</strong>, and <strong>front</strong> are included in the box region while the values for right, bottom, and back are excluded from the box region. For example, for a box that is one pixel wide, (right - left) == 1; the box region includes the left pixel but not the right pixel.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX']/*"/>	
            <msdn-id>ff476089</msdn-id>	
            <unmanaged>D3D11_BOX</unmanaged>	
            <unmanaged-short>D3D11_BOX</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceRegion.Left">
            <summary>	
            <dd> <p>The x position of the left hand side of the box.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX::left']/*"/>	
            <msdn-id>ff476089</msdn-id>	
            <unmanaged>unsigned int left</unmanaged>	
            <unmanaged-short>unsigned int left</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceRegion.Top">
            <summary>	
            <dd> <p>The y position of the top of the box.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX::top']/*"/>	
            <msdn-id>ff476089</msdn-id>	
            <unmanaged>unsigned int top</unmanaged>	
            <unmanaged-short>unsigned int top</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceRegion.Front">
            <summary>	
            <dd> <p>The z position of the front of the box.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX::front']/*"/>	
            <msdn-id>ff476089</msdn-id>	
            <unmanaged>unsigned int front</unmanaged>	
            <unmanaged-short>unsigned int front</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceRegion.Right">
            <summary>	
            <dd> <p>The x position of the right hand side of the box.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX::right']/*"/>	
            <msdn-id>ff476089</msdn-id>	
            <unmanaged>unsigned int right</unmanaged>	
            <unmanaged-short>unsigned int right</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceRegion.Bottom">
            <summary>	
            <dd> <p>The y position of the bottom of the box.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX::bottom']/*"/>	
            <msdn-id>ff476089</msdn-id>	
            <unmanaged>unsigned int bottom</unmanaged>	
            <unmanaged-short>unsigned int bottom</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceRegion.Back">
            <summary>	
            <dd> <p>The z position of the back of the box.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX::back']/*"/>	
            <msdn-id>ff476089</msdn-id>	
            <unmanaged>unsigned int back</unmanaged>	
            <unmanaged-short>unsigned int back</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.ResourceRegion.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initiailize a new instance of <see cref="T:SharpDX.Direct3D11.ResourceRegion"/> struct.
            </summary>
            <param name="left">Left coordinates (inclusive)</param>
            <param name="top">Top coordinates (inclusive)</param>
            <param name="front">Front coordinates (inclusive)</param>
            <param name="right">Right coordinates (exclusive)</param>
            <param name="bottom">Botoom coordinates (exclusive)</param>
            <param name="back">Back coordinates (exclusive)</param>
            <remarks>
            <ul>
            <li>For a Width of 1 pixels, (right - left) = 1. If left = 0, right = Width. </li>
            <li>For a Height of 1 pixels, (bottom - top) = 1. If top = 0, bottom = Height.</li>
            <li>For a Depth of 1 pixels, (back - front) = 1. If front = 0, back = Depth. </li>
            </ul>
            </remarks>
        </member>
        <member name="T:SharpDX.Direct3D11.SamplerStateDescription">
            <summary>	
            <p>Describes a sampler state.</p>	
            </summary>	
            <remarks>	
            <p>These are the default values for sampler state.</p><table> <tr><th>State</th><th>Default Value</th></tr> <tr><td>Filter</td><td>MIN_MAG_MIP_LINEAR</td></tr> <tr><td>AddressU</td><td>Clamp</td></tr> <tr><td>AddressV</td><td>Clamp</td></tr> <tr><td>AddressW</td><td>Clamp</td></tr> <tr><td>MinLOD</td><td>-3.402823466e+38F (-FLT_MAX)</td></tr> <tr><td>MaxLOD</td><td>3.402823466e+38F (FLT_MAX)</td></tr> <tr><td>MipMapLODBias</td><td>0.0f</td></tr> <tr><td>MaxAnisotropy</td><td>16</td></tr> <tr><td>ComparisonFunc</td><td>Never</td></tr> <tr><td>BorderColor</td><td>float4(0.0f,0.0f,0.0f,0.0f)</td></tr> <tr><td>Texture</td><td>N/A</td></tr> </table><p>?</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC']/*"/>	
            <msdn-id>ff476207</msdn-id>	
            <unmanaged>D3D11_SAMPLER_DESC</unmanaged>	
            <unmanaged-short>D3D11_SAMPLER_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.Filter">
            <summary>	
            <dd> <p>Filtering method to use when sampling a texture (see <strong><see cref="T:SharpDX.Direct3D11.Filter"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::Filter']/*"/>	
            <msdn-id>ff476207</msdn-id>	
            <unmanaged>D3D11_FILTER Filter</unmanaged>	
            <unmanaged-short>D3D11_FILTER Filter</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.AddressU">
            <summary>	
            <dd> <p>Method to use for resolving a u texture coordinate that is outside the 0 to 1 range (see <strong><see cref="T:SharpDX.Direct3D11.TextureAddressMode"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::AddressU']/*"/>	
            <msdn-id>ff476207</msdn-id>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_MODE AddressU</unmanaged>	
            <unmanaged-short>D3D11_TEXTURE_ADDRESS_MODE AddressU</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.AddressV">
            <summary>	
            <dd> <p>Method to use for resolving a v texture coordinate that is outside the 0 to 1 range.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::AddressV']/*"/>	
            <msdn-id>ff476207</msdn-id>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_MODE AddressV</unmanaged>	
            <unmanaged-short>D3D11_TEXTURE_ADDRESS_MODE AddressV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.AddressW">
            <summary>	
            <dd> <p>Method to use for resolving a w texture coordinate that is outside the 0 to 1 range.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::AddressW']/*"/>	
            <msdn-id>ff476207</msdn-id>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_MODE AddressW</unmanaged>	
            <unmanaged-short>D3D11_TEXTURE_ADDRESS_MODE AddressW</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.MipLodBias">
            <summary>	
            <dd> <p>Offset from the calculated mipmap level. For example, if Direct3D calculates that a texture should be sampled at mipmap level 3 and MipLODBias is 2, then the texture will be sampled at mipmap level 5.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::MipLODBias']/*"/>	
            <msdn-id>ff476207</msdn-id>	
            <unmanaged>float MipLODBias</unmanaged>	
            <unmanaged-short>float MipLODBias</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.MaximumAnisotropy">
            <summary>	
            <dd> <p>Clamping value used if <see cref="F:SharpDX.Direct3D11.Filter.Anisotropic"/> or <see cref="F:SharpDX.Direct3D11.Filter.ComparisonAnisotropic"/> is specified in Filter. Valid values are between 1 and 16.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::MaxAnisotropy']/*"/>	
            <msdn-id>ff476207</msdn-id>	
            <unmanaged>unsigned int MaxAnisotropy</unmanaged>	
            <unmanaged-short>unsigned int MaxAnisotropy</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.ComparisonFunction">
            <summary>	
            <dd> <p>A function that compares sampled data against existing sampled data. The function options are listed in <strong><see cref="T:SharpDX.Direct3D11.Comparison"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::ComparisonFunc']/*"/>	
            <msdn-id>ff476207</msdn-id>	
            <unmanaged>D3D11_COMPARISON_FUNC ComparisonFunc</unmanaged>	
            <unmanaged-short>D3D11_COMPARISON_FUNC ComparisonFunc</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.BorderColor">
            <summary>	
            <dd> <p>Border color to use if <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Border"/> is specified for AddressU, AddressV, or AddressW. Range must be between 0.0 and 1.0 inclusive.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::BorderColor']/*"/>	
            <msdn-id>ff476207</msdn-id>	
            <unmanaged>SHARPDX_COLOR4 BorderColor</unmanaged>	
            <unmanaged-short>SHARPDX_COLOR4 BorderColor</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.MinimumLod">
            <summary>	
            <dd> <p>Lower end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::MinLOD']/*"/>	
            <msdn-id>ff476207</msdn-id>	
            <unmanaged>float MinLOD</unmanaged>	
            <unmanaged-short>float MinLOD</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.MaximumLod">
            <summary>	
            <dd> <p>Upper end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed. This value must be greater than or equal to MinLOD. To have no upper limit on LOD set this to a large value such as D3D11_FLOAT32_MAX.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::MaxLOD']/*"/>	
            <msdn-id>ff476207</msdn-id>	
            <unmanaged>float MaxLOD</unmanaged>	
            <unmanaged-short>float MaxLOD</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Direct3D11.SamplerStateDescription.Default">
            <summary>
            Returns default values for <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/>. 
            </summary>
            <remarks>
            See MSDN documentation for default values.
            </remarks>
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription">
            <summary>	
            <p>Describes a shader-resource view.</p>	
            </summary>	
            <remarks>	
            <p>A view is a format-specific way to look at the data in a resource. The view determines what data to look at, and how it is cast when read.</p><p>When viewing a resource, the resource-view description must specify a typed format, that is compatible with the resource format. So that means that you cannot create a resource-view description using any format with _TYPELESS in the name. You can however view a typeless resource by specifying a typed format for the view. For example, a <see cref="F:SharpDX.DXGI.Format.R32G32B32_Typeless"/> resource can be viewed with one of these typed formats: <see cref="F:SharpDX.DXGI.Format.R32G32B32_Float"/>, <see cref="F:SharpDX.DXGI.Format.R32G32B32_UInt"/>, and <see cref="F:SharpDX.DXGI.Format.R32G32B32_SInt"/>, since these typed formats are compatible with the typeless resource.</p><p>Create a shader-resource-view description by calling <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong>. To view a shader-resource-view description, call <strong><see cref="M:SharpDX.Direct3D11.ShaderResourceView.GetDescription(SharpDX.Direct3D11.ShaderResourceViewDescription@)"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>D3D11_SHADER_RESOURCE_VIEW_DESC</unmanaged>	
            <unmanaged-short>D3D11_SHADER_RESOURCE_VIEW_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Format">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.DXGI.Format"/></strong> specifying the viewing format. See remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Format']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
            <unmanaged-short>DXGI_FORMAT Format</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Dimension">
            <summary>	
            <dd> <p>The resource type of the view. See <strong>D3D11_SRV_DIMENSION</strong>. This should be the same as the resource type of the underlying resource. This parameter also determines which _SRV to use in the union below.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::ViewDimension']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>D3D_SRV_DIMENSION ViewDimension</unmanaged>	
            <unmanaged-short>D3D_SRV_DIMENSION ViewDimension</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Buffer">
            <summary>	
            <dd> <p>View the resource as a buffer using information from a shader-resource view (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Buffer']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>D3D11_BUFFER_SRV Buffer</unmanaged>	
            <unmanaged-short>D3D11_BUFFER_SRV Buffer</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1D">
            <summary>	
            <dd> <p>View the resource as a 1D texture using information from a shader-resource view (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture1D']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>D3D11_TEX1D_SRV Texture1D</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_SRV Texture1D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArray">
            <summary>	
            <dd> <p>View the resource as a 1D-texture array using information from a shader-resource view (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArrayResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture1DArray']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>D3D11_TEX1D_ARRAY_SRV Texture1DArray</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_ARRAY_SRV Texture1DArray</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2D">
            <summary>	
            <dd> <p>View the resource as a 2D-texture using information from a shader-resource view (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture2D']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>D3D11_TEX2D_SRV Texture2D</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_SRV Texture2D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArray">
            <summary>	
            <dd> <p>View the resource as a 2D-texture array using information from a shader-resource view (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArrayResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture2DArray']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>D3D11_TEX2D_ARRAY_SRV Texture2DArray</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_ARRAY_SRV Texture2DArray</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMS">
            <summary>	
            <dd> <p>View the resource as a 2D-multisampled texture using information from a shader-resource view (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture2DMS']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>D3D11_TEX2DMS_SRV Texture2DMS</unmanaged>	
            <unmanaged-short>D3D11_TEX2DMS_SRV Texture2DMS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMSArray">
            <summary>	
            <dd> <p>View the resource as a 2D-multisampled-texture array using information from a shader-resource view (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledArrayResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture2DMSArray']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>D3D11_TEX2DMS_ARRAY_SRV Texture2DMSArray</unmanaged>	
            <unmanaged-short>D3D11_TEX2DMS_ARRAY_SRV Texture2DMSArray</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture3D">
            <summary>	
            <dd> <p>View the resource as a 3D texture using information from a shader-resource view (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture3DResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture3D']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>D3D11_TEX3D_SRV Texture3D</unmanaged>	
            <unmanaged-short>D3D11_TEX3D_SRV Texture3D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCube">
            <summary>	
            <dd> <p>View the resource as a 3D-cube texture using information from a shader-resource view (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::TextureCube']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>D3D11_TEXCUBE_SRV TextureCube</unmanaged>	
            <unmanaged-short>D3D11_TEXCUBE_SRV TextureCube</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArray">
            <summary>	
            <dd> <p>View the resource as a 3D-cube-texture array using information from a shader-resource view (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::TextureCubeArray']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>D3D11_TEXCUBE_ARRAY_SRV TextureCubeArray</unmanaged>	
            <unmanaged-short>D3D11_TEXCUBE_ARRAY_SRV TextureCubeArray</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferEx">
            <summary>	
            <dd> <p>View the resource as an extended buffer using information from a shader-resource view (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.ExtendedBufferResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::BufferEx']/*"/>	
            <msdn-id>ff476211</msdn-id>	
            <unmanaged>D3D11_BUFFEREX_SRV BufferEx</unmanaged>	
            <unmanaged-short>D3D11_BUFFEREX_SRV BufferEx</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource">
            <summary>	
            <p>Specifies the elements in a buffer resource to use in a shader-resource view.</p>	
            </summary>	
            <remarks>	
            <p>The <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource"/></strong> structure is a member of the  <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/></strong> structure, which represents a shader-resource view description. You can create a shader-resource view by calling the <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong> method.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_SRV']/*"/>	
            <msdn-id>ff476094</msdn-id>	
            <unmanaged>D3D11_BUFFER_SRV</unmanaged>	
            <unmanaged-short>D3D11_BUFFER_SRV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource.FirstElement">
            <summary>	
            <dd> <p>Number of bytes between the beginning of the buffer and the first element to access.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_SRV::FirstElement']/*"/>	
            <msdn-id>ff476094</msdn-id>	
            <unmanaged>unsigned int FirstElement</unmanaged>	
            <unmanaged-short>unsigned int FirstElement</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource.ElementOffset">
            <summary>	
            <dd> <p>The offset of the first element in the view to access, relative to element 0.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_SRV::ElementOffset']/*"/>	
            <msdn-id>ff476094</msdn-id>	
            <unmanaged>unsigned int ElementOffset</unmanaged>	
            <unmanaged-short>unsigned int ElementOffset</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource.ElementCount">
            <summary>	
            <dd> <p>The total number of elements in the view.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_SRV::NumElements']/*"/>	
            <msdn-id>ff476094</msdn-id>	
            <unmanaged>unsigned int NumElements</unmanaged>	
            <unmanaged-short>unsigned int NumElements</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource.ElementWidth">
            <summary>	
            <dd> <p>The width of each element (in bytes). This can be determined from the format stored in the shader-resource-view description.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_SRV::ElementWidth']/*"/>	
            <msdn-id>ff476094</msdn-id>	
            <unmanaged>unsigned int ElementWidth</unmanaged>	
            <unmanaged-short>unsigned int ElementWidth</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource">
            <summary>	
            <p>Specifies the subresource from a 1D texture to use in a shader-resource view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a shader-resource-view description (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/></strong>).</p><p>As an example, assuming <strong>MostDetailedMip</strong> = 6 and <strong>MipLevels</strong> = 2, the view will have access to 2 mipmap levels, 6 and 7, of the original texture for which <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong> creates the view. In this situation, <strong>MostDetailedMip</strong> is greater than the <strong>MipLevels</strong> in the view. However, <strong>MostDetailedMip</strong> is not greater than the <strong>MipLevels</strong> in the original resource.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_SRV']/*"/>	
            <msdn-id>ff476231</msdn-id>	
            <unmanaged>D3D11_TEX1D_SRV</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_SRV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource.MostDetailedMip">
            <summary>	
            <dd> <p>Index of the most detailed mipmap level to use; this number is between 0 and <strong>MipLevels</strong> (from the original Texture1D for which <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong> creates a view) -1.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_SRV::MostDetailedMip']/*"/>	
            <msdn-id>ff476231</msdn-id>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
            <unmanaged-short>unsigned int MostDetailedMip</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource.MipLevels">
            <summary>	
            <dd> <p>The maximum number of mipmap levels for the view  of the texture. See the remarks.</p> <p>Set to -1 to indicate all the mipmap levels from <strong>MostDetailedMip</strong> on down to least detailed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_SRV::MipLevels']/*"/>	
            <msdn-id>ff476231</msdn-id>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
            <unmanaged-short>unsigned int MipLevels</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArrayResource">
            <summary>	
            <p>Specifies the subresources from an array of 1D textures to use in a shader-resource view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a shader-resource-view description (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_SRV']/*"/>	
            <msdn-id>ff476227</msdn-id>	
            <unmanaged>D3D11_TEX1D_ARRAY_SRV</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_ARRAY_SRV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArrayResource.MostDetailedMip">
            <summary>	
            <dd> <p>Index of the most detailed mipmap level to use; this number is between 0 and <strong>MipLevels</strong> (from the original Texture1D for which <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong> creates a view) -1.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_SRV::MostDetailedMip']/*"/>	
            <msdn-id>ff476227</msdn-id>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
            <unmanaged-short>unsigned int MostDetailedMip</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArrayResource.MipLevels">
            <summary>	
            <dd> <p>The maximum number of mipmap levels for the view of the texture. See the remarks in <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/></strong>.</p> <p>Set to -1 to indicate all the mipmap levels from <strong>MostDetailedMip</strong> on down to least detailed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_SRV::MipLevels']/*"/>	
            <msdn-id>ff476227</msdn-id>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
            <unmanaged-short>unsigned int MipLevels</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArrayResource.FirstArraySlice">
            <summary>	
            <dd> <p>The index of the first texture to use in an array of textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_SRV::FirstArraySlice']/*"/>	
            <msdn-id>ff476227</msdn-id>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
            <unmanaged-short>unsigned int FirstArraySlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArrayResource.ArraySize">
            <summary>	
            <dd> <p>Number of textures in the array.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_SRV::ArraySize']/*"/>	
            <msdn-id>ff476227</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DResource">
            <summary>	
            <p>Specifies the subresource from a 2D texture to use in a shader-resource view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a shader-resource-view description (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_SRV']/*"/>	
            <msdn-id>ff476245</msdn-id>	
            <unmanaged>D3D11_TEX2D_SRV</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_SRV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DResource.MostDetailedMip">
            <summary>	
            <dd> <p>Index of the most detailed mipmap level to use; this number is between 0 and <strong>MipLevels</strong> (from the original Texture2D for which <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong> creates a view) -1.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_SRV::MostDetailedMip']/*"/>	
            <msdn-id>ff476245</msdn-id>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
            <unmanaged-short>unsigned int MostDetailedMip</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DResource.MipLevels">
            <summary>	
            <dd> <p>The maximum number of mipmap levels for the view of the texture. See the remarks in <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/></strong>.</p> <p>Set to -1 to indicate all the mipmap levels from <strong>MostDetailedMip</strong> on down to least detailed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_SRV::MipLevels']/*"/>	
            <msdn-id>ff476245</msdn-id>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
            <unmanaged-short>unsigned int MipLevels</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArrayResource">
            <summary>	
            <p>Specifies the subresources from an array of 2D textures to use in a shader-resource view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a shader-resource-view description (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_SRV']/*"/>	
            <msdn-id>ff476241</msdn-id>	
            <unmanaged>D3D11_TEX2D_ARRAY_SRV</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_ARRAY_SRV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArrayResource.MostDetailedMip">
            <summary>	
            <dd> <p>Index of the most detailed mipmap level to use; this number is between 0 and <strong>MipLevels</strong> (from the original Texture2D for which <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong> creates a view) -1.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_SRV::MostDetailedMip']/*"/>	
            <msdn-id>ff476241</msdn-id>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
            <unmanaged-short>unsigned int MostDetailedMip</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArrayResource.MipLevels">
            <summary>	
            <dd> <p>The maximum number of mipmap levels for the view of the texture. See the remarks in <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/></strong>.</p> <p>Set to -1 to indicate all the mipmap levels from <strong>MostDetailedMip</strong> on down to least detailed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_SRV::MipLevels']/*"/>	
            <msdn-id>ff476241</msdn-id>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
            <unmanaged-short>unsigned int MipLevels</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArrayResource.FirstArraySlice">
            <summary>	
            <dd> <p>The index of the first texture to use in an array of textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_SRV::FirstArraySlice']/*"/>	
            <msdn-id>ff476241</msdn-id>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
            <unmanaged-short>unsigned int FirstArraySlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArrayResource.ArraySize">
            <summary>	
            <dd> <p>Number of textures in the array.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_SRV::ArraySize']/*"/>	
            <msdn-id>ff476241</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledResource">
            <summary>	
            <p>Specifies the subresources from a multisampled 2D texture to use in a shader-resource view.</p>	
            </summary>	
            <remarks>	
            <p>Since a multisampled 2D texture contains a single subresource, there is actually nothing to specify in <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledResource"/>. Consequently, <strong>UnusedField_NothingToDefine</strong> is included so that this structure will compile in C.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_SRV']/*"/>	
            <msdn-id>ff476238</msdn-id>	
            <unmanaged>D3D11_TEX2DMS_SRV</unmanaged>	
            <unmanaged-short>D3D11_TEX2DMS_SRV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledResource.UnusedFieldNothingToDefine">
            <summary>	
            <dd> <p>Integer of any value. See remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_SRV::UnusedField_NothingToDefine']/*"/>	
            <msdn-id>ff476238</msdn-id>	
            <unmanaged>unsigned int UnusedField_NothingToDefine</unmanaged>	
            <unmanaged-short>unsigned int UnusedField_NothingToDefine</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledArrayResource">
            <summary>	
            <p>Specifies the subresources from an array of multisampled 2D textures to use in a shader-resource view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a shader-resource-view description (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_SRV']/*"/>	
            <msdn-id>ff476235</msdn-id>	
            <unmanaged>D3D11_TEX2DMS_ARRAY_SRV</unmanaged>	
            <unmanaged-short>D3D11_TEX2DMS_ARRAY_SRV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledArrayResource.FirstArraySlice">
            <summary>	
            <dd> <p>The index of the first texture to use in an array of textures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_SRV::FirstArraySlice']/*"/>	
            <msdn-id>ff476235</msdn-id>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
            <unmanaged-short>unsigned int FirstArraySlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledArrayResource.ArraySize">
            <summary>	
            <dd> <p>Number of textures to use.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_SRV::ArraySize']/*"/>	
            <msdn-id>ff476235</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture3DResource">
            <summary>	
            <p>Specifies the subresources from a 3D texture to use in a shader-resource view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a shader-resource-view description (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_SRV']/*"/>	
            <msdn-id>ff476248</msdn-id>	
            <unmanaged>D3D11_TEX3D_SRV</unmanaged>	
            <unmanaged-short>D3D11_TEX3D_SRV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture3DResource.MostDetailedMip">
            <summary>	
            <dd> <p>Index of the most detailed mipmap level to use; this number is between 0 and <strong>MipLevels</strong> (from the original Texture3D for which <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong> creates a view) -1.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_SRV::MostDetailedMip']/*"/>	
            <msdn-id>ff476248</msdn-id>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
            <unmanaged-short>unsigned int MostDetailedMip</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture3DResource.MipLevels">
            <summary>	
            <dd> <p>The maximum number of mipmap levels for the view of the texture. See the remarks in <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/></strong>.</p> <p>Set to -1 to indicate all the mipmap levels from <strong>MostDetailedMip</strong> on down to least detailed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_SRV::MipLevels']/*"/>	
            <msdn-id>ff476248</msdn-id>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
            <unmanaged-short>unsigned int MipLevels</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeResource">
            <summary>	
            <p>Specifies the subresource from a cube texture to use in a shader-resource view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a shader-resource-view description (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_SRV']/*"/>	
            <msdn-id>ff476251</msdn-id>	
            <unmanaged>D3D11_TEXCUBE_SRV</unmanaged>	
            <unmanaged-short>D3D11_TEXCUBE_SRV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeResource.MostDetailedMip">
            <summary>	
            <dd> <p>Index of the most detailed mipmap level to use; this number is between 0 and <strong>MipLevels</strong> (from the original TextureCube for which <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong> creates a view) -1.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_SRV::MostDetailedMip']/*"/>	
            <msdn-id>ff476251</msdn-id>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
            <unmanaged-short>unsigned int MostDetailedMip</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeResource.MipLevels">
            <summary>	
            <dd> <p>The maximum number of mipmap levels for the view of the texture. See the remarks in <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/></strong>.</p> <p>Set to -1 to indicate all the mipmap levels from <strong>MostDetailedMip</strong> on down to least detailed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_SRV::MipLevels']/*"/>	
            <msdn-id>ff476251</msdn-id>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
            <unmanaged-short>unsigned int MipLevels</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource">
            <summary>	
            <p>Specifies the subresources from an array of cube textures to use in a shader-resource view.</p>	
            </summary>	
            <remarks>	
            <p>This structure is one member of a shader-resource-view description (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/></strong>).</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_ARRAY_SRV']/*"/>	
            <msdn-id>ff476250</msdn-id>	
            <unmanaged>D3D11_TEXCUBE_ARRAY_SRV</unmanaged>	
            <unmanaged-short>D3D11_TEXCUBE_ARRAY_SRV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource.MostDetailedMip">
            <summary>	
            <dd> <p>Index of the most detailed mipmap level to use; this number is between 0 and <strong>MipLevels</strong> (from the original TextureCube for which <strong><see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/></strong> creates a view) -1.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_ARRAY_SRV::MostDetailedMip']/*"/>	
            <msdn-id>ff476250</msdn-id>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
            <unmanaged-short>unsigned int MostDetailedMip</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource.MipLevels">
            <summary>	
            <dd> <p>The maximum number of mipmap levels for the view of the texture. See the remarks in <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/></strong>.</p> <p>Set to -1 to indicate all the mipmap levels from <strong>MostDetailedMip</strong> on down to least detailed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_ARRAY_SRV::MipLevels']/*"/>	
            <msdn-id>ff476250</msdn-id>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
            <unmanaged-short>unsigned int MipLevels</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource.First2DArrayFace">
            <summary>	
            <dd> <p>Index of the first 2D texture to use.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_ARRAY_SRV::First2DArrayFace']/*"/>	
            <msdn-id>ff476250</msdn-id>	
            <unmanaged>unsigned int First2DArrayFace</unmanaged>	
            <unmanaged-short>unsigned int First2DArrayFace</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource.CubeCount">
            <summary>	
            <dd> <p>Number of cube textures in the array.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_ARRAY_SRV::NumCubes']/*"/>	
            <msdn-id>ff476250</msdn-id>	
            <unmanaged>unsigned int NumCubes</unmanaged>	
            <unmanaged-short>unsigned int NumCubes</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.ExtendedBufferResource">
            <summary>	
            <p>Describes a raw buffer resource.</p>	
            </summary>	
            <remarks>	
            <p>This structure is used by <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/></strong> to create a raw buffer.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFEREX_SRV']/*"/>	
            <msdn-id>ff476090</msdn-id>	
            <unmanaged>D3D11_BUFFEREX_SRV</unmanaged>	
            <unmanaged-short>D3D11_BUFFEREX_SRV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.ExtendedBufferResource.FirstElement">
            <summary>	
            <dd> <p>The index of the first element to be accessed by the view.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFEREX_SRV::FirstElement']/*"/>	
            <msdn-id>ff476090</msdn-id>	
            <unmanaged>unsigned int FirstElement</unmanaged>	
            <unmanaged-short>unsigned int FirstElement</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.ExtendedBufferResource.ElementCount">
            <summary>	
            <dd> <p>The number of elements in the resource.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFEREX_SRV::NumElements']/*"/>	
            <msdn-id>ff476090</msdn-id>	
            <unmanaged>unsigned int NumElements</unmanaged>	
            <unmanaged-short>unsigned int NumElements</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.ExtendedBufferResource.Flags">
            <summary>	
            <dd> <p>Options for binding a raw buffer (see <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewExtendedBufferFlags"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFEREX_SRV::Flags']/*"/>	
            <msdn-id>ff476090</msdn-id>	
            <unmanaged>D3D11_BUFFEREX_SRV_FLAG Flags</unmanaged>	
            <unmanaged-short>D3D11_BUFFEREX_SRV_FLAG Flags</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.StreamOutputElement">
            <summary>	
            <p>Description of a vertex element in a vertex buffer in an output slot.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY']/*"/>	
            <msdn-id>ff476216</msdn-id>	
            <unmanaged>D3D11_SO_DECLARATION_ENTRY</unmanaged>	
            <unmanaged-short>D3D11_SO_DECLARATION_ENTRY</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputElement.Stream">
            <summary>	
            <dd> <p>Zero-based, stream number.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY::Stream']/*"/>	
            <msdn-id>ff476216</msdn-id>	
            <unmanaged>unsigned int Stream</unmanaged>	
            <unmanaged-short>unsigned int Stream</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputElement.SemanticName">
            <summary>	
            <dd> <p>Type of output element; possible values include: <strong>"POSITION"</strong>, <strong>"NORMAL"</strong>, or <strong>"TEXCOORD0"</strong>. Note that if <em>SemanticName</em> is <strong><c>null</c></strong> then  <em>ComponentCount</em> can be greater than 4 and the described entry will be a gap in the stream out where no data will be written. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY::SemanticName']/*"/>	
            <msdn-id>ff476216</msdn-id>	
            <unmanaged>const char* SemanticName</unmanaged>	
            <unmanaged-short>char SemanticName</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputElement.SemanticIndex">
            <summary>	
            <dd> <p>Output element's zero-based index. Should be used if, for example, you have more than one texture coordinate stored in each vertex.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY::SemanticIndex']/*"/>	
            <msdn-id>ff476216</msdn-id>	
            <unmanaged>unsigned int SemanticIndex</unmanaged>	
            <unmanaged-short>unsigned int SemanticIndex</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputElement.StartComponent">
            <summary>	
            <dd> <p>Which component of the entry to begin writing out to. Valid values are 0 to 3. For example, if you only wish to output to the y and z components  of a position, then StartComponent should be 1 and ComponentCount should be 2.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY::StartComponent']/*"/>	
            <msdn-id>ff476216</msdn-id>	
            <unmanaged>unsigned char StartComponent</unmanaged>	
            <unmanaged-short>unsigned char StartComponent</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputElement.ComponentCount">
            <summary>	
            <dd> <p>The number of components of the entry to write out to. Valid values are 1 to 4. For example, if you only wish to output to the y and z components  of a position, then StartComponent should be 1 and ComponentCount should be 2.  Note that if <em>SemanticName</em> is <strong><c>null</c></strong> then  <em>ComponentCount</em> can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY::ComponentCount']/*"/>	
            <msdn-id>ff476216</msdn-id>	
            <unmanaged>unsigned char ComponentCount</unmanaged>	
            <unmanaged-short>unsigned char ComponentCount</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputElement.OutputSlot">
            <summary>	
            <dd> <p>The associated stream output buffer that is bound to the pipeline  (see <strong><see cref="M:SharpDX.Direct3D11.StreamOutputStage.SetTargets(SharpDX.Direct3D11.StreamOutputBufferBinding[])"/></strong>).  The valid range for <em>OutputSlot</em> is 0 to 3.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY::OutputSlot']/*"/>	
            <msdn-id>ff476216</msdn-id>	
            <unmanaged>unsigned char OutputSlot</unmanaged>	
            <unmanaged-short>unsigned char OutputSlot</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.StreamOutputStatistics">
            <summary>	
            <p>Query information about the amount of data streamed out to the stream-output buffers in between <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/></strong> and <strong><see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/></strong>.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_SO_STATISTICS']/*"/>	
            <msdn-id>ff476193</msdn-id>	
            <unmanaged>D3D11_QUERY_DATA_SO_STATISTICS</unmanaged>	
            <unmanaged-short>D3D11_QUERY_DATA_SO_STATISTICS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputStatistics.NumPrimitivesWritten">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_SO_STATISTICS::NumPrimitivesWritten']/*"/>	
            <unmanaged>unsigned longlong NumPrimitivesWritten</unmanaged>	
            <unmanaged-short>unsigned longlong NumPrimitivesWritten</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputStatistics.PrimitivesStorageNeeded">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_SO_STATISTICS::PrimitivesStorageNeeded']/*"/>	
            <unmanaged>unsigned longlong PrimitivesStorageNeeded</unmanaged>	
            <unmanaged-short>unsigned longlong PrimitivesStorageNeeded</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture1DDescription">
            <summary>	
            <p>Describes a 1D texture.</p>	
            </summary>	
            <remarks>	
            <p>This structure is used in a call to <strong><see cref="M:SharpDX.Direct3D11.Device.CreateTexture1D(SharpDX.Direct3D11.Texture1DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture1D)"/></strong>. A helpful derived structure CD3D11_TEXTURE1D_DESC is declared in D3D11.h, to help create a texture description.</p><p>The texture size range is determined by the feature level at which you create the device and not the Microsoft Direct3D interface version. For example, if you use Microsoft Direct3D?10 hardware at feature level 10 (<strong><see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/></strong>) and call <strong><see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/></strong> to create an <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong>, you must constrain the maximum texture size to D3D10_REQ_TEXTURE1D_U_DIMENSION (8192) when you create your 1D texture.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC']/*"/>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>D3D11_TEXTURE1D_DESC</unmanaged>	
            <unmanaged-short>D3D11_TEXTURE1D_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.Width">
            <summary>	
            <dd> <p>Texture width (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture1DSize"/> (16384). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::Width']/*"/>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>unsigned int Width</unmanaged>	
            <unmanaged-short>unsigned int Width</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.MipLevels">
            <summary>	
            <dd> <p>The maximum number of mipmap levels in the texture. See the remarks in <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/></strong>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::MipLevels']/*"/>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
            <unmanaged-short>unsigned int MipLevels</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.ArraySize">
            <summary>	
            <dd> <p>Number of textures in the array. The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture1DArraySize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::ArraySize']/*"/>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.Format">
            <summary>	
            <dd> <p>Texture format (see <strong><see cref="T:SharpDX.DXGI.Format"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::Format']/*"/>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
            <unmanaged-short>DXGI_FORMAT Format</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.Usage">
            <summary>	
            <dd> <p>Value that identifies how the texture is to be read from and written to. The most common value is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/>; see <strong><see cref="T:SharpDX.Direct3D11.ResourceUsage"/></strong> for all possible values.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::Usage']/*"/>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>D3D11_USAGE Usage</unmanaged>	
            <unmanaged-short>D3D11_USAGE Usage</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.BindFlags">
            <summary>	
            <dd> <p>Flags (see <strong><see cref="T:SharpDX.Direct3D11.BindFlags"/></strong>) for binding to pipeline stages. The flags can be combined by a logical OR. For a 1D texture, the allowable values are: <see cref="F:SharpDX.Direct3D11.BindFlags.ShaderResource"/>, <see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/> and <see cref="F:SharpDX.Direct3D11.BindFlags.DepthStencil"/>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::BindFlags']/*"/>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>D3D11_BIND_FLAG BindFlags</unmanaged>	
            <unmanaged-short>D3D11_BIND_FLAG BindFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.CpuAccessFlags">
            <summary>	
            <dd> <p>Flags (see <strong><see cref="T:SharpDX.Direct3D11.CpuAccessFlags"/></strong>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::CPUAccessFlags']/*"/>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged>	
            <unmanaged-short>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.OptionFlags">
            <summary>	
            <dd> <p>Flags (see <strong><see cref="T:SharpDX.Direct3D11.ResourceOptionFlags"/></strong>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined with a logical OR.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::MiscFlags']/*"/>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture2DArrayVpov">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Identifies a texture resource for a video  processor output view.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_VPOV']/*"/>	
            <msdn-id>hh447632</msdn-id>	
            <unmanaged>D3D11_TEX2D_ARRAY_VPOV</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_ARRAY_VPOV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DArrayVpov.MipSlice">
            <summary>	
            <dd> <p>The zero-based index into the array of subtextures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_VPOV::MipSlice']/*"/>	
            <msdn-id>hh447632</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DArrayVpov.FirstArraySlice">
            <summary>	
            <dd> <p>The index of the first texture to use.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_VPOV::FirstArraySlice']/*"/>	
            <msdn-id>hh447632</msdn-id>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
            <unmanaged-short>unsigned int FirstArraySlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DArrayVpov.ArraySize">
            <summary>	
            <dd> <p>The number of textures in the array.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_VPOV::ArraySize']/*"/>	
            <msdn-id>hh447632</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture2DDescription">
            <summary>	
            <p>Describes a 2D texture.</p>	
            </summary>	
            <remarks>	
            <p>This structure is used in a call to <strong><see cref="M:SharpDX.Direct3D11.Device.CreateTexture2D(SharpDX.Direct3D11.Texture2DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture2D)"/></strong>. A helpful derived structure CD3D11_TEXTURE2D_DESC is declared in D3D11.h, to help create a texture description.</p><p>The device places some size restrictions (must be multiples of a minimum size) for a subsampled, block compressed, or bit-format resource.</p><p>The texture size range is determined by the feature level at which you create the device and not the Microsoft Direct3D interface version. For example, if you use Microsoft Direct3D?10 hardware at feature level 10 (<strong><see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/></strong>) and call <strong><see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/></strong> to create an <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong>, you must constrain the maximum texture size to D3D10_REQ_TEXTURE2D_U_OR_V_DIMENSION (8192) when you create your 2D texture.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC']/*"/>	
            <msdn-id>ff476253</msdn-id>	
            <unmanaged>D3D11_TEXTURE2D_DESC</unmanaged>	
            <unmanaged-short>D3D11_TEXTURE2D_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.Width">
            <summary>	
            <dd> <p>Texture width (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture2DSize"/> (16384). For a texture cube-map, the  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTextureCubeSize"/> (16384). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::Width']/*"/>	
            <msdn-id>ff476253</msdn-id>	
            <unmanaged>unsigned int Width</unmanaged>	
            <unmanaged-short>unsigned int Width</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.Height">
            <summary>	
            <dd> <p>Texture height (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture2DSize"/> (16384). For a texture cube-map, the  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTextureCubeSize"/> (16384). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::Height']/*"/>	
            <msdn-id>ff476253</msdn-id>	
            <unmanaged>unsigned int Height</unmanaged>	
            <unmanaged-short>unsigned int Height</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.MipLevels">
            <summary>	
            <dd> <p>The maximum number of mipmap levels in the texture. See the remarks in <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/></strong>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::MipLevels']/*"/>	
            <msdn-id>ff476253</msdn-id>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
            <unmanaged-short>unsigned int MipLevels</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.ArraySize">
            <summary>	
            <dd> <p>Number of textures in the texture array. The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture2DArraySize"/> (2048). For a texture cube-map, this value is a multiple of 6 (that is, 6 times the value in the <strong>NumCubes</strong> member of <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource"/></strong>), and the  range is from 6 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTextureCubeSize"/>. The range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::ArraySize']/*"/>	
            <msdn-id>ff476253</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.Format">
            <summary>	
            <dd> <p>Texture format (see <strong><see cref="T:SharpDX.DXGI.Format"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::Format']/*"/>	
            <msdn-id>ff476253</msdn-id>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
            <unmanaged-short>DXGI_FORMAT Format</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.SampleDescription">
            <summary>	
            <dd> <p>Structure that specifies multisampling parameters for the texture. See <strong><see cref="T:SharpDX.DXGI.SampleDescription"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::SampleDesc']/*"/>	
            <msdn-id>ff476253</msdn-id>	
            <unmanaged>DXGI_SAMPLE_DESC SampleDesc</unmanaged>	
            <unmanaged-short>DXGI_SAMPLE_DESC SampleDesc</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.Usage">
            <summary>	
            <dd> <p>Value that identifies how the texture is to be read from and written to. The most common value is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/>; see <strong><see cref="T:SharpDX.Direct3D11.ResourceUsage"/></strong> for all possible values.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::Usage']/*"/>	
            <msdn-id>ff476253</msdn-id>	
            <unmanaged>D3D11_USAGE Usage</unmanaged>	
            <unmanaged-short>D3D11_USAGE Usage</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.BindFlags">
            <summary>	
            <dd> <p>Flags (see <strong><see cref="T:SharpDX.Direct3D11.BindFlags"/></strong>) for binding to pipeline stages. The flags can be combined by a logical OR.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::BindFlags']/*"/>	
            <msdn-id>ff476253</msdn-id>	
            <unmanaged>D3D11_BIND_FLAG BindFlags</unmanaged>	
            <unmanaged-short>D3D11_BIND_FLAG BindFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.CpuAccessFlags">
            <summary>	
            <dd> <p>Flags (see <strong><see cref="T:SharpDX.Direct3D11.CpuAccessFlags"/></strong>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::CPUAccessFlags']/*"/>	
            <msdn-id>ff476253</msdn-id>	
            <unmanaged>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged>	
            <unmanaged-short>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.OptionFlags">
            <summary>	
            <dd> <p>Flags (see <strong><see cref="T:SharpDX.Direct3D11.ResourceOptionFlags"/></strong>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined by using a logical OR. For a texture cube-map, set the <strong><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.TextureCube"/></strong> flag. Cube-map arrays (that is, <strong>ArraySize</strong> &gt; 6) require feature level <strong><see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_1"/></strong> or higher.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::MiscFlags']/*"/>	
            <msdn-id>ff476253</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture2DVdov">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Identifies the texture resource for a video  decoder output view.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VDOV']/*"/>	
            <msdn-id>hh447633</msdn-id>	
            <unmanaged>D3D11_TEX2D_VDOV</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_VDOV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DVdov.ArraySlice">
            <summary>	
            <dd> <p>The zero-based index of the texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VDOV::ArraySlice']/*"/>	
            <msdn-id>hh447633</msdn-id>	
            <unmanaged>unsigned int ArraySlice</unmanaged>	
            <unmanaged-short>unsigned int ArraySlice</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture2DVpiv">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Identifies the texture resource for a video  processor input view.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VPIV']/*"/>	
            <msdn-id>hh447634</msdn-id>	
            <unmanaged>D3D11_TEX2D_VPIV</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_VPIV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DVpiv.MipSlice">
            <summary>	
            <dd> <p>The zero-based index into the array of subtextures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VPIV::MipSlice']/*"/>	
            <msdn-id>hh447634</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DVpiv.ArraySlice">
            <summary>	
            <dd> <p>The zero-based index of the texture.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VPIV::ArraySlice']/*"/>	
            <msdn-id>hh447634</msdn-id>	
            <unmanaged>unsigned int ArraySlice</unmanaged>	
            <unmanaged-short>unsigned int ArraySlice</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture2DVpov">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Identifies a texture resource for a video  processor output view.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VPOV']/*"/>	
            <msdn-id>hh447635</msdn-id>	
            <unmanaged>D3D11_TEX2D_VPOV</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_VPOV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DVpov.MipSlice">
            <summary>	
            <dd> <p>The zero-based index into the array of subtextures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VPOV::MipSlice']/*"/>	
            <msdn-id>hh447635</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture3DDescription">
            <summary>	
            <p>Describes a 3D texture.</p>	
            </summary>	
            <remarks>	
            <p>This structure is used in a call to <strong><see cref="M:SharpDX.Direct3D11.Device.CreateTexture3D(SharpDX.Direct3D11.Texture3DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture3D)"/></strong>. A helpful derived structure CD3D11_TEXTURE3D_DESC is declared in D3D11.h, to help create a texture description.</p><p>The device restricts the size of subsampled, block compressed, and bit format resources to be multiples of sizes specific to each format.</p><p>The texture size range is determined by the feature level at which you create the device and not the Microsoft Direct3D interface version. For example, if you use Microsoft Direct3D?10 hardware at feature level 10 (<strong><see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/></strong>) and call <strong><see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/></strong> to create an <strong><see cref="T:SharpDX.Direct3D11.Device"/></strong>, you must constrain the maximum texture size to D3D10_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048) when you create your 3D texture.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC']/*"/>	
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>D3D11_TEXTURE3D_DESC</unmanaged>	
            <unmanaged-short>D3D11_TEXTURE3D_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.Width">
            <summary>	
            <dd> <p>Texture width (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::Width']/*"/>	
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>unsigned int Width</unmanaged>	
            <unmanaged-short>unsigned int Width</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.Height">
            <summary>	
            <dd> <p>Texture height (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::Height']/*"/>	
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>unsigned int Height</unmanaged>	
            <unmanaged-short>unsigned int Height</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.Depth">
            <summary>	
            <dd> <p>Texture depth (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::Depth']/*"/>	
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>unsigned int Depth</unmanaged>	
            <unmanaged-short>unsigned int Depth</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.MipLevels">
            <summary>	
            <dd> <p>The maximum number of mipmap levels in the texture. See the remarks in <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/></strong>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::MipLevels']/*"/>	
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
            <unmanaged-short>unsigned int MipLevels</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.Format">
            <summary>	
            <dd> <p>Texture format (see <strong><see cref="T:SharpDX.DXGI.Format"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::Format']/*"/>	
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
            <unmanaged-short>DXGI_FORMAT Format</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.Usage">
            <summary>	
            <dd> <p>Value that identifies how the texture is to be read from and written to. The most common value is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/>; see <strong><see cref="T:SharpDX.Direct3D11.ResourceUsage"/></strong> for all possible values.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::Usage']/*"/>	
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>D3D11_USAGE Usage</unmanaged>	
            <unmanaged-short>D3D11_USAGE Usage</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.BindFlags">
            <summary>	
            <dd> <p>Flags (see <strong><see cref="T:SharpDX.Direct3D11.BindFlags"/></strong>) for binding to pipeline stages. The flags can be combined by a logical OR.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::BindFlags']/*"/>	
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>D3D11_BIND_FLAG BindFlags</unmanaged>	
            <unmanaged-short>D3D11_BIND_FLAG BindFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.CpuAccessFlags">
            <summary>	
            <dd> <p>Flags (see <strong><see cref="T:SharpDX.Direct3D11.CpuAccessFlags"/></strong>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::CPUAccessFlags']/*"/>	
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged>	
            <unmanaged-short>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.OptionFlags">
            <summary>	
            <dd> <p>Flags (see <strong><see cref="T:SharpDX.Direct3D11.ResourceOptionFlags"/></strong>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined with a logical OR.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::MiscFlags']/*"/>	
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription">
            <summary>	
            <p>Specifies the subresources from a resource that are accessible using an unordered-access view.</p>	
            </summary>	
            <remarks>	
            <p>An unordered-access-view description is passed into <strong><see cref="M:SharpDX.Direct3D11.Device.CreateUnorderedAccessView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.UnorderedAccessViewDescription},SharpDX.Direct3D11.UnorderedAccessView)"/></strong> to create a view.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC']/*"/>	
            <msdn-id>ff476258</msdn-id>	
            <unmanaged>D3D11_UNORDERED_ACCESS_VIEW_DESC</unmanaged>	
            <unmanaged-short>D3D11_UNORDERED_ACCESS_VIEW_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Format">
            <summary>	
            <dd> <p>The data format (see <strong><see cref="T:SharpDX.DXGI.Format"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Format']/*"/>	
            <msdn-id>ff476258</msdn-id>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
            <unmanaged-short>DXGI_FORMAT Format</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Dimension">
            <summary>	
            <dd> <p>The resource type (see <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDimension"/></strong>), which specifies how the resource will be accessed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::ViewDimension']/*"/>	
            <msdn-id>ff476258</msdn-id>	
            <unmanaged>D3D11_UAV_DIMENSION ViewDimension</unmanaged>	
            <unmanaged-short>D3D11_UAV_DIMENSION ViewDimension</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Buffer">
            <summary>	
            <dd> <p>Specifies which buffer elements can be accessed (see <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.BufferResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Buffer']/*"/>	
            <msdn-id>ff476258</msdn-id>	
            <unmanaged>D3D11_BUFFER_UAV Buffer</unmanaged>	
            <unmanaged-short>D3D11_BUFFER_UAV Buffer</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1D">
            <summary>	
            <dd> <p>Specifies the subresources in a 1D texture that can be accessed (see <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture1D']/*"/>	
            <msdn-id>ff476258</msdn-id>	
            <unmanaged>D3D11_TEX1D_UAV Texture1D</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_UAV Texture1D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DArray">
            <summary>	
            <dd> <p>Specifies the subresources in a 1D texture array that can be accessed (see <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DArrayResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture1DArray']/*"/>	
            <msdn-id>ff476258</msdn-id>	
            <unmanaged>D3D11_TEX1D_ARRAY_UAV Texture1DArray</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_ARRAY_UAV Texture1DArray</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2D">
            <summary>	
            <dd> <p>Specifies the subresources in a 2D texture that can be accessed (see <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture2D']/*"/>	
            <msdn-id>ff476258</msdn-id>	
            <unmanaged>D3D11_TEX2D_UAV Texture2D</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_UAV Texture2D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DArray">
            <summary>	
            <dd> <p>Specifies the subresources in a 2D texture array that can be accessed (see <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DArrayResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture2DArray']/*"/>	
            <msdn-id>ff476258</msdn-id>	
            <unmanaged>D3D11_TEX2D_ARRAY_UAV Texture2DArray</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_ARRAY_UAV Texture2DArray</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture3D">
            <summary>	
            <dd> <p>Specifies subresources in a 3D texture that can be accessed (see <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture3DResource"/></strong>).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture3D']/*"/>	
            <msdn-id>ff476258</msdn-id>	
            <unmanaged>D3D11_TEX3D_UAV Texture3D</unmanaged>	
            <unmanaged-short>D3D11_TEX3D_UAV Texture3D</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DResource">
            <summary>	
            <p>Describes a unordered-access 1D texture resource.</p>	
            </summary>	
            <remarks>	
            <p>This structure is used by a <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_UAV']/*"/>	
            <msdn-id>ff476232</msdn-id>	
            <unmanaged>D3D11_TEX1D_UAV</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_UAV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DResource.MipSlice">
            <summary>	
            <dd> <p>The mipmap slice index.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_UAV::MipSlice']/*"/>	
            <msdn-id>ff476232</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.BufferResource">
            <summary>	
            <p>Unordered-access-view buffer options.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV']/*"/>	
            <msdn-id>ff476096</msdn-id>	
            <unmanaged>D3D11_BUFFER_UAV</unmanaged>	
            <unmanaged-short>D3D11_BUFFER_UAV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.BufferResource.FirstElement">
            <summary>	
            <dd> <p>Resource contains raw, unstructured data.  Requires the UAV format to be <see cref="F:SharpDX.DXGI.Format.R32_Typeless"/>. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV::FirstElement']/*"/>	
            <msdn-id>ff476096</msdn-id>	
            <unmanaged>unsigned int FirstElement</unmanaged>	
            <unmanaged-short>unsigned int FirstElement</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.BufferResource.ElementCount">
            <summary>	
            <dd> <p>Allow data to be appended to the end of the buffer.  <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/></strong> flag must also be used for  any view that will be used as a AppendStructuredBuffer or a ConsumeStructuredBuffer.  Requires the UAV format to be <see cref="F:SharpDX.DXGI.Format.Unknown"/>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV::NumElements']/*"/>	
            <msdn-id>ff476096</msdn-id>	
            <unmanaged>unsigned int NumElements</unmanaged>	
            <unmanaged-short>unsigned int NumElements</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.BufferResource.Flags">
            <summary>	
            <dd> <p>Adds a counter to the unordered-access-view buffer.  <strong><see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/></strong> can only be used on a UAV that is a  RWStructuredBuffer and it enables the functionality needed for the <strong>IncrementCounter</strong> and <strong>DecrementCounter</strong> methods in HLSL.  Requires the UAV format to be <see cref="F:SharpDX.DXGI.Format.Unknown"/>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV::Flags']/*"/>	
            <msdn-id>ff476096</msdn-id>	
            <unmanaged>D3D11_BUFFER_UAV_FLAG Flags</unmanaged>	
            <unmanaged-short>D3D11_BUFFER_UAV_FLAG Flags</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DResource">
            <summary>	
            <p>Describes a unordered-access 2D texture resource.</p>	
            </summary>	
            <remarks>	
            <p>This structure is used by a <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_UAV']/*"/>	
            <msdn-id>ff476246</msdn-id>	
            <unmanaged>D3D11_TEX2D_UAV</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_UAV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DResource.MipSlice">
            <summary>	
            <dd> <p>The mipmap slice index.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_UAV::MipSlice']/*"/>	
            <msdn-id>ff476246</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture3DResource">
            <summary>	
            <p>Describes a unordered-access 3D texture resource.</p>	
            </summary>	
            <remarks>	
            <p>This structure is used by a <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_UAV']/*"/>	
            <msdn-id>ff476249</msdn-id>	
            <unmanaged>D3D11_TEX3D_UAV</unmanaged>	
            <unmanaged-short>D3D11_TEX3D_UAV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture3DResource.MipSlice">
            <summary>	
            <dd> <p>The mipmap slice index.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_UAV::MipSlice']/*"/>	
            <msdn-id>ff476249</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture3DResource.FirstWSlice">
            <summary>	
            <dd> <p>The zero-based index of the first depth slice to be accessed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_UAV::FirstWSlice']/*"/>	
            <msdn-id>ff476249</msdn-id>	
            <unmanaged>unsigned int FirstWSlice</unmanaged>	
            <unmanaged-short>unsigned int FirstWSlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture3DResource.WSize">
            <summary>	
            <dd> <p>The number of depth slices.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_UAV::WSize']/*"/>	
            <msdn-id>ff476249</msdn-id>	
            <unmanaged>unsigned int WSize</unmanaged>	
            <unmanaged-short>unsigned int WSize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DArrayResource">
            <summary>	
            <p>Describes an array of unordered-access 2D texture resources.</p>	
            </summary>	
            <remarks>	
            <p>This structure is used by a <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_UAV']/*"/>	
            <msdn-id>ff476242</msdn-id>	
            <unmanaged>D3D11_TEX2D_ARRAY_UAV</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_ARRAY_UAV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DArrayResource.MipSlice">
            <summary>	
            <dd> <p>The mipmap slice index.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_UAV::MipSlice']/*"/>	
            <msdn-id>ff476242</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DArrayResource.FirstArraySlice">
            <summary>	
            <dd> <p>The zero-based index of the first array slice to be accessed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_UAV::FirstArraySlice']/*"/>	
            <msdn-id>ff476242</msdn-id>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
            <unmanaged-short>unsigned int FirstArraySlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DArrayResource.ArraySize">
            <summary>	
            <dd> <p>The number of slices in the array.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_UAV::ArraySize']/*"/>	
            <msdn-id>ff476242</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DArrayResource">
            <summary>	
            <p>Describes an array of unordered-access 1D texture resources.</p>	
            </summary>	
            <remarks>	
            <p>This structure is used by a <strong><see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/></strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_UAV']/*"/>	
            <msdn-id>ff476228</msdn-id>	
            <unmanaged>D3D11_TEX1D_ARRAY_UAV</unmanaged>	
            <unmanaged-short>D3D11_TEX1D_ARRAY_UAV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DArrayResource.MipSlice">
            <summary>	
            <dd> <p>The mipmap slice index.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_UAV::MipSlice']/*"/>	
            <msdn-id>ff476228</msdn-id>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
            <unmanaged-short>unsigned int MipSlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DArrayResource.FirstArraySlice">
            <summary>	
            <dd> <p>The zero-based index of the first array slice to be accessed.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_UAV::FirstArraySlice']/*"/>	
            <msdn-id>ff476228</msdn-id>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
            <unmanaged-short>unsigned int FirstArraySlice</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DArrayResource.ArraySize">
            <summary>	
            <dd> <p>The number of slices in the array.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_UAV::ArraySize']/*"/>	
            <msdn-id>ff476228</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoColor">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies an RGB color value. </p>	
            </summary>	
            <remarks>	
            <p>The RGB values have a nominal range of [0...1]. For an RGB format with  <em>n</em> bits per channel, the value of each color component is calculated as follows:</p><p><code>val = f * ((1 &lt;&lt; n)-1)</code></p><p>For example, for RGB-32 (8 bits per channel), <code>val = BYTE(f * 255.0)</code>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR']/*"/>	
            <msdn-id>hh447638</msdn-id>	
            <unmanaged>D3D11_VIDEO_COLOR</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_COLOR</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColor.YCbCr">
            <summary>	
            <dd> <p>The red value.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR::YCbCr']/*"/>	
            <msdn-id>hh447638</msdn-id>	
            <unmanaged>D3D11_VIDEO_COLOR_YCbCrA YCbCr</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_COLOR_YCbCrA YCbCr</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColor.Rgba">
            <summary>	
            <dd> <p>The green value.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR::RGBA']/*"/>	
            <msdn-id>hh447638</msdn-id>	
            <unmanaged>D3D11_VIDEO_COLOR_RGBA RGBA</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_COLOR_RGBA RGBA</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoColorRgba">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies an RGB color value. </p>	
            </summary>	
            <remarks>	
            <p>The RGB values have a nominal range of [0...1]. For an RGB format with  <em>n</em> bits per channel, the value of each color component is calculated as follows:</p><p><code>val = f * ((1 &lt;&lt; n)-1)</code></p><p>For example, for RGB-32 (8 bits per channel), <code>val = BYTE(f * 255.0)</code>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_RGBA']/*"/>	
            <msdn-id>hh447638</msdn-id>	
            <unmanaged>D3D11_VIDEO_COLOR_RGBA</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_COLOR_RGBA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorRgba.R">
            <summary>	
            <dd> <p>The red value.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_RGBA::R']/*"/>	
            <msdn-id>hh447638</msdn-id>	
            <unmanaged>float R</unmanaged>	
            <unmanaged-short>float R</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorRgba.G">
            <summary>	
            <dd> <p>The green value.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_RGBA::G']/*"/>	
            <msdn-id>hh447638</msdn-id>	
            <unmanaged>float G</unmanaged>	
            <unmanaged-short>float G</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorRgba.B">
            <summary>	
            <dd> <p>The blue value.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_RGBA::B']/*"/>	
            <msdn-id>hh447638</msdn-id>	
            <unmanaged>float B</unmanaged>	
            <unmanaged-short>float B</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorRgba.A">
            <summary>	
            <dd> <p>The alpha value. Values range from 0 (transparent) to 1 (opaque).	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_RGBA::A']/*"/>	
            <msdn-id>hh447638</msdn-id>	
            <unmanaged>float A</unmanaged>	
            <unmanaged-short>float A</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoColorYCbCrA">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_YCbCrA']/*"/>	
            <unmanaged>D3D11_VIDEO_COLOR_YCbCrA</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_COLOR_YCbCrA</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorYCbCrA.Y">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_YCbCrA::Y']/*"/>	
            <unmanaged>float Y</unmanaged>	
            <unmanaged-short>float Y</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorYCbCrA.Cb">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_YCbCrA::Cb']/*"/>	
            <unmanaged>float Cb</unmanaged>	
            <unmanaged-short>float Cb</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorYCbCrA.Cr">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_YCbCrA::Cr']/*"/>	
            <unmanaged>float Cr</unmanaged>	
            <unmanaged-short>float Cr</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorYCbCrA.A">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_YCbCrA::A']/*"/>	
            <unmanaged>float A</unmanaged>	
            <unmanaged-short>float A</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoContentProtectionCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Describes the content-protection capabilities of a graphics driver.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_CONTENT_PROTECTION_CAPS']/*"/>	
            <msdn-id>hh447640</msdn-id>	
            <unmanaged>D3D11_VIDEO_CONTENT_PROTECTION_CAPS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_CONTENT_PROTECTION_CAPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoContentProtectionCaps.Caps">
            <summary>	
            <dd> <p>A bitwise <strong>OR</strong> of zero or more flags from the <strong><see cref="T:SharpDX.Direct3D11.ContentProtectionCaps"/></strong> enumeration.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_CONTENT_PROTECTION_CAPS::Caps']/*"/>	
            <msdn-id>hh447640</msdn-id>	
            <unmanaged>unsigned int Caps</unmanaged>	
            <unmanaged-short>unsigned int Caps</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoContentProtectionCaps.KeyExchangeTypeCount">
            <summary>	
            <dd> <p>The number of cryptographic key-exchange types that are supported by the driver. To get the list of key-exchange types, call the <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.CheckCryptoKeyExchange(System.Guid,System.Nullable{System.Guid},System.Int32,System.Guid@)"/></strong> method.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_CONTENT_PROTECTION_CAPS::KeyExchangeTypeCount']/*"/>	
            <msdn-id>hh447640</msdn-id>	
            <unmanaged>unsigned int KeyExchangeTypeCount</unmanaged>	
            <unmanaged-short>unsigned int KeyExchangeTypeCount</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoContentProtectionCaps.BlockAlignmentSize">
            <summary>	
            <dd> <p>The encyrption block size, in bytes. The size of data to be encrypted must be a multiple of this value. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_CONTENT_PROTECTION_CAPS::BlockAlignmentSize']/*"/>	
            <msdn-id>hh447640</msdn-id>	
            <unmanaged>unsigned int BlockAlignmentSize</unmanaged>	
            <unmanaged-short>unsigned int BlockAlignmentSize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoContentProtectionCaps.ProtectedMemorySize">
            <summary>	
            <dd> <p>The total amount of memory, in bytes, that can be used to hold protected surfaces.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_CONTENT_PROTECTION_CAPS::ProtectedMemorySize']/*"/>	
            <msdn-id>hh447640</msdn-id>	
            <unmanaged>unsigned longlong ProtectedMemorySize</unmanaged>	
            <unmanaged-short>unsigned longlong ProtectedMemorySize</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderBufferDescription">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Describes a compressed buffer for DirectX Video Acceleration (DXVA) decoding.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_DESC</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.BufferType">
            <summary>	
            <dd> <p>The type of buffer, specified as a member of the <strong><see cref="T:SharpDX.Direct3D11.VideoDecoderBufferType"/></strong> enumeration.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::BufferType']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_TYPE BufferType</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_TYPE BufferType</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.BufferIndex">
            <summary>	
            <dd> <p>Reserved.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::BufferIndex']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>unsigned int BufferIndex</unmanaged>	
            <unmanaged-short>unsigned int BufferIndex</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.DataOffset">
            <summary>	
            <dd> <p>The offset of the relevant data from the beginning of the buffer, in bytes. This value must be zero. 	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::DataOffset']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>unsigned int DataOffset</unmanaged>	
            <unmanaged-short>unsigned int DataOffset</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.DataSize">
            <summary>	
            <dd> <p>The macroblock address of the first macroblock in the buffer. The macroblock address is given in raster scan order.	
            </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::DataSize']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>unsigned int DataSize</unmanaged>	
            <unmanaged-short>unsigned int DataSize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.FirstMBaddress">
            <summary>	
            <dd> <p>The number of macroblocks of data in the buffer. This count includes skipped macroblocks. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::FirstMBaddress']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>unsigned int FirstMBaddress</unmanaged>	
            <unmanaged-short>unsigned int FirstMBaddress</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.NumMBsInBuffer">
            <summary>	
            <dd> <p>Reserved. Set to zero.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::NumMBsInBuffer']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>unsigned int NumMBsInBuffer</unmanaged>	
            <unmanaged-short>unsigned int NumMBsInBuffer</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.Width">
            <summary>	
            <dd> <p>Reserved. Set to zero.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::Width']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>unsigned int Width</unmanaged>	
            <unmanaged-short>unsigned int Width</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.Height">
            <summary>	
            <dd> <p>Reserved. Set to zero.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::Height']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>unsigned int Height</unmanaged>	
            <unmanaged-short>unsigned int Height</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.Stride">
            <summary>	
            <dd> <p>Reserved. Set to zero.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::Stride']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>unsigned int Stride</unmanaged>	
            <unmanaged-short>unsigned int Stride</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.ReservedBits">
            <summary>	
            <dd> <p>A reference to a buffer that contains an initialization vector (IV) for encrypted data. If the decode buffer does not contain encrypted data, set this member to <strong><c>null</c></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::ReservedBits']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>unsigned int ReservedBits</unmanaged>	
            <unmanaged-short>unsigned int ReservedBits</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.PIV">
            <summary>	
            <dd> <p>The size of the buffer specified in the <strong>pIV</strong> parameter. If <strong>pIV</strong> is <strong><c>null</c></strong>, set this member to zero.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::pIV']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>void* pIV</unmanaged>	
            <unmanaged-short>void pIV</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.IVSize">
            <summary>	
            <dd> <p>If <strong>TRUE</strong>, the video surfaces are partially encrypted.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::IVSize']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>unsigned int IVSize</unmanaged>	
            <unmanaged-short>unsigned int IVSize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.PartialEncryption">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.EncryptedBlockInformation"/></strong> structure that specifies which bytes of the surface are encrypted.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::PartialEncryption']/*"/>	
            <msdn-id>hh447641</msdn-id>	
            <unmanaged>BOOL PartialEncryption</unmanaged>	
            <unmanaged-short>BOOL PartialEncryption</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.EncryptedBlockInfo">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::EncryptedBlockInfo']/*"/>	
            <unmanaged>D3D11_ENCRYPTED_BLOCK_INFO EncryptedBlockInfo</unmanaged>	
            <unmanaged-short>D3D11_ENCRYPTED_BLOCK_INFO EncryptedBlockInfo</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderConfig">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Describes the configuration of a Microsoft Direct3D?11 decoder device for DirectX Video Acceleration (DXVA). </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_CONFIG</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_CONFIG</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.GuidConfigBitstreamEncryption">
            <summary>	
            <dd> <p> Defines the encryption protocol type for bit-stream data buffers. If no encryption is applied, the value is <strong>DXVA_NoEncrypt</strong>. If <strong>ConfigBitstreamRaw</strong> is 0, the value must be <strong>DXVA_NoEncrypt</strong>. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::guidConfigBitstreamEncryption']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>GUID guidConfigBitstreamEncryption</unmanaged>	
            <unmanaged-short>GUID guidConfigBitstreamEncryption</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.GuidConfigMBcontrolEncryption">
            <summary>	
            <dd> <p>Defines the encryption protocol type for macroblock control data buffers. If no encryption is applied, the value is <strong>DXVA_NoEncrypt</strong>. If <strong>ConfigBitstreamRaw</strong> is 1, the value must be <strong>DXVA_NoEncrypt</strong>. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::guidConfigMBcontrolEncryption']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>GUID guidConfigMBcontrolEncryption</unmanaged>	
            <unmanaged-short>GUID guidConfigMBcontrolEncryption</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.GuidConfigResidDiffEncryption">
            <summary>	
            <dd> <p>Defines the encryption protocol type for residual difference decoding data buffers (buffers containing spatial-domain data or sets of transform-domain coefficients for accelerator-based inverse discrete cosine transform [IDCT]). If no encryption is applied, the value is <strong>DXVA_NoEncrypt</strong>. If <strong>ConfigBitstreamRaw</strong> is 1, the value must be <strong>DXVA_NoEncrypt</strong>. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::guidConfigResidDiffEncryption']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>GUID guidConfigResidDiffEncryption</unmanaged>	
            <unmanaged-short>GUID guidConfigResidDiffEncryption</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigBitstreamRaw">
            <summary>	
            <dd> <p>Indicates whether the host-decoder sends raw bit-stream data. If the value is 1, the data for the pictures will be sent in bit-stream buffers as raw bit-stream content. If the value is 0, picture data will be sent using macroblock control command buffers. If either <strong>ConfigResidDiffHost</strong> or <strong>ConfigResidDiffAccelerator</strong> is 1, the value must be 0. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigBitstreamRaw']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned int ConfigBitstreamRaw</unmanaged>	
            <unmanaged-short>unsigned int ConfigBitstreamRaw</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigMBcontrolRasterOrder">
            <summary>	
            <dd> <p>Specifies whether macroblock control commands are in raster scan order or in arbitrary order. If the value is 1, the macroblock control commands within each macroblock control command buffer are in raster-scan order. If the value is 0, the order is arbitrary. For some types of bit streams, forcing raster order either greatly increases the number of required macroblock control buffers that must be processed, or requires host reordering of the control information. Therefore, supporting arbitrary order can be more efficient. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigMBcontrolRasterOrder']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned int ConfigMBcontrolRasterOrder</unmanaged>	
            <unmanaged-short>unsigned int ConfigMBcontrolRasterOrder</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigResidDiffHost">
            <summary>	
            <dd> <p>Contains the host residual difference configuration. If the value is 1, some residual difference decoding data may be sent as blocks in the spatial domain from the host. If the value is 0, spatial domain data will not be sent. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigResidDiffHost']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned int ConfigResidDiffHost</unmanaged>	
            <unmanaged-short>unsigned int ConfigResidDiffHost</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigSpatialResid8">
            <summary>	
            <dd> <p>Indicates the word size used to represent residual difference spatial-domain blocks for predicted (non-intra) pictures when using host-based residual difference decoding. </p> <p>If <strong>ConfigResidDiffHost</strong> is 1 and <strong>ConfigSpatialResid8</strong> is 1, the host will send residual difference spatial-domain blocks for non-intra macroblocks using 8-bit signed samples and for intra macroblocks in predicted (non-intra) pictures in a format that depends on the value of <strong>ConfigIntraResidUnsigned</strong>: </p> <ul> <li> If <strong>ConfigIntraResidUnsigned</strong> is 0, spatial-domain blocks for intra macroblocks are sent as 8-bit signed integer values relative to a constant reference value of 2^(BPP?1). </li> <li> If <strong>ConfigIntraResidUnsigned</strong> is 1, spatial-domain blocks for intra macroblocks are sent as 8-bit unsigned integer values relative to a constant reference value of 0. </li> </ul> <p> If <strong>ConfigResidDiffHost</strong> is 1 and <strong>ConfigSpatialResid8</strong> is 0, the host will send residual difference spatial-domain blocks of data for non-intra macroblocks using 16-bit signed samples and for intra macroblocks in predicted (non-intra) pictures in a format that depends on the value of <strong>ConfigIntraResidUnsigned</strong>: </p> <ul> <li> If <strong>ConfigIntraResidUnsigned</strong> is 0, spatial domain blocks for intra macroblocks are sent as 16-bit signed integer values relative to a constant reference value of 2^(BPP?1). </li> <li> If <strong>ConfigIntraResidUnsigned</strong> is 1, spatial domain blocks for intra macroblocks are sent as 16-bit unsigned integer values relative to a constant reference value of 0. </li> </ul> <p> If <strong>ConfigResidDiffHost</strong> is 0, <strong>ConfigSpatialResid8</strong> must be 0. </p> <p> For intra pictures, spatial-domain blocks must be sent using 8-bit samples if bits-per-pixel (BPP) is 8, and using 16-bit samples if BPP &gt; 8. If <strong>ConfigIntraResidUnsigned</strong> is 0, these samples are sent as signed integer values relative to a constant reference value of 2^(BPP?1), and if <strong>ConfigIntraResidUnsigned</strong> is 1, these samples are sent as unsigned integer values relative to a constant reference value of 0. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigSpatialResid8']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned int ConfigSpatialResid8</unmanaged>	
            <unmanaged-short>unsigned int ConfigSpatialResid8</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigResid8Subtraction">
            <summary>	
            <dd> <p> If the value is 1, 8-bit difference overflow blocks are subtracted rather than added. The value must be 0 unless <strong>ConfigSpatialResid8</strong> is 1. </p> <p> The ability to subtract differences rather than add them enables 8-bit difference decoding to be fully compliant with the full ?255 range of values required in video decoder specifications, because +255 cannot be represented as the addition of two signed 8-bit numbers, but any number in the range ?255 can be represented as the difference between two signed 8-bit numbers (+255 = +127 minus ?128).</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigResid8Subtraction']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned int ConfigResid8Subtraction</unmanaged>	
            <unmanaged-short>unsigned int ConfigResid8Subtraction</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigSpatialHost8or9Clipping">
            <summary>	
            <dd> <p> If the value is 1, spatial-domain blocks for intra macroblocks must be clipped to an 8-bit range on the host and spatial-domain blocks for non-intra macroblocks must be clipped to a 9-bit range on the host. If the value is 0, no such clipping is necessary by the host. </p> <p> The value must be 0 unless <strong>ConfigSpatialResid8</strong> is 0 and <strong>ConfigResidDiffHost</strong> is 1. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigSpatialHost8or9Clipping']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned int ConfigSpatialHost8or9Clipping</unmanaged>	
            <unmanaged-short>unsigned int ConfigSpatialHost8or9Clipping</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigSpatialResidInterleaved">
            <summary>	
            <dd> <p> If the value is 1, any spatial-domain residual difference data must be sent in a chrominance-interleaved form matching the YUV format chrominance interleaving pattern. The value must be 0 unless <strong>ConfigResidDiffHost</strong> is 1 and the YUV format is NV12 or NV21. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigSpatialResidInterleaved']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned int ConfigSpatialResidInterleaved</unmanaged>	
            <unmanaged-short>unsigned int ConfigSpatialResidInterleaved</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigIntraResidUnsigned">
            <summary>	
            <dd> <p> Indicates the method of representation of spatial-domain blocks of residual difference data for intra blocks when using host-based difference decoding. </p> <p> If <strong>ConfigResidDiffHost</strong> is 1 and <strong>ConfigIntraResidUnsigned</strong> is 0, spatial-domain residual difference data blocks for intra macroblocks must be sent as follows: </p> <ul> <li> In a non-intra picture, if <strong>ConfigSpatialResid8</strong> is 0, the spatial-domain residual difference data blocks for intra macroblocks are sent as 16-bit signed integer values relative to a constant reference value of 2^(BPP?1). </li> <li> In a non-intra picture, if <strong>ConfigSpatialResid8</strong> is 1, the spatial-domain residual difference data blocks for intra macroblocks are sent as 8-bit signed integer values relative to a constant reference value of 2^(BPP?1). </li> <li> In an intra picture, if BPP is 8, the spatial-domain residual difference data blocks for intra macroblocks are sent as 8-bit signed integer values relative to a constant reference value of 2^(BPP?1), regardless of the value of <strong>ConfigSpatialResid8</strong>. </li> </ul> <p> If <strong>ConfigResidDiffHost</strong> is 1 and <strong>ConfigIntraResidUnsigned</strong> is 1, spatial-domain residual difference data blocks for intra macroblocks must be sent as follows: </p> <ul> <li> In a non-intra picture, if <strong>ConfigSpatialResid8</strong> is 0, the spatial-domain residual difference data blocks for intra macroblocks must be sent as 16-bit unsigned integer values relative to a constant reference value of 0. </li> <li> In a non-intra picture, if <strong>ConfigSpatialResid8</strong> is 1, the spatial-domain residual difference data blocks for intra macroblocks are sent as 8-bit unsigned integer values relative to a constant reference value of 0. </li> <li> In an intra picture, if BPP is 8, the spatial-domain residual difference data blocks for intra macroblocks are sent as 8-bit unsigned integer values relative to a constant reference value of 0, regardless of the value of <strong>ConfigSpatialResid8</strong>. </li> </ul> <p> The value of the member must be 0 unless <strong>ConfigResidDiffHost</strong> is 1. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigIntraResidUnsigned']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned int ConfigIntraResidUnsigned</unmanaged>	
            <unmanaged-short>unsigned int ConfigIntraResidUnsigned</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigResidDiffAccelerator">
            <summary>	
            <dd> <p> If the value is 1, transform-domain blocks of coefficient data may be sent from the host for accelerator-based IDCT. If the value is 0, accelerator-based IDCT will not be used. If both <strong>ConfigResidDiffHost</strong> and <strong>ConfigResidDiffAccelerator</strong> are 1, this indicates that some residual difference decoding will be done on the host and some on the accelerator, as indicated by macroblock-level control commands. </p> <p> The value must be 0 if <strong>ConfigBitstreamRaw</strong> is 1. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigResidDiffAccelerator']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned int ConfigResidDiffAccelerator</unmanaged>	
            <unmanaged-short>unsigned int ConfigResidDiffAccelerator</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigHostInverseScan">
            <summary>	
            <dd> <p> If the value is 1, the inverse scan for transform-domain block processing will be performed on the host, and absolute indices will be sent instead for any transform coefficients. If the value is 0, the inverse scan will be performed on the accelerator. </p> <p> The value must be 0 if <strong>ConfigResidDiffAccelerator</strong> is 0 or if <strong>Config4GroupedCoefs</strong> is 1. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigHostInverseScan']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned int ConfigHostInverseScan</unmanaged>	
            <unmanaged-short>unsigned int ConfigHostInverseScan</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigSpecificIDCT">
            <summary>	
            <dd> <p> If the value is 1, the IDCT specified in Annex W of ITU-T Recommendation H.263 is used. If the value is 0, any compliant IDCT can be used for off-host IDCT. </p> <p> The H.263 annex does not comply with the IDCT requirements of MPEG-2 corrigendum 2, so the value must not be 1 for use with MPEG-2 video. </p> <p> The value must be 0 if <strong>ConfigResidDiffAccelerator</strong> is 0, indicating purely host-based residual difference decoding. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigSpecificIDCT']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned int ConfigSpecificIDCT</unmanaged>	
            <unmanaged-short>unsigned int ConfigSpecificIDCT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.Config4GroupedCoefs">
            <summary>	
            <dd> <p> If the value is 1, transform coefficients for off-host IDCT will be sent using the <strong>DXVA_TCoef4Group</strong> structure. If the value is 0, the <strong>DXVA_TCoefSingle</strong> structure is used. The value must be 0 if <strong>ConfigResidDiffAccelerator</strong> is 0 or if <strong>ConfigHostInverseScan</strong> is 1. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::Config4GroupedCoefs']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned int Config4GroupedCoefs</unmanaged>	
            <unmanaged-short>unsigned int Config4GroupedCoefs</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigMinRenderTargetBuffCount">
            <summary>	
            <dd> <p> Specifies how many frames the decoder device processes at any one time. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigMinRenderTargetBuffCount']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned short ConfigMinRenderTargetBuffCount</unmanaged>	
            <unmanaged-short>unsigned short ConfigMinRenderTargetBuffCount</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigDecoderSpecific">
            <summary>	
            <dd> <p> Contains decoder-specific configuration information. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigDecoderSpecific']/*"/>	
            <msdn-id>hh447643</msdn-id>	
            <unmanaged>unsigned short ConfigDecoderSpecific</unmanaged>	
            <unmanaged-short>unsigned short ConfigDecoderSpecific</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderDescription">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Describes a video stream for a Microsoft Direct3D?11 video decoder or video processor.  </p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_DESC']/*"/>	
            <msdn-id>hh447644</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_DESC</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderDescription.Guid">
            <summary>	
            <dd> <p>The DirectX Video Acceleration (DXVA) decoding profile. To get the list of profiles supported by the device, call the <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)"/></strong> method.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_DESC::Guid']/*"/>	
            <msdn-id>hh447644</msdn-id>	
            <unmanaged>GUID Guid</unmanaged>	
            <unmanaged-short>GUID Guid</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderDescription.SampleWidth">
            <summary>	
            <dd> <p>The width of the video frame, in pixels.  </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_DESC::SampleWidth']/*"/>	
            <msdn-id>hh447644</msdn-id>	
            <unmanaged>unsigned int SampleWidth</unmanaged>	
            <unmanaged-short>unsigned int SampleWidth</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderDescription.SampleHeight">
            <summary>	
            <dd> <p>The height of the video frame, in pixels.  </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_DESC::SampleHeight']/*"/>	
            <msdn-id>hh447644</msdn-id>	
            <unmanaged>unsigned int SampleHeight</unmanaged>	
            <unmanaged-short>unsigned int SampleHeight</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderDescription.OutputFormat">
            <summary>	
            <dd> <p>The output surface format, specified as a <strong><see cref="T:SharpDX.DXGI.Format"/></strong> value.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_DESC::OutputFormat']/*"/>	
            <msdn-id>hh447644</msdn-id>	
            <unmanaged>DXGI_FORMAT OutputFormat</unmanaged>	
            <unmanaged-short>DXGI_FORMAT OutputFormat</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderExtension">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Contains driver-specific data for the <strong><see cref="M:SharpDX.Direct3D11.VideoContext.DecoderExtension(SharpDX.Direct3D11.VideoDecoder,SharpDX.Direct3D11.VideoDecoderExtension@)"/></strong> method.</p>	
            </summary>	
            <remarks>	
            <p>The exact meaning of each structure member depends on the value of <strong>Function</strong>.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION']/*"/>	
            <msdn-id>hh447645</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_EXTENSION</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_EXTENSION</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.Function">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::Function']/*"/>	
            <unmanaged>unsigned int Function</unmanaged>	
            <unmanaged-short>unsigned int Function</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.PPrivateInputData">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::pPrivateInputData']/*"/>	
            <unmanaged>void* pPrivateInputData</unmanaged>	
            <unmanaged-short>void pPrivateInputData</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.PrivateInputDataSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::PrivateInputDataSize']/*"/>	
            <unmanaged>unsigned int PrivateInputDataSize</unmanaged>	
            <unmanaged-short>unsigned int PrivateInputDataSize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.PPrivateOutputData">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::pPrivateOutputData']/*"/>	
            <unmanaged>void* pPrivateOutputData</unmanaged>	
            <unmanaged-short>void pPrivateOutputData</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.PrivateOutputDataSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::PrivateOutputDataSize']/*"/>	
            <unmanaged>unsigned int PrivateOutputDataSize</unmanaged>	
            <unmanaged-short>unsigned int PrivateOutputDataSize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.ResourceCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::ResourceCount']/*"/>	
            <unmanaged>unsigned int ResourceCount</unmanaged>	
            <unmanaged-short>unsigned int ResourceCount</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.PpResourceList">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::ppResourceList']/*"/>	
            <unmanaged>ID3D11Resource** ppResourceList</unmanaged>	
            <unmanaged-short>ID3D11Resource ppResourceList</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderOutputViewDescription">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Describes a video decoder output view.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC']/*"/>	
            <msdn-id>hh447646</msdn-id>	
            <unmanaged>D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderOutputViewDescription.DecodeProfile">
            <summary>	
            <dd> <p>The DirectX Video Acceleration (DXVA) decoding profile. To get the list of profiles supported by the device, call the <strong><see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)"/></strong> method.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC::DecodeProfile']/*"/>	
            <msdn-id>hh447646</msdn-id>	
            <unmanaged>GUID DecodeProfile</unmanaged>	
            <unmanaged-short>GUID DecodeProfile</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderOutputViewDescription.Dimension">
            <summary>	
            <dd> <p>The resource type of the view, specified as a member of the <strong><see cref="T:SharpDX.Direct3D11.VdovDimension"/></strong> enumeration.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC::ViewDimension']/*"/>	
            <msdn-id>hh447646</msdn-id>	
            <unmanaged>D3D11_VDOV_DIMENSION ViewDimension</unmanaged>	
            <unmanaged-short>D3D11_VDOV_DIMENSION ViewDimension</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderOutputViewDescription.Texture2D">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.Texture2DVdov"/></strong> structure that identifies the texture resource for the output view.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC::Texture2D']/*"/>	
            <msdn-id>hh447646</msdn-id>	
            <unmanaged>D3D11_TEX2D_VDOV Texture2D</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_VDOV Texture2D</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Describes the capabilities of a Microsoft Direct3D?11 video processor.</p>	
            </summary>	
            <remarks>	
            <p>The video processor stores state information for each input stream. These states persist between blits. With each blit, the application selects which streams to enable or disable. Disabling a stream does not affect the state information for that stream.</p><p>The <strong>MaxStreamStates</strong> member gives the maximum number of stream states that can be saved. The <strong>MaxInputStreams</strong> member gives the maximum number of streams that can be enabled during a blit. These two values can differ. </p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS']/*"/>	
            <msdn-id>hh447650</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_CAPS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_CAPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.DeviceCaps">
            <summary>	
            <dd> <p>A bitwise <strong>OR</strong> of zero or more flags from the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorDeviceCaps"/></strong> enumeration.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::DeviceCaps']/*"/>	
            <msdn-id>hh447650</msdn-id>	
            <unmanaged>unsigned int DeviceCaps</unmanaged>	
            <unmanaged-short>unsigned int DeviceCaps</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.FeatureCaps">
            <summary>	
            <dd> <p>A bitwise <strong>OR</strong> of zero or more flags from the   <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorFeatureCaps"/></strong> enumeration.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::FeatureCaps']/*"/>	
            <msdn-id>hh447650</msdn-id>	
            <unmanaged>unsigned int FeatureCaps</unmanaged>	
            <unmanaged-short>unsigned int FeatureCaps</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.FilterCaps">
            <summary>	
            <dd> <p>A bitwise <strong>OR</strong> of zero or more flags from the  <strong>D3D11_VIDEO_PROCESSPR_FILTER_CAPS</strong> enumeration.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::FilterCaps']/*"/>	
            <msdn-id>hh447650</msdn-id>	
            <unmanaged>unsigned int FilterCaps</unmanaged>	
            <unmanaged-short>unsigned int FilterCaps</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.InputFormatCaps">
            <summary>	
            <dd> <p>A bitwise <strong>OR</strong> of zero or more flags from the  <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorFormatCaps"/></strong> enumeration.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::InputFormatCaps']/*"/>	
            <msdn-id>hh447650</msdn-id>	
            <unmanaged>unsigned int InputFormatCaps</unmanaged>	
            <unmanaged-short>unsigned int InputFormatCaps</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.AutoStreamCaps">
            <summary>	
            <dd> <p>A bitwise <strong>OR</strong> of zero or more flags from the  <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps"/></strong> enumeration.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::AutoStreamCaps']/*"/>	
            <msdn-id>hh447650</msdn-id>	
            <unmanaged>unsigned int AutoStreamCaps</unmanaged>	
            <unmanaged-short>unsigned int AutoStreamCaps</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.StereoCaps">
            <summary>	
            <dd> <p>A bitwise <strong>OR</strong> of zero or more flags from the   <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorStereoCaps"/></strong> enumeration.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::StereoCaps']/*"/>	
            <msdn-id>hh447650</msdn-id>	
            <unmanaged>unsigned int StereoCaps</unmanaged>	
            <unmanaged-short>unsigned int StereoCaps</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.RateConversionCapsCount">
            <summary>	
            <dd> <p>The number of frame-rate conversion capabilities. To enumerate the frame-rate conversion capabilities, call the <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorRateConversionCaps(System.Int32,SharpDX.Direct3D11.VideoProcessorRateConversionCaps@)"/></strong> method.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::RateConversionCapsCount']/*"/>	
            <msdn-id>hh447650</msdn-id>	
            <unmanaged>unsigned int RateConversionCapsCount</unmanaged>	
            <unmanaged-short>unsigned int RateConversionCapsCount</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.MaxInputStreams">
            <summary>	
            <dd> <p>The maximum number of input streams that can be enabled at the same time. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::MaxInputStreams']/*"/>	
            <msdn-id>hh447650</msdn-id>	
            <unmanaged>unsigned int MaxInputStreams</unmanaged>	
            <unmanaged-short>unsigned int MaxInputStreams</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.MaxStreamStates">
            <summary>	
            <dd> <p>The maximum number of input streams for which the device can store state data.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::MaxStreamStates']/*"/>	
            <msdn-id>hh447650</msdn-id>	
            <unmanaged>unsigned int MaxStreamStates</unmanaged>	
            <unmanaged-short>unsigned int MaxStreamStates</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorColorSpace">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies the color space for video processing.</p>	
            </summary>	
            <remarks>	
            <p>The <strong>RGB_Range</strong> member applies to RGB output, while the <strong>YCbCr_Matrix</strong> and <strong>YCbCr_xvYCC</strong> members apply to YCbCr output. If the driver performs color-space conversion on the background color, it uses the values that apply to both color spaces. </p><p>If the driver supports extended YCbCr (xvYCC), it returns the <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorDeviceCaps.XvYCC"/></strong> capabilities flag in the <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/></strong> method. Otherwise, the driver ignores the value of <strong>YCbCr_xvYCC</strong> and treats all YCbCr output as conventional YCbCr. </p><p>If extended YCbCr is supported, it can be used with either transfer matrix. Extended YCbCr does not change the black point or white point?the black point is still 16 and the white point is still 235. However, extended YCbCr explicitly allows blacker-than-black values in the range 1?15, and whiter-than-white values in the range 236?254. When extended YCbCr is used, the driver should not clip the luma values to the nominal 16?235 range.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_COLOR_SPACE']/*"/>	
            <msdn-id>hh447651</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_COLOR_SPACE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_COLOR_SPACE</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorColorSpace.Usage">
            <summary>	
            <dd> <p>Specifies whether the output is intended for playback or video processing (such as editing or authoring). The device can optimize the processing based on the type. The default state value is 0 (playback).  </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td> <dl> <dt>0</dt> </dl> </td><td> <p>Playback</p> </td></tr> <tr><td> <dl> <dt>1</dt> </dl> </td><td> <p>Video processing</p> </td></tr> </table> <p>?</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_COLOR_SPACE::Usage']/*"/>	
            <msdn-id>hh447651</msdn-id>	
            <unmanaged>unsigned int Usage</unmanaged>	
            <unmanaged-short>unsigned int Usage</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorColorSpace.RgbRange">
            <summary>	
            <dd> <p>Specifies the RGB color range. The default state value is 0 (full range). </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td> <dl> <dt>0</dt> </dl> </td><td> <p>Full range (0-255)</p> </td></tr> <tr><td> <dl> <dt>1</dt> </dl> </td><td> <p>Limited range (16-235)</p> </td></tr> </table> <p>?</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_COLOR_SPACE::RGB_Range']/*"/>	
            <msdn-id>hh447651</msdn-id>	
            <unmanaged>unsigned int RGB_Range</unmanaged>	
            <unmanaged-short>unsigned int RGB_Range</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorColorSpace.YCbCrMatrix">
            <summary>	
            <dd> <p>Specifies the YCbCr transfer matrix. The default state value is 0 (BT.601). </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td> <dl> <dt>0</dt> </dl> </td><td> <p>ITU-R BT.601</p> </td></tr> <tr><td> <dl> <dt>1</dt> </dl> </td><td> <p>ITU-R BT.709</p> </td></tr> </table> <p>?</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_COLOR_SPACE::YCbCr_Matrix']/*"/>	
            <msdn-id>hh447651</msdn-id>	
            <unmanaged>unsigned int YCbCr_Matrix</unmanaged>	
            <unmanaged-short>unsigned int YCbCr_Matrix</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorColorSpace.YCbCrXvYCC">
            <summary>	
            <dd> <p>Specifies whether the output uses conventional YCbCr or extended YCbCr (xvYCC). The default state value is zero (conventional YCbCr). </p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td> <dl> <dt>0</dt> </dl> </td><td> <p>Conventional YCbCr</p> </td></tr> <tr><td> <dl> <dt>1</dt> </dl> </td><td> <p>Extended YCbCr (xvYCC)</p> </td></tr> </table> <p>?</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_COLOR_SPACE::YCbCr_xvYCC']/*"/>	
            <msdn-id>hh447651</msdn-id>	
            <unmanaged>unsigned int YCbCr_xvYCC</unmanaged>	
            <unmanaged-short>unsigned int YCbCr_xvYCC</unmanaged-short>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorColorSpace.Reserved">
            <summary>	
            <dd> <p>Reserved. Set to zero.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_COLOR_SPACE::Reserved']/*"/>	
            <msdn-id>hh447651</msdn-id>	
            <unmanaged>unsigned int Reserved</unmanaged>	
            <unmanaged-short>unsigned int Reserved</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorContentDescription">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Describes a video stream for a video processor.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC']/*"/>	
            <msdn-id>hh447652</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_CONTENT_DESC</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_CONTENT_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.InputFrameFormat">
            <summary>	
            <dd> <p>A member of the <strong><see cref="T:SharpDX.Direct3D11.VideoFrameFormat"/></strong> enumeration that describes how the video stream is interlaced.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::InputFrameFormat']/*"/>	
            <msdn-id>hh447652</msdn-id>	
            <unmanaged>D3D11_VIDEO_FRAME_FORMAT InputFrameFormat</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_FRAME_FORMAT InputFrameFormat</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.InputFrameRate">
            <summary>	
            <dd> <p>The frame rate of the input video stream, specified as a <strong><see cref="T:SharpDX.DXGI.Rational"/></strong> structure. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::InputFrameRate']/*"/>	
            <msdn-id>hh447652</msdn-id>	
            <unmanaged>DXGI_RATIONAL InputFrameRate</unmanaged>	
            <unmanaged-short>DXGI_RATIONAL InputFrameRate</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.InputWidth">
            <summary>	
            <dd> <p>The width of the input frames, in pixels.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::InputWidth']/*"/>	
            <msdn-id>hh447652</msdn-id>	
            <unmanaged>unsigned int InputWidth</unmanaged>	
            <unmanaged-short>unsigned int InputWidth</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.InputHeight">
            <summary>	
            <dd> <p>The height of the input frames, in pixels.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::InputHeight']/*"/>	
            <msdn-id>hh447652</msdn-id>	
            <unmanaged>unsigned int InputHeight</unmanaged>	
            <unmanaged-short>unsigned int InputHeight</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.OutputFrameRate">
            <summary>	
            <dd> <p>The frame rate of the output video stream, specified as a <strong><see cref="T:SharpDX.DXGI.Rational"/></strong> structure. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::OutputFrameRate']/*"/>	
            <msdn-id>hh447652</msdn-id>	
            <unmanaged>DXGI_RATIONAL OutputFrameRate</unmanaged>	
            <unmanaged-short>DXGI_RATIONAL OutputFrameRate</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.OutputWidth">
            <summary>	
            <dd> <p>The width of the output frames, in pixels. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::OutputWidth']/*"/>	
            <msdn-id>hh447652</msdn-id>	
            <unmanaged>unsigned int OutputWidth</unmanaged>	
            <unmanaged-short>unsigned int OutputWidth</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.OutputHeight">
            <summary>	
            <dd> <p>The height of the output frames, in pixels.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::OutputHeight']/*"/>	
            <msdn-id>hh447652</msdn-id>	
            <unmanaged>unsigned int OutputHeight</unmanaged>	
            <unmanaged-short>unsigned int OutputHeight</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.Usage">
            <summary>	
            <dd> <p>A member of the <strong><see cref="T:SharpDX.Direct3D11.VideoUsage"/></strong> enumeration that describes how the video processor will be used. The value indicates the desired trade-off between speed and video quality. The driver uses this flag as a hint when it creates the video processor.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::Usage']/*"/>	
            <msdn-id>hh447652</msdn-id>	
            <unmanaged>D3D11_VIDEO_USAGE Usage</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_USAGE Usage</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorCustomRate">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Specifies a custom rate for frame-rate conversion or inverse telecine (IVTC). </p>	
            </summary>	
            <remarks>	
            <p>The <strong>CustomRate</strong> member gives the rate conversion factor, while the remaining members define the pattern of input and output samples.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CUSTOM_RATE']/*"/>	
            <msdn-id>hh447653</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_CUSTOM_RATE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_CUSTOM_RATE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCustomRate.CustomRate">
            <summary>	
            <dd> <p>The ratio of the output frame rate to the input frame rate, expressed as a <strong><see cref="T:SharpDX.DXGI.Rational"/></strong> structure that holds a rational number. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::CustomRate']/*"/>	
            <msdn-id>hh447653</msdn-id>	
            <unmanaged>DXGI_RATIONAL CustomRate</unmanaged>	
            <unmanaged-short>DXGI_RATIONAL CustomRate</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCustomRate.OutputFrames">
            <summary>	
            <dd> <p>The number of output frames that will be generated for every <em>N</em> input samples, where <em>N</em> = <strong>InputFramesOrFields</strong>. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::OutputFrames']/*"/>	
            <msdn-id>hh447653</msdn-id>	
            <unmanaged>unsigned int OutputFrames</unmanaged>	
            <unmanaged-short>unsigned int OutputFrames</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCustomRate.InputInterlaced">
            <summary>	
            <dd> <p>If <strong>TRUE</strong>, the input stream must be interlaced. Otherwise, the input stream must be progressive. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::InputInterlaced']/*"/>	
            <msdn-id>hh447653</msdn-id>	
            <unmanaged>BOOL InputInterlaced</unmanaged>	
            <unmanaged-short>BOOL InputInterlaced</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCustomRate.InputFramesOrFields">
            <summary>	
            <dd> <p>The number of input fields or frames for every <em>N</em> output frames that will be generated, where <em>N</em> = <strong>OutputFrames</strong>. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::InputFramesOrFields']/*"/>	
            <msdn-id>hh447653</msdn-id>	
            <unmanaged>unsigned int InputFramesOrFields</unmanaged>	
            <unmanaged-short>unsigned int InputFramesOrFields</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorFilterRange">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Defines the range of supported values for an image filter. </p>	
            </summary>	
            <remarks>	
            <p>The multiplier enables the filter range to have a fractional step value.</p><p>For example, a hue filter might have an actual range of [?180.0 ... +180.0] with a step size of 0.25. The device would report the following range and multiplier:</p><ul> <li>Minimum: ?720</li> <li>Maximum: +720</li> <li>Multiplier: 0.25</li> </ul><p>In this case,  a filter value of 2 would be interpreted by the device as 0.50 (or 2 ? 0.25).</p><p>The device should use  a multiplier that can be represented exactly as a base-2 fraction.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_RANGE']/*"/>	
            <msdn-id>hh447657</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_RANGE</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_RANGE</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterRange.Minimum">
            <summary>	
            <dd> <p>The minimum value of the filter. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_RANGE::Minimum']/*"/>	
            <msdn-id>hh447657</msdn-id>	
            <unmanaged>int Minimum</unmanaged>	
            <unmanaged-short>int Minimum</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterRange.Maximum">
            <summary>	
            <dd> <p>The maximum value of the filter. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_RANGE::Maximum']/*"/>	
            <msdn-id>hh447657</msdn-id>	
            <unmanaged>int Maximum</unmanaged>	
            <unmanaged-short>int Maximum</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterRange.Default">
            <summary>	
            <dd> <p>The default value of the filter. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_RANGE::Default']/*"/>	
            <msdn-id>hh447657</msdn-id>	
            <unmanaged>int Default</unmanaged>	
            <unmanaged-short>int Default</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterRange.Multiplier">
            <summary>	
            <dd> <p>A multiplier. Use the following formula to translate the filter setting into the actual filter value: <em>Actual Value</em> = <em>Set Value</em>???<em>Multiplier</em>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_RANGE::Multiplier']/*"/>	
            <msdn-id>hh447657</msdn-id>	
            <unmanaged>float Multiplier</unmanaged>	
            <unmanaged-short>float Multiplier</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorInputViewDescription">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Describes a video processor input view.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC']/*"/>	
            <msdn-id>hh447660</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorInputViewDescription.FourCC">
            <summary>	
            <dd> <p>The surface format. If zero, the driver uses the DXGI format that was used to create the resource. If you are using feature level 9, the value must be zero.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC::FourCC']/*"/>	
            <msdn-id>hh447660</msdn-id>	
            <unmanaged>unsigned int FourCC</unmanaged>	
            <unmanaged-short>unsigned int FourCC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorInputViewDescription.Dimension">
            <summary>	
            <dd> <p>The resource type of the view, specified as a member of the <strong><see cref="T:SharpDX.Direct3D11.VpivDimension"/></strong> enumeration.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC::ViewDimension']/*"/>	
            <msdn-id>hh447660</msdn-id>	
            <unmanaged>D3D11_VPIV_DIMENSION ViewDimension</unmanaged>	
            <unmanaged-short>D3D11_VPIV_DIMENSION ViewDimension</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorInputViewDescription.Texture2D">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.Texture2DVpiv"/></strong> structure that identifies the texture resource.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC::Texture2D']/*"/>	
            <msdn-id>hh447660</msdn-id>	
            <unmanaged>D3D11_TEX2D_VPIV Texture2D</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_VPIV Texture2D</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorOutputViewDescription">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Describes a video processor output view.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC']/*"/>	
            <msdn-id>hh447663</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorOutputViewDescription.Dimension">
            <summary>	
            <dd> <p>The resource type of the view, specified as a member of the <strong><see cref="T:SharpDX.Direct3D11.VpovDimension"/></strong> enumeration.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC::ViewDimension']/*"/>	
            <msdn-id>hh447663</msdn-id>	
            <unmanaged>D3D11_VPOV_DIMENSION ViewDimension</unmanaged>	
            <unmanaged-short>D3D11_VPOV_DIMENSION ViewDimension</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorOutputViewDescription.Texture2D">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.Texture2DVpov"/></strong> structure that identifies the texture resource for the output view. </p> <p>Use this member of the union when <strong>ViewDimension</strong> equals <strong><see cref="F:SharpDX.Direct3D11.VpovDimension.Texture2D"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC::Texture2D']/*"/>	
            <msdn-id>hh447663</msdn-id>	
            <unmanaged>D3D11_TEX2D_VPOV Texture2D</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_VPOV Texture2D</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorOutputViewDescription.Texture2DArray">
            <summary>	
            <dd> <p>A <strong><see cref="T:SharpDX.Direct3D11.Texture2DArrayVpov"/></strong> structure that identifies the texture array for the output view. </p> <p>Use this member of the union when <strong>ViewDimension</strong> equals <strong><see cref="F:SharpDX.Direct3D11.VpovDimension.Texture2DArray"/></strong>.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC::Texture2DArray']/*"/>	
            <msdn-id>hh447663</msdn-id>	
            <unmanaged>D3D11_TEX2D_ARRAY_VPOV Texture2DArray</unmanaged>	
            <unmanaged-short>D3D11_TEX2D_ARRAY_VPOV Texture2DArray</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorRateConversionCaps">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Defines a group of video processor capabilities that are associated with frame-rate conversion, including deinterlacing and inverse telecine.</p>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS']/*"/>	
            <msdn-id>hh447665</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRateConversionCaps.PastFrames">
            <summary>	
            <dd> <p>The number of past reference frames required to perform the optimal video processing. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::PastFrames']/*"/>	
            <msdn-id>hh447665</msdn-id>	
            <unmanaged>unsigned int PastFrames</unmanaged>	
            <unmanaged-short>unsigned int PastFrames</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRateConversionCaps.FutureFrames">
            <summary>	
            <dd> <p>The number of future reference frames required to perform the optimal video processing. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::FutureFrames']/*"/>	
            <msdn-id>hh447665</msdn-id>	
            <unmanaged>unsigned int FutureFrames</unmanaged>	
            <unmanaged-short>unsigned int FutureFrames</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRateConversionCaps.ProcessorCaps">
            <summary>	
            <dd> <p>A bitwise <strong>OR</strong> of zero or more flags from the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorProcessorCaps"/></strong> enumeration. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::ProcessorCaps']/*"/>	
            <msdn-id>hh447665</msdn-id>	
            <unmanaged>unsigned int ProcessorCaps</unmanaged>	
            <unmanaged-short>unsigned int ProcessorCaps</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRateConversionCaps.ITelecineCaps">
            <summary>	
            <dd> <p>A bitwise <strong>OR</strong> of zero or more flags from the <strong><see cref="T:SharpDX.Direct3D11.VideoProcessorItelecineCaps"/></strong> enumeration. </p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::ITelecineCaps']/*"/>	
            <msdn-id>hh447665</msdn-id>	
            <unmanaged>unsigned int ITelecineCaps</unmanaged>	
            <unmanaged-short>unsigned int ITelecineCaps</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRateConversionCaps.CustomRateCount">
            <summary>	
            <dd> <p>The number of custom frame rates that the driver supports. To get the list of custom frame rates, call the <strong><see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCustomRate(System.Int32,System.Int32,SharpDX.Direct3D11.VideoProcessorCustomRate@)"/></strong> method.</p> </dd>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::CustomRateCount']/*"/>	
            <msdn-id>hh447665</msdn-id>	
            <unmanaged>unsigned int CustomRateCount</unmanaged>	
            <unmanaged-short>unsigned int CustomRateCount</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorStream">
            <summary>	
            <p>[This documentation is preliminary and is subject to change.]</p><p><strong>Applies to: </strong>desktop apps | Metro style apps</p><p>Contains stream-level data for the <strong><see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorBlt(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorOutputView,System.Int32,System.Int32,SharpDX.Direct3D11.VideoProcessorStream[])"/></strong> method. </p>	
            </summary>	
            <remarks>	
            <p>If the stereo 3D format is <strong><see cref="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.Separate"/></strong>, the <strong>ppPastSurfaces</strong>, <strong>pInputSurface</strong>, and <strong>ppFutureSurfaces</strong> members contain the left view.</p>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM']/*"/>	
            <msdn-id>hh447670</msdn-id>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STREAM</unmanaged>	
            <unmanaged-short>D3D11_VIDEO_PROCESSOR_STREAM</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.Enable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::Enable']/*"/>	
            <unmanaged>BOOL Enable</unmanaged>	
            <unmanaged-short>BOOL Enable</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.OutputIndex">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::OutputIndex']/*"/>	
            <unmanaged>unsigned int OutputIndex</unmanaged>	
            <unmanaged-short>unsigned int OutputIndex</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.InputFrameOrField">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::InputFrameOrField']/*"/>	
            <unmanaged>unsigned int InputFrameOrField</unmanaged>	
            <unmanaged-short>unsigned int InputFrameOrField</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PastFrames">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::PastFrames']/*"/>	
            <unmanaged>unsigned int PastFrames</unmanaged>	
            <unmanaged-short>unsigned int PastFrames</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.FutureFrames">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::FutureFrames']/*"/>	
            <unmanaged>unsigned int FutureFrames</unmanaged>	
            <unmanaged-short>unsigned int FutureFrames</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PpPastSurfaces">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::ppPastSurfaces']/*"/>	
            <unmanaged>ID3D11VideoProcessorInputView** ppPastSurfaces</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorInputView ppPastSurfaces</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PInputSurface">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::pInputSurface']/*"/>	
            <unmanaged>ID3D11VideoProcessorInputView* pInputSurface</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorInputView pInputSurface</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PpFutureSurfaces">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::ppFutureSurfaces']/*"/>	
            <unmanaged>ID3D11VideoProcessorInputView** ppFutureSurfaces</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorInputView ppFutureSurfaces</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PpPastSurfacesRight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::ppPastSurfacesRight']/*"/>	
            <unmanaged>ID3D11VideoProcessorInputView** ppPastSurfacesRight</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorInputView ppPastSurfacesRight</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PInputSurfaceRight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::pInputSurfaceRight']/*"/>	
            <unmanaged>ID3D11VideoProcessorInputView* pInputSurfaceRight</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorInputView pInputSurfaceRight</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PpFutureSurfacesRight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::ppFutureSurfacesRight']/*"/>	
            <unmanaged>ID3D11VideoProcessorInputView** ppFutureSurfacesRight</unmanaged>	
            <unmanaged-short>ID3D11VideoProcessorInputView ppFutureSurfacesRight</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Direct3D11.ImageLoadInformation.FileDefaultValue">
            <summary>
            The default value for load options.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D11.ImageLoadInformation.Default">
            <summary>
            Gets an ImageLoadInformation that is setup with all default values (<see cref="F:SharpDX.Direct3D11.ImageLoadInformation.FileDefaultValue"/>).
            </summary>
        </member>
        <member name="T:SharpDX.Direct3D11.ModuleInit">
            <summary>
            Internal class used to initialize this assembly.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D11.ModuleInit.Setup">
            <summary>
            Initializes this assembly.
            </summary>
            <remarks>
            This method is called when the assembly is loaded.
            </remarks>
        </member>
        <member name="T:SharpDX.Direct3D11.StreamOutputBufferBinding">
            <summary>
              Properties defining the way a buffer is bound to the pipeline as a target for stream output operations.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputBufferBinding.#ctor(SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.StreamOutputBufferBinding" /> struct.
            </summary>
            <param name = "buffer">The buffer being bound.</param>
            <param name = "offset">The offset to the first vertex (in bytes).</param>
        </member>
        <member name="P:SharpDX.Direct3D11.StreamOutputBufferBinding.Buffer">
            <summary>
              Gets or sets the buffer being bound.
            </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.StreamOutputBufferBinding.Offset">
            <summary>
              Gets or sets the offset from the start of the buffer of the first vertex to use (in bytes).
            </summary>
        </member>
        <member name="T:SharpDX.Direct3D11.VertexBufferBinding">
            <summary>
              Properties defining the way a buffer (containing vertex data) is bound
              to the pipeline for rendering.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D11.VertexBufferBinding.#ctor(SharpDX.Direct3D11.Buffer,System.Int32,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.VertexBufferBinding" /> struct.
            </summary>
            <param name = "buffer">The buffer being bound.</param>
            <param name = "stride">The stride between vertex element (in bytes).</param>
            <param name = "offset">The offset to the first vertex (in bytes).</param>
        </member>
        <member name="P:SharpDX.Direct3D11.VertexBufferBinding.Buffer">
            <summary>
              Gets or sets the buffer being bound.
            </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.VertexBufferBinding.Stride">
            <summary>
              Gets or sets the stride between vertex elements in the buffer (in bytes).
            </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.VertexBufferBinding.Offset">
            <summary>
              Gets or sets the offset from the start of the buffer of the first vertex to use (in bytes).
            </summary>
        </member>
    </members>
</doc>
